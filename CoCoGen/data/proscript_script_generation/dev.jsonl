{"scenario":"ride a train","events":{"0":"walk to train to ride","1":"ask to buy ticket","2":"walk to ticket booth","3":"pay for ticket","4":"walk up to booth","5":"NONE","6":"ride a train"},"context":"NONE","minutes":13.0,"events_minutes":{"0":5.0,"1":1.0,"2":3.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to train to ride; step1: ask to buy ticket; step2: walk to ticket booth; step3: pay for ticket; step4: walk up to booth; step5: decided to ride a train; step6: ride a train","flatten_input_for_script_generation":"You want to ride a train. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to ride a train; step1: walk to ticket booth; step2: walk up to booth; step3: ask to buy ticket; step4: pay for ticket; step5: walk to train to ride; step6: ride a train; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a train\"\n\n    def step1(self):\n        return \"walk to ticket booth\"\n\n    def step2(self):\n        return \"walk up to booth\"\n\n    def step3(self):\n        return \"ask to buy ticket\"\n\n    def step4(self):\n        return \"pay for ticket\"\n\n    def step5(self):\n        return \"walk to train to ride\"\n\n    def step6(self):\n        return \"ride a train\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n","reference_graph":{"title":"ride a train","num_steps":7,"schema":["step0: decided to ride a train","step1: walk to ticket booth","step2: walk up to booth","step3: ask to buy ticket","step4: pay for ticket","step5: walk to train to ride","step6: ride a train"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"win the minor league baseball","events":{"0":"go to the locker room","1":"drive to the baseball game","2":"park the car","3":"hype up teammates","4":"get in the car","5":"NONE","6":"win the minor league baseball"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":30.0,"2":5.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: go to the locker room; step1: drive to the baseball game; step2: park the car; step3: hype up teammates; step4: get in the car; step5: decided to win the minor league baseball; step6: win the minor league baseball","flatten_input_for_script_generation":"You want to win the minor league baseball. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to win the minor league baseball; step1: get in the car; step2: drive to the baseball game; step3: park the car; step4: go to the locker room; step5: hype up teammates; step6: win the minor league baseball; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->6","4->1","5->4"],"reference_code":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to win the minor league baseball\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the baseball game\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go to the locker room\"\n\n    def step5(self):\n        return \"hype up teammates\"\n\n    def step6(self):\n        return \"win the minor league baseball\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n","reference_graph":{"title":"win the minor league baseball","num_steps":7,"schema":["step0: decided to win the minor league baseball","step1: get in the car","step2: drive to the baseball game","step3: park the car","step4: go to the locker room","step5: hype up teammates","step6: win the minor league baseball"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"catch a big marlin","events":{"0":"gather fishing tools","1":"drive to the fishing spot","2":"reel a big marlin in","3":"choose a fishing spot","4":"look up local fishing spots","5":"set up at the fishing spot","6":"gather fishing supplies","7":"NONE","8":"catch a big marlin"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":45.0,"2":5.0,"3":5.0,"4":15.0,"5":15.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: gather fishing tools; step1: drive to the fishing spot; step2: reel a big marlin in; step3: choose a fishing spot; step4: look up local fishing spots; step5: set up at the fishing spot; step6: gather fishing supplies; step7: decided to catch a big marlin; step8: catch a big marlin","flatten_input_for_script_generation":"You want to catch a big marlin. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step3 -> step6; step0 -> step1; step6 -> step1; step1 -> step5; step5 -> step2; step2 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to catch a big marlin; step1: look up local fishing spots; step2: choose a fishing spot; step3: gather fishing tools; step4: gather fishing supplies; step5: drive to the fishing spot; step6: set up at the fishing spot; step7: reel a big marlin in; step8: catch a big marlin; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->5","2->8","3->0","3->6","4->3","5->2","6->1","7->4"],"reference_code":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a big marlin\"\n\n    def step1(self):\n        return \"look up local fishing spots\"\n\n    def step2(self):\n        return \"choose a fishing spot\"\n\n    def step3(self):\n        return \"gather fishing tools\"\n\n    def step4(self):\n        return \"gather fishing supplies\"\n\n    def step5(self):\n        return \"drive to the fishing spot\"\n\n    def step6(self):\n        return \"set up at the fishing spot\"\n\n    def step7(self):\n        return \"reel a big marlin in\"\n\n    def step8(self):\n        return \"catch a big marlin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n","reference_graph":{"title":"catch a big marlin","num_steps":9,"schema":["step0: decided to catch a big marlin","step1: look up local fishing spots","step2: choose a fishing spot","step3: gather fishing tools","step4: gather fishing supplies","step5: drive to the fishing spot","step6: set up at the fishing spot","step7: reel a big marlin in","step8: catch a big marlin"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"make banana muffins","events":{"0":"preheat the oven","1":"mix the dry ingredients","2":"measure out the ingredients.","3":"Gather all of the ingredients.","4":"combine the wet and dry ingredients.","5":"mix the wet ingredients","6":"place the mix in the oven","7":"NONE","8":"make banana muffins"},"context":"NONE","minutes":60.0,"events_minutes":{"0":0.5,"1":5.0,"2":5.0,"3":10.0,"4":5.0,"5":5.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: preheat the oven; step1: mix the dry ingredients; step2: measure out the ingredients.; step3: Gather all of the ingredients.; step4: combine the wet and dry ingredients.; step5: mix the wet ingredients; step6: place the mix in the oven; step7: decided to make banana muffins; step8: make banana muffins","flatten_input_for_script_generation":"You want to make banana muffins. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step2 -> step5; step1 -> step4; step5 -> step4; step4 -> step0; step0 -> step6; step6 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to make banana muffins; step1: Gather all of the ingredients.; step2: measure out the ingredients.; step3: mix the dry ingredients; step4: mix the wet ingredients; step5: combine the wet and dry ingredients.; step6: preheat the oven; step7: place the mix in the oven; step8: make banana muffins; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->1","2->5","3->2","4->0","5->4","6->8","7->3"],"reference_code":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make banana muffins\"\n\n    def step1(self):\n        return \"Gather all of the ingredients.\"\n\n    def step2(self):\n        return \"measure out the ingredients.\"\n\n    def step3(self):\n        return \"mix the dry ingredients\"\n\n    def step4(self):\n        return \"mix the wet ingredients\"\n\n    def step5(self):\n        return \"combine the wet and dry ingredients.\"\n\n    def step6(self):\n        return \"preheat the oven\"\n\n    def step7(self):\n        return \"place the mix in the oven\"\n\n    def step8(self):\n        return \"make banana muffins\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n","reference_graph":{"title":"make banana muffins","num_steps":9,"schema":["step0: decided to make banana muffins","step1: Gather all of the ingredients.","step2: measure out the ingredients.","step3: mix the dry ingredients","step4: mix the wet ingredients","step5: combine the wet and dry ingredients.","step6: preheat the oven","step7: place the mix in the oven","step8: make banana muffins"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"eat some food","events":{"0":"Open the pizza packaging","1":"Drive back home","2":"Drive to pizza place","3":"Purchase a pizza","4":"Put pizza on the table","5":"NONE","6":"eat some food"},"context":"NONE","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":4.0,"2":4.0,"3":2.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Open the pizza packaging; step1: Drive back home; step2: Drive to pizza place; step3: Purchase a pizza; step4: Put pizza on the table; step5: decided to eat some food; step6: eat some food","flatten_input_for_script_generation":"You want to eat some food. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to eat some food; step1: Drive to pizza place; step2: Purchase a pizza; step3: Drive back home; step4: Open the pizza packaging; step5: Put pizza on the table; step6: eat some food; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat some food\"\n\n    def step1(self):\n        return \"Drive to pizza place\"\n\n    def step2(self):\n        return \"Purchase a pizza\"\n\n    def step3(self):\n        return \"Drive back home\"\n\n    def step4(self):\n        return \"Open the pizza packaging\"\n\n    def step5(self):\n        return \"Put pizza on the table\"\n\n    def step6(self):\n        return \"eat some food\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n","reference_graph":{"title":"eat some food","num_steps":7,"schema":["step0: decided to eat some food","step1: Drive to pizza place","step2: Purchase a pizza","step3: Drive back home","step4: Open the pizza packaging","step5: Put pizza on the table","step6: eat some food"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"travel across the country","events":{"0":"board the airplane","1":"drive to the airport","2":"search for plane tickets","3":"pack up things in a suitcase","4":"travel to the location","5":"search for places across the other side of the country","6":"purchase the plane tickets","7":"NONE","8":"travel across the country"},"context":"NONE","minutes":540.0,"events_minutes":{"0":25.0,"1":35.0,"2":15.0,"3":55.0,"4":420.0,"5":45.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: board the airplane; step1: drive to the airport; step2: search for plane tickets; step3: pack up things in a suitcase; step4: travel to the location; step5: search for places across the other side of the country; step6: purchase the plane tickets; step7: decided to travel across the country; step8: travel across the country","flatten_input_for_script_generation":"You want to travel across the country. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step6; step6 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to travel across the country; step1: search for places across the other side of the country; step2: search for plane tickets; step3: purchase the plane tickets; step4: pack up things in a suitcase; step5: drive to the airport; step6: board the airplane; step7: travel to the location; step8: travel across the country; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->8","5->2","6->3","7->5"],"reference_code":"class TravelAcrossTheCountry:\n\n    title = \"travel across the country\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to travel across the country\"\n\n    def step1(self):\n        return \"search for places across the other side of the country\"\n\n    def step2(self):\n        return \"search for plane tickets\"\n\n    def step3(self):\n        return \"purchase the plane tickets\"\n\n    def step4(self):\n        return \"pack up things in a suitcase\"\n\n    def step5(self):\n        return \"drive to the airport\"\n\n    def step6(self):\n        return \"board the airplane\"\n\n    def step7(self):\n        return \"travel to the location\"\n\n    def step8(self):\n        return \"travel across the country\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TravelAcrossTheCountry:\n\n    title = \"travel across the country\"\n    steps = 9\n\n","reference_graph":{"title":"travel across the country","num_steps":9,"schema":["step0: decided to travel across the country","step1: search for places across the other side of the country","step2: search for plane tickets","step3: purchase the plane tickets","step4: pack up things in a suitcase","step5: drive to the airport","step6: board the airplane","step7: travel to the location","step8: travel across the country"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"join the rugby team","events":{"0":"bring gear to tryouts","1":"read flyer about rugby tryouts","2":"go on the field","3":"ace the tryouts","4":"wait for tryouts","5":"get dressed in gear","6":"NONE","7":"join the rugby team"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":30.0,"1":5.0,"2":1.0,"3":60.0,"4":10080.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: bring gear to tryouts; step1: read flyer about rugby tryouts; step2: go on the field; step3: ace the tryouts; step4: wait for tryouts; step5: get dressed in gear; step6: decided to join the rugby team; step7: join the rugby team","flatten_input_for_script_generation":"You want to join the rugby team. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step5; step5 -> step2; step2 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to join the rugby team; step1: read flyer about rugby tryouts; step2: wait for tryouts; step3: bring gear to tryouts; step4: get dressed in gear; step5: go on the field; step6: ace the tryouts; step7: join the rugby team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->3","3->7","4->0","5->2","6->1"],"reference_code":"class JoinTheRugbyTeam:\n\n    title = \"join the rugby team\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to join the rugby team\"\n\n    def step1(self):\n        return \"read flyer about rugby tryouts\"\n\n    def step2(self):\n        return \"wait for tryouts\"\n\n    def step3(self):\n        return \"bring gear to tryouts\"\n\n    def step4(self):\n        return \"get dressed in gear\"\n\n    def step5(self):\n        return \"go on the field\"\n\n    def step6(self):\n        return \"ace the tryouts\"\n\n    def step7(self):\n        return \"join the rugby team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class JoinTheRugbyTeam:\n\n    title = \"join the rugby team\"\n    steps = 8\n\n","reference_graph":{"title":"join the rugby team","num_steps":8,"schema":["step0: decided to join the rugby team","step1: read flyer about rugby tryouts","step2: wait for tryouts","step3: bring gear to tryouts","step4: get dressed in gear","step5: go on the field","step6: ace the tryouts","step7: join the rugby team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"try sushi for the first time today","events":{"0":"Get into car.","1":"Purchase sushi then open.","2":"Start car and drive to Publix.","3":"Walk through entrance","4":"Park car and get out.","5":"Leave house through door.","6":"Walk to fish section.","7":"NONE","8":"try sushi for the first time today"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3.0,"1":10.0,"2":20.0,"3":5.0,"4":5.0,"5":5.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: Get into car.; step1: Purchase sushi then open.; step2: Start car and drive to Publix.; step3: Walk through entrance; step4: Park car and get out.; step5: Leave house through door.; step6: Walk to fish section.; step7: decided to try sushi for the first time today; step8: try sushi for the first time today","flatten_input_for_script_generation":"You want to try sushi for the first time today. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step6 -> step1; step1 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to try sushi for the first time today; step1: Leave house through door.; step2: Get into car.; step3: Start car and drive to Publix.; step4: Park car and get out.; step5: Walk through entrance; step6: Walk to fish section.; step7: Purchase sushi then open.; step8: try sushi for the first time today; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->8","2->4","3->6","4->3","5->0","6->1","7->5"],"reference_code":"class TrySushiForTheFirstTimeToday:\n\n    title = \"try sushi for the first time today\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try sushi for the first time today\"\n\n    def step1(self):\n        return \"Leave house through door.\"\n\n    def step2(self):\n        return \"Get into car.\"\n\n    def step3(self):\n        return \"Start car and drive to Publix.\"\n\n    def step4(self):\n        return \"Park car and get out.\"\n\n    def step5(self):\n        return \"Walk through entrance\"\n\n    def step6(self):\n        return \"Walk to fish section.\"\n\n    def step7(self):\n        return \"Purchase sushi then open.\"\n\n    def step8(self):\n        return \"try sushi for the first time today\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TrySushiForTheFirstTimeToday:\n\n    title = \"try sushi for the first time today\"\n    steps = 9\n\n","reference_graph":{"title":"try sushi for the first time today","num_steps":9,"schema":["step0: decided to try sushi for the first time today","step1: Leave house through door.","step2: Get into car.","step3: Start car and drive to Publix.","step4: Park car and get out.","step5: Walk through entrance","step6: Walk to fish section.","step7: Purchase sushi then open.","step8: try sushi for the first time today"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"enter a marathon","events":{"0":"Enter in personal information into registration.","1":"Decide on marathon to run.","2":"Research local marathons.","3":"Look for electronic registration.","4":"Confirm entry submission.","5":"Sit down at computer.","6":"NONE","7":"enter a marathon"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":30.0,"3":5.0,"4":5.0,"5":3.0},"flatten_input_for_edge_prediction":"step0: Enter in personal information into registration.; step1: Decide on marathon to run.; step2: Research local marathons.; step3: Look for electronic registration.; step4: Confirm entry submission.; step5: Sit down at computer.; step6: decided to enter a marathon; step7: enter a marathon","flatten_input_for_script_generation":"You want to enter a marathon. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to enter a marathon; step1: Sit down at computer.; step2: Research local marathons.; step3: Decide on marathon to run.; step4: Look for electronic registration.; step5: Enter in personal information into registration.; step6: Confirm entry submission.; step7: enter a marathon; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->1","3->0","4->7","5->2","6->5"],"reference_code":"class EnterAMarathon:\n\n    title = \"enter a marathon\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to enter a marathon\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Research local marathons.\"\n\n    def step3(self):\n        return \"Decide on marathon to run.\"\n\n    def step4(self):\n        return \"Look for electronic registration.\"\n\n    def step5(self):\n        return \"Enter in personal information into registration.\"\n\n    def step6(self):\n        return \"Confirm entry submission.\"\n\n    def step7(self):\n        return \"enter a marathon\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EnterAMarathon:\n\n    title = \"enter a marathon\"\n    steps = 8\n\n","reference_graph":{"title":"enter a marathon","num_steps":8,"schema":["step0: decided to enter a marathon","step1: Sit down at computer.","step2: Research local marathons.","step3: Decide on marathon to run.","step4: Look for electronic registration.","step5: Enter in personal information into registration.","step6: Confirm entry submission.","step7: enter a marathon"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"meet some girls","events":{"0":"send messages to girls","1":"wait for response","2":"set up meetings","3":"look up some girls","4":"go on tinder","5":"pick up the phone","6":"NONE","7":"meet some girls"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":20.0,"1":1440.0,"2":60.0,"3":20.0,"4":0.5,"5":0.5},"flatten_input_for_edge_prediction":"step0: send messages to girls; step1: wait for response; step2: set up meetings; step3: look up some girls; step4: go on tinder; step5: pick up the phone; step6: decided to meet some girls; step7: meet some girls","flatten_input_for_script_generation":"You want to meet some girls. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to meet some girls; step1: pick up the phone; step2: go on tinder; step3: look up some girls; step4: send messages to girls; step5: wait for response; step6: set up meetings; step7: meet some girls; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->7","3->0","4->3","5->4","6->5"],"reference_code":"class MeetSomeGirls:\n\n    title = \"meet some girls\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to meet some girls\"\n\n    def step1(self):\n        return \"pick up the phone\"\n\n    def step2(self):\n        return \"go on tinder\"\n\n    def step3(self):\n        return \"look up some girls\"\n\n    def step4(self):\n        return \"send messages to girls\"\n\n    def step5(self):\n        return \"wait for response\"\n\n    def step6(self):\n        return \"set up meetings\"\n\n    def step7(self):\n        return \"meet some girls\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MeetSomeGirls:\n\n    title = \"meet some girls\"\n    steps = 8\n\n","reference_graph":{"title":"meet some girls","num_steps":8,"schema":["step0: decided to meet some girls","step1: pick up the phone","step2: go on tinder","step3: look up some girls","step4: send messages to girls","step5: wait for response","step6: set up meetings","step7: meet some girls"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"bring a water bottle to camp","events":{"0":"Make payment for the purchase","1":"Drive to the camp","2":"Walk inside, buy a pack of water bottle","3":"Drive to nearest store","4":"Put the pack inside th car","5":"NONE","6":"bring a water bottle to camp"},"context":"NONE","minutes":15.0,"events_minutes":{"0":3.0,"1":5.0,"2":3.0,"3":3.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Make payment for the purchase; step1: Drive to the camp; step2: Walk inside, buy a pack of water bottle; step3: Drive to nearest store; step4: Put the pack inside th car; step5: decided to bring a water bottle to camp; step6: bring a water bottle to camp","flatten_input_for_script_generation":"You want to bring a water bottle to camp. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to bring a water bottle to camp; step1: Drive to nearest store; step2: Walk inside, buy a pack of water bottle; step3: Make payment for the purchase; step4: Put the pack inside th car; step5: Drive to the camp; step6: bring a water bottle to camp; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class BringAWaterBottleToCamp:\n\n    title = \"bring a water bottle to camp\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to bring a water bottle to camp\"\n\n    def step1(self):\n        return \"Drive to nearest store\"\n\n    def step2(self):\n        return \"Walk inside, buy a pack of water bottle\"\n\n    def step3(self):\n        return \"Make payment for the purchase\"\n\n    def step4(self):\n        return \"Put the pack inside th car\"\n\n    def step5(self):\n        return \"Drive to the camp\"\n\n    def step6(self):\n        return \"bring a water bottle to camp\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BringAWaterBottleToCamp:\n\n    title = \"bring a water bottle to camp\"\n    steps = 7\n\n","reference_graph":{"title":"bring a water bottle to camp","num_steps":7,"schema":["step0: decided to bring a water bottle to camp","step1: Drive to nearest store","step2: Walk inside, buy a pack of water bottle","step3: Make payment for the purchase","step4: Put the pack inside th car","step5: Drive to the camp","step6: bring a water bottle to camp"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"build the best sandcastle ever","events":{"0":"pack the sand down firmly.","1":"Turn over quickly.","2":"Gather some sand.","3":"Get some water.","4":"Mix sand an water in pail.","5":"NONE","6":"build the best sandcastle ever"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":1.0,"2":60.0,"3":60.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: pack the sand down firmly.; step1: Turn over quickly.; step2: Gather some sand.; step3: Get some water.; step4: Mix sand an water in pail.; step5: decided to build the best sandcastle ever; step6: build the best sandcastle ever","flatten_input_for_script_generation":"You want to build the best sandcastle ever. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to build the best sandcastle ever; step1: Gather some sand.; step2: Get some water.; step3: Mix sand an water in pail.; step4: pack the sand down firmly.; step5: Turn over quickly.; step6: build the best sandcastle ever; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class BuildTheBestSandcastleEver:\n\n    title = \"build the best sandcastle ever\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to build the best sandcastle ever\"\n\n    def step1(self):\n        return \"Gather some sand.\"\n\n    def step2(self):\n        return \"Get some water.\"\n\n    def step3(self):\n        return \"Mix sand an water in pail.\"\n\n    def step4(self):\n        return \"pack the sand down firmly.\"\n\n    def step5(self):\n        return \"Turn over quickly.\"\n\n    def step6(self):\n        return \"build the best sandcastle ever\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuildTheBestSandcastleEver:\n\n    title = \"build the best sandcastle ever\"\n    steps = 7\n\n","reference_graph":{"title":"build the best sandcastle ever","num_steps":7,"schema":["step0: decided to build the best sandcastle ever","step1: Gather some sand.","step2: Get some water.","step3: Mix sand an water in pail.","step4: pack the sand down firmly.","step5: Turn over quickly.","step6: build the best sandcastle ever"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter a salsa-making competition","events":{"0":"read salsa making articles","1":"sign up for the salsa making contest","2":"look up how to make salsa","3":"search for a salsa making contest","4":"watch salsa making videos","5":"NONE","6":"enter a salsa-making competition"},"context":"NONE","minutes":120.0,"events_minutes":{"0":45.0,"1":4.0,"2":15.0,"3":15.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: read salsa making articles; step1: sign up for the salsa making contest; step2: look up how to make salsa; step3: search for a salsa making contest; step4: watch salsa making videos; step5: decided to enter a salsa-making competition; step6: enter a salsa-making competition","flatten_input_for_script_generation":"You want to enter a salsa-making competition. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step4; step0 -> step3; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to enter a salsa-making competition; step1: look up how to make salsa; step2: read salsa making articles; step3: watch salsa making videos; step4: search for a salsa making contest; step5: sign up for the salsa making contest; step6: enter a salsa-making competition; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","2->4","3->1","4->3","5->2"],"reference_code":"class EnterASalsamakingCompetition:\n\n    title = \"enter a salsa-making competition\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to enter a salsa-making competition\"\n\n    def step1(self):\n        return \"look up how to make salsa\"\n\n    def step2(self):\n        return \"read salsa making articles\"\n\n    def step3(self):\n        return \"watch salsa making videos\"\n\n    def step4(self):\n        return \"search for a salsa making contest\"\n\n    def step5(self):\n        return \"sign up for the salsa making contest\"\n\n    def step6(self):\n        return \"enter a salsa-making competition\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterASalsamakingCompetition:\n\n    title = \"enter a salsa-making competition\"\n    steps = 7\n\n","reference_graph":{"title":"enter a salsa-making competition","num_steps":7,"schema":["step0: decided to enter a salsa-making competition","step1: look up how to make salsa","step2: read salsa making articles","step3: watch salsa making videos","step4: search for a salsa making contest","step5: sign up for the salsa making contest","step6: enter a salsa-making competition"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"build a computer since buying one was expensive","events":{"0":"Read the instructions carefully","1":"Test out the computer","2":"Get the instructions","3":"Buy the various computer parts","4":"Use the computer happily","5":"Put each part in piece by piece","6":"Check that everything is in the right place","7":"NONE","8":"build a computer since buying one was expensive"},"context":"NONE","minutes":2628420.0,"events_minutes":{"0":60.0,"1":30.0,"2":15.0,"3":120.0,"4":2628000.0,"5":180.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: Read the instructions carefully; step1: Test out the computer; step2: Get the instructions; step3: Buy the various computer parts; step4: Use the computer happily; step5: Put each part in piece by piece; step6: Check that everything is in the right place; step7: decided to build a computer since buying one was expensive; step8: build a computer since buying one was expensive","flatten_input_for_script_generation":"You want to build a computer since buying one was expensive. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step5; step3 -> step2; step5 -> step6; step6 -> step1; step1 -> step4; step4 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to build a computer since buying one was expensive; step1: Buy the various computer parts; step2: Get the instructions; step3: Read the instructions carefully; step4: Put each part in piece by piece; step5: Check that everything is in the right place; step6: Test out the computer; step7: Use the computer happily; step8: build a computer since buying one was expensive; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->4","2->0","3->2","4->8","5->6","6->1","7->3"],"reference_code":"class BuildAComputerSinceBuyingOneWasExpensive:\n\n    title = \"build a computer since buying one was expensive\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to build a computer since buying one was expensive\"\n\n    def step1(self):\n        return \"Buy the various computer parts\"\n\n    def step2(self):\n        return \"Get the instructions\"\n\n    def step3(self):\n        return \"Read the instructions carefully\"\n\n    def step4(self):\n        return \"Put each part in piece by piece\"\n\n    def step5(self):\n        return \"Check that everything is in the right place\"\n\n    def step6(self):\n        return \"Test out the computer\"\n\n    def step7(self):\n        return \"Use the computer happily\"\n\n    def step8(self):\n        return \"build a computer since buying one was expensive\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuildAComputerSinceBuyingOneWasExpensive:\n\n    title = \"build a computer since buying one was expensive\"\n    steps = 9\n\n","reference_graph":{"title":"build a computer since buying one was expensive","num_steps":9,"schema":["step0: decided to build a computer since buying one was expensive","step1: Buy the various computer parts","step2: Get the instructions","step3: Read the instructions carefully","step4: Put each part in piece by piece","step5: Check that everything is in the right place","step6: Test out the computer","step7: Use the computer happily","step8: build a computer since buying one was expensive"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"deposit funds at the bank","events":{"0":"walk to car","1":"walk to a teller","2":"fill out a deposit slip","3":"get in the car","4":"drive to the bank","5":"leave the office building","6":"walk in the bank","7":"NONE","8":"deposit funds at the bank"},"context":"NONE","minutes":30.0,"events_minutes":{"0":3.0,"1":0.5,"2":3.0,"3":1.0,"4":5.0,"5":1.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: walk to car; step1: walk to a teller; step2: fill out a deposit slip; step3: get in the car; step4: drive to the bank; step5: leave the office building; step6: walk in the bank; step7: decided to deposit funds at the bank; step8: deposit funds at the bank","flatten_input_for_script_generation":"You want to deposit funds at the bank. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step6 -> step2; step2 -> step1; step1 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to deposit funds at the bank; step1: leave the office building; step2: walk to car; step3: get in the car; step4: drive to the bank; step5: walk in the bank; step6: fill out a deposit slip; step7: walk to a teller; step8: deposit funds at the bank; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->8","2->1","3->4","4->6","5->0","6->2","7->5"],"reference_code":"class DepositFundsAtTheBank:\n\n    title = \"deposit funds at the bank\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to deposit funds at the bank\"\n\n    def step1(self):\n        return \"leave the office building\"\n\n    def step2(self):\n        return \"walk to car\"\n\n    def step3(self):\n        return \"get in the car\"\n\n    def step4(self):\n        return \"drive to the bank\"\n\n    def step5(self):\n        return \"walk in the bank\"\n\n    def step6(self):\n        return \"fill out a deposit slip\"\n\n    def step7(self):\n        return \"walk to a teller\"\n\n    def step8(self):\n        return \"deposit funds at the bank\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class DepositFundsAtTheBank:\n\n    title = \"deposit funds at the bank\"\n    steps = 9\n\n","reference_graph":{"title":"deposit funds at the bank","num_steps":9,"schema":["step0: decided to deposit funds at the bank","step1: leave the office building","step2: walk to car","step3: get in the car","step4: drive to the bank","step5: walk in the bank","step6: fill out a deposit slip","step7: walk to a teller","step8: deposit funds at the bank"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to the county fair this weekend","events":{"0":"get ready to go out","1":"drive to the fair","2":"take a shower","3":"park the car","4":"get in the car","5":"NONE","6":"go to the county fair this weekend"},"context":"NONE","minutes":120.0,"events_minutes":{"0":45.0,"1":30.0,"2":30.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: get ready to go out; step1: drive to the fair; step2: take a shower; step3: park the car; step4: get in the car; step5: decided to go to the county fair this weekend; step6: go to the county fair this weekend","flatten_input_for_script_generation":"You want to go to the county fair this weekend. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go to the county fair this weekend; step1: take a shower; step2: get ready to go out; step3: get in the car; step4: drive to the fair; step5: park the car; step6: go to the county fair this weekend; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class GoToTheCountyFairThisWeekend:\n\n    title = \"go to the county fair this weekend\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the county fair this weekend\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"get ready to go out\"\n\n    def step3(self):\n        return \"get in the car\"\n\n    def step4(self):\n        return \"drive to the fair\"\n\n    def step5(self):\n        return \"park the car\"\n\n    def step6(self):\n        return \"go to the county fair this weekend\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheCountyFairThisWeekend:\n\n    title = \"go to the county fair this weekend\"\n    steps = 7\n\n","reference_graph":{"title":"go to the county fair this weekend","num_steps":7,"schema":["step0: decided to go to the county fair this weekend","step1: take a shower","step2: get ready to go out","step3: get in the car","step4: drive to the fair","step5: park the car","step6: go to the county fair this weekend"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run errands during a break in the rain","events":{"0":"Get into car and start.","1":"Drive to errand location and complete.","2":"Think of first errand needed to complete.","3":"Leave house when rain stops.","4":"Watch out window for rain to stop.","5":"NONE","6":"run errands during a break in the rain"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3.0,"1":30.0,"2":3.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Get into car and start.; step1: Drive to errand location and complete.; step2: Think of first errand needed to complete.; step3: Leave house when rain stops.; step4: Watch out window for rain to stop.; step5: decided to run errands during a break in the rain; step6: run errands during a break in the rain","flatten_input_for_script_generation":"You want to run errands during a break in the rain. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step1; step2 -> step3; step1 -> step6; step5 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: decided to run errands during a break in the rain; step1: Watch out window for rain to stop.; step2: Leave house when rain stops.; step3: Get into car and start.; step4: Drive to errand location and complete.; step5: run errands during a break in the rain; step6: Think of first errand needed to complete.; step0 -> step1; step0 -> step6; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step2","gold_edges_for_prediction":["0->1","1->6","2->3","3->0","4->3","5->2","5->4"],"reference_code":"class RunErrandsDuringABreakInTheRain:\n\n    title = \"run errands during a break in the rain\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run errands during a break in the rain\"\n\n    def step1(self):\n        return \"Watch out window for rain to stop.\"\n\n    def step2(self):\n        return \"Leave house when rain stops.\"\n\n    def step3(self):\n        return \"Get into car and start.\"\n\n    def step4(self):\n        return \"Drive to errand location and complete.\"\n\n    def step5(self):\n        return \"run errands during a break in the rain\"\n\n    def step6(self):\n        return \"Think of first errand needed to complete.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class RunErrandsDuringABreakInTheRain:\n\n    title = \"run errands during a break in the rain\"\n    steps = 7\n\n","reference_graph":{"title":"run errands during a break in the rain","num_steps":7,"schema":["step0: decided to run errands during a break in the rain","step1: Watch out window for rain to stop.","step2: Leave house when rain stops.","step3: Get into car and start.","step4: Drive to errand location and complete.","step5: run errands during a break in the rain","step6: Think of first errand needed to complete."],"relations":["step0 -> step1","step0 -> step6","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step2"]}}
{"scenario":"learn another language","events":{"0":"choose a language to learn","1":"complete the first program of the lesson","2":"sign up for the online language program","3":"search for online language programs","4":"choose an online language program","5":"search for different languages","6":"NONE","7":"learn another language"},"context":"NONE","minutes":300.0,"events_minutes":{"0":5.0,"1":240.0,"2":5.0,"3":15.0,"4":5.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: choose a language to learn; step1: complete the first program of the lesson; step2: sign up for the online language program; step3: search for online language programs; step4: choose an online language program; step5: search for different languages; step6: decided to learn another language; step7: learn another language","flatten_input_for_script_generation":"You want to learn another language. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to learn another language; step1: search for different languages; step2: choose a language to learn; step3: search for online language programs; step4: choose an online language program; step5: sign up for the online language program; step6: complete the first program of the lesson; step7: learn another language; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->1","3->4","4->2","5->0","6->5"],"reference_code":"class LearnAnotherLanguage:\n\n    title = \"learn another language\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to learn another language\"\n\n    def step1(self):\n        return \"search for different languages\"\n\n    def step2(self):\n        return \"choose a language to learn\"\n\n    def step3(self):\n        return \"search for online language programs\"\n\n    def step4(self):\n        return \"choose an online language program\"\n\n    def step5(self):\n        return \"sign up for the online language program\"\n\n    def step6(self):\n        return \"complete the first program of the lesson\"\n\n    def step7(self):\n        return \"learn another language\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class LearnAnotherLanguage:\n\n    title = \"learn another language\"\n    steps = 8\n\n","reference_graph":{"title":"learn another language","num_steps":8,"schema":["step0: decided to learn another language","step1: search for different languages","step2: choose a language to learn","step3: search for online language programs","step4: choose an online language program","step5: sign up for the online language program","step6: complete the first program of the lesson","step7: learn another language"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"print a comic book series","events":{"0":"wait for the comic to print","1":"look for comics online","2":"turn on the computer","3":"chose a comic book series","4":"go search online","5":"press control and p on the keyboard","6":"NONE","7":"print a comic book series"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":3.0,"4":0.0833333333,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: wait for the comic to print; step1: look for comics online; step2: turn on the computer; step3: chose a comic book series; step4: go search online; step5: press control and p on the keyboard; step6: decided to print a comic book series; step7: print a comic book series","flatten_input_for_script_generation":"You want to print a comic book series. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step5; step5 -> step0; step0 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to print a comic book series; step1: turn on the computer; step2: go search online; step3: look for comics online; step4: chose a comic book series; step5: press control and p on the keyboard; step6: wait for the comic to print; step7: print a comic book series; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->4","3->5","4->1","5->0","6->2"],"reference_code":"class PrintAComicBookSeries:\n\n    title = \"print a comic book series\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to print a comic book series\"\n\n    def step1(self):\n        return \"turn on the computer\"\n\n    def step2(self):\n        return \"go search online\"\n\n    def step3(self):\n        return \"look for comics online\"\n\n    def step4(self):\n        return \"chose a comic book series\"\n\n    def step5(self):\n        return \"press control and p on the keyboard\"\n\n    def step6(self):\n        return \"wait for the comic to print\"\n\n    def step7(self):\n        return \"print a comic book series\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PrintAComicBookSeries:\n\n    title = \"print a comic book series\"\n    steps = 8\n\n","reference_graph":{"title":"print a comic book series","num_steps":8,"schema":["step0: decided to print a comic book series","step1: turn on the computer","step2: go search online","step3: look for comics online","step4: chose a comic book series","step5: press control and p on the keyboard","step6: wait for the comic to print","step7: print a comic book series"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn how to play tennis","events":{"0":"practice with tennis coach","1":"find a tennis coach.","2":"look up the rules for tennis.","3":"Go buy a tennis racket","4":"buy some tennis shoes.","5":"NONE","6":"learn how to play tennis"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":40320.0,"1":1440.0,"2":120.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: practice with tennis coach; step1: find a tennis coach.; step2: look up the rules for tennis.; step3: Go buy a tennis racket; step4: buy some tennis shoes.; step5: decided to learn how to play tennis; step6: learn how to play tennis","flatten_input_for_script_generation":"You want to learn how to play tennis. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step2 -> step4; step3 -> step1; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn how to play tennis; step1: look up the rules for tennis.; step2: Go buy a tennis racket; step3: buy some tennis shoes.; step4: find a tennis coach.; step5: practice with tennis coach; step6: learn how to play tennis; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","2->4","3->1","4->1","5->2"],"reference_code":"class LearnHowToPlayTennis:\n\n    title = \"learn how to play tennis\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to play tennis\"\n\n    def step1(self):\n        return \"look up the rules for tennis.\"\n\n    def step2(self):\n        return \"Go buy a tennis racket\"\n\n    def step3(self):\n        return \"buy some tennis shoes.\"\n\n    def step4(self):\n        return \"find a tennis coach.\"\n\n    def step5(self):\n        return \"practice with tennis coach\"\n\n    def step6(self):\n        return \"learn how to play tennis\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToPlayTennis:\n\n    title = \"learn how to play tennis\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to play tennis","num_steps":7,"schema":["step0: decided to learn how to play tennis","step1: look up the rules for tennis.","step2: Go buy a tennis racket","step3: buy some tennis shoes.","step4: find a tennis coach.","step5: practice with tennis coach","step6: learn how to play tennis"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take a vacation:","events":{"0":"board the plane","1":"drive to the airport","2":"save money from work","3":"book two tickets","4":"call booking company","5":"NONE","6":"take a vacation:"},"context":"NONE","minutes":525600.0,"events_minutes":{"0":30.0,"1":60.0,"2":525600.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: board the plane; step1: drive to the airport; step2: save money from work; step3: book two tickets; step4: call booking company; step5: decided to take a vacation:; step6: take a vacation:","flatten_input_for_script_generation":"You want to take a vacation:. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to take a vacation:; step1: save money from work; step2: call booking company; step3: book two tickets; step4: drive to the airport; step5: board the plane; step6: take a vacation:; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->3","5->2"],"reference_code":"class TakeAVacation:\n\n    title = \"take a vacation:\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to take a vacation:\"\n\n    def step1(self):\n        return \"save money from work\"\n\n    def step2(self):\n        return \"call booking company\"\n\n    def step3(self):\n        return \"book two tickets\"\n\n    def step4(self):\n        return \"drive to the airport\"\n\n    def step5(self):\n        return \"board the plane\"\n\n    def step6(self):\n        return \"take a vacation:\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeAVacation:\n\n    title = \"take a vacation:\"\n    steps = 7\n\n","reference_graph":{"title":"take a vacation:","num_steps":7,"schema":["step0: decided to take a vacation:","step1: save money from work","step2: call booking company","step3: book two tickets","step4: drive to the airport","step5: board the plane","step6: take a vacation:"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to this concert","events":{"0":"Find and pay for parking.","1":"Wait in line.","2":"Find a spot to watch the band.","3":"Drive to the venue.","4":"Enter the venue.","5":"Present tickets at the door.","6":"Walk to the venue.","7":"NONE","8":"go to this concert"},"context":"NONE","minutes":120.0,"events_minutes":{"0":10.0,"1":20.0,"2":20.0,"3":30.0,"4":1.0,"5":1.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Find and pay for parking.; step1: Wait in line.; step2: Find a spot to watch the band.; step3: Drive to the venue.; step4: Enter the venue.; step5: Present tickets at the door.; step6: Walk to the venue.; step7: decided to go to this concert; step8: go to this concert","flatten_input_for_script_generation":"You want to go to this concert. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step6; step6 -> step1; step1 -> step5; step5 -> step4; step4 -> step2; step2 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to go to this concert; step1: Drive to the venue.; step2: Find and pay for parking.; step3: Walk to the venue.; step4: Wait in line.; step5: Present tickets at the door.; step6: Enter the venue.; step7: Find a spot to watch the band.; step8: go to this concert; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->5","2->8","3->0","4->2","5->4","6->1","7->3"],"reference_code":"class GoToThisConcert:\n\n    title = \"go to this concert\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to this concert\"\n\n    def step1(self):\n        return \"Drive to the venue.\"\n\n    def step2(self):\n        return \"Find and pay for parking.\"\n\n    def step3(self):\n        return \"Walk to the venue.\"\n\n    def step4(self):\n        return \"Wait in line.\"\n\n    def step5(self):\n        return \"Present tickets at the door.\"\n\n    def step6(self):\n        return \"Enter the venue.\"\n\n    def step7(self):\n        return \"Find a spot to watch the band.\"\n\n    def step8(self):\n        return \"go to this concert\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToThisConcert:\n\n    title = \"go to this concert\"\n    steps = 9\n\n","reference_graph":{"title":"go to this concert","num_steps":9,"schema":["step0: decided to go to this concert","step1: Drive to the venue.","step2: Find and pay for parking.","step3: Walk to the venue.","step4: Wait in line.","step5: Present tickets at the door.","step6: Enter the venue.","step7: Find a spot to watch the band.","step8: go to this concert"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"catch a butterfly for a pet","events":{"0":"Order butterfly catching setup from Amazon.","1":"Search for butterflies.","2":"Sit down at computer.","3":"Travel to field near house.","4":"Input Amazon.com into web bar.","5":"Wait for delivery.","6":"Receive package in mail.","7":"NONE","8":"catch a butterfly for a pet"},"context":"NONE","minutes":60.0,"events_minutes":{"0":30.0,"1":60.0,"2":2.0,"3":30.0,"4":1.0,"5":4320.0,"6":20.0},"flatten_input_for_edge_prediction":"step0: Order butterfly catching setup from Amazon.; step1: Search for butterflies.; step2: Sit down at computer.; step3: Travel to field near house.; step4: Input Amazon.com into web bar.; step5: Wait for delivery.; step6: Receive package in mail.; step7: decided to catch a butterfly for a pet; step8: catch a butterfly for a pet","flatten_input_for_script_generation":"You want to catch a butterfly for a pet. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step2 -> step0; step4 -> step5; step0 -> step5; step5 -> step6; step6 -> step3; step3 -> step1; step1 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to catch a butterfly for a pet; step1: Sit down at computer.; step2: Input Amazon.com into web bar.; step3: Order butterfly catching setup from Amazon.; step4: Wait for delivery.; step5: Receive package in mail.; step6: Travel to field near house.; step7: Search for butterflies.; step8: catch a butterfly for a pet; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->8","2->4","2->0","3->1","4->5","5->6","6->3","7->2"],"reference_code":"class CatchAButterflyForAPet:\n\n    title = \"catch a butterfly for a pet\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a butterfly for a pet\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Input Amazon.com into web bar.\"\n\n    def step3(self):\n        return \"Order butterfly catching setup from Amazon.\"\n\n    def step4(self):\n        return \"Wait for delivery.\"\n\n    def step5(self):\n        return \"Receive package in mail.\"\n\n    def step6(self):\n        return \"Travel to field near house.\"\n\n    def step7(self):\n        return \"Search for butterflies.\"\n\n    def step8(self):\n        return \"catch a butterfly for a pet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class CatchAButterflyForAPet:\n\n    title = \"catch a butterfly for a pet\"\n    steps = 9\n\n","reference_graph":{"title":"catch a butterfly for a pet","num_steps":9,"schema":["step0: decided to catch a butterfly for a pet","step1: Sit down at computer.","step2: Input Amazon.com into web bar.","step3: Order butterfly catching setup from Amazon.","step4: Wait for delivery.","step5: Receive package in mail.","step6: Travel to field near house.","step7: Search for butterflies.","step8: catch a butterfly for a pet"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to a casino","events":{"0":"Go to the car","1":"Drive on the highway","2":"Get wallet, phone, keys together","3":"Shower, and wash","4":"Get dressed nicely","5":"NONE","6":"go to a casino"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":60.0,"2":1.0,"3":30.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: Go to the car; step1: Drive on the highway; step2: Get wallet, phone, keys together; step3: Shower, and wash; step4: Get dressed nicely; step5: decided to go to a casino; step6: go to a casino","flatten_input_for_script_generation":"You want to go to a casino. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step3 -> step4; step4 -> step2; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go to a casino; step1: Shower, and wash; step2: Get wallet, phone, keys together; step3: Go to the car; step4: Drive on the highway; step5: Get dressed nicely; step6: go to a casino; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class GoToACasino:\n\n    title = \"go to a casino\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to a casino\"\n\n    def step1(self):\n        return \"Shower, and wash\"\n\n    def step2(self):\n        return \"Get wallet, phone, keys together\"\n\n    def step3(self):\n        return \"Go to the car\"\n\n    def step4(self):\n        return \"Drive on the highway\"\n\n    def step5(self):\n        return \"Get dressed nicely\"\n\n    def step6(self):\n        return \"go to a casino\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class GoToACasino:\n\n    title = \"go to a casino\"\n    steps = 7\n\n","reference_graph":{"title":"go to a casino","num_steps":7,"schema":["step0: decided to go to a casino","step1: Shower, and wash","step2: Get wallet, phone, keys together","step3: Go to the car","step4: Drive on the highway","step5: Get dressed nicely","step6: go to a casino"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6"]}}
{"scenario":"buy a new necktie","events":{"0":"Order the necktie","1":"Find a necktie","2":"Research some neckties","3":"Go to a necktie website","4":"Send the necktie to yourself","5":"NONE","6":"buy a new necktie"},"context":"NONE","minutes":30.0,"events_minutes":{"0":3.0,"1":3.0,"2":15.0,"3":0.5,"4":4.0},"flatten_input_for_edge_prediction":"step0: Order the necktie; step1: Find a necktie; step2: Research some neckties; step3: Go to a necktie website; step4: Send the necktie to yourself; step5: decided to buy a new necktie; step6: buy a new necktie","flatten_input_for_script_generation":"You want to buy a new necktie. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step3 -> step2; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to buy a new necktie; step1: Go to a necktie website; step2: Research some neckties; step3: Find a necktie; step4: Order the necktie; step5: Send the necktie to yourself; step6: buy a new necktie; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->6","5->3"],"reference_code":"class BuyANewNecktie:\n\n    title = \"buy a new necktie\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new necktie\"\n\n    def step1(self):\n        return \"Go to a necktie website\"\n\n    def step2(self):\n        return \"Research some neckties\"\n\n    def step3(self):\n        return \"Find a necktie\"\n\n    def step4(self):\n        return \"Order the necktie\"\n\n    def step5(self):\n        return \"Send the necktie to yourself\"\n\n    def step6(self):\n        return \"buy a new necktie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewNecktie:\n\n    title = \"buy a new necktie\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new necktie","num_steps":7,"schema":["step0: decided to buy a new necktie","step1: Go to a necktie website","step2: Research some neckties","step3: Find a necktie","step4: Order the necktie","step5: Send the necktie to yourself","step6: buy a new necktie"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"own a cat","events":{"0":"Walk to car.","1":"Talk to staff about cat adoption.","2":"Close door and drive to shelter.","3":"Search for local shelter address.","4":"Open door and get in.","5":"Sit down at computer.","6":"Adopt new cat.","7":"NONE","8":"own a cat"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":5.0,"1":5.0,"2":30.0,"3":5.0,"4":2.0,"5":5.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: Walk to car.; step1: Talk to staff about cat adoption.; step2: Close door and drive to shelter.; step3: Search for local shelter address.; step4: Open door and get in.; step5: Sit down at computer.; step6: Adopt new cat.; step7: decided to own a cat; step8: own a cat","flatten_input_for_script_generation":"You want to own a cat. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step6 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to own a cat; step1: Sit down at computer.; step2: Search for local shelter address.; step3: Walk to car.; step4: Open door and get in.; step5: Close door and drive to shelter.; step6: Talk to staff about cat adoption.; step7: Adopt new cat.; step8: own a cat; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->6","2->1","3->0","4->2","5->3","6->8","7->5"],"reference_code":"class OwnACat:\n\n    title = \"own a cat\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to own a cat\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Search for local shelter address.\"\n\n    def step3(self):\n        return \"Walk to car.\"\n\n    def step4(self):\n        return \"Open door and get in.\"\n\n    def step5(self):\n        return \"Close door and drive to shelter.\"\n\n    def step6(self):\n        return \"Talk to staff about cat adoption.\"\n\n    def step7(self):\n        return \"Adopt new cat.\"\n\n    def step8(self):\n        return \"own a cat\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class OwnACat:\n\n    title = \"own a cat\"\n    steps = 9\n\n","reference_graph":{"title":"own a cat","num_steps":9,"schema":["step0: decided to own a cat","step1: Sit down at computer.","step2: Search for local shelter address.","step3: Walk to car.","step4: Open door and get in.","step5: Close door and drive to shelter.","step6: Talk to staff about cat adoption.","step7: Adopt new cat.","step8: own a cat"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have a large baby shower","events":{"0":"Decide on venue","1":"Send out invitations","2":"Make list of guests","3":"Send confirmation details to guests","4":"Book venue for shower","5":"Wait for replies","6":"Check availability of venue","7":"NONE","8":"have a large baby shower"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":5.0,"1":60.0,"2":15.0,"3":60.0,"4":15.0,"5":20160.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: Decide on venue; step1: Send out invitations; step2: Make list of guests; step3: Send confirmation details to guests; step4: Book venue for shower; step5: Wait for replies; step6: Check availability of venue; step7: decided to have a large baby shower; step8: have a large baby shower","flatten_input_for_script_generation":"You want to have a large baby shower. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step0 -> step6; step6 -> step4; step1 -> step5; step5 -> step3; step4 -> step2; step3 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to have a large baby shower; step1: Decide on venue; step2: Make list of guests; step3: Send out invitations; step4: Wait for replies; step5: Check availability of venue; step6: Book venue for shower; step7: Send confirmation details to guests; step8: have a large baby shower; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step2; step4 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->5","2->1","3->8","4->2","5->3","6->4","7->0"],"reference_code":"class HaveALargeBabyShower:\n\n    title = \"have a large baby shower\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to have a large baby shower\"\n\n    def step1(self):\n        return \"Decide on venue\"\n\n    def step2(self):\n        return \"Make list of guests\"\n\n    def step3(self):\n        return \"Send out invitations\"\n\n    def step4(self):\n        return \"Wait for replies\"\n\n    def step5(self):\n        return \"Check availability of venue\"\n\n    def step6(self):\n        return \"Book venue for shower\"\n\n    def step7(self):\n        return \"Send confirmation details to guests\"\n\n    def step8(self):\n        return \"have a large baby shower\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n            \"step4 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class HaveALargeBabyShower:\n\n    title = \"have a large baby shower\"\n    steps = 9\n\n","reference_graph":{"title":"have a large baby shower","num_steps":9,"schema":["step0: decided to have a large baby shower","step1: Decide on venue","step2: Make list of guests","step3: Send out invitations","step4: Wait for replies","step5: Check availability of venue","step6: Book venue for shower","step7: Send confirmation details to guests","step8: have a large baby shower"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step2","step4 -> step7","step7 -> step8"]}}
{"scenario":"buy a skateboard","events":{"0":"look at skateboards","1":"look online for a skate shop","2":"drive to the shop","3":"get in the car","4":"walk in the shop","5":"park the car","6":"NONE","7":"buy a skateboard"},"context":"NONE","minutes":30.0,"events_minutes":{"0":20.0,"1":5.0,"2":20.0,"3":5.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: look at skateboards; step1: look online for a skate shop; step2: drive to the shop; step3: get in the car; step4: walk in the shop; step5: park the car; step6: decided to buy a skateboard; step7: buy a skateboard","flatten_input_for_script_generation":"You want to buy a skateboard. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step5; step5 -> step4; step4 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to buy a skateboard; step1: look online for a skate shop; step2: get in the car; step3: drive to the shop; step4: park the car; step5: walk in the shop; step6: look at skateboards; step7: buy a skateboard; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->5","3->2","4->0","5->4","6->1"],"reference_code":"class BuyASkateboard:\n\n    title = \"buy a skateboard\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy a skateboard\"\n\n    def step1(self):\n        return \"look online for a skate shop\"\n\n    def step2(self):\n        return \"get in the car\"\n\n    def step3(self):\n        return \"drive to the shop\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"walk in the shop\"\n\n    def step6(self):\n        return \"look at skateboards\"\n\n    def step7(self):\n        return \"buy a skateboard\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyASkateboard:\n\n    title = \"buy a skateboard\"\n    steps = 8\n\n","reference_graph":{"title":"buy a skateboard","num_steps":8,"schema":["step0: decided to buy a skateboard","step1: look online for a skate shop","step2: get in the car","step3: drive to the shop","step4: park the car","step5: walk in the shop","step6: look at skateboards","step7: buy a skateboard"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"replicate the pasta at the restaurant","events":{"0":"drain noodles over the sink","1":"turn on the stove","2":"heat sauce in a pot","3":"combine noodles and sauce","4":"plate noodles and sauce together","5":"boil water for noodles","6":"put noodles in the water","7":"NONE","8":"replicate the pasta at the restaurant"},"context":"NONE","minutes":120.0,"events_minutes":{"0":2.0,"1":10.0,"2":30.0,"3":2.0,"4":2.0,"5":10.0,"6":0.25},"flatten_input_for_edge_prediction":"step0: drain noodles over the sink; step1: turn on the stove; step2: heat sauce in a pot; step3: combine noodles and sauce; step4: plate noodles and sauce together; step5: boil water for noodles; step6: put noodles in the water; step7: decided to replicate the pasta at the restaurant; step8: replicate the pasta at the restaurant","flatten_input_for_script_generation":"You want to replicate the pasta at the restaurant. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step1 -> step2; step5 -> step6; step6 -> step0; step2 -> step3; step0 -> step3; step3 -> step4; step4 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to replicate the pasta at the restaurant; step1: turn on the stove; step2: boil water for noodles; step3: heat sauce in a pot; step4: put noodles in the water; step5: combine noodles and sauce; step6: drain noodles over the sink; step7: plate noodles and sauce together; step8: replicate the pasta at the restaurant; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->5","1->2","2->3","3->4","4->8","5->6","6->0","7->1"],"reference_code":"class ReplicateThePastaAtTheRestaurant:\n\n    title = \"replicate the pasta at the restaurant\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to replicate the pasta at the restaurant\"\n\n    def step1(self):\n        return \"turn on the stove\"\n\n    def step2(self):\n        return \"boil water for noodles\"\n\n    def step3(self):\n        return \"heat sauce in a pot\"\n\n    def step4(self):\n        return \"put noodles in the water\"\n\n    def step5(self):\n        return \"combine noodles and sauce\"\n\n    def step6(self):\n        return \"drain noodles over the sink\"\n\n    def step7(self):\n        return \"plate noodles and sauce together\"\n\n    def step8(self):\n        return \"replicate the pasta at the restaurant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ReplicateThePastaAtTheRestaurant:\n\n    title = \"replicate the pasta at the restaurant\"\n    steps = 9\n\n","reference_graph":{"title":"replicate the pasta at the restaurant","num_steps":9,"schema":["step0: decided to replicate the pasta at the restaurant","step1: turn on the stove","step2: boil water for noodles","step3: heat sauce in a pot","step4: put noodles in the water","step5: combine noodles and sauce","step6: drain noodles over the sink","step7: plate noodles and sauce together","step8: replicate the pasta at the restaurant"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5","step5 -> step7","step7 -> step8"]}}
{"scenario":"buy an xbox one","events":{"0":"Order Xbox online from store","1":"Take Xbox home","2":"Pick up Xbox from counter","3":"Drive to store","4":"Save up money to buy the Xbox","5":"NONE","6":"buy an xbox one"},"context":"NONE","minutes":259200.0,"events_minutes":{"0":15.0,"1":20.0,"2":5.0,"3":20.0,"4":216000.0},"flatten_input_for_edge_prediction":"step0: Order Xbox online from store; step1: Take Xbox home; step2: Pick up Xbox from counter; step3: Drive to store; step4: Save up money to buy the Xbox; step5: decided to buy an xbox one; step6: buy an xbox one","flatten_input_for_script_generation":"You want to buy an xbox one. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to buy an xbox one; step1: Save up money to buy the Xbox; step2: Order Xbox online from store; step3: Drive to store; step4: Pick up Xbox from counter; step5: Take Xbox home; step6: buy an xbox one; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class BuyAnXboxOne:\n\n    title = \"buy an xbox one\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy an xbox one\"\n\n    def step1(self):\n        return \"Save up money to buy the Xbox\"\n\n    def step2(self):\n        return \"Order Xbox online from store\"\n\n    def step3(self):\n        return \"Drive to store\"\n\n    def step4(self):\n        return \"Pick up Xbox from counter\"\n\n    def step5(self):\n        return \"Take Xbox home\"\n\n    def step6(self):\n        return \"buy an xbox one\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyAnXboxOne:\n\n    title = \"buy an xbox one\"\n    steps = 7\n\n","reference_graph":{"title":"buy an xbox one","num_steps":7,"schema":["step0: decided to buy an xbox one","step1: Save up money to buy the Xbox","step2: Order Xbox online from store","step3: Drive to store","step4: Pick up Xbox from counter","step5: Take Xbox home","step6: buy an xbox one"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to college since kindergarden","events":{"0":"Pass kindergarten level","1":"Pass Grade School level","2":"attend college orientations","3":"pass high school","4":"apply for colleges","5":"NONE","6":"go to college since kindergarden"},"context":"NONE","minutes":6307200.0,"events_minutes":{"0":525600.0,"1":3679200.0,"2":60.0,"3":2102400.0,"4":259200.0},"flatten_input_for_edge_prediction":"step0: Pass kindergarten level; step1: Pass Grade School level; step2: attend college orientations; step3: pass high school; step4: apply for colleges; step5: decided to go to college since kindergarden; step6: go to college since kindergarden","flatten_input_for_script_generation":"You want to go to college since kindergarden. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to go to college since kindergarden; step1: Pass kindergarten level; step2: Pass Grade School level; step3: pass high school; step4: apply for colleges; step5: attend college orientations; step6: go to college since kindergarden; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->4","4->2","5->0"],"reference_code":"class GoToCollegeSinceKindergarden:\n\n    title = \"go to college since kindergarden\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to college since kindergarden\"\n\n    def step1(self):\n        return \"Pass kindergarten level\"\n\n    def step2(self):\n        return \"Pass Grade School level\"\n\n    def step3(self):\n        return \"pass high school\"\n\n    def step4(self):\n        return \"apply for colleges\"\n\n    def step5(self):\n        return \"attend college orientations\"\n\n    def step6(self):\n        return \"go to college since kindergarden\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToCollegeSinceKindergarden:\n\n    title = \"go to college since kindergarden\"\n    steps = 7\n\n","reference_graph":{"title":"go to college since kindergarden","num_steps":7,"schema":["step0: decided to go to college since kindergarden","step1: Pass kindergarten level","step2: Pass Grade School level","step3: pass high school","step4: apply for colleges","step5: attend college orientations","step6: go to college since kindergarden"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play outside on a stormy day","events":{"0":"go to the bathroom","1":"take a shower","2":"wake up from sleeping","3":"get dressed for the day","4":"open the front door to go outside","5":"NONE","6":"play outside on a stormy day"},"context":"NONE","minutes":35.0,"events_minutes":{"0":3.0,"1":20.0,"2":1.0,"3":10.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: go to the bathroom; step1: take a shower; step2: wake up from sleeping; step3: get dressed for the day; step4: open the front door to go outside; step5: decided to play outside on a stormy day; step6: play outside on a stormy day","flatten_input_for_script_generation":"You want to play outside on a stormy day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to play outside on a stormy day; step1: wake up from sleeping; step2: go to the bathroom; step3: take a shower; step4: get dressed for the day; step5: open the front door to go outside; step6: play outside on a stormy day; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->6","5->2"],"reference_code":"class PlayOutsideOnAStormyDay:\n\n    title = \"play outside on a stormy day\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play outside on a stormy day\"\n\n    def step1(self):\n        return \"wake up from sleeping\"\n\n    def step2(self):\n        return \"go to the bathroom\"\n\n    def step3(self):\n        return \"take a shower\"\n\n    def step4(self):\n        return \"get dressed for the day\"\n\n    def step5(self):\n        return \"open the front door to go outside\"\n\n    def step6(self):\n        return \"play outside on a stormy day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayOutsideOnAStormyDay:\n\n    title = \"play outside on a stormy day\"\n    steps = 7\n\n","reference_graph":{"title":"play outside on a stormy day","num_steps":7,"schema":["step0: decided to play outside on a stormy day","step1: wake up from sleeping","step2: go to the bathroom","step3: take a shower","step4: get dressed for the day","step5: open the front door to go outside","step6: play outside on a stormy day"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play a game of squash","events":{"0":"take gear to the car","1":"pick up squash gear from the garage","2":"wait for other players","3":"get out of the car and grab gear","4":"drive to squash field","5":"put gear in car","6":"get into car","7":"NONE","8":"play a game of squash"},"context":"NONE","minutes":45.0,"events_minutes":{"0":1.0,"1":5.0,"2":15.0,"3":5.0,"4":20.0,"5":2.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: take gear to the car; step1: pick up squash gear from the garage; step2: wait for other players; step3: get out of the car and grab gear; step4: drive to squash field; step5: put gear in car; step6: get into car; step7: decided to play a game of squash; step8: play a game of squash","flatten_input_for_script_generation":"You want to play a game of squash. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step5; step5 -> step6; step6 -> step4; step4 -> step3; step3 -> step2; step2 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to play a game of squash; step1: pick up squash gear from the garage; step2: take gear to the car; step3: put gear in car; step4: get into car; step5: drive to squash field; step6: get out of the car and grab gear; step7: wait for other players; step8: play a game of squash; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->0","2->8","3->2","4->3","5->6","6->4","7->1"],"reference_code":"class PlayAGameOfSquash:\n\n    title = \"play a game of squash\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to play a game of squash\"\n\n    def step1(self):\n        return \"pick up squash gear from the garage\"\n\n    def step2(self):\n        return \"take gear to the car\"\n\n    def step3(self):\n        return \"put gear in car\"\n\n    def step4(self):\n        return \"get into car\"\n\n    def step5(self):\n        return \"drive to squash field\"\n\n    def step6(self):\n        return \"get out of the car and grab gear\"\n\n    def step7(self):\n        return \"wait for other players\"\n\n    def step8(self):\n        return \"play a game of squash\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PlayAGameOfSquash:\n\n    title = \"play a game of squash\"\n    steps = 9\n\n","reference_graph":{"title":"play a game of squash","num_steps":9,"schema":["step0: decided to play a game of squash","step1: pick up squash gear from the garage","step2: take gear to the car","step3: put gear in car","step4: get into car","step5: drive to squash field","step6: get out of the car and grab gear","step7: wait for other players","step8: play a game of squash"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"wash some clothes","events":{"0":"walk to the washing machine","1":"set the cycle","2":"put in the dirty clothes","3":"open the washing machine","4":"wait for the cycle","5":"add some detergent","6":"grab the bag of dirty clothes","7":"NONE","8":"wash some clothes"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":2.0,"3":0.0333333333,"4":50.0,"5":0.0833333333,"6":2.0},"flatten_input_for_edge_prediction":"step0: walk to the washing machine; step1: set the cycle; step2: put in the dirty clothes; step3: open the washing machine; step4: wait for the cycle; step5: add some detergent; step6: grab the bag of dirty clothes; step7: decided to wash some clothes; step8: wash some clothes","flatten_input_for_script_generation":"You want to wash some clothes. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step0; step0 -> step3; step3 -> step2; step2 -> step5; step5 -> step1; step1 -> step4; step4 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to wash some clothes; step1: grab the bag of dirty clothes; step2: walk to the washing machine; step3: open the washing machine; step4: put in the dirty clothes; step5: add some detergent; step6: set the cycle; step7: wait for the cycle; step8: wash some clothes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->4","2->5","3->2","4->8","5->1","6->0","7->6"],"reference_code":"class WashSomeClothes:\n\n    title = \"wash some clothes\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to wash some clothes\"\n\n    def step1(self):\n        return \"grab the bag of dirty clothes\"\n\n    def step2(self):\n        return \"walk to the washing machine\"\n\n    def step3(self):\n        return \"open the washing machine\"\n\n    def step4(self):\n        return \"put in the dirty clothes\"\n\n    def step5(self):\n        return \"add some detergent\"\n\n    def step6(self):\n        return \"set the cycle\"\n\n    def step7(self):\n        return \"wait for the cycle\"\n\n    def step8(self):\n        return \"wash some clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WashSomeClothes:\n\n    title = \"wash some clothes\"\n    steps = 9\n\n","reference_graph":{"title":"wash some clothes","num_steps":9,"schema":["step0: decided to wash some clothes","step1: grab the bag of dirty clothes","step2: walk to the washing machine","step3: open the washing machine","step4: put in the dirty clothes","step5: add some detergent","step6: set the cycle","step7: wait for the cycle","step8: wash some clothes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"see an alligator","events":{"0":"Ask staff where alligators are kept.","1":"Get inside car.","2":"Purchase zoo ticket.","3":"Walk to alligator exhibit.","4":"Start car and drive to zoo.","5":"Walk outside of house.","6":"NONE","7":"see an alligator"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":2.0,"2":5.0,"3":10.0,"4":30.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Ask staff where alligators are kept.; step1: Get inside car.; step2: Purchase zoo ticket.; step3: Walk to alligator exhibit.; step4: Start car and drive to zoo.; step5: Walk outside of house.; step6: decided to see an alligator; step7: see an alligator","flatten_input_for_script_generation":"You want to see an alligator. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to see an alligator; step1: Walk outside of house.; step2: Get inside car.; step3: Start car and drive to zoo.; step4: Purchase zoo ticket.; step5: Ask staff where alligators are kept.; step6: Walk to alligator exhibit.; step7: see an alligator; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->0","3->7","4->2","5->1","6->5"],"reference_code":"class SeeAnAlligator:\n\n    title = \"see an alligator\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to see an alligator\"\n\n    def step1(self):\n        return \"Walk outside of house.\"\n\n    def step2(self):\n        return \"Get inside car.\"\n\n    def step3(self):\n        return \"Start car and drive to zoo.\"\n\n    def step4(self):\n        return \"Purchase zoo ticket.\"\n\n    def step5(self):\n        return \"Ask staff where alligators are kept.\"\n\n    def step6(self):\n        return \"Walk to alligator exhibit.\"\n\n    def step7(self):\n        return \"see an alligator\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SeeAnAlligator:\n\n    title = \"see an alligator\"\n    steps = 8\n\n","reference_graph":{"title":"see an alligator","num_steps":8,"schema":["step0: decided to see an alligator","step1: Walk outside of house.","step2: Get inside car.","step3: Start car and drive to zoo.","step4: Purchase zoo ticket.","step5: Ask staff where alligators are kept.","step6: Walk to alligator exhibit.","step7: see an alligator"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"spend 20 dollars for a haircut","events":{"0":"tell the barber what haircut to receive","1":"park the car","2":"drive to the barber shop","3":"go inside the shop","4":"get in the car","5":"NONE","6":"spend 20 dollars for a haircut"},"context":"NONE","minutes":45.0,"events_minutes":{"0":10.0,"1":5.0,"2":30.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: tell the barber what haircut to receive; step1: park the car; step2: drive to the barber shop; step3: go inside the shop; step4: get in the car; step5: decided to spend 20 dollars for a haircut; step6: spend 20 dollars for a haircut","flatten_input_for_script_generation":"You want to spend 20 dollars for a haircut. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to spend 20 dollars for a haircut; step1: get in the car; step2: drive to the barber shop; step3: park the car; step4: go inside the shop; step5: tell the barber what haircut to receive; step6: spend 20 dollars for a haircut; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class Spend20DollarsForAHaircut:\n\n    title = \"spend 20 dollars for a haircut\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to spend 20 dollars for a haircut\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the barber shop\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the shop\"\n\n    def step5(self):\n        return \"tell the barber what haircut to receive\"\n\n    def step6(self):\n        return \"spend 20 dollars for a haircut\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class Spend20DollarsForAHaircut:\n\n    title = \"spend 20 dollars for a haircut\"\n    steps = 7\n\n","reference_graph":{"title":"spend 20 dollars for a haircut","num_steps":7,"schema":["step0: decided to spend 20 dollars for a haircut","step1: get in the car","step2: drive to the barber shop","step3: park the car","step4: go inside the shop","step5: tell the barber what haircut to receive","step6: spend 20 dollars for a haircut"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sing in a jazz band","events":{"0":"get the part","1":"set up a tryout","2":"practice with the band","3":"make an add looking for a jazz band to join","4":"go to craigslist","5":"wait for a band to respond the ad","6":"NONE","7":"sing in a jazz band"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":1440.0,"1":5.0,"2":43200.0,"3":5.0,"4":5.0,"5":1440.0},"flatten_input_for_edge_prediction":"step0: get the part; step1: set up a tryout; step2: practice with the band; step3: make an add looking for a jazz band to join; step4: go to craigslist; step5: wait for a band to respond the ad; step6: decided to sing in a jazz band; step7: sing in a jazz band","flatten_input_for_script_generation":"You want to sing in a jazz band. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step5; step5 -> step1; step1 -> step0; step0 -> step2; step2 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to sing in a jazz band; step1: go to craigslist; step2: make an add looking for a jazz band to join; step3: wait for a band to respond the ad; step4: set up a tryout; step5: get the part; step6: practice with the band; step7: sing in a jazz band; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->0","2->7","3->5","4->3","5->1","6->4"],"reference_code":"class SingInAJazzBand:\n\n    title = \"sing in a jazz band\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to sing in a jazz band\"\n\n    def step1(self):\n        return \"go to craigslist\"\n\n    def step2(self):\n        return \"make an add looking for a jazz band to join\"\n\n    def step3(self):\n        return \"wait for a band to respond the ad\"\n\n    def step4(self):\n        return \"set up a tryout\"\n\n    def step5(self):\n        return \"get the part\"\n\n    def step6(self):\n        return \"practice with the band\"\n\n    def step7(self):\n        return \"sing in a jazz band\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SingInAJazzBand:\n\n    title = \"sing in a jazz band\"\n    steps = 8\n\n","reference_graph":{"title":"sing in a jazz band","num_steps":8,"schema":["step0: decided to sing in a jazz band","step1: go to craigslist","step2: make an add looking for a jazz band to join","step3: wait for a band to respond the ad","step4: set up a tryout","step5: get the part","step6: practice with the band","step7: sing in a jazz band"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to the ball game","events":{"0":"purchase tickets to the game","1":"look up where to buy tickets for game","2":"get directions to the field","3":"drive to the field","4":"find out what field the game is at","5":"NONE","6":"go to the ball game"},"context":"NONE","minutes":75.0,"events_minutes":{"0":5.0,"1":5.0,"2":3.0,"3":60.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: purchase tickets to the game; step1: look up where to buy tickets for game; step2: get directions to the field; step3: drive to the field; step4: find out what field the game is at; step5: decided to go to the ball game; step6: go to the ball game","flatten_input_for_script_generation":"You want to go to the ball game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go to the ball game; step1: look up where to buy tickets for game; step2: purchase tickets to the game; step3: find out what field the game is at; step4: get directions to the field; step5: drive to the field; step6: go to the ball game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->6","4->2","5->1"],"reference_code":"class GoToTheBallGame:\n\n    title = \"go to the ball game\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the ball game\"\n\n    def step1(self):\n        return \"look up where to buy tickets for game\"\n\n    def step2(self):\n        return \"purchase tickets to the game\"\n\n    def step3(self):\n        return \"find out what field the game is at\"\n\n    def step4(self):\n        return \"get directions to the field\"\n\n    def step5(self):\n        return \"drive to the field\"\n\n    def step6(self):\n        return \"go to the ball game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheBallGame:\n\n    title = \"go to the ball game\"\n    steps = 7\n\n","reference_graph":{"title":"go to the ball game","num_steps":7,"schema":["step0: decided to go to the ball game","step1: look up where to buy tickets for game","step2: purchase tickets to the game","step3: find out what field the game is at","step4: get directions to the field","step5: drive to the field","step6: go to the ball game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a gun","events":{"0":"Pay to enter show.","1":"Pick out a gun.","2":"Go to a gun vendor.","3":"Drive to a gun show.","4":"Pay for the gun.","5":"NONE","6":"buy a gun"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":30.0,"2":10.0,"3":30.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Pay to enter show.; step1: Pick out a gun.; step2: Go to a gun vendor.; step3: Drive to a gun show.; step4: Pay for the gun.; step5: decided to buy a gun; step6: buy a gun","flatten_input_for_script_generation":"You want to buy a gun. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to buy a gun; step1: Drive to a gun show.; step2: Pay to enter show.; step3: Go to a gun vendor.; step4: Pick out a gun.; step5: Pay for the gun.; step6: buy a gun; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->1","3->0","4->6","5->3"],"reference_code":"class BuyAGun:\n\n    title = \"buy a gun\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a gun\"\n\n    def step1(self):\n        return \"Drive to a gun show.\"\n\n    def step2(self):\n        return \"Pay to enter show.\"\n\n    def step3(self):\n        return \"Go to a gun vendor.\"\n\n    def step4(self):\n        return \"Pick out a gun.\"\n\n    def step5(self):\n        return \"Pay for the gun.\"\n\n    def step6(self):\n        return \"buy a gun\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyAGun:\n\n    title = \"buy a gun\"\n    steps = 7\n\n","reference_graph":{"title":"buy a gun","num_steps":7,"schema":["step0: decided to buy a gun","step1: Drive to a gun show.","step2: Pay to enter show.","step3: Go to a gun vendor.","step4: Pick out a gun.","step5: Pay for the gun.","step6: buy a gun"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a shot","events":{"0":"drive to the bar","1":"go up to the server","2":"get ready to go out","3":"go inside the bar","4":"park the car","5":"NONE","6":"get a shot"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":5.0,"2":30.0,"3":3.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: drive to the bar; step1: go up to the server; step2: get ready to go out; step3: go inside the bar; step4: park the car; step5: decided to get a shot; step6: get a shot","flatten_input_for_script_generation":"You want to get a shot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get a shot; step1: get ready to go out; step2: drive to the bar; step3: park the car; step4: go inside the bar; step5: go up to the server; step6: get a shot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->1","4->3","5->2"],"reference_code":"class GetAShot:\n\n    title = \"get a shot\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a shot\"\n\n    def step1(self):\n        return \"get ready to go out\"\n\n    def step2(self):\n        return \"drive to the bar\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the bar\"\n\n    def step5(self):\n        return \"go up to the server\"\n\n    def step6(self):\n        return \"get a shot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAShot:\n\n    title = \"get a shot\"\n    steps = 7\n\n","reference_graph":{"title":"get a shot","num_steps":7,"schema":["step0: decided to get a shot","step1: get ready to go out","step2: drive to the bar","step3: park the car","step4: go inside the bar","step5: go up to the server","step6: get a shot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch some movies with friends","events":{"0":"Decide on a movie.","1":"Sit in front of TV","2":"Start the movie.","3":"Gather friends together.","4":"Turn on Netflix.","5":"NONE","6":"watch some movies with friends"},"context":"NONE","minutes":120.0,"events_minutes":{"0":60.0,"1":1.0,"2":1.0,"3":60.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Decide on a movie.; step1: Sit in front of TV; step2: Start the movie.; step3: Gather friends together.; step4: Turn on Netflix.; step5: decided to watch some movies with friends; step6: watch some movies with friends","flatten_input_for_script_generation":"You want to watch some movies with friends. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to watch some movies with friends; step1: Gather friends together.; step2: Sit in front of TV; step3: Turn on Netflix.; step4: Decide on a movie.; step5: Start the movie.; step6: watch some movies with friends; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->1","4->0","5->3"],"reference_code":"class WatchSomeMoviesWithFriends:\n\n    title = \"watch some movies with friends\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to watch some movies with friends\"\n\n    def step1(self):\n        return \"Gather friends together.\"\n\n    def step2(self):\n        return \"Sit in front of TV\"\n\n    def step3(self):\n        return \"Turn on Netflix.\"\n\n    def step4(self):\n        return \"Decide on a movie.\"\n\n    def step5(self):\n        return \"Start the movie.\"\n\n    def step6(self):\n        return \"watch some movies with friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WatchSomeMoviesWithFriends:\n\n    title = \"watch some movies with friends\"\n    steps = 7\n\n","reference_graph":{"title":"watch some movies with friends","num_steps":7,"schema":["step0: decided to watch some movies with friends","step1: Gather friends together.","step2: Sit in front of TV","step3: Turn on Netflix.","step4: Decide on a movie.","step5: Start the movie.","step6: watch some movies with friends"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy items on a video game","events":{"0":"Authorize the charge","1":"Make sure everything is entered correctly","2":"Gather credit card","3":"Enter credit card information in game","4":"Select the item","5":"NONE","6":"buy items on a video game"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.1666666667,"3":0.5,"4":0.25},"flatten_input_for_edge_prediction":"step0: Authorize the charge; step1: Make sure everything is entered correctly; step2: Gather credit card; step3: Enter credit card information in game; step4: Select the item; step5: decided to buy items on a video game; step6: buy items on a video game","flatten_input_for_script_generation":"You want to buy items on a video game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step4 -> step2; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to buy items on a video game; step1: Select the item; step2: Gather credit card; step3: Enter credit card information in game; step4: Make sure everything is entered correctly; step5: Authorize the charge; step6: buy items on a video game; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class BuyItemsOnAVideoGame:\n\n    title = \"buy items on a video game\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy items on a video game\"\n\n    def step1(self):\n        return \"Select the item\"\n\n    def step2(self):\n        return \"Gather credit card\"\n\n    def step3(self):\n        return \"Enter credit card information in game\"\n\n    def step4(self):\n        return \"Make sure everything is entered correctly\"\n\n    def step5(self):\n        return \"Authorize the charge\"\n\n    def step6(self):\n        return \"buy items on a video game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyItemsOnAVideoGame:\n\n    title = \"buy items on a video game\"\n    steps = 7\n\n","reference_graph":{"title":"buy items on a video game","num_steps":7,"schema":["step0: decided to buy items on a video game","step1: Select the item","step2: Gather credit card","step3: Enter credit card information in game","step4: Make sure everything is entered correctly","step5: Authorize the charge","step6: buy items on a video game"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6"]}}
{"scenario":"attended the local basketball game","events":{"0":"purchase a ticket","1":"sit down and watch the game","2":"travel to the venue where the game will be played","3":"enter the venue and find an appropriate seat","4":"find the ticket window","5":"NONE","6":"attended the local basketball game"},"context":"NONE","minutes":240.0,"events_minutes":{"0":1.0,"1":180.0,"2":20.0,"3":5.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: purchase a ticket; step1: sit down and watch the game; step2: travel to the venue where the game will be played; step3: enter the venue and find an appropriate seat; step4: find the ticket window; step5: decided to attended the local basketball game; step6: attended the local basketball game","flatten_input_for_script_generation":"You want to attended the local basketball game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to attended the local basketball game; step1: travel to the venue where the game will be played; step2: find the ticket window; step3: purchase a ticket; step4: enter the venue and find an appropriate seat; step5: sit down and watch the game; step6: attended the local basketball game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class AttendedTheLocalBasketballGame:\n\n    title = \"attended the local basketball game\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to attended the local basketball game\"\n\n    def step1(self):\n        return \"travel to the venue where the game will be played\"\n\n    def step2(self):\n        return \"find the ticket window\"\n\n    def step3(self):\n        return \"purchase a ticket\"\n\n    def step4(self):\n        return \"enter the venue and find an appropriate seat\"\n\n    def step5(self):\n        return \"sit down and watch the game\"\n\n    def step6(self):\n        return \"attended the local basketball game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AttendedTheLocalBasketballGame:\n\n    title = \"attended the local basketball game\"\n    steps = 7\n\n","reference_graph":{"title":"attended the local basketball game","num_steps":7,"schema":["step0: decided to attended the local basketball game","step1: travel to the venue where the game will be played","step2: find the ticket window","step3: purchase a ticket","step4: enter the venue and find an appropriate seat","step5: sit down and watch the game","step6: attended the local basketball game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go on a boating trip","events":{"0":"gather the supplies","1":"drive to where the boating trip is","2":"look up local boating trips","3":"get on the boat","4":"go online on the computer","5":"choose a boating trip","6":"NONE","7":"go on a boating trip"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":35.0,"2":15.0,"3":15.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: gather the supplies; step1: drive to where the boating trip is; step2: look up local boating trips; step3: get on the boat; step4: go online on the computer; step5: choose a boating trip; step6: decided to go on a boating trip; step7: go on a boating trip","flatten_input_for_script_generation":"You want to go on a boating trip. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step5; step5 -> step0; step0 -> step1; step1 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to go on a boating trip; step1: go online on the computer; step2: look up local boating trips; step3: choose a boating trip; step4: gather the supplies; step5: drive to where the boating trip is; step6: get on the boat; step7: go on a boating trip; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->5","3->7","4->2","5->0","6->4"],"reference_code":"class GoOnABoatingTrip:\n\n    title = \"go on a boating trip\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go on a boating trip\"\n\n    def step1(self):\n        return \"go online on the computer\"\n\n    def step2(self):\n        return \"look up local boating trips\"\n\n    def step3(self):\n        return \"choose a boating trip\"\n\n    def step4(self):\n        return \"gather the supplies\"\n\n    def step5(self):\n        return \"drive to where the boating trip is\"\n\n    def step6(self):\n        return \"get on the boat\"\n\n    def step7(self):\n        return \"go on a boating trip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoOnABoatingTrip:\n\n    title = \"go on a boating trip\"\n    steps = 8\n\n","reference_graph":{"title":"go on a boating trip","num_steps":8,"schema":["step0: decided to go on a boating trip","step1: go online on the computer","step2: look up local boating trips","step3: choose a boating trip","step4: gather the supplies","step5: drive to where the boating trip is","step6: get on the boat","step7: go on a boating trip"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"try the new froyo place","events":{"0":"walk into the froyo place","1":"look up froyo place on maps","2":"park in a spot","3":"drive to the froyo place","4":"get into the car","5":"get out of the car","6":"NONE","7":"try the new froyo place"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":10.0,"4":5.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: walk into the froyo place; step1: look up froyo place on maps; step2: park in a spot; step3: drive to the froyo place; step4: get into the car; step5: get out of the car; step6: decided to try the new froyo place; step7: try the new froyo place","flatten_input_for_script_generation":"You want to try the new froyo place. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step5; step5 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to try the new froyo place; step1: look up froyo place on maps; step2: get into the car; step3: drive to the froyo place; step4: park in a spot; step5: get out of the car; step6: walk into the froyo place; step7: try the new froyo place; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->5","3->2","4->3","5->0","6->1"],"reference_code":"class TryTheNewFroyoPlace:\n\n    title = \"try the new froyo place\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try the new froyo place\"\n\n    def step1(self):\n        return \"look up froyo place on maps\"\n\n    def step2(self):\n        return \"get into the car\"\n\n    def step3(self):\n        return \"drive to the froyo place\"\n\n    def step4(self):\n        return \"park in a spot\"\n\n    def step5(self):\n        return \"get out of the car\"\n\n    def step6(self):\n        return \"walk into the froyo place\"\n\n    def step7(self):\n        return \"try the new froyo place\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TryTheNewFroyoPlace:\n\n    title = \"try the new froyo place\"\n    steps = 8\n\n","reference_graph":{"title":"try the new froyo place","num_steps":8,"schema":["step0: decided to try the new froyo place","step1: look up froyo place on maps","step2: get into the car","step3: drive to the froyo place","step4: park in a spot","step5: get out of the car","step6: walk into the froyo place","step7: try the new froyo place"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"spend the day watching tv","events":{"0":"put on favorite channel","1":"grab television remote","2":"turn on the television","3":"order food in for the day","4":"wake up in bed","5":"NONE","6":"spend the day watching tv"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":5.0,"1":1.0,"2":0.5,"3":60.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: put on favorite channel; step1: grab television remote; step2: turn on the television; step3: order food in for the day; step4: wake up in bed; step5: decided to spend the day watching tv; step6: spend the day watching tv","flatten_input_for_script_generation":"You want to spend the day watching tv. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step6; step3 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: decided to spend the day watching tv; step1: wake up in bed; step2: order food in for the day; step3: grab television remote; step4: turn on the television; step5: put on favorite channel; step6: spend the day watching tv; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->2","4->3","4->1","5->4"],"reference_code":"class SpendTheDayWatchingTv:\n\n    title = \"spend the day watching tv\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to spend the day watching tv\"\n\n    def step1(self):\n        return \"wake up in bed\"\n\n    def step2(self):\n        return \"order food in for the day\"\n\n    def step3(self):\n        return \"grab television remote\"\n\n    def step4(self):\n        return \"turn on the television\"\n\n    def step5(self):\n        return \"put on favorite channel\"\n\n    def step6(self):\n        return \"spend the day watching tv\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SpendTheDayWatchingTv:\n\n    title = \"spend the day watching tv\"\n    steps = 7\n\n","reference_graph":{"title":"spend the day watching tv","num_steps":7,"schema":["step0: decided to spend the day watching tv","step1: wake up in bed","step2: order food in for the day","step3: grab television remote","step4: turn on the television","step5: put on favorite channel","step6: spend the day watching tv"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take everyone on vacation including the dogs","events":{"0":"open the back of the car","1":"usher everyone into the car","2":"load the dog in the back","3":"call the dog over","4":"lock the front door","5":"motion for everyone to leave the house","6":"close the back of the car","7":"NONE","8":"take everyone on vacation including the dogs"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.5666666667,"1":2.0,"2":1.0,"3":1.0,"4":0.5833333333,"5":0.4166666667,"6":1.0},"flatten_input_for_edge_prediction":"step0: open the back of the car; step1: usher everyone into the car; step2: load the dog in the back; step3: call the dog over; step4: lock the front door; step5: motion for everyone to leave the house; step6: close the back of the car; step7: decided to take everyone on vacation including the dogs; step8: take everyone on vacation including the dogs","flatten_input_for_script_generation":"You want to take everyone on vacation including the dogs. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step1; step4 -> step0; step1 -> step8; step0 -> step3; step3 -> step2; step2 -> step6; step6 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to take everyone on vacation including the dogs; step1: motion for everyone to leave the house; step2: lock the front door; step3: usher everyone into the car; step4: open the back of the car; step5: take everyone on vacation including the dogs; step6: call the dog over; step7: load the dog in the back; step8: close the back of the car; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step7 -> step8; step8 -> step5","gold_edges_for_prediction":["0->3","1->8","2->6","3->2","4->1","4->0","5->4","6->8","7->5"],"reference_code":"class TakeEveryoneOnVacationIncludingTheDogs:\n\n    title = \"take everyone on vacation including the dogs\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take everyone on vacation including the dogs\"\n\n    def step1(self):\n        return \"motion for everyone to leave the house\"\n\n    def step2(self):\n        return \"lock the front door\"\n\n    def step3(self):\n        return \"usher everyone into the car\"\n\n    def step4(self):\n        return \"open the back of the car\"\n\n    def step5(self):\n        return \"take everyone on vacation including the dogs\"\n\n    def step6(self):\n        return \"call the dog over\"\n\n    def step7(self):\n        return \"load the dog in the back\"\n\n    def step8(self):\n        return \"close the back of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n            \"step8 -> step5\",\n        ]\n","input_prompt_code":"class TakeEveryoneOnVacationIncludingTheDogs:\n\n    title = \"take everyone on vacation including the dogs\"\n    steps = 9\n\n","reference_graph":{"title":"take everyone on vacation including the dogs","num_steps":9,"schema":["step0: decided to take everyone on vacation including the dogs","step1: motion for everyone to leave the house","step2: lock the front door","step3: usher everyone into the car","step4: open the back of the car","step5: take everyone on vacation including the dogs","step6: call the dog over","step7: load the dog in the back","step8: close the back of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step7 -> step8","step8 -> step5"]}}
{"scenario":"go to We Fest","events":{"0":"get in the car","1":"get ready to leave","2":"get undressed fully","3":"get tickets to the festival","4":"take a shower","5":"NONE","6":"go to We Fest"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":30.0,"2":10.0,"3":2.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: get ready to leave; step2: get undressed fully; step3: get tickets to the festival; step4: take a shower; step5: decided to go to We Fest; step6: go to We Fest","flatten_input_for_script_generation":"You want to go to We Fest. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step0; step3 -> step2; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go to We Fest; step1: get tickets to the festival; step2: get undressed fully; step3: take a shower; step4: get ready to leave; step5: get in the car; step6: go to We Fest; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->3"],"reference_code":"class GoToWeFest:\n\n    title = \"go to We Fest\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to We Fest\"\n\n    def step1(self):\n        return \"get tickets to the festival\"\n\n    def step2(self):\n        return \"get undressed fully\"\n\n    def step3(self):\n        return \"take a shower\"\n\n    def step4(self):\n        return \"get ready to leave\"\n\n    def step5(self):\n        return \"get in the car\"\n\n    def step6(self):\n        return \"go to We Fest\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class GoToWeFest:\n\n    title = \"go to We Fest\"\n    steps = 7\n\n","reference_graph":{"title":"go to We Fest","num_steps":7,"schema":["step0: decided to go to We Fest","step1: get tickets to the festival","step2: get undressed fully","step3: take a shower","step4: get ready to leave","step5: get in the car","step6: go to We Fest"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"get some lipstick","events":{"0":"go to the online store","1":"order the desired lipstick","2":"look up lipstick reviews online","3":"choose a particular lipstick","4":"find the lowest price","5":"NONE","6":"get some lipstick"},"context":"NONE","minutes":25.0,"events_minutes":{"0":0.0833333333,"1":3.0,"2":15.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: go to the online store; step1: order the desired lipstick; step2: look up lipstick reviews online; step3: choose a particular lipstick; step4: find the lowest price; step5: decided to get some lipstick; step6: get some lipstick","flatten_input_for_script_generation":"You want to get some lipstick. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get some lipstick; step1: look up lipstick reviews online; step2: choose a particular lipstick; step3: find the lowest price; step4: go to the online store; step5: order the desired lipstick; step6: get some lipstick; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class GetSomeLipstick:\n\n    title = \"get some lipstick\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get some lipstick\"\n\n    def step1(self):\n        return \"look up lipstick reviews online\"\n\n    def step2(self):\n        return \"choose a particular lipstick\"\n\n    def step3(self):\n        return \"find the lowest price\"\n\n    def step4(self):\n        return \"go to the online store\"\n\n    def step5(self):\n        return \"order the desired lipstick\"\n\n    def step6(self):\n        return \"get some lipstick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSomeLipstick:\n\n    title = \"get some lipstick\"\n    steps = 7\n\n","reference_graph":{"title":"get some lipstick","num_steps":7,"schema":["step0: decided to get some lipstick","step1: look up lipstick reviews online","step2: choose a particular lipstick","step3: find the lowest price","step4: go to the online store","step5: order the desired lipstick","step6: get some lipstick"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make something for an upcoming potluck","events":{"0":"cook the dish","1":"look for a recipe online","2":"gather the ingredients","3":"put together the ingredients","4":"gather the cooking tools","5":"chose a recipe","6":"NONE","7":"make something for an upcoming potluck"},"context":"NONE","minutes":120.0,"events_minutes":{"0":60.0,"1":15.0,"2":15.0,"3":15.0,"4":15.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: cook the dish; step1: look for a recipe online; step2: gather the ingredients; step3: put together the ingredients; step4: gather the cooking tools; step5: chose a recipe; step6: decided to make something for an upcoming potluck; step7: make something for an upcoming potluck","flatten_input_for_script_generation":"You want to make something for an upcoming potluck. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step2; step5 -> step4; step2 -> step3; step4 -> step3; step3 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to make something for an upcoming potluck; step1: look for a recipe online; step2: chose a recipe; step3: gather the ingredients; step4: gather the cooking tools; step5: put together the ingredients; step6: cook the dish; step7: make something for an upcoming potluck; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->5","2->3","3->0","4->3","5->2","5->4","6->1"],"reference_code":"class MakeSomethingForAnUpcomingPotluck:\n\n    title = \"make something for an upcoming potluck\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to make something for an upcoming potluck\"\n\n    def step1(self):\n        return \"look for a recipe online\"\n\n    def step2(self):\n        return \"chose a recipe\"\n\n    def step3(self):\n        return \"gather the ingredients\"\n\n    def step4(self):\n        return \"gather the cooking tools\"\n\n    def step5(self):\n        return \"put together the ingredients\"\n\n    def step6(self):\n        return \"cook the dish\"\n\n    def step7(self):\n        return \"make something for an upcoming potluck\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MakeSomethingForAnUpcomingPotluck:\n\n    title = \"make something for an upcoming potluck\"\n    steps = 8\n\n","reference_graph":{"title":"make something for an upcoming potluck","num_steps":8,"schema":["step0: decided to make something for an upcoming potluck","step1: look for a recipe online","step2: chose a recipe","step3: gather the ingredients","step4: gather the cooking tools","step5: put together the ingredients","step6: cook the dish","step7: make something for an upcoming potluck"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go on an airplane","events":{"0":"go inside the airport","1":"drive to the airport","2":"book tickets online","3":"get in the car","4":"park the car","5":"NONE","6":"go on an airplane"},"context":"NONE","minutes":60.0,"events_minutes":{"0":30.0,"1":30.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: go inside the airport; step1: drive to the airport; step2: book tickets online; step3: get in the car; step4: park the car; step5: decided to go on an airplane; step6: go on an airplane","flatten_input_for_script_generation":"You want to go on an airplane. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go on an airplane; step1: book tickets online; step2: get in the car; step3: drive to the airport; step4: park the car; step5: go inside the airport; step6: go on an airplane; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class GoOnAnAirplane:\n\n    title = \"go on an airplane\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go on an airplane\"\n\n    def step1(self):\n        return \"book tickets online\"\n\n    def step2(self):\n        return \"get in the car\"\n\n    def step3(self):\n        return \"drive to the airport\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"go inside the airport\"\n\n    def step6(self):\n        return \"go on an airplane\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOnAnAirplane:\n\n    title = \"go on an airplane\"\n    steps = 7\n\n","reference_graph":{"title":"go on an airplane","num_steps":7,"schema":["step0: decided to go on an airplane","step1: book tickets online","step2: get in the car","step3: drive to the airport","step4: park the car","step5: go inside the airport","step6: go on an airplane"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pass out candy","events":{"0":"purchase some candy","1":"get in the car","2":"drive to the store","3":"get ready for halloween","4":"drive back home","5":"NONE","6":"pass out candy"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":5.0,"2":30.0,"3":120.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: purchase some candy; step1: get in the car; step2: drive to the store; step3: get ready for halloween; step4: drive back home; step5: decided to pass out candy; step6: pass out candy","flatten_input_for_script_generation":"You want to pass out candy. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to pass out candy; step1: get in the car; step2: drive to the store; step3: purchase some candy; step4: drive back home; step5: get ready for halloween; step6: pass out candy; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class PassOutCandy:\n\n    title = \"pass out candy\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to pass out candy\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"purchase some candy\"\n\n    def step4(self):\n        return \"drive back home\"\n\n    def step5(self):\n        return \"get ready for halloween\"\n\n    def step6(self):\n        return \"pass out candy\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PassOutCandy:\n\n    title = \"pass out candy\"\n    steps = 7\n\n","reference_graph":{"title":"pass out candy","num_steps":7,"schema":["step0: decided to pass out candy","step1: get in the car","step2: drive to the store","step3: purchase some candy","step4: drive back home","step5: get ready for halloween","step6: pass out candy"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run a 5k","events":{"0":"complete 5K race","1":"run every day","2":"determine training routine","3":"research training requirements","4":"research 5K races","5":"sign up for 5K race","6":"NONE","7":"run a 5k"},"context":"NONE","minutes":259200.0,"events_minutes":{"0":120.0,"1":216000.0,"2":15.0,"3":60.0,"4":60.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: complete 5K race; step1: run every day; step2: determine training routine; step3: research training requirements; step4: research 5K races; step5: sign up for 5K race; step6: decided to run a 5k; step7: run a 5k","flatten_input_for_script_generation":"You want to run a 5k. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step5; step5 -> step0; step0 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to run a 5k; step1: research training requirements; step2: determine training routine; step3: run every day; step4: research 5K races; step5: sign up for 5K race; step6: complete 5K race; step7: run a 5k; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->1","3->2","4->5","5->0","6->3"],"reference_code":"class RunA5k:\n\n    title = \"run a 5k\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to run a 5k\"\n\n    def step1(self):\n        return \"research training requirements\"\n\n    def step2(self):\n        return \"determine training routine\"\n\n    def step3(self):\n        return \"run every day\"\n\n    def step4(self):\n        return \"research 5K races\"\n\n    def step5(self):\n        return \"sign up for 5K race\"\n\n    def step6(self):\n        return \"complete 5K race\"\n\n    def step7(self):\n        return \"run a 5k\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class RunA5k:\n\n    title = \"run a 5k\"\n    steps = 8\n\n","reference_graph":{"title":"run a 5k","num_steps":8,"schema":["step0: decided to run a 5k","step1: research training requirements","step2: determine training routine","step3: run every day","step4: research 5K races","step5: sign up for 5K race","step6: complete 5K race","step7: run a 5k"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to school yesterday","events":{"0":"Test time travel machine","1":"Search internet for time traveling machines","2":"Turn on the computer","3":"Think of time travel","4":"Look at time travel machine designs","5":"Build Time traveling machine","6":"NONE","7":"go to school yesterday"},"context":"NONE","minutes":259200.0,"events_minutes":{"0":120.0,"1":5.0,"2":2.0,"3":30.0,"4":120.0,"5":259200.0},"flatten_input_for_edge_prediction":"step0: Test time travel machine; step1: Search internet for time traveling machines; step2: Turn on the computer; step3: Think of time travel; step4: Look at time travel machine designs; step5: Build Time traveling machine; step6: decided to go to school yesterday; step7: go to school yesterday","flatten_input_for_script_generation":"You want to go to school yesterday. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step2 -> step4; step1 -> step5; step4 -> step5; step5 -> step0; step0 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to go to school yesterday; step1: Think of time travel; step2: Turn on the computer; step3: Search internet for time traveling machines; step4: Look at time travel machine designs; step5: Build Time traveling machine; step6: Test time travel machine; step7: go to school yesterday; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->5","2->1","2->4","3->2","4->5","5->0","6->3"],"reference_code":"class GoToSchoolYesterday:\n\n    title = \"go to school yesterday\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to school yesterday\"\n\n    def step1(self):\n        return \"Think of time travel\"\n\n    def step2(self):\n        return \"Turn on the computer\"\n\n    def step3(self):\n        return \"Search internet for time traveling machines\"\n\n    def step4(self):\n        return \"Look at time travel machine designs\"\n\n    def step5(self):\n        return \"Build Time traveling machine\"\n\n    def step6(self):\n        return \"Test time travel machine\"\n\n    def step7(self):\n        return \"go to school yesterday\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToSchoolYesterday:\n\n    title = \"go to school yesterday\"\n    steps = 8\n\n","reference_graph":{"title":"go to school yesterday","num_steps":8,"schema":["step0: decided to go to school yesterday","step1: Think of time travel","step2: Turn on the computer","step3: Search internet for time traveling machines","step4: Look at time travel machine designs","step5: Build Time traveling machine","step6: Test time travel machine","step7: go to school yesterday"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"try out for the roller hockey team,","events":{"0":"Wait for tryout date.","1":"Research local roller hockey teams.","2":"Research tryout dates.","3":"Decide desired team to play for.","4":"Sit down at computer.","5":"Travel to tryout on date specified.","6":"NONE","7":"try out for the roller hockey team,"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":7200.0,"1":30.0,"2":15.0,"3":15.0,"4":3.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: Wait for tryout date.; step1: Research local roller hockey teams.; step2: Research tryout dates.; step3: Decide desired team to play for.; step4: Sit down at computer.; step5: Travel to tryout on date specified.; step6: decided to try out for the roller hockey team,; step7: try out for the roller hockey team,","flatten_input_for_script_generation":"You want to try out for the roller hockey team,. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to try out for the roller hockey team,; step1: Sit down at computer.; step2: Research local roller hockey teams.; step3: Decide desired team to play for.; step4: Research tryout dates.; step5: Wait for tryout date.; step6: Travel to tryout on date specified.; step7: try out for the roller hockey team,; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->0","3->2","4->1","5->7","6->4"],"reference_code":"class TryOutForTheRollerHockeyTeam:\n\n    title = \"try out for the roller hockey team,\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try out for the roller hockey team,\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Research local roller hockey teams.\"\n\n    def step3(self):\n        return \"Decide desired team to play for.\"\n\n    def step4(self):\n        return \"Research tryout dates.\"\n\n    def step5(self):\n        return \"Wait for tryout date.\"\n\n    def step6(self):\n        return \"Travel to tryout on date specified.\"\n\n    def step7(self):\n        return \"try out for the roller hockey team,\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TryOutForTheRollerHockeyTeam:\n\n    title = \"try out for the roller hockey team,\"\n    steps = 8\n\n","reference_graph":{"title":"try out for the roller hockey team,","num_steps":8,"schema":["step0: decided to try out for the roller hockey team,","step1: Sit down at computer.","step2: Research local roller hockey teams.","step3: Decide desired team to play for.","step4: Research tryout dates.","step5: Wait for tryout date.","step6: Travel to tryout on date specified.","step7: try out for the roller hockey team,"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"dig a hole with some friends","events":{"0":"Pull dirt and shovel out of ground.","1":"Get a shovel.","2":"Get some friends.","3":"Push shovel into dirt.","4":"Place shovel on ground.","5":"NONE","6":"dig a hole with some friends"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":1.0,"2":60.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Pull dirt and shovel out of ground.; step1: Get a shovel.; step2: Get some friends.; step3: Push shovel into dirt.; step4: Place shovel on ground.; step5: decided to dig a hole with some friends; step6: dig a hole with some friends","flatten_input_for_script_generation":"You want to dig a hole with some friends. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to dig a hole with some friends; step1: Get some friends.; step2: Get a shovel.; step3: Place shovel on ground.; step4: Push shovel into dirt.; step5: Pull dirt and shovel out of ground.; step6: dig a hole with some friends; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->0","4->3","5->2"],"reference_code":"class DigAHoleWithSomeFriends:\n\n    title = \"dig a hole with some friends\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to dig a hole with some friends\"\n\n    def step1(self):\n        return \"Get some friends.\"\n\n    def step2(self):\n        return \"Get a shovel.\"\n\n    def step3(self):\n        return \"Place shovel on ground.\"\n\n    def step4(self):\n        return \"Push shovel into dirt.\"\n\n    def step5(self):\n        return \"Pull dirt and shovel out of ground.\"\n\n    def step6(self):\n        return \"dig a hole with some friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DigAHoleWithSomeFriends:\n\n    title = \"dig a hole with some friends\"\n    steps = 7\n\n","reference_graph":{"title":"dig a hole with some friends","num_steps":7,"schema":["step0: decided to dig a hole with some friends","step1: Get some friends.","step2: Get a shovel.","step3: Place shovel on ground.","step4: Push shovel into dirt.","step5: Pull dirt and shovel out of ground.","step6: dig a hole with some friends"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn how to dance in college","events":{"0":"read a flyer for a dance club","1":"go to the class every week","2":"go online to the web site","3":"sign up for the class","4":"wait until the first class","5":"NONE","6":"learn how to dance in college"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":3.0,"1":43200.0,"2":3.0,"3":5.0,"4":7200.0},"flatten_input_for_edge_prediction":"step0: read a flyer for a dance club; step1: go to the class every week; step2: go online to the web site; step3: sign up for the class; step4: wait until the first class; step5: decided to learn how to dance in college; step6: learn how to dance in college","flatten_input_for_script_generation":"You want to learn how to dance in college. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to learn how to dance in college; step1: read a flyer for a dance club; step2: go online to the web site; step3: sign up for the class; step4: wait until the first class; step5: go to the class every week; step6: learn how to dance in college; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->4","4->1","5->0"],"reference_code":"class LearnHowToDanceInCollege:\n\n    title = \"learn how to dance in college\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to dance in college\"\n\n    def step1(self):\n        return \"read a flyer for a dance club\"\n\n    def step2(self):\n        return \"go online to the web site\"\n\n    def step3(self):\n        return \"sign up for the class\"\n\n    def step4(self):\n        return \"wait until the first class\"\n\n    def step5(self):\n        return \"go to the class every week\"\n\n    def step6(self):\n        return \"learn how to dance in college\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToDanceInCollege:\n\n    title = \"learn how to dance in college\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to dance in college","num_steps":7,"schema":["step0: decided to learn how to dance in college","step1: read a flyer for a dance club","step2: go online to the web site","step3: sign up for the class","step4: wait until the first class","step5: go to the class every week","step6: learn how to dance in college"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put up a poster","events":{"0":"measure poster fits on the wall","1":"Clean hands with water","2":"Put adhesive on poster","3":"Find the wanted poster","4":"lay poster face down","5":"NONE","6":"put up a poster"},"context":"NONE","minutes":4.0,"events_minutes":{"0":2.0,"1":0.5,"2":0.5,"3":1.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: measure poster fits on the wall; step1: Clean hands with water; step2: Put adhesive on poster; step3: Find the wanted poster; step4: lay poster face down; step5: decided to put up a poster; step6: put up a poster","flatten_input_for_script_generation":"You want to put up a poster. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to put up a poster; step1: Clean hands with water; step2: Find the wanted poster; step3: measure poster fits on the wall; step4: lay poster face down; step5: Put adhesive on poster; step6: put up a poster; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->6","3->0","4->2","5->1"],"reference_code":"class PutUpAPoster:\n\n    title = \"put up a poster\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to put up a poster\"\n\n    def step1(self):\n        return \"Clean hands with water\"\n\n    def step2(self):\n        return \"Find the wanted poster\"\n\n    def step3(self):\n        return \"measure poster fits on the wall\"\n\n    def step4(self):\n        return \"lay poster face down\"\n\n    def step5(self):\n        return \"Put adhesive on poster\"\n\n    def step6(self):\n        return \"put up a poster\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutUpAPoster:\n\n    title = \"put up a poster\"\n    steps = 7\n\n","reference_graph":{"title":"put up a poster","num_steps":7,"schema":["step0: decided to put up a poster","step1: Clean hands with water","step2: Find the wanted poster","step3: measure poster fits on the wall","step4: lay poster face down","step5: Put adhesive on poster","step6: put up a poster"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to college in another state","events":{"0":"pick the top one and apply","1":"look at college options online","2":"decide on a top 3 list","3":"get an acceptance letter","4":"pack some bags","5":"NONE","6":"go to college in another state"},"context":"NONE","minutes":20160.0,"events_minutes":{"0":60.0,"1":60.0,"2":30.0,"3":20160.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: pick the top one and apply; step1: look at college options online; step2: decide on a top 3 list; step3: get an acceptance letter; step4: pack some bags; step5: decided to go to college in another state; step6: go to college in another state","flatten_input_for_script_generation":"You want to go to college in another state. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go to college in another state; step1: look at college options online; step2: decide on a top 3 list; step3: pick the top one and apply; step4: get an acceptance letter; step5: pack some bags; step6: go to college in another state; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->4","4->6","5->1"],"reference_code":"class GoToCollegeInAnotherState:\n\n    title = \"go to college in another state\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to college in another state\"\n\n    def step1(self):\n        return \"look at college options online\"\n\n    def step2(self):\n        return \"decide on a top 3 list\"\n\n    def step3(self):\n        return \"pick the top one and apply\"\n\n    def step4(self):\n        return \"get an acceptance letter\"\n\n    def step5(self):\n        return \"pack some bags\"\n\n    def step6(self):\n        return \"go to college in another state\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToCollegeInAnotherState:\n\n    title = \"go to college in another state\"\n    steps = 7\n\n","reference_graph":{"title":"go to college in another state","num_steps":7,"schema":["step0: decided to go to college in another state","step1: look at college options online","step2: decide on a top 3 list","step3: pick the top one and apply","step4: get an acceptance letter","step5: pack some bags","step6: go to college in another state"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn about the planets","events":{"0":"bring up chrome","1":"take out cell phone","2":"click on first wikipedia link","3":"search for solar system","4":"unlock cell phone","5":"NONE","6":"learn about the planets"},"context":"NONE","minutes":30.0,"events_minutes":{"0":0.3333333333,"1":0.5,"2":0.1666666667,"3":30.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: bring up chrome; step1: take out cell phone; step2: click on first wikipedia link; step3: search for solar system; step4: unlock cell phone; step5: decided to learn about the planets; step6: learn about the planets","flatten_input_for_script_generation":"You want to learn about the planets. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to learn about the planets; step1: take out cell phone; step2: unlock cell phone; step3: bring up chrome; step4: search for solar system; step5: click on first wikipedia link; step6: learn about the planets; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->2","4->0","5->1"],"reference_code":"class LearnAboutThePlanets:\n\n    title = \"learn about the planets\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn about the planets\"\n\n    def step1(self):\n        return \"take out cell phone\"\n\n    def step2(self):\n        return \"unlock cell phone\"\n\n    def step3(self):\n        return \"bring up chrome\"\n\n    def step4(self):\n        return \"search for solar system\"\n\n    def step5(self):\n        return \"click on first wikipedia link\"\n\n    def step6(self):\n        return \"learn about the planets\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnAboutThePlanets:\n\n    title = \"learn about the planets\"\n    steps = 7\n\n","reference_graph":{"title":"learn about the planets","num_steps":7,"schema":["step0: decided to learn about the planets","step1: take out cell phone","step2: unlock cell phone","step3: bring up chrome","step4: search for solar system","step5: click on first wikipedia link","step6: learn about the planets"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make money at a lemonade stand","events":{"0":"walk out the front door with lemonade","1":"set the lemonade down on the stand","2":"get out ingredients to make lemonade","3":"walk to the stand","4":"make lemonade in kitchen","5":"NONE","6":"make money at a lemonade stand"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":10.0,"3":0.5,"4":20.0},"flatten_input_for_edge_prediction":"step0: walk out the front door with lemonade; step1: set the lemonade down on the stand; step2: get out ingredients to make lemonade; step3: walk to the stand; step4: make lemonade in kitchen; step5: decided to make money at a lemonade stand; step6: make money at a lemonade stand","flatten_input_for_script_generation":"You want to make money at a lemonade stand. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to make money at a lemonade stand; step1: get out ingredients to make lemonade; step2: make lemonade in kitchen; step3: walk out the front door with lemonade; step4: walk to the stand; step5: set the lemonade down on the stand; step6: make money at a lemonade stand; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class MakeMoneyAtALemonadeStand:\n\n    title = \"make money at a lemonade stand\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make money at a lemonade stand\"\n\n    def step1(self):\n        return \"get out ingredients to make lemonade\"\n\n    def step2(self):\n        return \"make lemonade in kitchen\"\n\n    def step3(self):\n        return \"walk out the front door with lemonade\"\n\n    def step4(self):\n        return \"walk to the stand\"\n\n    def step5(self):\n        return \"set the lemonade down on the stand\"\n\n    def step6(self):\n        return \"make money at a lemonade stand\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeMoneyAtALemonadeStand:\n\n    title = \"make money at a lemonade stand\"\n    steps = 7\n\n","reference_graph":{"title":"make money at a lemonade stand","num_steps":7,"schema":["step0: decided to make money at a lemonade stand","step1: get out ingredients to make lemonade","step2: make lemonade in kitchen","step3: walk out the front door with lemonade","step4: walk to the stand","step5: set the lemonade down on the stand","step6: make money at a lemonade stand"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try high diving","events":{"0":"attend weekly diving classes","1":"learn proper diving form","2":"climb to the high dive","3":"practice diving from a low board","4":"sign up for a diving class","5":"stand at the edge of the high dive","6":"NONE","7":"try high diving"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":43200.0,"1":10080.0,"2":5.0,"3":30240.0,"4":10.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: attend weekly diving classes; step1: learn proper diving form; step2: climb to the high dive; step3: practice diving from a low board; step4: sign up for a diving class; step5: stand at the edge of the high dive; step6: decided to try high diving; step7: try high diving","flatten_input_for_script_generation":"You want to try high diving. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step3 -> step2; step1 -> step3; step2 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to try high diving; step1: sign up for a diving class; step2: attend weekly diving classes; step3: learn proper diving form; step4: practice diving from a low board; step5: climb to the high dive; step6: stand at the edge of the high dive; step7: try high diving; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->5","3->2","4->0","5->7","6->4"],"reference_code":"class TryHighDiving:\n\n    title = \"try high diving\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try high diving\"\n\n    def step1(self):\n        return \"sign up for a diving class\"\n\n    def step2(self):\n        return \"attend weekly diving classes\"\n\n    def step3(self):\n        return \"learn proper diving form\"\n\n    def step4(self):\n        return \"practice diving from a low board\"\n\n    def step5(self):\n        return \"climb to the high dive\"\n\n    def step6(self):\n        return \"stand at the edge of the high dive\"\n\n    def step7(self):\n        return \"try high diving\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TryHighDiving:\n\n    title = \"try high diving\"\n    steps = 8\n\n","reference_graph":{"title":"try high diving","num_steps":8,"schema":["step0: decided to try high diving","step1: sign up for a diving class","step2: attend weekly diving classes","step3: learn proper diving form","step4: practice diving from a low board","step5: climb to the high dive","step6: stand at the edge of the high dive","step7: try high diving"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"start learning a sport","events":{"0":"Think about which sports interest self.","1":"Decide on sport to learn.","2":"Sit down at computer.","3":"Search how-to videos on sport chosen.","4":"Watch how-to videos","5":"travel to youtube.com.","6":"NONE","7":"start learning a sport"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":3.0,"2":3.0,"3":10.0,"4":150.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Think about which sports interest self.; step1: Decide on sport to learn.; step2: Sit down at computer.; step3: Search how-to videos on sport chosen.; step4: Watch how-to videos; step5: travel to youtube.com.; step6: decided to start learning a sport; step7: start learning a sport","flatten_input_for_script_generation":"You want to start learning a sport. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step5; step5 -> step3; step5 -> step4; step3 -> step7; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to start learning a sport; step1: Think about which sports interest self.; step2: Decide on sport to learn.; step3: Sit down at computer.; step4: travel to youtube.com.; step5: Search how-to videos on sport chosen.; step6: Watch how-to videos; step7: start learning a sport; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->5","3->7","4->7","5->3","5->4","6->0"],"reference_code":"class StartLearningASport:\n\n    title = \"start learning a sport\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to start learning a sport\"\n\n    def step1(self):\n        return \"Think about which sports interest self.\"\n\n    def step2(self):\n        return \"Decide on sport to learn.\"\n\n    def step3(self):\n        return \"Sit down at computer.\"\n\n    def step4(self):\n        return \"travel to youtube.com.\"\n\n    def step5(self):\n        return \"Search how-to videos on sport chosen.\"\n\n    def step6(self):\n        return \"Watch how-to videos\"\n\n    def step7(self):\n        return \"start learning a sport\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class StartLearningASport:\n\n    title = \"start learning a sport\"\n    steps = 8\n\n","reference_graph":{"title":"start learning a sport","num_steps":8,"schema":["step0: decided to start learning a sport","step1: Think about which sports interest self.","step2: Decide on sport to learn.","step3: Sit down at computer.","step4: travel to youtube.com.","step5: Search how-to videos on sport chosen.","step6: Watch how-to videos","step7: start learning a sport"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7"]}}
{"scenario":"eat a really good tomato","events":{"0":"Set tomato on cutting board.","1":"Sit down at table.","2":"Put tomato on plate.","3":"Slice the tomato.","4":"Pick a tomato.","5":"NONE","6":"eat a really good tomato"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Set tomato on cutting board.; step1: Sit down at table.; step2: Put tomato on plate.; step3: Slice the tomato.; step4: Pick a tomato.; step5: decided to eat a really good tomato; step6: eat a really good tomato","flatten_input_for_script_generation":"You want to eat a really good tomato. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to eat a really good tomato; step1: Pick a tomato.; step2: Set tomato on cutting board.; step3: Slice the tomato.; step4: Put tomato on plate.; step5: Sit down at table.; step6: eat a really good tomato; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class EatAReallyGoodTomato:\n\n    title = \"eat a really good tomato\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat a really good tomato\"\n\n    def step1(self):\n        return \"Pick a tomato.\"\n\n    def step2(self):\n        return \"Set tomato on cutting board.\"\n\n    def step3(self):\n        return \"Slice the tomato.\"\n\n    def step4(self):\n        return \"Put tomato on plate.\"\n\n    def step5(self):\n        return \"Sit down at table.\"\n\n    def step6(self):\n        return \"eat a really good tomato\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatAReallyGoodTomato:\n\n    title = \"eat a really good tomato\"\n    steps = 7\n\n","reference_graph":{"title":"eat a really good tomato","num_steps":7,"schema":["step0: decided to eat a really good tomato","step1: Pick a tomato.","step2: Set tomato on cutting board.","step3: Slice the tomato.","step4: Put tomato on plate.","step5: Sit down at table.","step6: eat a really good tomato"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bake an apple pie","events":{"0":"Put the ingredients together","1":"Find the recipe for the pie","2":"Bring the ingredients into the house","3":"Go to the store for the ingredients","4":"Walk to the car","5":"Put the ingredients on the counter","6":"Put the unbaked pie in the oven","7":"NONE","8":"bake an apple pie"},"context":"NONE","minutes":153.0,"events_minutes":{"0":60.0,"1":10.0,"2":10.0,"3":60.0,"4":2.0,"5":10.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: Put the ingredients together; step1: Find the recipe for the pie; step2: Bring the ingredients into the house; step3: Go to the store for the ingredients; step4: Walk to the car; step5: Put the ingredients on the counter; step6: Put the unbaked pie in the oven; step7: decided to bake an apple pie; step8: bake an apple pie","flatten_input_for_script_generation":"You want to bake an apple pie. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step5; step5 -> step0; step1 -> step4; step0 -> step6; step6 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to bake an apple pie; step1: Find the recipe for the pie; step2: Walk to the car; step3: Go to the store for the ingredients; step4: Bring the ingredients into the house; step5: Put the ingredients on the counter; step6: Put the ingredients together; step7: Put the unbaked pie in the oven; step8: bake an apple pie; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step1 -> step2; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->5","3->2","4->3","5->0","6->8","7->1"],"reference_code":"class BakeAnApplePie:\n\n    title = \"bake an apple pie\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to bake an apple pie\"\n\n    def step1(self):\n        return \"Find the recipe for the pie\"\n\n    def step2(self):\n        return \"Walk to the car\"\n\n    def step3(self):\n        return \"Go to the store for the ingredients\"\n\n    def step4(self):\n        return \"Bring the ingredients into the house\"\n\n    def step5(self):\n        return \"Put the ingredients on the counter\"\n\n    def step6(self):\n        return \"Put the ingredients together\"\n\n    def step7(self):\n        return \"Put the unbaked pie in the oven\"\n\n    def step8(self):\n        return \"bake an apple pie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step1 -> step2\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BakeAnApplePie:\n\n    title = \"bake an apple pie\"\n    steps = 9\n\n","reference_graph":{"title":"bake an apple pie","num_steps":9,"schema":["step0: decided to bake an apple pie","step1: Find the recipe for the pie","step2: Walk to the car","step3: Go to the store for the ingredients","step4: Bring the ingredients into the house","step5: Put the ingredients on the counter","step6: Put the ingredients together","step7: Put the unbaked pie in the oven","step8: bake an apple pie"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step1 -> step2","step7 -> step8"]}}
{"scenario":"eat a late night snack","events":{"0":"Reach for the treat","1":"Go through the cabinets","2":"Walk into the kitchen","3":"Find something tasty","4":"Get up from the couch","5":"NONE","6":"eat a late night snack"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.5,"3":0.5833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: Reach for the treat; step1: Go through the cabinets; step2: Walk into the kitchen; step3: Find something tasty; step4: Get up from the couch; step5: decided to eat a late night snack; step6: eat a late night snack","flatten_input_for_script_generation":"You want to eat a late night snack. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to eat a late night snack; step1: Get up from the couch; step2: Walk into the kitchen; step3: Go through the cabinets; step4: Find something tasty; step5: Reach for the treat; step6: eat a late night snack; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class EatALateNightSnack:\n\n    title = \"eat a late night snack\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat a late night snack\"\n\n    def step1(self):\n        return \"Get up from the couch\"\n\n    def step2(self):\n        return \"Walk into the kitchen\"\n\n    def step3(self):\n        return \"Go through the cabinets\"\n\n    def step4(self):\n        return \"Find something tasty\"\n\n    def step5(self):\n        return \"Reach for the treat\"\n\n    def step6(self):\n        return \"eat a late night snack\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatALateNightSnack:\n\n    title = \"eat a late night snack\"\n    steps = 7\n\n","reference_graph":{"title":"eat a late night snack","num_steps":7,"schema":["step0: decided to eat a late night snack","step1: Get up from the couch","step2: Walk into the kitchen","step3: Go through the cabinets","step4: Find something tasty","step5: Reach for the treat","step6: eat a late night snack"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go hot air ballooning","events":{"0":"sign up for air balooning","1":"go to front desk","2":"park the car","3":"drive to location","4":"get in the car","5":"NONE","6":"go hot air ballooning"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":10.0,"2":5.0,"3":30.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: sign up for air balooning; step1: go to front desk; step2: park the car; step3: drive to location; step4: get in the car; step5: decided to go hot air ballooning; step6: go hot air ballooning","flatten_input_for_script_generation":"You want to go hot air ballooning. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go hot air ballooning; step1: get in the car; step2: drive to location; step3: park the car; step4: go to front desk; step5: sign up for air balooning; step6: go hot air ballooning; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","4->3","5->4"],"reference_code":"class GoHotAirBallooning:\n\n    title = \"go hot air ballooning\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go hot air ballooning\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to location\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go to front desk\"\n\n    def step5(self):\n        return \"sign up for air balooning\"\n\n    def step6(self):\n        return \"go hot air ballooning\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoHotAirBallooning:\n\n    title = \"go hot air ballooning\"\n    steps = 7\n\n","reference_graph":{"title":"go hot air ballooning","num_steps":7,"schema":["step0: decided to go hot air ballooning","step1: get in the car","step2: drive to location","step3: park the car","step4: go to front desk","step5: sign up for air balooning","step6: go hot air ballooning"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go vacationing in the Bahamas","events":{"0":"choose a vacation package for the Bahamas","1":"gather everything necessary","2":"look for a vacation package for the Bahamas","3":"stay in the Bahamas","4":"plan the trip","5":"fly to the Bahamas","6":"search online for vacationing deals","7":"NONE","8":"go vacationing in the Bahamas"},"context":"NONE","minutes":5760.0,"events_minutes":{"0":5.0,"1":120.0,"2":15.0,"3":4320.0,"4":300.0,"5":120.0,"6":45.0},"flatten_input_for_edge_prediction":"step0: choose a vacation package for the Bahamas; step1: gather everything necessary; step2: look for a vacation package for the Bahamas; step3: stay in the Bahamas; step4: plan the trip; step5: fly to the Bahamas; step6: search online for vacationing deals; step7: decided to go vacationing in the Bahamas; step8: go vacationing in the Bahamas","flatten_input_for_script_generation":"You want to go vacationing in the Bahamas. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step5; step5 -> step3; step3 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to go vacationing in the Bahamas; step1: search online for vacationing deals; step2: look for a vacation package for the Bahamas; step3: choose a vacation package for the Bahamas; step4: plan the trip; step5: gather everything necessary; step6: fly to the Bahamas; step7: stay in the Bahamas; step8: go vacationing in the Bahamas; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->5","2->0","3->8","4->1","5->3","6->2","7->6"],"reference_code":"class GoVacationingInTheBahamas:\n\n    title = \"go vacationing in the Bahamas\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go vacationing in the Bahamas\"\n\n    def step1(self):\n        return \"search online for vacationing deals\"\n\n    def step2(self):\n        return \"look for a vacation package for the Bahamas\"\n\n    def step3(self):\n        return \"choose a vacation package for the Bahamas\"\n\n    def step4(self):\n        return \"plan the trip\"\n\n    def step5(self):\n        return \"gather everything necessary\"\n\n    def step6(self):\n        return \"fly to the Bahamas\"\n\n    def step7(self):\n        return \"stay in the Bahamas\"\n\n    def step8(self):\n        return \"go vacationing in the Bahamas\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoVacationingInTheBahamas:\n\n    title = \"go vacationing in the Bahamas\"\n    steps = 9\n\n","reference_graph":{"title":"go vacationing in the Bahamas","num_steps":9,"schema":["step0: decided to go vacationing in the Bahamas","step1: search online for vacationing deals","step2: look for a vacation package for the Bahamas","step3: choose a vacation package for the Bahamas","step4: plan the trip","step5: gather everything necessary","step6: fly to the Bahamas","step7: stay in the Bahamas","step8: go vacationing in the Bahamas"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have a pet cat for a long time","events":{"0":"bring the cat back home","1":"go inside the shelter","2":"get in the car","3":"drive to shelter","4":"adopt a cat","5":"NONE","6":"have a pet cat for a long time"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":5.0,"2":5.0,"3":30.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: bring the cat back home; step1: go inside the shelter; step2: get in the car; step3: drive to shelter; step4: adopt a cat; step5: decided to have a pet cat for a long time; step6: have a pet cat for a long time","flatten_input_for_script_generation":"You want to have a pet cat for a long time. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to have a pet cat for a long time; step1: get in the car; step2: drive to shelter; step3: go inside the shelter; step4: adopt a cat; step5: bring the cat back home; step6: have a pet cat for a long time; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class HaveAPetCatForALongTime:\n\n    title = \"have a pet cat for a long time\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have a pet cat for a long time\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to shelter\"\n\n    def step3(self):\n        return \"go inside the shelter\"\n\n    def step4(self):\n        return \"adopt a cat\"\n\n    def step5(self):\n        return \"bring the cat back home\"\n\n    def step6(self):\n        return \"have a pet cat for a long time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveAPetCatForALongTime:\n\n    title = \"have a pet cat for a long time\"\n    steps = 7\n\n","reference_graph":{"title":"have a pet cat for a long time","num_steps":7,"schema":["step0: decided to have a pet cat for a long time","step1: get in the car","step2: drive to shelter","step3: go inside the shelter","step4: adopt a cat","step5: bring the cat back home","step6: have a pet cat for a long time"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sing in a punk band","events":{"0":"place a classified ad","1":"assign everyone instruments","2":"begin doing interviews","3":"get the first gig","4":"develop a roster","5":"NONE","6":"sing in a punk band"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":10.0,"1":30.0,"2":8640.0,"3":1440.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: place a classified ad; step1: assign everyone instruments; step2: begin doing interviews; step3: get the first gig; step4: develop a roster; step5: decided to sing in a punk band; step6: sing in a punk band","flatten_input_for_script_generation":"You want to sing in a punk band. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to sing in a punk band; step1: place a classified ad; step2: begin doing interviews; step3: develop a roster; step4: assign everyone instruments; step5: get the first gig; step6: sing in a punk band; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->6","4->1","5->0"],"reference_code":"class SingInAPunkBand:\n\n    title = \"sing in a punk band\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to sing in a punk band\"\n\n    def step1(self):\n        return \"place a classified ad\"\n\n    def step2(self):\n        return \"begin doing interviews\"\n\n    def step3(self):\n        return \"develop a roster\"\n\n    def step4(self):\n        return \"assign everyone instruments\"\n\n    def step5(self):\n        return \"get the first gig\"\n\n    def step6(self):\n        return \"sing in a punk band\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SingInAPunkBand:\n\n    title = \"sing in a punk band\"\n    steps = 7\n\n","reference_graph":{"title":"sing in a punk band","num_steps":7,"schema":["step0: decided to sing in a punk band","step1: place a classified ad","step2: begin doing interviews","step3: develop a roster","step4: assign everyone instruments","step5: get the first gig","step6: sing in a punk band"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn how to play guitar","events":{"0":"Ask employee for advice","1":"Pay for guitar and extra accessories","2":"Browse for guitars","3":"Drive to music store","4":"Buy guitar chord\/song book","5":"Buy guitar accessories","6":"Choose guitar liked most","7":"NONE","8":"learn how to play guitar"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":30.0,"1":5.0,"2":60.0,"3":15.0,"4":10.0,"5":20.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: Ask employee for advice; step1: Pay for guitar and extra accessories; step2: Browse for guitars; step3: Drive to music store; step4: Buy guitar chord\/song book; step5: Buy guitar accessories; step6: Choose guitar liked most; step7: decided to learn how to play guitar; step8: learn how to play guitar","flatten_input_for_script_generation":"You want to learn how to play guitar. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step3 -> step0; step2 -> step6; step0 -> step6; step6 -> step4; step4 -> step5; step5 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to learn how to play guitar; step1: Drive to music store; step2: Browse for guitars; step3: Ask employee for advice; step4: Choose guitar liked most; step5: Buy guitar chord\/song book; step6: Buy guitar accessories; step7: Pay for guitar and extra accessories; step8: learn how to play guitar; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->6","3->2","3->0","4->5","5->1","6->4","7->3"],"reference_code":"class LearnHowToPlayGuitar:\n\n    title = \"learn how to play guitar\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to learn how to play guitar\"\n\n    def step1(self):\n        return \"Drive to music store\"\n\n    def step2(self):\n        return \"Browse for guitars\"\n\n    def step3(self):\n        return \"Ask employee for advice\"\n\n    def step4(self):\n        return \"Choose guitar liked most\"\n\n    def step5(self):\n        return \"Buy guitar chord\/song book\"\n\n    def step6(self):\n        return \"Buy guitar accessories\"\n\n    def step7(self):\n        return \"Pay for guitar and extra accessories\"\n\n    def step8(self):\n        return \"learn how to play guitar\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LearnHowToPlayGuitar:\n\n    title = \"learn how to play guitar\"\n    steps = 9\n\n","reference_graph":{"title":"learn how to play guitar","num_steps":9,"schema":["step0: decided to learn how to play guitar","step1: Drive to music store","step2: Browse for guitars","step3: Ask employee for advice","step4: Choose guitar liked most","step5: Buy guitar chord\/song book","step6: Buy guitar accessories","step7: Pay for guitar and extra accessories","step8: learn how to play guitar"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to the circus","events":{"0":"go to the car","1":"get in the car","2":"find keys and wallet","3":"help kids get dressed","4":"drive to the circus","5":"get dressed to go out","6":"NONE","7":"go to the circus"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":3.0,"2":5.0,"3":20.0,"4":20.0,"5":20.0},"flatten_input_for_edge_prediction":"step0: go to the car; step1: get in the car; step2: find keys and wallet; step3: help kids get dressed; step4: drive to the circus; step5: get dressed to go out; step6: decided to go to the circus; step7: go to the circus","flatten_input_for_script_generation":"You want to go to the circus. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to go to the circus; step1: get dressed to go out; step2: help kids get dressed; step3: find keys and wallet; step4: go to the car; step5: get in the car; step6: drive to the circus; step7: go to the circus; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->7","5->3","6->5"],"reference_code":"class GoToTheCircus:\n\n    title = \"go to the circus\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to the circus\"\n\n    def step1(self):\n        return \"get dressed to go out\"\n\n    def step2(self):\n        return \"help kids get dressed\"\n\n    def step3(self):\n        return \"find keys and wallet\"\n\n    def step4(self):\n        return \"go to the car\"\n\n    def step5(self):\n        return \"get in the car\"\n\n    def step6(self):\n        return \"drive to the circus\"\n\n    def step7(self):\n        return \"go to the circus\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToTheCircus:\n\n    title = \"go to the circus\"\n    steps = 8\n\n","reference_graph":{"title":"go to the circus","num_steps":8,"schema":["step0: decided to go to the circus","step1: get dressed to go out","step2: help kids get dressed","step3: find keys and wallet","step4: go to the car","step5: get in the car","step6: drive to the circus","step7: go to the circus"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"bake a cake for someone's birthday","events":{"0":"go to the store","1":"go back home","2":"pick up the baking stuff","3":"go to the cashier","4":"go to the baking aisle","5":"walk to the car","6":"pay for everything","7":"NONE","8":"bake a cake for someone's birthday"},"context":"NONE","minutes":120.0,"events_minutes":{"0":20.0,"1":10.0,"2":5.0,"3":3.0,"4":5.0,"5":5.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: go to the store; step1: go back home; step2: pick up the baking stuff; step3: go to the cashier; step4: go to the baking aisle; step5: walk to the car; step6: pay for everything; step7: decided to bake a cake for someone's birthday; step8: bake a cake for someone's birthday","flatten_input_for_script_generation":"You want to bake a cake for someone's birthday. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step6 -> step5; step5 -> step1; step1 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to bake a cake for someone's birthday; step1: go to the store; step2: go to the baking aisle; step3: pick up the baking stuff; step4: go to the cashier; step5: pay for everything; step6: walk to the car; step7: go back home; step8: bake a cake for someone's birthday; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->8","2->3","3->6","4->2","5->1","6->5","7->0"],"reference_code":"class BakeACakeForSomeonesBirthday:\n\n    title = \"bake a cake for someone's birthday\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to bake a cake for someone's birthday\"\n\n    def step1(self):\n        return \"go to the store\"\n\n    def step2(self):\n        return \"go to the baking aisle\"\n\n    def step3(self):\n        return \"pick up the baking stuff\"\n\n    def step4(self):\n        return \"go to the cashier\"\n\n    def step5(self):\n        return \"pay for everything\"\n\n    def step6(self):\n        return \"walk to the car\"\n\n    def step7(self):\n        return \"go back home\"\n\n    def step8(self):\n        return \"bake a cake for someone's birthday\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BakeACakeForSomeonesBirthday:\n\n    title = \"bake a cake for someone's birthday\"\n    steps = 9\n\n","reference_graph":{"title":"bake a cake for someone's birthday","num_steps":9,"schema":["step0: decided to bake a cake for someone's birthday","step1: go to the store","step2: go to the baking aisle","step3: pick up the baking stuff","step4: go to the cashier","step5: pay for everything","step6: walk to the car","step7: go back home","step8: bake a cake for someone's birthday"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"buy a pair of running shoes","events":{"0":"lock the car doors","1":"find desired pair of shoes","2":"bring shoes up to register","3":"walk into the shoe store","4":"get out of the car","5":"drive to the store","6":"NONE","7":"buy a pair of running shoes"},"context":"NONE","minutes":120.0,"events_minutes":{"0":0.5,"1":15.0,"2":2.0,"3":2.0,"4":1.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: lock the car doors; step1: find desired pair of shoes; step2: bring shoes up to register; step3: walk into the shoe store; step4: get out of the car; step5: drive to the store; step6: decided to buy a pair of running shoes; step7: buy a pair of running shoes","flatten_input_for_script_generation":"You want to buy a pair of running shoes. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to buy a pair of running shoes; step1: drive to the store; step2: get out of the car; step3: lock the car doors; step4: walk into the shoe store; step5: find desired pair of shoes; step6: bring shoes up to register; step7: buy a pair of running shoes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->2","2->7","3->1","4->0","5->4","6->5"],"reference_code":"class BuyAPairOfRunningShoes:\n\n    title = \"buy a pair of running shoes\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy a pair of running shoes\"\n\n    def step1(self):\n        return \"drive to the store\"\n\n    def step2(self):\n        return \"get out of the car\"\n\n    def step3(self):\n        return \"lock the car doors\"\n\n    def step4(self):\n        return \"walk into the shoe store\"\n\n    def step5(self):\n        return \"find desired pair of shoes\"\n\n    def step6(self):\n        return \"bring shoes up to register\"\n\n    def step7(self):\n        return \"buy a pair of running shoes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyAPairOfRunningShoes:\n\n    title = \"buy a pair of running shoes\"\n    steps = 8\n\n","reference_graph":{"title":"buy a pair of running shoes","num_steps":8,"schema":["step0: decided to buy a pair of running shoes","step1: drive to the store","step2: get out of the car","step3: lock the car doors","step4: walk into the shoe store","step5: find desired pair of shoes","step6: bring shoes up to register","step7: buy a pair of running shoes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get big quick","events":{"0":"Choose a gym.","1":"Build muscle mass through exercise.","2":"Visit the gym.","3":"Choose a trainer.","4":"Plan exercises to build muscle.","5":"NONE","6":"get big quick"},"context":"NONE","minutes":7200.0,"events_minutes":{"0":1440.0,"1":240.0,"2":1440.0,"3":1440.0,"4":1440.0},"flatten_input_for_edge_prediction":"step0: Choose a gym.; step1: Build muscle mass through exercise.; step2: Visit the gym.; step3: Choose a trainer.; step4: Plan exercises to build muscle.; step5: decided to get big quick; step6: get big quick","flatten_input_for_script_generation":"You want to get big quick. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get big quick; step1: Choose a trainer.; step2: Choose a gym.; step3: Plan exercises to build muscle.; step4: Visit the gym.; step5: Build muscle mass through exercise.; step6: get big quick; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->4","4->2","5->0","5->3"],"reference_code":"class GetBigQuick:\n\n    title = \"get big quick\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get big quick\"\n\n    def step1(self):\n        return \"Choose a trainer.\"\n\n    def step2(self):\n        return \"Choose a gym.\"\n\n    def step3(self):\n        return \"Plan exercises to build muscle.\"\n\n    def step4(self):\n        return \"Visit the gym.\"\n\n    def step5(self):\n        return \"Build muscle mass through exercise.\"\n\n    def step6(self):\n        return \"get big quick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetBigQuick:\n\n    title = \"get big quick\"\n    steps = 7\n\n","reference_graph":{"title":"get big quick","num_steps":7,"schema":["step0: decided to get big quick","step1: Choose a trainer.","step2: Choose a gym.","step3: Plan exercises to build muscle.","step4: Visit the gym.","step5: Build muscle mass through exercise.","step6: get big quick"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"find out who was ahead in the election for president","events":{"0":"click on page for polls","1":"open the internet","2":"sit down in computer chair","3":"turn on computer","4":"search current election polls","5":"NONE","6":"find out who was ahead in the election for president"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: click on page for polls; step1: open the internet; step2: sit down in computer chair; step3: turn on computer; step4: search current election polls; step5: decided to find out who was ahead in the election for president; step6: find out who was ahead in the election for president","flatten_input_for_script_generation":"You want to find out who was ahead in the election for president. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to find out who was ahead in the election for president; step1: sit down in computer chair; step2: turn on computer; step3: open the internet; step4: search current election polls; step5: click on page for polls; step6: find out who was ahead in the election for president; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class FindOutWhoWasAheadInTheElectionForPresident:\n\n    title = \"find out who was ahead in the election for president\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to find out who was ahead in the election for president\"\n\n    def step1(self):\n        return \"sit down in computer chair\"\n\n    def step2(self):\n        return \"turn on computer\"\n\n    def step3(self):\n        return \"open the internet\"\n\n    def step4(self):\n        return \"search current election polls\"\n\n    def step5(self):\n        return \"click on page for polls\"\n\n    def step6(self):\n        return \"find out who was ahead in the election for president\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FindOutWhoWasAheadInTheElectionForPresident:\n\n    title = \"find out who was ahead in the election for president\"\n    steps = 7\n\n","reference_graph":{"title":"find out who was ahead in the election for president","num_steps":7,"schema":["step0: decided to find out who was ahead in the election for president","step1: sit down in computer chair","step2: turn on computer","step3: open the internet","step4: search current election polls","step5: click on page for polls","step6: find out who was ahead in the election for president"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the beach all summer!","events":{"0":"book a room with chosen resort","1":"drive to resort","2":"check availability of room for desired time","3":"go to the beach","4":"research beach resorts online","5":"check into room","6":"NONE","7":"go to the beach all summer!"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":10.0,"1":300.0,"2":10.0,"3":5.0,"4":60.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: book a room with chosen resort; step1: drive to resort; step2: check availability of room for desired time; step3: go to the beach; step4: research beach resorts online; step5: check into room; step6: decided to go to the beach all summer!; step7: go to the beach all summer!","flatten_input_for_script_generation":"You want to go to the beach all summer!. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step5; step5 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to go to the beach all summer!; step1: research beach resorts online; step2: check availability of room for desired time; step3: book a room with chosen resort; step4: drive to resort; step5: check into room; step6: go to the beach; step7: go to the beach all summer!; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->0","3->7","4->2","5->3","6->4"],"reference_code":"class GoToTheBeachAllSummer:\n\n    title = \"go to the beach all summer!\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to the beach all summer!\"\n\n    def step1(self):\n        return \"research beach resorts online\"\n\n    def step2(self):\n        return \"check availability of room for desired time\"\n\n    def step3(self):\n        return \"book a room with chosen resort\"\n\n    def step4(self):\n        return \"drive to resort\"\n\n    def step5(self):\n        return \"check into room\"\n\n    def step6(self):\n        return \"go to the beach\"\n\n    def step7(self):\n        return \"go to the beach all summer!\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToTheBeachAllSummer:\n\n    title = \"go to the beach all summer!\"\n    steps = 8\n\n","reference_graph":{"title":"go to the beach all summer!","num_steps":8,"schema":["step0: decided to go to the beach all summer!","step1: research beach resorts online","step2: check availability of room for desired time","step3: book a room with chosen resort","step4: drive to resort","step5: check into room","step6: go to the beach","step7: go to the beach all summer!"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make a quick hundred bucks","events":{"0":"Search for high paying per hour batches","1":"Work on HITS","2":"Go on Amazon MTurk website","3":"Choose highest paying HITS","4":"Search for high paying surveys","5":"NONE","6":"make a quick hundred bucks"},"context":"NONE","minutes":300.0,"events_minutes":{"0":5.0,"1":240.0,"2":2.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Search for high paying per hour batches; step1: Work on HITS; step2: Go on Amazon MTurk website; step3: Choose highest paying HITS; step4: Search for high paying surveys; step5: decided to make a quick hundred bucks; step6: make a quick hundred bucks","flatten_input_for_script_generation":"You want to make a quick hundred bucks. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step4; step0 -> step3; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to make a quick hundred bucks; step1: Go on Amazon MTurk website; step2: Search for high paying per hour batches; step3: Search for high paying surveys; step4: Choose highest paying HITS; step5: Work on HITS; step6: make a quick hundred bucks; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","2->4","3->1","4->3","5->2"],"reference_code":"class MakeAQuickHundredBucks:\n\n    title = \"make a quick hundred bucks\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a quick hundred bucks\"\n\n    def step1(self):\n        return \"Go on Amazon MTurk website\"\n\n    def step2(self):\n        return \"Search for high paying per hour batches\"\n\n    def step3(self):\n        return \"Search for high paying surveys\"\n\n    def step4(self):\n        return \"Choose highest paying HITS\"\n\n    def step5(self):\n        return \"Work on HITS\"\n\n    def step6(self):\n        return \"make a quick hundred bucks\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeAQuickHundredBucks:\n\n    title = \"make a quick hundred bucks\"\n    steps = 7\n\n","reference_graph":{"title":"make a quick hundred bucks","num_steps":7,"schema":["step0: decided to make a quick hundred bucks","step1: Go on Amazon MTurk website","step2: Search for high paying per hour batches","step3: Search for high paying surveys","step4: Choose highest paying HITS","step5: Work on HITS","step6: make a quick hundred bucks"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"visit the circus","events":{"0":"help the kids get dressed","1":"drive to the circus","2":"help the kids in the car","3":"get dressed to go out","4":"go to the car with the kids","5":"NONE","6":"visit the circus"},"context":"NONE","minutes":60.0,"events_minutes":{"0":20.0,"1":20.0,"2":5.0,"3":20.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: help the kids get dressed; step1: drive to the circus; step2: help the kids in the car; step3: get dressed to go out; step4: go to the car with the kids; step5: decided to visit the circus; step6: visit the circus","flatten_input_for_script_generation":"You want to visit the circus. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: decided to visit the circus; step1: help the kids get dressed; step2: get dressed to go out; step3: go to the car with the kids; step4: help the kids in the car; step5: drive to the circus; step6: visit the circus; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->4","4->2","5->3","5->0"],"reference_code":"class VisitTheCircus:\n\n    title = \"visit the circus\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to visit the circus\"\n\n    def step1(self):\n        return \"help the kids get dressed\"\n\n    def step2(self):\n        return \"get dressed to go out\"\n\n    def step3(self):\n        return \"go to the car with the kids\"\n\n    def step4(self):\n        return \"help the kids in the car\"\n\n    def step5(self):\n        return \"drive to the circus\"\n\n    def step6(self):\n        return \"visit the circus\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class VisitTheCircus:\n\n    title = \"visit the circus\"\n    steps = 7\n\n","reference_graph":{"title":"visit the circus","num_steps":7,"schema":["step0: decided to visit the circus","step1: help the kids get dressed","step2: get dressed to go out","step3: go to the car with the kids","step4: help the kids in the car","step5: drive to the circus","step6: visit the circus"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn to play chess like a grand master","events":{"0":"practice a game solo.","1":"repeat until mastered.","2":"setup up a chess board.","3":"challenge others as practice.","4":"read about the movements of the pieces.","5":"NONE","6":"learn to play chess like a grand master"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":60.0,"1":41760.0,"2":2.0,"3":1440.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: practice a game solo.; step1: repeat until mastered.; step2: setup up a chess board.; step3: challenge others as practice.; step4: read about the movements of the pieces.; step5: decided to learn to play chess like a grand master; step6: learn to play chess like a grand master","flatten_input_for_script_generation":"You want to learn to play chess like a grand master. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step4 -> step0; step0 -> step3; step1 -> step6; step3 -> step1; step5 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn to play chess like a grand master; step1: setup up a chess board.; step2: practice a game solo.; step3: challenge others as practice.; step4: read about the movements of the pieces.; step5: repeat until mastered.; step6: learn to play chess like a grand master; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step2; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->0","5->4","5->2"],"reference_code":"class LearnToPlayChessLikeAGrandMaster:\n\n    title = \"learn to play chess like a grand master\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn to play chess like a grand master\"\n\n    def step1(self):\n        return \"setup up a chess board.\"\n\n    def step2(self):\n        return \"practice a game solo.\"\n\n    def step3(self):\n        return \"challenge others as practice.\"\n\n    def step4(self):\n        return \"read about the movements of the pieces.\"\n\n    def step5(self):\n        return \"repeat until mastered.\"\n\n    def step6(self):\n        return \"learn to play chess like a grand master\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step2\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnToPlayChessLikeAGrandMaster:\n\n    title = \"learn to play chess like a grand master\"\n    steps = 7\n\n","reference_graph":{"title":"learn to play chess like a grand master","num_steps":7,"schema":["step0: decided to learn to play chess like a grand master","step1: setup up a chess board.","step2: practice a game solo.","step3: challenge others as practice.","step4: read about the movements of the pieces.","step5: repeat until mastered.","step6: learn to play chess like a grand master"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step2","step3 -> step5","step5 -> step6"]}}
{"scenario":"build a gym","events":{"0":"Travel to amazon.com.","1":"Confirm purchase of items.","2":"Add all required gym items to cart.","3":"Sit down at computer.","4":"Receive gym item packages.","5":"Set up gym equipment in desired space.","6":"Wait for gym items to arrive.","7":"NONE","8":"build a gym"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":3.0,"1":5.0,"2":60.0,"3":3.0,"4":30.0,"5":1440.0,"6":7200.0},"flatten_input_for_edge_prediction":"step0: Travel to amazon.com.; step1: Confirm purchase of items.; step2: Add all required gym items to cart.; step3: Sit down at computer.; step4: Receive gym item packages.; step5: Set up gym equipment in desired space.; step6: Wait for gym items to arrive.; step7: decided to build a gym; step8: build a gym","flatten_input_for_script_generation":"You want to build a gym. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step6 -> step4; step4 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to build a gym; step1: Sit down at computer.; step2: Travel to amazon.com.; step3: Add all required gym items to cart.; step4: Confirm purchase of items.; step5: Wait for gym items to arrive.; step6: Receive gym item packages.; step7: Set up gym equipment in desired space.; step8: build a gym; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->6","2->1","3->0","4->5","5->8","6->4","7->3"],"reference_code":"class BuildAGym:\n\n    title = \"build a gym\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to build a gym\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Travel to amazon.com.\"\n\n    def step3(self):\n        return \"Add all required gym items to cart.\"\n\n    def step4(self):\n        return \"Confirm purchase of items.\"\n\n    def step5(self):\n        return \"Wait for gym items to arrive.\"\n\n    def step6(self):\n        return \"Receive gym item packages.\"\n\n    def step7(self):\n        return \"Set up gym equipment in desired space.\"\n\n    def step8(self):\n        return \"build a gym\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuildAGym:\n\n    title = \"build a gym\"\n    steps = 9\n\n","reference_graph":{"title":"build a gym","num_steps":9,"schema":["step0: decided to build a gym","step1: Sit down at computer.","step2: Travel to amazon.com.","step3: Add all required gym items to cart.","step4: Confirm purchase of items.","step5: Wait for gym items to arrive.","step6: Receive gym item packages.","step7: Set up gym equipment in desired space.","step8: build a gym"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"wear pants to the school dance","events":{"0":"Put on left leg of pants.","1":"Put on shoes.","2":"Walk to closet on day of dance.","3":"Remove pants from closet.","4":"Travel to school dance.","5":"Put on right leg of pants.","6":"Open closet door.","7":"NONE","8":"wear pants to the school dance"},"context":"NONE","minutes":120.0,"events_minutes":{"0":0.5,"1":1.0,"2":5.0,"3":1.0,"4":240.0,"5":0.5,"6":1.0},"flatten_input_for_edge_prediction":"step0: Put on left leg of pants.; step1: Put on shoes.; step2: Walk to closet on day of dance.; step3: Remove pants from closet.; step4: Travel to school dance.; step5: Put on right leg of pants.; step6: Open closet door.; step7: decided to wear pants to the school dance; step8: wear pants to the school dance","flatten_input_for_script_generation":"You want to wear pants to the school dance. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step6 -> step3; step3 -> step5; step3 -> step0; step0 -> step1; step5 -> step1; step1 -> step4; step4 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to wear pants to the school dance; step1: Walk to closet on day of dance.; step2: Open closet door.; step3: Remove pants from closet.; step4: Put on right leg of pants.; step5: Put on left leg of pants.; step6: Put on shoes.; step7: Travel to school dance.; step8: wear pants to the school dance; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->4","2->6","3->5","3->0","4->8","5->1","6->3","7->2"],"reference_code":"class WearPantsToTheSchoolDance:\n\n    title = \"wear pants to the school dance\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to wear pants to the school dance\"\n\n    def step1(self):\n        return \"Walk to closet on day of dance.\"\n\n    def step2(self):\n        return \"Open closet door.\"\n\n    def step3(self):\n        return \"Remove pants from closet.\"\n\n    def step4(self):\n        return \"Put on right leg of pants.\"\n\n    def step5(self):\n        return \"Put on left leg of pants.\"\n\n    def step6(self):\n        return \"Put on shoes.\"\n\n    def step7(self):\n        return \"Travel to school dance.\"\n\n    def step8(self):\n        return \"wear pants to the school dance\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WearPantsToTheSchoolDance:\n\n    title = \"wear pants to the school dance\"\n    steps = 9\n\n","reference_graph":{"title":"wear pants to the school dance","num_steps":9,"schema":["step0: decided to wear pants to the school dance","step1: Walk to closet on day of dance.","step2: Open closet door.","step3: Remove pants from closet.","step4: Put on right leg of pants.","step5: Put on left leg of pants.","step6: Put on shoes.","step7: Travel to school dance.","step8: wear pants to the school dance"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get some books for school","events":{"0":"put on clothes","1":"find the books","2":"put on shoes","3":"take a shower","4":"drive to the bookstore","5":"NONE","6":"get some books for school"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":5.0,"2":2.0,"3":20.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: put on clothes; step1: find the books; step2: put on shoes; step3: take a shower; step4: drive to the bookstore; step5: decided to get some books for school; step6: get some books for school","flatten_input_for_script_generation":"You want to get some books for school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step2; step0 -> step4; step2 -> step4; step2 -> step1; step4 -> step6; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get some books for school; step1: take a shower; step2: put on clothes; step3: put on shoes; step4: drive to the bookstore; step5: find the books; step6: get some books for school; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->4","2->1","3->0","3->2","4->6","5->3"],"reference_code":"class GetSomeBooksForSchool:\n\n    title = \"get some books for school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get some books for school\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"put on clothes\"\n\n    def step3(self):\n        return \"put on shoes\"\n\n    def step4(self):\n        return \"drive to the bookstore\"\n\n    def step5(self):\n        return \"find the books\"\n\n    def step6(self):\n        return \"get some books for school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSomeBooksForSchool:\n\n    title = \"get some books for school\"\n    steps = 7\n\n","reference_graph":{"title":"get some books for school","num_steps":7,"schema":["step0: decided to get some books for school","step1: take a shower","step2: put on clothes","step3: put on shoes","step4: drive to the bookstore","step5: find the books","step6: get some books for school"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"play basketball in high school","events":{"0":"Stay after school to try out for the team.","1":"Stay after school for practice.","2":"Check daily for team postings.","3":"Read the list of people who made the team.","4":"Play in basketball games.","5":"Figure out when tryouts take place.","6":"NONE","7":"play basketball in high school"},"context":"NONE","minutes":2102400.0,"events_minutes":{"0":120.0,"1":120.0,"2":5.0,"3":2.0,"4":120.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: Stay after school to try out for the team.; step1: Stay after school for practice.; step2: Check daily for team postings.; step3: Read the list of people who made the team.; step4: Play in basketball games.; step5: Figure out when tryouts take place.; step6: decided to play basketball in high school; step7: play basketball in high school","flatten_input_for_script_generation":"You want to play basketball in high school. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step3; step2 -> step5; step3 -> step1; step1 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to play basketball in high school; step1: Check daily for team postings.; step2: Figure out when tryouts take place.; step3: Stay after school to try out for the team.; step4: Read the list of people who made the team.; step5: Stay after school for practice.; step6: Play in basketball games.; step7: play basketball in high school; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->5","3->1","4->7","5->0","6->2"],"reference_code":"class PlayBasketballInHighSchool:\n\n    title = \"play basketball in high school\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to play basketball in high school\"\n\n    def step1(self):\n        return \"Check daily for team postings.\"\n\n    def step2(self):\n        return \"Figure out when tryouts take place.\"\n\n    def step3(self):\n        return \"Stay after school to try out for the team.\"\n\n    def step4(self):\n        return \"Read the list of people who made the team.\"\n\n    def step5(self):\n        return \"Stay after school for practice.\"\n\n    def step6(self):\n        return \"Play in basketball games.\"\n\n    def step7(self):\n        return \"play basketball in high school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PlayBasketballInHighSchool:\n\n    title = \"play basketball in high school\"\n    steps = 8\n\n","reference_graph":{"title":"play basketball in high school","num_steps":8,"schema":["step0: decided to play basketball in high school","step1: Check daily for team postings.","step2: Figure out when tryouts take place.","step3: Stay after school to try out for the team.","step4: Read the list of people who made the team.","step5: Stay after school for practice.","step6: Play in basketball games.","step7: play basketball in high school"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn how to juggle","events":{"0":"buy some juggling balls","1":"go to amazon.com","2":"wait for the package","3":"practice every day","4":"find an instructional video and watch","5":"go to youtube","6":"take out the balls","7":"NONE","8":"learn how to juggle"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":5.0,"1":1.0,"2":1440.0,"3":43200.0,"4":10.0,"5":1.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: buy some juggling balls; step1: go to amazon.com; step2: wait for the package; step3: practice every day; step4: find an instructional video and watch; step5: go to youtube; step6: take out the balls; step7: decided to learn how to juggle; step8: learn how to juggle","flatten_input_for_script_generation":"You want to learn how to juggle. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step6; step6 -> step5; step5 -> step4; step4 -> step3; step3 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to learn how to juggle; step1: go to amazon.com; step2: buy some juggling balls; step3: wait for the package; step4: take out the balls; step5: go to youtube; step6: find an instructional video and watch; step7: practice every day; step8: learn how to juggle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->0","2->6","3->8","4->3","5->4","6->5","7->1"],"reference_code":"class LearnHowToJuggle:\n\n    title = \"learn how to juggle\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to learn how to juggle\"\n\n    def step1(self):\n        return \"go to amazon.com\"\n\n    def step2(self):\n        return \"buy some juggling balls\"\n\n    def step3(self):\n        return \"wait for the package\"\n\n    def step4(self):\n        return \"take out the balls\"\n\n    def step5(self):\n        return \"go to youtube\"\n\n    def step6(self):\n        return \"find an instructional video and watch\"\n\n    def step7(self):\n        return \"practice every day\"\n\n    def step8(self):\n        return \"learn how to juggle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LearnHowToJuggle:\n\n    title = \"learn how to juggle\"\n    steps = 9\n\n","reference_graph":{"title":"learn how to juggle","num_steps":9,"schema":["step0: decided to learn how to juggle","step1: go to amazon.com","step2: buy some juggling balls","step3: wait for the package","step4: take out the balls","step5: go to youtube","step6: find an instructional video and watch","step7: practice every day","step8: learn how to juggle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get some ice cream","events":{"0":"scoop ice cream into the bowl with the spoon","1":"take out a bowl","2":"take ice cream out of freezer","3":"take lid off ice cream","4":"put ice cream back in freezer with the lid on","5":"walk into the kitchen","6":"take out a spoon","7":"NONE","8":"get some ice cream"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":0.4166666667,"2":0.75,"3":0.1666666667,"4":1.0,"5":1.0,"6":0.4166666667},"flatten_input_for_edge_prediction":"step0: scoop ice cream into the bowl with the spoon; step1: take out a bowl; step2: take ice cream out of freezer; step3: take lid off ice cream; step4: put ice cream back in freezer with the lid on; step5: walk into the kitchen; step6: take out a spoon; step7: decided to get some ice cream; step8: get some ice cream","flatten_input_for_script_generation":"You want to get some ice cream. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step6; step5 -> step1; step5 -> step2; step6 -> step0; step1 -> step0; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to get some ice cream; step1: walk into the kitchen; step2: take out a spoon; step3: take out a bowl; step4: take ice cream out of freezer; step5: scoop ice cream into the bowl with the spoon; step6: take lid off ice cream; step7: put ice cream back in freezer with the lid on; step8: get some ice cream; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step5; step7 -> step8","gold_edges_for_prediction":["0->4","1->0","2->3","3->0","4->8","5->6","5->1","5->2","6->0","7->5"],"reference_code":"class GetSomeIceCream:\n\n    title = \"get some ice cream\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get some ice cream\"\n\n    def step1(self):\n        return \"walk into the kitchen\"\n\n    def step2(self):\n        return \"take out a spoon\"\n\n    def step3(self):\n        return \"take out a bowl\"\n\n    def step4(self):\n        return \"take ice cream out of freezer\"\n\n    def step5(self):\n        return \"scoop ice cream into the bowl with the spoon\"\n\n    def step6(self):\n        return \"take lid off ice cream\"\n\n    def step7(self):\n        return \"put ice cream back in freezer with the lid on\"\n\n    def step8(self):\n        return \"get some ice cream\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step5\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetSomeIceCream:\n\n    title = \"get some ice cream\"\n    steps = 9\n\n","reference_graph":{"title":"get some ice cream","num_steps":9,"schema":["step0: decided to get some ice cream","step1: walk into the kitchen","step2: take out a spoon","step3: take out a bowl","step4: take ice cream out of freezer","step5: scoop ice cream into the bowl with the spoon","step6: take lid off ice cream","step7: put ice cream back in freezer with the lid on","step8: get some ice cream"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step5","step7 -> step8"]}}
{"scenario":"build bird houses","events":{"0":"Set up equipment and tools","1":"Purchase materials such as wood and nails","2":"Study steps from plan","3":"Assemble materials including wood and nails","4":"Research bird house plans and schematics","5":"Cut up wood per schematics","6":"Apply finishing touches to bird house","7":"NONE","8":"build bird houses"},"context":"NONE","minutes":300.0,"events_minutes":{"0":15.0,"1":30.0,"2":5.0,"3":60.0,"4":120.0,"5":45.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Set up equipment and tools; step1: Purchase materials such as wood and nails; step2: Study steps from plan; step3: Assemble materials including wood and nails; step4: Research bird house plans and schematics; step5: Cut up wood per schematics; step6: Apply finishing touches to bird house; step7: decided to build bird houses; step8: build bird houses","flatten_input_for_script_generation":"You want to build bird houses. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step5; step5 -> step3; step3 -> step6; step6 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to build bird houses; step1: Research bird house plans and schematics; step2: Purchase materials such as wood and nails; step3: Set up equipment and tools; step4: Study steps from plan; step5: Cut up wood per schematics; step6: Assemble materials including wood and nails; step7: Apply finishing touches to bird house; step8: build bird houses; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->0","2->5","3->6","4->1","5->3","6->8","7->4"],"reference_code":"class BuildBirdHouses:\n\n    title = \"build bird houses\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to build bird houses\"\n\n    def step1(self):\n        return \"Research bird house plans and schematics\"\n\n    def step2(self):\n        return \"Purchase materials such as wood and nails\"\n\n    def step3(self):\n        return \"Set up equipment and tools\"\n\n    def step4(self):\n        return \"Study steps from plan\"\n\n    def step5(self):\n        return \"Cut up wood per schematics\"\n\n    def step6(self):\n        return \"Assemble materials including wood and nails\"\n\n    def step7(self):\n        return \"Apply finishing touches to bird house\"\n\n    def step8(self):\n        return \"build bird houses\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuildBirdHouses:\n\n    title = \"build bird houses\"\n    steps = 9\n\n","reference_graph":{"title":"build bird houses","num_steps":9,"schema":["step0: decided to build bird houses","step1: Research bird house plans and schematics","step2: Purchase materials such as wood and nails","step3: Set up equipment and tools","step4: Study steps from plan","step5: Cut up wood per schematics","step6: Assemble materials including wood and nails","step7: Apply finishing touches to bird house","step8: build bird houses"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"ride a tractor","events":{"0":"climb up in the tractor","1":"find the key","2":"go out to the barn","3":"pull out of the barn","4":"turn on the tractor","5":"NONE","6":"ride a tractor"},"context":"NONE","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":2.0,"2":5.0,"3":1.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: climb up in the tractor; step1: find the key; step2: go out to the barn; step3: pull out of the barn; step4: turn on the tractor; step5: decided to ride a tractor; step6: ride a tractor","flatten_input_for_script_generation":"You want to ride a tractor. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step1; step0 -> step4; step1 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to ride a tractor; step1: go out to the barn; step2: climb up in the tractor; step3: find the key; step4: turn on the tractor; step5: pull out of the barn; step6: ride a tractor; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->4","2->0","2->1","3->6","4->3","5->2"],"reference_code":"class RideATractor:\n\n    title = \"ride a tractor\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a tractor\"\n\n    def step1(self):\n        return \"go out to the barn\"\n\n    def step2(self):\n        return \"climb up in the tractor\"\n\n    def step3(self):\n        return \"find the key\"\n\n    def step4(self):\n        return \"turn on the tractor\"\n\n    def step5(self):\n        return \"pull out of the barn\"\n\n    def step6(self):\n        return \"ride a tractor\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RideATractor:\n\n    title = \"ride a tractor\"\n    steps = 7\n\n","reference_graph":{"title":"ride a tractor","num_steps":7,"schema":["step0: decided to ride a tractor","step1: go out to the barn","step2: climb up in the tractor","step3: find the key","step4: turn on the tractor","step5: pull out of the barn","step6: ride a tractor"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a new playlist of songs","events":{"0":"get the laptop","1":"open the laptop up","2":"load up song player","3":"search for a lot of music","4":"load up windows","5":"NONE","6":"make a new playlist of songs"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":1.0,"2":5.0,"3":60.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: get the laptop; step1: open the laptop up; step2: load up song player; step3: search for a lot of music; step4: load up windows; step5: decided to make a new playlist of songs; step6: make a new playlist of songs","flatten_input_for_script_generation":"You want to make a new playlist of songs. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make a new playlist of songs; step1: get the laptop; step2: open the laptop up; step3: load up windows; step4: load up song player; step5: search for a lot of music; step6: make a new playlist of songs; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->6","4->2","5->0"],"reference_code":"class MakeANewPlaylistOfSongs:\n\n    title = \"make a new playlist of songs\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a new playlist of songs\"\n\n    def step1(self):\n        return \"get the laptop\"\n\n    def step2(self):\n        return \"open the laptop up\"\n\n    def step3(self):\n        return \"load up windows\"\n\n    def step4(self):\n        return \"load up song player\"\n\n    def step5(self):\n        return \"search for a lot of music\"\n\n    def step6(self):\n        return \"make a new playlist of songs\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeANewPlaylistOfSongs:\n\n    title = \"make a new playlist of songs\"\n    steps = 7\n\n","reference_graph":{"title":"make a new playlist of songs","num_steps":7,"schema":["step0: decided to make a new playlist of songs","step1: get the laptop","step2: open the laptop up","step3: load up windows","step4: load up song player","step5: search for a lot of music","step6: make a new playlist of songs"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn to kick","events":{"0":"Start car and drive to local kickboxing gym.","1":"Get into car.","2":"Park car and get out.","3":"Locate gym trainer.","4":"Take kicking lessons.","5":"Ask gym trainer about kicking classes.","6":"Walk through entrance of gym.","7":"NONE","8":"learn to kick"},"context":"NONE","minutes":180.0,"events_minutes":{"0":30.0,"1":5.0,"2":5.0,"3":1.0,"4":180.0,"5":5.0,"6":3.0},"flatten_input_for_edge_prediction":"step0: Start car and drive to local kickboxing gym.; step1: Get into car.; step2: Park car and get out.; step3: Locate gym trainer.; step4: Take kicking lessons.; step5: Ask gym trainer about kicking classes.; step6: Walk through entrance of gym.; step7: decided to learn to kick; step8: learn to kick","flatten_input_for_script_generation":"You want to learn to kick. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step6; step6 -> step3; step3 -> step5; step5 -> step4; step4 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to learn to kick; step1: Get into car.; step2: Start car and drive to local kickboxing gym.; step3: Park car and get out.; step4: Walk through entrance of gym.; step5: Locate gym trainer.; step6: Ask gym trainer about kicking classes.; step7: Take kicking lessons.; step8: learn to kick; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->0","2->6","3->5","4->8","5->4","6->3","7->1"],"reference_code":"class LearnToKick:\n\n    title = \"learn to kick\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to learn to kick\"\n\n    def step1(self):\n        return \"Get into car.\"\n\n    def step2(self):\n        return \"Start car and drive to local kickboxing gym.\"\n\n    def step3(self):\n        return \"Park car and get out.\"\n\n    def step4(self):\n        return \"Walk through entrance of gym.\"\n\n    def step5(self):\n        return \"Locate gym trainer.\"\n\n    def step6(self):\n        return \"Ask gym trainer about kicking classes.\"\n\n    def step7(self):\n        return \"Take kicking lessons.\"\n\n    def step8(self):\n        return \"learn to kick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LearnToKick:\n\n    title = \"learn to kick\"\n    steps = 9\n\n","reference_graph":{"title":"learn to kick","num_steps":9,"schema":["step0: decided to learn to kick","step1: Get into car.","step2: Start car and drive to local kickboxing gym.","step3: Park car and get out.","step4: Walk through entrance of gym.","step5: Locate gym trainer.","step6: Ask gym trainer about kicking classes.","step7: Take kicking lessons.","step8: learn to kick"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to college after high school","events":{"0":"get a bus ticket","1":"get on the bus","2":"receive acceptance letter","3":"pack some bags","4":"apply for colleges","5":"NONE","6":"go to college after high school"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":30.0,"1":10.0,"2":30.0,"3":45.0,"4":10080.0},"flatten_input_for_edge_prediction":"step0: get a bus ticket; step1: get on the bus; step2: receive acceptance letter; step3: pack some bags; step4: apply for colleges; step5: decided to go to college after high school; step6: go to college after high school","flatten_input_for_script_generation":"You want to go to college after high school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step2 -> step0; step3 -> step6; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to college after high school; step1: apply for colleges; step2: receive acceptance letter; step3: pack some bags; step4: get a bus ticket; step5: go to college after high school; step6: get on the bus; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5","gold_edges_for_prediction":["0->1","1->6","2->3","2->0","3->6","4->2","5->4"],"reference_code":"class GoToCollegeAfterHighSchool:\n\n    title = \"go to college after high school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to college after high school\"\n\n    def step1(self):\n        return \"apply for colleges\"\n\n    def step2(self):\n        return \"receive acceptance letter\"\n\n    def step3(self):\n        return \"pack some bags\"\n\n    def step4(self):\n        return \"get a bus ticket\"\n\n    def step5(self):\n        return \"go to college after high school\"\n\n    def step6(self):\n        return \"get on the bus\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class GoToCollegeAfterHighSchool:\n\n    title = \"go to college after high school\"\n    steps = 7\n\n","reference_graph":{"title":"go to college after high school","num_steps":7,"schema":["step0: decided to go to college after high school","step1: apply for colleges","step2: receive acceptance letter","step3: pack some bags","step4: get a bus ticket","step5: go to college after high school","step6: get on the bus"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5"]}}
{"scenario":"find a hobby","events":{"0":"Gather the items necessary for the activity","1":"Repeat the activity whenver the time is right","2":"Think about the ways to complete the activity","3":"Complete the activity","4":"Pick the most appealing activity","5":"Look for the interesting activities","6":"NONE","7":"find a hobby"},"context":"NONE","minutes":50.0,"events_minutes":{"0":10.0,"1":10.0,"2":5.0,"3":10.0,"4":5.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: Gather the items necessary for the activity; step1: Repeat the activity whenver the time is right; step2: Think about the ways to complete the activity; step3: Complete the activity; step4: Pick the most appealing activity; step5: Look for the interesting activities; step6: decided to find a hobby; step7: find a hobby","flatten_input_for_script_generation":"You want to find a hobby. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to find a hobby; step1: Look for the interesting activities; step2: Pick the most appealing activity; step3: Think about the ways to complete the activity; step4: Gather the items necessary for the activity; step5: Complete the activity; step6: Repeat the activity whenver the time is right; step7: find a hobby; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->0","3->1","4->2","5->4","6->5"],"reference_code":"class FindAHobby:\n\n    title = \"find a hobby\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to find a hobby\"\n\n    def step1(self):\n        return \"Look for the interesting activities\"\n\n    def step2(self):\n        return \"Pick the most appealing activity\"\n\n    def step3(self):\n        return \"Think about the ways to complete the activity\"\n\n    def step4(self):\n        return \"Gather the items necessary for the activity\"\n\n    def step5(self):\n        return \"Complete the activity\"\n\n    def step6(self):\n        return \"Repeat the activity whenver the time is right\"\n\n    def step7(self):\n        return \"find a hobby\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class FindAHobby:\n\n    title = \"find a hobby\"\n    steps = 8\n\n","reference_graph":{"title":"find a hobby","num_steps":8,"schema":["step0: decided to find a hobby","step1: Look for the interesting activities","step2: Pick the most appealing activity","step3: Think about the ways to complete the activity","step4: Gather the items necessary for the activity","step5: Complete the activity","step6: Repeat the activity whenver the time is right","step7: find a hobby"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"buy a moped","events":{"0":"drive to the moped store","1":"choose a place that sells mopeds","2":"ask questions about mopeds","3":"look for places that sells mopeds","4":"look at the different mopeds","5":"choose a particular moped","6":"NONE","7":"buy a moped"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":5.0,"2":15.0,"3":15.0,"4":15.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: drive to the moped store; step1: choose a place that sells mopeds; step2: ask questions about mopeds; step3: look for places that sells mopeds; step4: look at the different mopeds; step5: choose a particular moped; step6: decided to buy a moped; step7: buy a moped","flatten_input_for_script_generation":"You want to buy a moped. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step5; step5 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to buy a moped; step1: look for places that sells mopeds; step2: choose a place that sells mopeds; step3: drive to the moped store; step4: look at the different mopeds; step5: ask questions about mopeds; step6: choose a particular moped; step7: buy a moped; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->0","2->5","3->1","4->2","5->7","6->3"],"reference_code":"class BuyAMoped:\n\n    title = \"buy a moped\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy a moped\"\n\n    def step1(self):\n        return \"look for places that sells mopeds\"\n\n    def step2(self):\n        return \"choose a place that sells mopeds\"\n\n    def step3(self):\n        return \"drive to the moped store\"\n\n    def step4(self):\n        return \"look at the different mopeds\"\n\n    def step5(self):\n        return \"ask questions about mopeds\"\n\n    def step6(self):\n        return \"choose a particular moped\"\n\n    def step7(self):\n        return \"buy a moped\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyAMoped:\n\n    title = \"buy a moped\"\n    steps = 8\n\n","reference_graph":{"title":"buy a moped","num_steps":8,"schema":["step0: decided to buy a moped","step1: look for places that sells mopeds","step2: choose a place that sells mopeds","step3: drive to the moped store","step4: look at the different mopeds","step5: ask questions about mopeds","step6: choose a particular moped","step7: buy a moped"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"throw a huge birthday party","events":{"0":"Rent a venue to hold a massive crowd","1":"Send out hundreds of birthday invites","2":"Start the festivities with a champagne pop","3":"Decorate the venue","4":"Order one hundred pizzas to venue","5":"Order hundreds of drinks to venue","6":"Let the attendees into the party","7":"NONE","8":"throw a huge birthday party"},"context":"NONE","minutes":20160.0,"events_minutes":{"0":1440.0,"1":1440.0,"2":5.0,"3":2880.0,"4":120.0,"5":120.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: Rent a venue to hold a massive crowd; step1: Send out hundreds of birthday invites; step2: Start the festivities with a champagne pop; step3: Decorate the venue; step4: Order one hundred pizzas to venue; step5: Order hundreds of drinks to venue; step6: Let the attendees into the party; step7: decided to throw a huge birthday party; step8: throw a huge birthday party","flatten_input_for_script_generation":"You want to throw a huge birthday party. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step6; step0 -> step4; step0 -> step5; step0 -> step3; step4 -> step6; step5 -> step6; step3 -> step6; step2 -> step8; step6 -> step2; step7 -> step1; step7 -> step0","flatten_output_for_script_generation":"step0: decided to throw a huge birthday party; step1: Rent a venue to hold a massive crowd; step2: Send out hundreds of birthday invites; step3: Let the attendees into the party; step4: Start the festivities with a champagne pop; step5: Order one hundred pizzas to venue; step6: Order hundreds of drinks to venue; step7: Decorate the venue; step8: throw a huge birthday party; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step1 -> step6; step1 -> step7; step5 -> step3; step6 -> step3; step7 -> step3; step4 -> step8","gold_edges_for_prediction":["0->4","0->5","0->3","1->6","2->8","3->6","4->6","5->6","6->2","7->1","7->0"],"reference_code":"class ThrowAHugeBirthdayParty:\n\n    title = \"throw a huge birthday party\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to throw a huge birthday party\"\n\n    def step1(self):\n        return \"Rent a venue to hold a massive crowd\"\n\n    def step2(self):\n        return \"Send out hundreds of birthday invites\"\n\n    def step3(self):\n        return \"Let the attendees into the party\"\n\n    def step4(self):\n        return \"Start the festivities with a champagne pop\"\n\n    def step5(self):\n        return \"Order one hundred pizzas to venue\"\n\n    def step6(self):\n        return \"Order hundreds of drinks to venue\"\n\n    def step7(self):\n        return \"Decorate the venue\"\n\n    def step8(self):\n        return \"throw a huge birthday party\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step1 -> step6\",\n            \"step1 -> step7\",\n            \"step5 -> step3\",\n            \"step6 -> step3\",\n            \"step7 -> step3\",\n            \"step4 -> step8\",\n        ]\n","input_prompt_code":"class ThrowAHugeBirthdayParty:\n\n    title = \"throw a huge birthday party\"\n    steps = 9\n\n","reference_graph":{"title":"throw a huge birthday party","num_steps":9,"schema":["step0: decided to throw a huge birthday party","step1: Rent a venue to hold a massive crowd","step2: Send out hundreds of birthday invites","step3: Let the attendees into the party","step4: Start the festivities with a champagne pop","step5: Order one hundred pizzas to venue","step6: Order hundreds of drinks to venue","step7: Decorate the venue","step8: throw a huge birthday party"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step1 -> step6","step1 -> step7","step5 -> step3","step6 -> step3","step7 -> step3","step4 -> step8"]}}
{"scenario":"save money on water","events":{"0":"Follow the advice from the company","1":"Install the toilets","2":"Monitor water usage","3":"Order some low flow toilets","4":"Call the water company for tips","5":"NONE","6":"save money on water"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":2880.0,"1":120.0,"2":43200.0,"3":10.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Follow the advice from the company; step1: Install the toilets; step2: Monitor water usage; step3: Order some low flow toilets; step4: Call the water company for tips; step5: decided to save money on water; step6: save money on water","flatten_input_for_script_generation":"You want to save money on water. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step3 -> step1; step1 -> step2; step0 -> step2; step2 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: decided to save money on water; step1: Order some low flow toilets; step2: Call the water company for tips; step3: Follow the advice from the company; step4: Monitor water usage; step5: Install the toilets; step6: save money on water; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step4; step4 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->1","4->0","5->4","5->3"],"reference_code":"class SaveMoneyOnWater:\n\n    title = \"save money on water\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to save money on water\"\n\n    def step1(self):\n        return \"Order some low flow toilets\"\n\n    def step2(self):\n        return \"Call the water company for tips\"\n\n    def step3(self):\n        return \"Follow the advice from the company\"\n\n    def step4(self):\n        return \"Monitor water usage\"\n\n    def step5(self):\n        return \"Install the toilets\"\n\n    def step6(self):\n        return \"save money on water\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step4\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class SaveMoneyOnWater:\n\n    title = \"save money on water\"\n    steps = 7\n\n","reference_graph":{"title":"save money on water","num_steps":7,"schema":["step0: decided to save money on water","step1: Order some low flow toilets","step2: Call the water company for tips","step3: Follow the advice from the company","step4: Monitor water usage","step5: Install the toilets","step6: save money on water"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step4","step4 -> step6"]}}
{"scenario":"learn a new recipe","events":{"0":"search available recipes","1":"print out the recipe","2":"decide on best recipe","3":"decide to learn a new recipe","4":"navigate to cooking site","5":"turn on the computer","6":"sit down at the desk","7":"NONE","8":"learn a new recipe"},"context":"NONE","minutes":60.0,"events_minutes":{"0":30.0,"1":2.0,"2":5.0,"3":0.5,"4":2.0,"5":1.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: search available recipes; step1: print out the recipe; step2: decide on best recipe; step3: decide to learn a new recipe; step4: navigate to cooking site; step5: turn on the computer; step6: sit down at the desk; step7: decided to learn a new recipe; step8: learn a new recipe","flatten_input_for_script_generation":"You want to learn a new recipe. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step6; step6 -> step5; step5 -> step4; step4 -> step0; step4 -> step2; step0 -> step1; step2 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to learn a new recipe; step1: decide to learn a new recipe; step2: sit down at the desk; step3: turn on the computer; step4: navigate to cooking site; step5: search available recipes; step6: decide on best recipe; step7: print out the recipe; step8: learn a new recipe; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->8","2->1","3->6","4->0","4->2","5->4","6->5","7->3"],"reference_code":"class LearnANewRecipe:\n\n    title = \"learn a new recipe\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to learn a new recipe\"\n\n    def step1(self):\n        return \"decide to learn a new recipe\"\n\n    def step2(self):\n        return \"sit down at the desk\"\n\n    def step3(self):\n        return \"turn on the computer\"\n\n    def step4(self):\n        return \"navigate to cooking site\"\n\n    def step5(self):\n        return \"search available recipes\"\n\n    def step6(self):\n        return \"decide on best recipe\"\n\n    def step7(self):\n        return \"print out the recipe\"\n\n    def step8(self):\n        return \"learn a new recipe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LearnANewRecipe:\n\n    title = \"learn a new recipe\"\n    steps = 9\n\n","reference_graph":{"title":"learn a new recipe","num_steps":9,"schema":["step0: decided to learn a new recipe","step1: decide to learn a new recipe","step2: sit down at the desk","step3: turn on the computer","step4: navigate to cooking site","step5: search available recipes","step6: decide on best recipe","step7: print out the recipe","step8: learn a new recipe"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"join the soccer team","events":{"0":"Submit and confirm join request","1":"Search teams that need players","2":"Pay the recreation fee","3":"Sign the activity waivers","4":"Click to join a team","5":"Log onto the county website","6":"NONE","7":"join the soccer team"},"context":"NONE","minutes":60.0,"events_minutes":{"0":2.0,"1":15.0,"2":4.0,"3":5.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Submit and confirm join request; step1: Search teams that need players; step2: Pay the recreation fee; step3: Sign the activity waivers; step4: Click to join a team; step5: Log onto the county website; step6: decided to join the soccer team; step7: join the soccer team","flatten_input_for_script_generation":"You want to join the soccer team. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step5 -> step3; step1 -> step4; step4 -> step2; step3 -> step4; step2 -> step0; step0 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to join the soccer team; step1: Log onto the county website; step2: Search teams that need players; step3: Sign the activity waivers; step4: Click to join a team; step5: Pay the recreation fee; step6: Submit and confirm join request; step7: join the soccer team; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->0","3->4","4->2","5->1","5->3","6->5"],"reference_code":"class JoinTheSoccerTeam:\n\n    title = \"join the soccer team\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to join the soccer team\"\n\n    def step1(self):\n        return \"Log onto the county website\"\n\n    def step2(self):\n        return \"Search teams that need players\"\n\n    def step3(self):\n        return \"Sign the activity waivers\"\n\n    def step4(self):\n        return \"Click to join a team\"\n\n    def step5(self):\n        return \"Pay the recreation fee\"\n\n    def step6(self):\n        return \"Submit and confirm join request\"\n\n    def step7(self):\n        return \"join the soccer team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class JoinTheSoccerTeam:\n\n    title = \"join the soccer team\"\n    steps = 8\n\n","reference_graph":{"title":"join the soccer team","num_steps":8,"schema":["step0: decided to join the soccer team","step1: Log onto the county website","step2: Search teams that need players","step3: Sign the activity waivers","step4: Click to join a team","step5: Pay the recreation fee","step6: Submit and confirm join request","step7: join the soccer team"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"ride the bus","events":{"0":"Wait for the bus to approach.","1":"Enter bus through steps.","2":"Put on shoes.","3":"Pay for bus ticket.","4":"Find a seat on the bus.","5":"Walk outside towards bus stop.","6":"NONE","7":"ride the bus"},"context":"NONE","minutes":19.0,"events_minutes":{"0":5.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: Wait for the bus to approach.; step1: Enter bus through steps.; step2: Put on shoes.; step3: Pay for bus ticket.; step4: Find a seat on the bus.; step5: Walk outside towards bus stop.; step6: decided to ride the bus; step7: ride the bus","flatten_input_for_script_generation":"You want to ride the bus. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to ride the bus; step1: Put on shoes.; step2: Walk outside towards bus stop.; step3: Wait for the bus to approach.; step4: Enter bus through steps.; step5: Pay for bus ticket.; step6: Find a seat on the bus.; step7: ride the bus; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->5","3->4","4->7","5->0","6->2"],"reference_code":"class RideTheBus:\n\n    title = \"ride the bus\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to ride the bus\"\n\n    def step1(self):\n        return \"Put on shoes.\"\n\n    def step2(self):\n        return \"Walk outside towards bus stop.\"\n\n    def step3(self):\n        return \"Wait for the bus to approach.\"\n\n    def step4(self):\n        return \"Enter bus through steps.\"\n\n    def step5(self):\n        return \"Pay for bus ticket.\"\n\n    def step6(self):\n        return \"Find a seat on the bus.\"\n\n    def step7(self):\n        return \"ride the bus\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class RideTheBus:\n\n    title = \"ride the bus\"\n    steps = 8\n\n","reference_graph":{"title":"ride the bus","num_steps":8,"schema":["step0: decided to ride the bus","step1: Put on shoes.","step2: Walk outside towards bus stop.","step3: Wait for the bus to approach.","step4: Enter bus through steps.","step5: Pay for bus ticket.","step6: Find a seat on the bus.","step7: ride the bus"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"buy some sunscreen","events":{"0":"go inside the store","1":"go to the cashier","2":"get in the car","3":"browse the selection","4":"drive to the store","5":"NONE","6":"buy some sunscreen"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":10.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: go inside the store; step1: go to the cashier; step2: get in the car; step3: browse the selection; step4: drive to the store; step5: decided to buy some sunscreen; step6: buy some sunscreen","flatten_input_for_script_generation":"You want to buy some sunscreen. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to buy some sunscreen; step1: get in the car; step2: drive to the store; step3: go inside the store; step4: browse the selection; step5: go to the cashier; step6: buy some sunscreen; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class BuySomeSunscreen:\n\n    title = \"buy some sunscreen\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy some sunscreen\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"go inside the store\"\n\n    def step4(self):\n        return \"browse the selection\"\n\n    def step5(self):\n        return \"go to the cashier\"\n\n    def step6(self):\n        return \"buy some sunscreen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuySomeSunscreen:\n\n    title = \"buy some sunscreen\"\n    steps = 7\n\n","reference_graph":{"title":"buy some sunscreen","num_steps":7,"schema":["step0: decided to buy some sunscreen","step1: get in the car","step2: drive to the store","step3: go inside the store","step4: browse the selection","step5: go to the cashier","step6: buy some sunscreen"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"earn a lot of money this summer","events":{"0":"get the job","1":"work every day","2":"start at work","3":"apply for a job","4":"go to interview","5":"NONE","6":"earn a lot of money this summer"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":30.0,"1":86400.0,"2":43200.0,"3":30.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: get the job; step1: work every day; step2: start at work; step3: apply for a job; step4: go to interview; step5: decided to earn a lot of money this summer; step6: earn a lot of money this summer","flatten_input_for_script_generation":"You want to earn a lot of money this summer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to earn a lot of money this summer; step1: apply for a job; step2: go to interview; step3: get the job; step4: start at work; step5: work every day; step6: earn a lot of money this summer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->4","4->0","5->3"],"reference_code":"class EarnALotOfMoneyThisSummer:\n\n    title = \"earn a lot of money this summer\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to earn a lot of money this summer\"\n\n    def step1(self):\n        return \"apply for a job\"\n\n    def step2(self):\n        return \"go to interview\"\n\n    def step3(self):\n        return \"get the job\"\n\n    def step4(self):\n        return \"start at work\"\n\n    def step5(self):\n        return \"work every day\"\n\n    def step6(self):\n        return \"earn a lot of money this summer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EarnALotOfMoneyThisSummer:\n\n    title = \"earn a lot of money this summer\"\n    steps = 7\n\n","reference_graph":{"title":"earn a lot of money this summer","num_steps":7,"schema":["step0: decided to earn a lot of money this summer","step1: apply for a job","step2: go to interview","step3: get the job","step4: start at work","step5: work every day","step6: earn a lot of money this summer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn to play violin","events":{"0":"go to lessons everyday for practice","1":"enter instructor building","2":"meet with instructor","3":"drive to lessons","4":"look up violin lessons","5":"NONE","6":"learn to play violin"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":43200.0,"1":5.0,"2":5.0,"3":25.0,"4":25.0},"flatten_input_for_edge_prediction":"step0: go to lessons everyday for practice; step1: enter instructor building; step2: meet with instructor; step3: drive to lessons; step4: look up violin lessons; step5: decided to learn to play violin; step6: learn to play violin","flatten_input_for_script_generation":"You want to learn to play violin. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to learn to play violin; step1: look up violin lessons; step2: drive to lessons; step3: enter instructor building; step4: meet with instructor; step5: go to lessons everyday for practice; step6: learn to play violin; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->1","4->3","5->4"],"reference_code":"class LearnToPlayViolin:\n\n    title = \"learn to play violin\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn to play violin\"\n\n    def step1(self):\n        return \"look up violin lessons\"\n\n    def step2(self):\n        return \"drive to lessons\"\n\n    def step3(self):\n        return \"enter instructor building\"\n\n    def step4(self):\n        return \"meet with instructor\"\n\n    def step5(self):\n        return \"go to lessons everyday for practice\"\n\n    def step6(self):\n        return \"learn to play violin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnToPlayViolin:\n\n    title = \"learn to play violin\"\n    steps = 7\n\n","reference_graph":{"title":"learn to play violin","num_steps":7,"schema":["step0: decided to learn to play violin","step1: look up violin lessons","step2: drive to lessons","step3: enter instructor building","step4: meet with instructor","step5: go to lessons everyday for practice","step6: learn to play violin"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn to play a new game","events":{"0":"watch tutorial videos","1":"go online and search games","2":"keep looking at reviews","3":"create a top 3 list","4":"pick a game to play","5":"NONE","6":"learn to play a new game"},"context":"NONE","minutes":300.0,"events_minutes":{"0":120.0,"1":30.0,"2":120.0,"3":60.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: watch tutorial videos; step1: go online and search games; step2: keep looking at reviews; step3: create a top 3 list; step4: pick a game to play; step5: decided to learn to play a new game; step6: learn to play a new game","flatten_input_for_script_generation":"You want to learn to play a new game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to learn to play a new game; step1: go online and search games; step2: create a top 3 list; step3: keep looking at reviews; step4: pick a game to play; step5: watch tutorial videos; step6: learn to play a new game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class LearnToPlayANewGame:\n\n    title = \"learn to play a new game\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn to play a new game\"\n\n    def step1(self):\n        return \"go online and search games\"\n\n    def step2(self):\n        return \"create a top 3 list\"\n\n    def step3(self):\n        return \"keep looking at reviews\"\n\n    def step4(self):\n        return \"pick a game to play\"\n\n    def step5(self):\n        return \"watch tutorial videos\"\n\n    def step6(self):\n        return \"learn to play a new game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnToPlayANewGame:\n\n    title = \"learn to play a new game\"\n    steps = 7\n\n","reference_graph":{"title":"learn to play a new game","num_steps":7,"schema":["step0: decided to learn to play a new game","step1: go online and search games","step2: create a top 3 list","step3: keep looking at reviews","step4: pick a game to play","step5: watch tutorial videos","step6: learn to play a new game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"nap in the car on a road trip","events":{"0":"load bags into car","1":"drive for a couple hours","2":"have someone else drive","3":"get in the car","4":"pack some bags","5":"NONE","6":"nap in the car on a road trip"},"context":"NONE","minutes":240.0,"events_minutes":{"0":45.0,"1":180.0,"2":1.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: load bags into car; step1: drive for a couple hours; step2: have someone else drive; step3: get in the car; step4: pack some bags; step5: decided to nap in the car on a road trip; step6: nap in the car on a road trip","flatten_input_for_script_generation":"You want to nap in the car on a road trip. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to nap in the car on a road trip; step1: pack some bags; step2: load bags into car; step3: get in the car; step4: have someone else drive; step5: drive for a couple hours; step6: nap in the car on a road trip; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class NapInTheCarOnARoadTrip:\n\n    title = \"nap in the car on a road trip\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to nap in the car on a road trip\"\n\n    def step1(self):\n        return \"pack some bags\"\n\n    def step2(self):\n        return \"load bags into car\"\n\n    def step3(self):\n        return \"get in the car\"\n\n    def step4(self):\n        return \"have someone else drive\"\n\n    def step5(self):\n        return \"drive for a couple hours\"\n\n    def step6(self):\n        return \"nap in the car on a road trip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class NapInTheCarOnARoadTrip:\n\n    title = \"nap in the car on a road trip\"\n    steps = 7\n\n","reference_graph":{"title":"nap in the car on a road trip","num_steps":7,"schema":["step0: decided to nap in the car on a road trip","step1: pack some bags","step2: load bags into car","step3: get in the car","step4: have someone else drive","step5: drive for a couple hours","step6: nap in the car on a road trip"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to new york","events":{"0":"find a parking spot","1":"drive to the airport","2":"Turn on the computer","3":"pack a suitcase","4":"check baggage at the gate","5":"purchase a plane ticket","6":"go thru security","7":"NONE","8":"go to new york"},"context":"NONE","minutes":240.0,"events_minutes":{"0":20.0,"1":60.0,"2":1.0,"3":30.0,"4":10.0,"5":10.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: find a parking spot; step1: drive to the airport; step2: Turn on the computer; step3: pack a suitcase; step4: check baggage at the gate; step5: purchase a plane ticket; step6: go thru security; step7: decided to go to new york; step8: go to new york","flatten_input_for_script_generation":"You want to go to new york. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step4 -> step8; step6 -> step4; step7 -> step2","flatten_output_for_script_generation":"step0: decided to go to new york; step1: Turn on the computer; step2: purchase a plane ticket; step3: pack a suitcase; step4: drive to the airport; step5: find a parking spot; step6: go thru security; step7: check baggage at the gate; step8: go to new york; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->0","2->5","3->1","4->8","5->3","6->4","7->2"],"reference_code":"class GoToNewYork:\n\n    title = \"go to new york\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to new york\"\n\n    def step1(self):\n        return \"Turn on the computer\"\n\n    def step2(self):\n        return \"purchase a plane ticket\"\n\n    def step3(self):\n        return \"pack a suitcase\"\n\n    def step4(self):\n        return \"drive to the airport\"\n\n    def step5(self):\n        return \"find a parking spot\"\n\n    def step6(self):\n        return \"go thru security\"\n\n    def step7(self):\n        return \"check baggage at the gate\"\n\n    def step8(self):\n        return \"go to new york\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToNewYork:\n\n    title = \"go to new york\"\n    steps = 9\n\n","reference_graph":{"title":"go to new york","num_steps":9,"schema":["step0: decided to go to new york","step1: Turn on the computer","step2: purchase a plane ticket","step3: pack a suitcase","step4: drive to the airport","step5: find a parking spot","step6: go thru security","step7: check baggage at the gate","step8: go to new york"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"write a play for school","events":{"0":"create a top 3 list","1":"draw off that play and make notes","2":"narrow the list down to 2","3":"pick the favorite play","4":"look up plays online","5":"NONE","6":"write a play for school"},"context":"NONE","minutes":180.0,"events_minutes":{"0":60.0,"1":30.0,"2":60.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: create a top 3 list; step1: draw off that play and make notes; step2: narrow the list down to 2; step3: pick the favorite play; step4: look up plays online; step5: decided to write a play for school; step6: write a play for school","flatten_input_for_script_generation":"You want to write a play for school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to write a play for school; step1: look up plays online; step2: create a top 3 list; step3: narrow the list down to 2; step4: pick the favorite play; step5: draw off that play and make notes; step6: write a play for school; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->1","4->0","5->4"],"reference_code":"class WriteAPlayForSchool:\n\n    title = \"write a play for school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to write a play for school\"\n\n    def step1(self):\n        return \"look up plays online\"\n\n    def step2(self):\n        return \"create a top 3 list\"\n\n    def step3(self):\n        return \"narrow the list down to 2\"\n\n    def step4(self):\n        return \"pick the favorite play\"\n\n    def step5(self):\n        return \"draw off that play and make notes\"\n\n    def step6(self):\n        return \"write a play for school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WriteAPlayForSchool:\n\n    title = \"write a play for school\"\n    steps = 7\n\n","reference_graph":{"title":"write a play for school","num_steps":7,"schema":["step0: decided to write a play for school","step1: look up plays online","step2: create a top 3 list","step3: narrow the list down to 2","step4: pick the favorite play","step5: draw off that play and make notes","step6: write a play for school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"print some papers for school","events":{"0":"turn on the computer","1":"pull up files","2":"put paper in printer","3":"push print button","4":"turn on printer","5":"NONE","6":"print some papers for school"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":0.0166666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: turn on the computer; step1: pull up files; step2: put paper in printer; step3: push print button; step4: turn on printer; step5: decided to print some papers for school; step6: print some papers for school","flatten_input_for_script_generation":"You want to print some papers for school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step4; step1 -> step2; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to print some papers for school; step1: turn on the computer; step2: pull up files; step3: turn on printer; step4: put paper in printer; step5: push print button; step6: print some papers for school; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->4","1->2","2->3","3->6","4->2","5->0"],"reference_code":"class PrintSomePapersForSchool:\n\n    title = \"print some papers for school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to print some papers for school\"\n\n    def step1(self):\n        return \"turn on the computer\"\n\n    def step2(self):\n        return \"pull up files\"\n\n    def step3(self):\n        return \"turn on printer\"\n\n    def step4(self):\n        return \"put paper in printer\"\n\n    def step5(self):\n        return \"push print button\"\n\n    def step6(self):\n        return \"print some papers for school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PrintSomePapersForSchool:\n\n    title = \"print some papers for school\"\n    steps = 7\n\n","reference_graph":{"title":"print some papers for school","num_steps":7,"schema":["step0: decided to print some papers for school","step1: turn on the computer","step2: pull up files","step3: turn on printer","step4: put paper in printer","step5: push print button","step6: print some papers for school"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"build a raft","events":{"0":"begin attaching pieces of wood","1":"test construction for buoyancy","2":"lay out pieces in work order","3":"acquire construction tools","4":"acquire wooden boards","5":"NONE","6":"build a raft"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":60.0,"1":60.0,"2":30.0,"3":120.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: begin attaching pieces of wood; step1: test construction for buoyancy; step2: lay out pieces in work order; step3: acquire construction tools; step4: acquire wooden boards; step5: decided to build a raft; step6: build a raft","flatten_input_for_script_generation":"You want to build a raft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step3 -> step0; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step3; step5 -> step4","flatten_output_for_script_generation":"step0: decided to build a raft; step1: acquire wooden boards; step2: lay out pieces in work order; step3: begin attaching pieces of wood; step4: acquire construction tools; step5: test construction for buoyancy; step6: build a raft; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step3; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->0","4->2","5->3","5->4"],"reference_code":"class BuildARaft:\n\n    title = \"build a raft\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to build a raft\"\n\n    def step1(self):\n        return \"acquire wooden boards\"\n\n    def step2(self):\n        return \"lay out pieces in work order\"\n\n    def step3(self):\n        return \"begin attaching pieces of wood\"\n\n    def step4(self):\n        return \"acquire construction tools\"\n\n    def step5(self):\n        return \"test construction for buoyancy\"\n\n    def step6(self):\n        return \"build a raft\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuildARaft:\n\n    title = \"build a raft\"\n    steps = 7\n\n","reference_graph":{"title":"build a raft","num_steps":7,"schema":["step0: decided to build a raft","step1: acquire wooden boards","step2: lay out pieces in work order","step3: begin attaching pieces of wood","step4: acquire construction tools","step5: test construction for buoyancy","step6: build a raft"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step3","step3 -> step5","step5 -> step6"]}}
{"scenario":"move to a new apartment","events":{"0":"Submit application to landlord","1":"Pack old apartment","2":"Discontinue services\/ active new services","3":"Sign new lease","4":"Move into new apartment","5":"Search for new apartment","6":"Coordinate move with help and transportation","7":"NONE","8":"move to a new apartment"},"context":"NONE","minutes":86400.0,"events_minutes":{"0":14400.0,"1":17280.0,"2":2880.0,"3":1440.0,"4":2880.0,"5":43200.0,"6":2880.0},"flatten_input_for_edge_prediction":"step0: Submit application to landlord; step1: Pack old apartment; step2: Discontinue services\/ active new services; step3: Sign new lease; step4: Move into new apartment; step5: Search for new apartment; step6: Coordinate move with help and transportation; step7: decided to move to a new apartment; step8: move to a new apartment","flatten_input_for_script_generation":"You want to move to a new apartment. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step6 -> step4; step4 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to move to a new apartment; step1: Search for new apartment; step2: Submit application to landlord; step3: Sign new lease; step4: Pack old apartment; step5: Discontinue services\/ active new services; step6: Coordinate move with help and transportation; step7: Move into new apartment; step8: move to a new apartment; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->2","2->6","3->1","4->8","5->0","6->4","7->5"],"reference_code":"class MoveToANewApartment:\n\n    title = \"move to a new apartment\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to move to a new apartment\"\n\n    def step1(self):\n        return \"Search for new apartment\"\n\n    def step2(self):\n        return \"Submit application to landlord\"\n\n    def step3(self):\n        return \"Sign new lease\"\n\n    def step4(self):\n        return \"Pack old apartment\"\n\n    def step5(self):\n        return \"Discontinue services\/ active new services\"\n\n    def step6(self):\n        return \"Coordinate move with help and transportation\"\n\n    def step7(self):\n        return \"Move into new apartment\"\n\n    def step8(self):\n        return \"move to a new apartment\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MoveToANewApartment:\n\n    title = \"move to a new apartment\"\n    steps = 9\n\n","reference_graph":{"title":"move to a new apartment","num_steps":9,"schema":["step0: decided to move to a new apartment","step1: Search for new apartment","step2: Submit application to landlord","step3: Sign new lease","step4: Pack old apartment","step5: Discontinue services\/ active new services","step6: Coordinate move with help and transportation","step7: Move into new apartment","step8: move to a new apartment"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"enter the county fair","events":{"0":"get dressed to go out","1":"get in the car","2":"drive to the fair","3":"walk out the front door","4":"walk to the car","5":"park the car","6":"NONE","7":"enter the county fair"},"context":"NONE","minutes":30.0,"events_minutes":{"0":10.0,"1":0.5,"2":20.0,"3":1.0,"4":30.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: get dressed to go out; step1: get in the car; step2: drive to the fair; step3: walk out the front door; step4: walk to the car; step5: park the car; step6: decided to enter the county fair; step7: enter the county fair","flatten_input_for_script_generation":"You want to enter the county fair. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to enter the county fair; step1: get dressed to go out; step2: walk out the front door; step3: walk to the car; step4: get in the car; step5: drive to the fair; step6: park the car; step7: enter the county fair; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->2","2->5","3->4","4->1","5->7","6->0"],"reference_code":"class EnterTheCountyFair:\n\n    title = \"enter the county fair\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to enter the county fair\"\n\n    def step1(self):\n        return \"get dressed to go out\"\n\n    def step2(self):\n        return \"walk out the front door\"\n\n    def step3(self):\n        return \"walk to the car\"\n\n    def step4(self):\n        return \"get in the car\"\n\n    def step5(self):\n        return \"drive to the fair\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def step7(self):\n        return \"enter the county fair\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EnterTheCountyFair:\n\n    title = \"enter the county fair\"\n    steps = 8\n\n","reference_graph":{"title":"enter the county fair","num_steps":8,"schema":["step0: decided to enter the county fair","step1: get dressed to go out","step2: walk out the front door","step3: walk to the car","step4: get in the car","step5: drive to the fair","step6: park the car","step7: enter the county fair"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"have a memorable vacation","events":{"0":"Plan within a budget.","1":"Research the trip online.","2":"Meet friends at airport.","3":"Split the cost with others.","4":"Invite others to come.","5":"NONE","6":"have a memorable vacation"},"context":"NONE","minutes":720.0,"events_minutes":{"0":240.0,"1":240.0,"2":60.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Plan within a budget.; step1: Research the trip online.; step2: Meet friends at airport.; step3: Split the cost with others.; step4: Invite others to come.; step5: decided to have a memorable vacation; step6: have a memorable vacation","flatten_input_for_script_generation":"You want to have a memorable vacation. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step0 -> step3; step4 -> step2; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to have a memorable vacation; step1: Research the trip online.; step2: Plan within a budget.; step3: Invite others to come.; step4: Split the cost with others.; step5: Meet friends at airport.; step6: have a memorable vacation; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","0->3","1->0","2->6","3->2","4->2","5->1"],"reference_code":"class HaveAMemorableVacation:\n\n    title = \"have a memorable vacation\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have a memorable vacation\"\n\n    def step1(self):\n        return \"Research the trip online.\"\n\n    def step2(self):\n        return \"Plan within a budget.\"\n\n    def step3(self):\n        return \"Invite others to come.\"\n\n    def step4(self):\n        return \"Split the cost with others.\"\n\n    def step5(self):\n        return \"Meet friends at airport.\"\n\n    def step6(self):\n        return \"have a memorable vacation\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveAMemorableVacation:\n\n    title = \"have a memorable vacation\"\n    steps = 7\n\n","reference_graph":{"title":"have a memorable vacation","num_steps":7,"schema":["step0: decided to have a memorable vacation","step1: Research the trip online.","step2: Plan within a budget.","step3: Invite others to come.","step4: Split the cost with others.","step5: Meet friends at airport.","step6: have a memorable vacation"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"try some samples","events":{"0":"drive to costco","1":"get a shopping cart","2":"get in the car","3":"park the car","4":"go inside the store","5":"NONE","6":"try some samples"},"context":"NONE","minutes":45.0,"events_minutes":{"0":30.0,"1":2.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: drive to costco; step1: get a shopping cart; step2: get in the car; step3: park the car; step4: go inside the store; step5: decided to try some samples; step6: try some samples","flatten_input_for_script_generation":"You want to try some samples. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to try some samples; step1: get in the car; step2: drive to costco; step3: park the car; step4: go inside the store; step5: get a shopping cart; step6: try some samples; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class TrySomeSamples:\n\n    title = \"try some samples\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to try some samples\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to costco\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the store\"\n\n    def step5(self):\n        return \"get a shopping cart\"\n\n    def step6(self):\n        return \"try some samples\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TrySomeSamples:\n\n    title = \"try some samples\"\n    steps = 7\n\n","reference_graph":{"title":"try some samples","num_steps":7,"schema":["step0: decided to try some samples","step1: get in the car","step2: drive to costco","step3: park the car","step4: go inside the store","step5: get a shopping cart","step6: try some samples"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"do a school prank","events":{"0":"go to the car","1":"drive to school","2":"go inside the school","3":"go to class","4":"get ready for school","5":"NONE","6":"do a school prank"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":30.0,"2":5.0,"3":10.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: go to the car; step1: drive to school; step2: go inside the school; step3: go to class; step4: get ready for school; step5: decided to do a school prank; step6: do a school prank","flatten_input_for_script_generation":"You want to do a school prank. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to do a school prank; step1: get ready for school; step2: go to the car; step3: drive to school; step4: go inside the school; step5: go to class; step6: do a school prank; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class DoASchoolPrank:\n\n    title = \"do a school prank\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to do a school prank\"\n\n    def step1(self):\n        return \"get ready for school\"\n\n    def step2(self):\n        return \"go to the car\"\n\n    def step3(self):\n        return \"drive to school\"\n\n    def step4(self):\n        return \"go inside the school\"\n\n    def step5(self):\n        return \"go to class\"\n\n    def step6(self):\n        return \"do a school prank\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DoASchoolPrank:\n\n    title = \"do a school prank\"\n    steps = 7\n\n","reference_graph":{"title":"do a school prank","num_steps":7,"schema":["step0: decided to do a school prank","step1: get ready for school","step2: go to the car","step3: drive to school","step4: go inside the school","step5: go to class","step6: do a school prank"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try a new brand of bottled water","events":{"0":"drive to a grocery store.","1":"open the bottle and drink.","2":"get in car.","3":"find a new brand of bottled water to try.","4":"pay for the bottle.","5":"NONE","6":"try a new brand of bottled water"},"context":"NONE","minutes":45.0,"events_minutes":{"0":25.0,"1":2.0,"2":1.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: drive to a grocery store.; step1: open the bottle and drink.; step2: get in car.; step3: find a new brand of bottled water to try.; step4: pay for the bottle.; step5: decided to try a new brand of bottled water; step6: try a new brand of bottled water","flatten_input_for_script_generation":"You want to try a new brand of bottled water. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step3 -> step2; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to try a new brand of bottled water; step1: find a new brand of bottled water to try.; step2: get in car.; step3: drive to a grocery store.; step4: pay for the bottle.; step5: open the bottle and drink.; step6: try a new brand of bottled water; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class TryANewBrandOfBottledWater:\n\n    title = \"try a new brand of bottled water\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to try a new brand of bottled water\"\n\n    def step1(self):\n        return \"find a new brand of bottled water to try.\"\n\n    def step2(self):\n        return \"get in car.\"\n\n    def step3(self):\n        return \"drive to a grocery store.\"\n\n    def step4(self):\n        return \"pay for the bottle.\"\n\n    def step5(self):\n        return \"open the bottle and drink.\"\n\n    def step6(self):\n        return \"try a new brand of bottled water\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TryANewBrandOfBottledWater:\n\n    title = \"try a new brand of bottled water\"\n    steps = 7\n\n","reference_graph":{"title":"try a new brand of bottled water","num_steps":7,"schema":["step0: decided to try a new brand of bottled water","step1: find a new brand of bottled water to try.","step2: get in car.","step3: drive to a grocery store.","step4: pay for the bottle.","step5: open the bottle and drink.","step6: try a new brand of bottled water"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6"]}}
{"scenario":"go into an old abandoned hospital one day","events":{"0":"drive to hospital","1":"enter building through door","2":"look up abandoned hospital","3":"park in front of building","4":"walk to hospital door","5":"NONE","6":"go into an old abandoned hospital one day"},"context":"NONE","minutes":45.0,"events_minutes":{"0":25.0,"1":3.0,"2":20.0,"3":4.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: drive to hospital; step1: enter building through door; step2: look up abandoned hospital; step3: park in front of building; step4: walk to hospital door; step5: decided to go into an old abandoned hospital one day; step6: go into an old abandoned hospital one day","flatten_input_for_script_generation":"You want to go into an old abandoned hospital one day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go into an old abandoned hospital one day; step1: look up abandoned hospital; step2: drive to hospital; step3: park in front of building; step4: walk to hospital door; step5: enter building through door; step6: go into an old abandoned hospital one day; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class GoIntoAnOldAbandonedHospitalOneDay:\n\n    title = \"go into an old abandoned hospital one day\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go into an old abandoned hospital one day\"\n\n    def step1(self):\n        return \"look up abandoned hospital\"\n\n    def step2(self):\n        return \"drive to hospital\"\n\n    def step3(self):\n        return \"park in front of building\"\n\n    def step4(self):\n        return \"walk to hospital door\"\n\n    def step5(self):\n        return \"enter building through door\"\n\n    def step6(self):\n        return \"go into an old abandoned hospital one day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoIntoAnOldAbandonedHospitalOneDay:\n\n    title = \"go into an old abandoned hospital one day\"\n    steps = 7\n\n","reference_graph":{"title":"go into an old abandoned hospital one day","num_steps":7,"schema":["step0: decided to go into an old abandoned hospital one day","step1: look up abandoned hospital","step2: drive to hospital","step3: park in front of building","step4: walk to hospital door","step5: enter building through door","step6: go into an old abandoned hospital one day"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a lot of bottled water","events":{"0":"pick up water","1":"give money to cashier","2":"find water in store","3":"get total from cashier","4":"bring water to register","5":"NONE","6":"buy a lot of bottled water"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.25,"1":0.5,"2":5.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: pick up water; step1: give money to cashier; step2: find water in store; step3: get total from cashier; step4: bring water to register; step5: decided to buy a lot of bottled water; step6: buy a lot of bottled water","flatten_input_for_script_generation":"You want to buy a lot of bottled water. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to buy a lot of bottled water; step1: find water in store; step2: pick up water; step3: bring water to register; step4: get total from cashier; step5: give money to cashier; step6: buy a lot of bottled water; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->1","4->3","5->2"],"reference_code":"class BuyALotOfBottledWater:\n\n    title = \"buy a lot of bottled water\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a lot of bottled water\"\n\n    def step1(self):\n        return \"find water in store\"\n\n    def step2(self):\n        return \"pick up water\"\n\n    def step3(self):\n        return \"bring water to register\"\n\n    def step4(self):\n        return \"get total from cashier\"\n\n    def step5(self):\n        return \"give money to cashier\"\n\n    def step6(self):\n        return \"buy a lot of bottled water\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyALotOfBottledWater:\n\n    title = \"buy a lot of bottled water\"\n    steps = 7\n\n","reference_graph":{"title":"buy a lot of bottled water","num_steps":7,"schema":["step0: decided to buy a lot of bottled water","step1: find water in store","step2: pick up water","step3: bring water to register","step4: get total from cashier","step5: give money to cashier","step6: buy a lot of bottled water"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"send a message to others","events":{"0":"open the message application","1":"press the send button","2":"edit the message","3":"take out the cell phone","4":"proofread the  message","5":"type the message","6":"NONE","7":"send a message to others"},"context":"NONE","minutes":10.0,"events_minutes":{"0":0.05,"1":0.0166666667,"2":2.0,"3":1.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: open the message application; step1: press the send button; step2: edit the message; step3: take out the cell phone; step4: proofread the  message; step5: type the message; step6: decided to send a message to others; step7: send a message to others","flatten_input_for_script_generation":"You want to send a message to others. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step5; step5 -> step4; step2 -> step1; step4 -> step2; step1 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to send a message to others; step1: take out the cell phone; step2: open the message application; step3: type the message; step4: proofread the  message; step5: edit the message; step6: press the send button; step7: send a message to others; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->7","2->1","3->0","4->2","5->4","6->3"],"reference_code":"class SendAMessageToOthers:\n\n    title = \"send a message to others\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to send a message to others\"\n\n    def step1(self):\n        return \"take out the cell phone\"\n\n    def step2(self):\n        return \"open the message application\"\n\n    def step3(self):\n        return \"type the message\"\n\n    def step4(self):\n        return \"proofread the  message\"\n\n    def step5(self):\n        return \"edit the message\"\n\n    def step6(self):\n        return \"press the send button\"\n\n    def step7(self):\n        return \"send a message to others\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SendAMessageToOthers:\n\n    title = \"send a message to others\"\n    steps = 8\n\n","reference_graph":{"title":"send a message to others","num_steps":8,"schema":["step0: decided to send a message to others","step1: take out the cell phone","step2: open the message application","step3: type the message","step4: proofread the  message","step5: edit the message","step6: press the send button","step7: send a message to others"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make some kool aid","events":{"0":"Get a pitcher.","1":"Stir and mix ingredients up.","2":"Add water to pitcher.","3":"Let cool in refrigerator.","4":"Add kool-aid and sugar.","5":"NONE","6":"make some kool aid"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":60.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Get a pitcher.; step1: Stir and mix ingredients up.; step2: Add water to pitcher.; step3: Let cool in refrigerator.; step4: Add kool-aid and sugar.; step5: decided to make some kool aid; step6: make some kool aid","flatten_input_for_script_generation":"You want to make some kool aid. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step4 -> step1; step2 -> step4; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make some kool aid; step1: Get a pitcher.; step2: Add water to pitcher.; step3: Add kool-aid and sugar.; step4: Stir and mix ingredients up.; step5: Let cool in refrigerator.; step6: make some kool aid; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->6","4->1","5->0"],"reference_code":"class MakeSomeKoolAid:\n\n    title = \"make some kool aid\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make some kool aid\"\n\n    def step1(self):\n        return \"Get a pitcher.\"\n\n    def step2(self):\n        return \"Add water to pitcher.\"\n\n    def step3(self):\n        return \"Add kool-aid and sugar.\"\n\n    def step4(self):\n        return \"Stir and mix ingredients up.\"\n\n    def step5(self):\n        return \"Let cool in refrigerator.\"\n\n    def step6(self):\n        return \"make some kool aid\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeSomeKoolAid:\n\n    title = \"make some kool aid\"\n    steps = 7\n\n","reference_graph":{"title":"make some kool aid","num_steps":7,"schema":["step0: decided to make some kool aid","step1: Get a pitcher.","step2: Add water to pitcher.","step3: Add kool-aid and sugar.","step4: Stir and mix ingredients up.","step5: Let cool in refrigerator.","step6: make some kool aid"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"hit the town","events":{"0":"look up places to go","1":"drive to another spot","2":"drive to the spot","3":"choose somewhere to go","4":"spend time at the spot","5":"set up the directions","6":"NONE","7":"hit the town"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":5.0,"2":15.0,"3":5.0,"4":25.0,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: look up places to go; step1: drive to another spot; step2: drive to the spot; step3: choose somewhere to go; step4: spend time at the spot; step5: set up the directions; step6: decided to hit the town; step7: hit the town","flatten_input_for_script_generation":"You want to hit the town. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step5; step5 -> step2; step2 -> step4; step4 -> step1; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to hit the town; step1: look up places to go; step2: choose somewhere to go; step3: set up the directions; step4: drive to the spot; step5: spend time at the spot; step6: drive to another spot; step7: hit the town; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->4","3->5","4->1","5->2","6->0"],"reference_code":"class HitTheTown:\n\n    title = \"hit the town\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to hit the town\"\n\n    def step1(self):\n        return \"look up places to go\"\n\n    def step2(self):\n        return \"choose somewhere to go\"\n\n    def step3(self):\n        return \"set up the directions\"\n\n    def step4(self):\n        return \"drive to the spot\"\n\n    def step5(self):\n        return \"spend time at the spot\"\n\n    def step6(self):\n        return \"drive to another spot\"\n\n    def step7(self):\n        return \"hit the town\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class HitTheTown:\n\n    title = \"hit the town\"\n    steps = 8\n\n","reference_graph":{"title":"hit the town","num_steps":8,"schema":["step0: decided to hit the town","step1: look up places to go","step2: choose somewhere to go","step3: set up the directions","step4: drive to the spot","step5: spend time at the spot","step6: drive to another spot","step7: hit the town"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"build a fire in the backyard fire pit","events":{"0":"line the hole with rocks","1":"place wood in the hole","2":"gather some wood","3":"dig a hole in the yard","4":"get some matches","5":"NONE","6":"build a fire in the backyard fire pit"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":30.0,"1":20.0,"2":2880.0,"3":120.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: line the hole with rocks; step1: place wood in the hole; step2: gather some wood; step3: dig a hole in the yard; step4: get some matches; step5: decided to build a fire in the backyard fire pit; step6: build a fire in the backyard fire pit","flatten_input_for_script_generation":"You want to build a fire in the backyard fire pit. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to build a fire in the backyard fire pit; step1: gather some wood; step2: dig a hole in the yard; step3: line the hole with rocks; step4: place wood in the hole; step5: get some matches; step6: build a fire in the backyard fire pit; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->0","4->6","5->2"],"reference_code":"class BuildAFireInTheBackyardFirePit:\n\n    title = \"build a fire in the backyard fire pit\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to build a fire in the backyard fire pit\"\n\n    def step1(self):\n        return \"gather some wood\"\n\n    def step2(self):\n        return \"dig a hole in the yard\"\n\n    def step3(self):\n        return \"line the hole with rocks\"\n\n    def step4(self):\n        return \"place wood in the hole\"\n\n    def step5(self):\n        return \"get some matches\"\n\n    def step6(self):\n        return \"build a fire in the backyard fire pit\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuildAFireInTheBackyardFirePit:\n\n    title = \"build a fire in the backyard fire pit\"\n    steps = 7\n\n","reference_graph":{"title":"build a fire in the backyard fire pit","num_steps":7,"schema":["step0: decided to build a fire in the backyard fire pit","step1: gather some wood","step2: dig a hole in the yard","step3: line the hole with rocks","step4: place wood in the hole","step5: get some matches","step6: build a fire in the backyard fire pit"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start making coffee at home","events":{"0":"Go to the supermarket to purchase the coffee maker","1":"Search online for the coffee makers","2":"Pick the one with best reviews","3":"Purchase the coffee maker from the shelf","4":"Purchase the most likable ground roast coffee","5":"Get back to home","6":"NONE","7":"start making coffee at home"},"context":"NONE","minutes":55.0,"events_minutes":{"0":15.0,"1":15.0,"2":1.0,"3":5.0,"4":5.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: Go to the supermarket to purchase the coffee maker; step1: Search online for the coffee makers; step2: Pick the one with best reviews; step3: Purchase the coffee maker from the shelf; step4: Purchase the most likable ground roast coffee; step5: Get back to home; step6: decided to start making coffee at home; step7: start making coffee at home","flatten_input_for_script_generation":"You want to start making coffee at home. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step0 -> step4; step3 -> step5; step4 -> step5; step5 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to start making coffee at home; step1: Search online for the coffee makers; step2: Pick the one with best reviews; step3: Go to the supermarket to purchase the coffee maker; step4: Purchase the coffee maker from the shelf; step5: Purchase the most likable ground roast coffee; step6: Get back to home; step7: start making coffee at home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","0->4","1->2","2->0","3->5","4->5","5->7","6->1"],"reference_code":"class StartMakingCoffeeAtHome:\n\n    title = \"start making coffee at home\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to start making coffee at home\"\n\n    def step1(self):\n        return \"Search online for the coffee makers\"\n\n    def step2(self):\n        return \"Pick the one with best reviews\"\n\n    def step3(self):\n        return \"Go to the supermarket to purchase the coffee maker\"\n\n    def step4(self):\n        return \"Purchase the coffee maker from the shelf\"\n\n    def step5(self):\n        return \"Purchase the most likable ground roast coffee\"\n\n    def step6(self):\n        return \"Get back to home\"\n\n    def step7(self):\n        return \"start making coffee at home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class StartMakingCoffeeAtHome:\n\n    title = \"start making coffee at home\"\n    steps = 8\n\n","reference_graph":{"title":"start making coffee at home","num_steps":8,"schema":["step0: decided to start making coffee at home","step1: Search online for the coffee makers","step2: Pick the one with best reviews","step3: Go to the supermarket to purchase the coffee maker","step4: Purchase the coffee maker from the shelf","step5: Purchase the most likable ground roast coffee","step6: Get back to home","step7: start making coffee at home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"try something different this weekend","events":{"0":"Find out what is happening this weekend.","1":"Eat something different.","2":"Drive to the new restaurant.","3":"Pick something that is different, such as a new restaurant.","4":"Read weekly local magazine.","5":"NONE","6":"try something different this weekend"},"context":"NONE","minutes":300.0,"events_minutes":{"0":20.0,"1":60.0,"2":15.0,"3":10.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Find out what is happening this weekend.; step1: Eat something different.; step2: Drive to the new restaurant.; step3: Pick something that is different, such as a new restaurant.; step4: Read weekly local magazine.; step5: decided to try something different this weekend; step6: try something different this weekend","flatten_input_for_script_generation":"You want to try something different this weekend. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to try something different this weekend; step1: Read weekly local magazine.; step2: Find out what is happening this weekend.; step3: Pick something that is different, such as a new restaurant.; step4: Drive to the new restaurant.; step5: Eat something different.; step6: try something different this weekend; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class TrySomethingDifferentThisWeekend:\n\n    title = \"try something different this weekend\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to try something different this weekend\"\n\n    def step1(self):\n        return \"Read weekly local magazine.\"\n\n    def step2(self):\n        return \"Find out what is happening this weekend.\"\n\n    def step3(self):\n        return \"Pick something that is different, such as a new restaurant.\"\n\n    def step4(self):\n        return \"Drive to the new restaurant.\"\n\n    def step5(self):\n        return \"Eat something different.\"\n\n    def step6(self):\n        return \"try something different this weekend\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TrySomethingDifferentThisWeekend:\n\n    title = \"try something different this weekend\"\n    steps = 7\n\n","reference_graph":{"title":"try something different this weekend","num_steps":7,"schema":["step0: decided to try something different this weekend","step1: Read weekly local magazine.","step2: Find out what is happening this weekend.","step3: Pick something that is different, such as a new restaurant.","step4: Drive to the new restaurant.","step5: Eat something different.","step6: try something different this weekend"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make the track team","events":{"0":"Walk onto the track.","1":"Put on running shoes.","2":"Wait for the gun.","3":"Go to the track","4":"Run when the gun goes off.","5":"NONE","6":"make the track team"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Walk onto the track.; step1: Put on running shoes.; step2: Wait for the gun.; step3: Go to the track; step4: Run when the gun goes off.; step5: decided to make the track team; step6: make the track team","flatten_input_for_script_generation":"You want to make the track team. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to make the track team; step1: Put on running shoes.; step2: Go to the track; step3: Walk onto the track.; step4: Wait for the gun.; step5: Run when the gun goes off.; step6: make the track team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->0","4->6","5->1"],"reference_code":"class MakeTheTrackTeam:\n\n    title = \"make the track team\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make the track team\"\n\n    def step1(self):\n        return \"Put on running shoes.\"\n\n    def step2(self):\n        return \"Go to the track\"\n\n    def step3(self):\n        return \"Walk onto the track.\"\n\n    def step4(self):\n        return \"Wait for the gun.\"\n\n    def step5(self):\n        return \"Run when the gun goes off.\"\n\n    def step6(self):\n        return \"make the track team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeTheTrackTeam:\n\n    title = \"make the track team\"\n    steps = 7\n\n","reference_graph":{"title":"make the track team","num_steps":7,"schema":["step0: decided to make the track team","step1: Put on running shoes.","step2: Go to the track","step3: Walk onto the track.","step4: Wait for the gun.","step5: Run when the gun goes off.","step6: make the track team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"write a movie","events":{"0":"plot a story","1":"edit the draft","2":"write a final draft","3":"rewrite week spots","4":"write a rough draft","5":"NONE","6":"write a movie"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":20160.0,"1":8640.0,"2":10080.0,"3":10080.0,"4":86400.0},"flatten_input_for_edge_prediction":"step0: plot a story; step1: edit the draft; step2: write a final draft; step3: rewrite week spots; step4: write a rough draft; step5: decided to write a movie; step6: write a movie","flatten_input_for_script_generation":"You want to write a movie. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step4 -> step3; step1 -> step2; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to write a movie; step1: plot a story; step2: write a rough draft; step3: edit the draft; step4: rewrite week spots; step5: write a final draft; step6: write a movie; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->2","4->1","4->3","5->0"],"reference_code":"class WriteAMovie:\n\n    title = \"write a movie\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to write a movie\"\n\n    def step1(self):\n        return \"plot a story\"\n\n    def step2(self):\n        return \"write a rough draft\"\n\n    def step3(self):\n        return \"edit the draft\"\n\n    def step4(self):\n        return \"rewrite week spots\"\n\n    def step5(self):\n        return \"write a final draft\"\n\n    def step6(self):\n        return \"write a movie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WriteAMovie:\n\n    title = \"write a movie\"\n    steps = 7\n\n","reference_graph":{"title":"write a movie","num_steps":7,"schema":["step0: decided to write a movie","step1: plot a story","step2: write a rough draft","step3: edit the draft","step4: rewrite week spots","step5: write a final draft","step6: write a movie"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"travel the world","events":{"0":"Choose when and where  to go","1":"Get on board in airplane","2":"Make a packing list","3":"Book plane\/hotel accommodations","4":"Set a budget","5":"NONE","6":"travel the world"},"context":"NONE","minutes":21600.0,"events_minutes":{"0":120.0,"1":7200.0,"2":30.0,"3":15.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Choose when and where  to go; step1: Get on board in airplane; step2: Make a packing list; step3: Book plane\/hotel accommodations; step4: Set a budget; step5: decided to travel the world; step6: travel the world","flatten_input_for_script_generation":"You want to travel the world. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to travel the world; step1: Choose when and where  to go; step2: Set a budget; step3: Book plane\/hotel accommodations; step4: Make a packing list; step5: Get on board in airplane; step6: travel the world; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->2","4->3","5->0"],"reference_code":"class TravelTheWorld:\n\n    title = \"travel the world\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to travel the world\"\n\n    def step1(self):\n        return \"Choose when and where  to go\"\n\n    def step2(self):\n        return \"Set a budget\"\n\n    def step3(self):\n        return \"Book plane\/hotel accommodations\"\n\n    def step4(self):\n        return \"Make a packing list\"\n\n    def step5(self):\n        return \"Get on board in airplane\"\n\n    def step6(self):\n        return \"travel the world\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TravelTheWorld:\n\n    title = \"travel the world\"\n    steps = 7\n\n","reference_graph":{"title":"travel the world","num_steps":7,"schema":["step0: decided to travel the world","step1: Choose when and where  to go","step2: Set a budget","step3: Book plane\/hotel accommodations","step4: Make a packing list","step5: Get on board in airplane","step6: travel the world"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"speak at our club","events":{"0":"Travel to the club.","1":"Memorize the speech.","2":"Take a deep breath.","3":"Practice a speech.","4":"Learn the topic at hand.","5":"NONE","6":"speak at our club"},"context":"NONE","minutes":600.0,"events_minutes":{"0":60.0,"1":240.0,"2":1.0,"3":240.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Travel to the club.; step1: Memorize the speech.; step2: Take a deep breath.; step3: Practice a speech.; step4: Learn the topic at hand.; step5: decided to speak at our club; step6: speak at our club","flatten_input_for_script_generation":"You want to speak at our club. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to speak at our club; step1: Learn the topic at hand.; step2: Practice a speech.; step3: Memorize the speech.; step4: Travel to the club.; step5: Take a deep breath.; step6: speak at our club; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class SpeakAtOurClub:\n\n    title = \"speak at our club\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to speak at our club\"\n\n    def step1(self):\n        return \"Learn the topic at hand.\"\n\n    def step2(self):\n        return \"Practice a speech.\"\n\n    def step3(self):\n        return \"Memorize the speech.\"\n\n    def step4(self):\n        return \"Travel to the club.\"\n\n    def step5(self):\n        return \"Take a deep breath.\"\n\n    def step6(self):\n        return \"speak at our club\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SpeakAtOurClub:\n\n    title = \"speak at our club\"\n    steps = 7\n\n","reference_graph":{"title":"speak at our club","num_steps":7,"schema":["step0: decided to speak at our club","step1: Learn the topic at hand.","step2: Practice a speech.","step3: Memorize the speech.","step4: Travel to the club.","step5: Take a deep breath.","step6: speak at our club"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"see the new movie playing","events":{"0":"Go inside the theater.","1":"Enjoy the movie.","2":"Go into the correct movie screening.","3":"But a movie ticket.","4":"Drive to the theater.","5":"Find a place to sit.","6":"NONE","7":"see the new movie playing"},"context":"NONE","minutes":180.0,"events_minutes":{"0":5.0,"1":120.0,"2":5.0,"3":5.0,"4":30.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Go inside the theater.; step1: Enjoy the movie.; step2: Go into the correct movie screening.; step3: But a movie ticket.; step4: Drive to the theater.; step5: Find a place to sit.; step6: decided to see the new movie playing; step7: see the new movie playing","flatten_input_for_script_generation":"You want to see the new movie playing. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step5; step5 -> step1; step1 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to see the new movie playing; step1: Drive to the theater.; step2: Go inside the theater.; step3: But a movie ticket.; step4: Go into the correct movie screening.; step5: Find a place to sit.; step6: Enjoy the movie.; step7: see the new movie playing; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->5","3->2","4->0","5->1","6->4"],"reference_code":"class SeeTheNewMoviePlaying:\n\n    title = \"see the new movie playing\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to see the new movie playing\"\n\n    def step1(self):\n        return \"Drive to the theater.\"\n\n    def step2(self):\n        return \"Go inside the theater.\"\n\n    def step3(self):\n        return \"But a movie ticket.\"\n\n    def step4(self):\n        return \"Go into the correct movie screening.\"\n\n    def step5(self):\n        return \"Find a place to sit.\"\n\n    def step6(self):\n        return \"Enjoy the movie.\"\n\n    def step7(self):\n        return \"see the new movie playing\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SeeTheNewMoviePlaying:\n\n    title = \"see the new movie playing\"\n    steps = 8\n\n","reference_graph":{"title":"see the new movie playing","num_steps":8,"schema":["step0: decided to see the new movie playing","step1: Drive to the theater.","step2: Go inside the theater.","step3: But a movie ticket.","step4: Go into the correct movie screening.","step5: Find a place to sit.","step6: Enjoy the movie.","step7: see the new movie playing"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get married in secret","events":{"0":"fill out the marriage form","1":"pick up a pen","2":"enter the office","3":"stand in line at the counter","4":"pick up the marriage form","5":"drive to the clerk and recorder's office","6":"state desire to get married","7":"NONE","8":"get married in secret"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":0.5833333333,"2":2.0,"3":5.0,"4":2.0,"5":5.0,"6":2.0},"flatten_input_for_edge_prediction":"step0: fill out the marriage form; step1: pick up a pen; step2: enter the office; step3: stand in line at the counter; step4: pick up the marriage form; step5: drive to the clerk and recorder's office; step6: state desire to get married; step7: decided to get married in secret; step8: get married in secret","flatten_input_for_script_generation":"You want to get married in secret. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step3; step2 -> step1; step2 -> step4; step3 -> step6; step6 -> step8; step1 -> step0; step4 -> step0; step0 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to get married in secret; step1: drive to the clerk and recorder's office; step2: enter the office; step3: stand in line at the counter; step4: pick up a pen; step5: pick up the marriage form; step6: state desire to get married; step7: fill out the marriage form; step8: get married in secret; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step7; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","2->3","2->1","2->4","3->6","4->0","5->2","6->8","7->5"],"reference_code":"class GetMarriedInSecret:\n\n    title = \"get married in secret\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get married in secret\"\n\n    def step1(self):\n        return \"drive to the clerk and recorder's office\"\n\n    def step2(self):\n        return \"enter the office\"\n\n    def step3(self):\n        return \"stand in line at the counter\"\n\n    def step4(self):\n        return \"pick up a pen\"\n\n    def step5(self):\n        return \"pick up the marriage form\"\n\n    def step6(self):\n        return \"state desire to get married\"\n\n    def step7(self):\n        return \"fill out the marriage form\"\n\n    def step8(self):\n        return \"get married in secret\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step7\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetMarriedInSecret:\n\n    title = \"get married in secret\"\n    steps = 9\n\n","reference_graph":{"title":"get married in secret","num_steps":9,"schema":["step0: decided to get married in secret","step1: drive to the clerk and recorder's office","step2: enter the office","step3: stand in line at the counter","step4: pick up a pen","step5: pick up the marriage form","step6: state desire to get married","step7: fill out the marriage form","step8: get married in secret"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step7","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"play in the leafs","events":{"0":"find the rake","1":"rake the leaves into a pile","2":"take the rake outside.","3":"jump into the pile.","4":"go to the garage","5":"NONE","6":"play in the leafs"},"context":"NONE","minutes":30.0,"events_minutes":{"0":5.0,"1":30.0,"2":1.0,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: find the rake; step1: rake the leaves into a pile; step2: take the rake outside.; step3: jump into the pile.; step4: go to the garage; step5: decided to play in the leafs; step6: play in the leafs","flatten_input_for_script_generation":"You want to play in the leafs. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to play in the leafs; step1: go to the garage; step2: find the rake; step3: take the rake outside.; step4: rake the leaves into a pile; step5: jump into the pile.; step6: play in the leafs; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->6","4->0","5->4"],"reference_code":"class PlayInTheLeafs:\n\n    title = \"play in the leafs\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play in the leafs\"\n\n    def step1(self):\n        return \"go to the garage\"\n\n    def step2(self):\n        return \"find the rake\"\n\n    def step3(self):\n        return \"take the rake outside.\"\n\n    def step4(self):\n        return \"rake the leaves into a pile\"\n\n    def step5(self):\n        return \"jump into the pile.\"\n\n    def step6(self):\n        return \"play in the leafs\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayInTheLeafs:\n\n    title = \"play in the leafs\"\n    steps = 7\n\n","reference_graph":{"title":"play in the leafs","num_steps":7,"schema":["step0: decided to play in the leafs","step1: go to the garage","step2: find the rake","step3: take the rake outside.","step4: rake the leaves into a pile","step5: jump into the pile.","step6: play in the leafs"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try a new tv show","events":{"0":"Select a show that is popular","1":"Cast Netflix to TV","2":"Log into Netflix","3":"Open up computer","4":"Scroll through popular shows","5":"Start the show","6":"NONE","7":"try a new tv show"},"context":"NONE","minutes":45.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":4.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: Select a show that is popular; step1: Cast Netflix to TV; step2: Log into Netflix; step3: Open up computer; step4: Scroll through popular shows; step5: Start the show; step6: decided to try a new tv show; step7: try a new tv show","flatten_input_for_script_generation":"You want to try a new tv show. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step2 -> step1; step4 -> step0; step0 -> step5; step1 -> step7; step5 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to try a new tv show; step1: Open up computer; step2: Log into Netflix; step3: Scroll through popular shows; step4: Cast Netflix to TV; step5: Select a show that is popular; step6: try a new tv show; step7: Start the show; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step7 -> step6","gold_edges_for_prediction":["0->5","1->7","2->4","2->1","3->2","4->0","5->7","6->3"],"reference_code":"class TryANewTvShow:\n\n    title = \"try a new tv show\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try a new tv show\"\n\n    def step1(self):\n        return \"Open up computer\"\n\n    def step2(self):\n        return \"Log into Netflix\"\n\n    def step3(self):\n        return \"Scroll through popular shows\"\n\n    def step4(self):\n        return \"Cast Netflix to TV\"\n\n    def step5(self):\n        return \"Select a show that is popular\"\n\n    def step6(self):\n        return \"try a new tv show\"\n\n    def step7(self):\n        return \"Start the show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step7 -> step6\",\n        ]\n","input_prompt_code":"class TryANewTvShow:\n\n    title = \"try a new tv show\"\n    steps = 8\n\n","reference_graph":{"title":"try a new tv show","num_steps":8,"schema":["step0: decided to try a new tv show","step1: Open up computer","step2: Log into Netflix","step3: Scroll through popular shows","step4: Cast Netflix to TV","step5: Select a show that is popular","step6: try a new tv show","step7: Start the show"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step7 -> step6"]}}
{"scenario":"tryout for cheerleader","events":{"0":"Memorize a routine.","1":"Practice a routine.","2":"Exercise by stretching.","3":"Produce a massive smile.","4":"Plan a routine.","5":"NONE","6":"tryout for cheerleader"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":10.0,"1":2880.0,"2":4320.0,"3":0.0166666667,"4":1440.0},"flatten_input_for_edge_prediction":"step0: Memorize a routine.; step1: Practice a routine.; step2: Exercise by stretching.; step3: Produce a massive smile.; step4: Plan a routine.; step5: decided to tryout for cheerleader; step6: tryout for cheerleader","flatten_input_for_script_generation":"You want to tryout for cheerleader. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to tryout for cheerleader; step1: Exercise by stretching.; step2: Plan a routine.; step3: Practice a routine.; step4: Memorize a routine.; step5: Produce a massive smile.; step6: tryout for cheerleader; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->6","4->1","5->2"],"reference_code":"class TryoutForCheerleader:\n\n    title = \"tryout for cheerleader\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to tryout for cheerleader\"\n\n    def step1(self):\n        return \"Exercise by stretching.\"\n\n    def step2(self):\n        return \"Plan a routine.\"\n\n    def step3(self):\n        return \"Practice a routine.\"\n\n    def step4(self):\n        return \"Memorize a routine.\"\n\n    def step5(self):\n        return \"Produce a massive smile.\"\n\n    def step6(self):\n        return \"tryout for cheerleader\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TryoutForCheerleader:\n\n    title = \"tryout for cheerleader\"\n    steps = 7\n\n","reference_graph":{"title":"tryout for cheerleader","num_steps":7,"schema":["step0: decided to tryout for cheerleader","step1: Exercise by stretching.","step2: Plan a routine.","step3: Practice a routine.","step4: Memorize a routine.","step5: Produce a massive smile.","step6: tryout for cheerleader"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn the Russian language","events":{"0":"study the tutorials","1":"do homework and quiz","2":"take tests and examinations","3":"sign in course","4":"pay for course","5":"sign up for online Russian language course","6":"NONE","7":"learn the Russian language"},"context":"NONE","minutes":1860.0,"events_minutes":{"0":600.0,"1":300.0,"2":300.0,"3":5.0,"4":10.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: study the tutorials; step1: do homework and quiz; step2: take tests and examinations; step3: sign in course; step4: pay for course; step5: sign up for online Russian language course; step6: decided to learn the Russian language; step7: learn the Russian language","flatten_input_for_script_generation":"You want to learn the Russian language. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to learn the Russian language; step1: sign up for online Russian language course; step2: pay for course; step3: sign in course; step4: study the tutorials; step5: do homework and quiz; step6: take tests and examinations; step7: learn the Russian language; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->7","3->0","4->3","5->4","6->5"],"reference_code":"class LearnTheRussianLanguage:\n\n    title = \"learn the Russian language\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to learn the Russian language\"\n\n    def step1(self):\n        return \"sign up for online Russian language course\"\n\n    def step2(self):\n        return \"pay for course\"\n\n    def step3(self):\n        return \"sign in course\"\n\n    def step4(self):\n        return \"study the tutorials\"\n\n    def step5(self):\n        return \"do homework and quiz\"\n\n    def step6(self):\n        return \"take tests and examinations\"\n\n    def step7(self):\n        return \"learn the Russian language\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class LearnTheRussianLanguage:\n\n    title = \"learn the Russian language\"\n    steps = 8\n\n","reference_graph":{"title":"learn the Russian language","num_steps":8,"schema":["step0: decided to learn the Russian language","step1: sign up for online Russian language course","step2: pay for course","step3: sign in course","step4: study the tutorials","step5: do homework and quiz","step6: take tests and examinations","step7: learn the Russian language"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"eat a kale salad","events":{"0":"enter a restaurant","1":"start putting salad in mouth","2":"order salad from waiter","3":"pick up fork","4":"get seated by staff.","5":"NONE","6":"eat a kale salad"},"context":"NONE","minutes":10.0,"events_minutes":{"0":1.0,"1":5.0,"2":1.0,"3":0.05,"4":2.0},"flatten_input_for_edge_prediction":"step0: enter a restaurant; step1: start putting salad in mouth; step2: order salad from waiter; step3: pick up fork; step4: get seated by staff.; step5: decided to eat a kale salad; step6: eat a kale salad","flatten_input_for_script_generation":"You want to eat a kale salad. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to eat a kale salad; step1: enter a restaurant; step2: get seated by staff.; step3: order salad from waiter; step4: pick up fork; step5: start putting salad in mouth; step6: eat a kale salad; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class EatAKaleSalad:\n\n    title = \"eat a kale salad\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat a kale salad\"\n\n    def step1(self):\n        return \"enter a restaurant\"\n\n    def step2(self):\n        return \"get seated by staff.\"\n\n    def step3(self):\n        return \"order salad from waiter\"\n\n    def step4(self):\n        return \"pick up fork\"\n\n    def step5(self):\n        return \"start putting salad in mouth\"\n\n    def step6(self):\n        return \"eat a kale salad\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatAKaleSalad:\n\n    title = \"eat a kale salad\"\n    steps = 7\n\n","reference_graph":{"title":"eat a kale salad","num_steps":7,"schema":["step0: decided to eat a kale salad","step1: enter a restaurant","step2: get seated by staff.","step3: order salad from waiter","step4: pick up fork","step5: start putting salad in mouth","step6: eat a kale salad"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a short film","events":{"0":"wait for actors to show up","1":"direct the actors","2":"get out camera gear","3":"drive to location","4":"go to the car","5":"NONE","6":"make a short film"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":60.0,"1":480.0,"2":30.0,"3":20.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: wait for actors to show up; step1: direct the actors; step2: get out camera gear; step3: drive to location; step4: go to the car; step5: decided to make a short film; step6: make a short film","flatten_input_for_script_generation":"You want to make a short film. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step4 -> step3; step3 -> step0; step3 -> step2; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to make a short film; step1: go to the car; step2: get out camera gear; step3: make a short film; step4: drive to location; step5: wait for actors to show up; step6: direct the actors; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step4 -> step2; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->1","1->6","2->6","3->0","3->2","4->3","5->4"],"reference_code":"class MakeAShortFilm:\n\n    title = \"make a short film\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a short film\"\n\n    def step1(self):\n        return \"go to the car\"\n\n    def step2(self):\n        return \"get out camera gear\"\n\n    def step3(self):\n        return \"make a short film\"\n\n    def step4(self):\n        return \"drive to location\"\n\n    def step5(self):\n        return \"wait for actors to show up\"\n\n    def step6(self):\n        return \"direct the actors\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step2\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class MakeAShortFilm:\n\n    title = \"make a short film\"\n    steps = 7\n\n","reference_graph":{"title":"make a short film","num_steps":7,"schema":["step0: decided to make a short film","step1: go to the car","step2: get out camera gear","step3: make a short film","step4: drive to location","step5: wait for actors to show up","step6: direct the actors"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step4 -> step2","step5 -> step6","step6 -> step3"]}}
{"scenario":"try some new tea","events":{"0":"turn kettle on to high","1":"pour hot water over tea bag","2":"fill kettle with water","3":"open kettle when water has boiled","4":"open box of new tea","5":"put bag of tea in the mug","6":"NONE","7":"try some new tea"},"context":"NONE","minutes":15.0,"events_minutes":{"0":30.0,"1":0.25,"2":1.0,"3":5.0,"4":1.0,"5":0.75},"flatten_input_for_edge_prediction":"step0: turn kettle on to high; step1: pour hot water over tea bag; step2: fill kettle with water; step3: open kettle when water has boiled; step4: open box of new tea; step5: put bag of tea in the mug; step6: decided to try some new tea; step7: try some new tea","flatten_input_for_script_generation":"You want to try some new tea. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step4 -> step5; step5 -> step1; step1 -> step7; step6 -> step2; step6 -> step4","flatten_output_for_script_generation":"step0: decided to try some new tea; step1: open box of new tea; step2: fill kettle with water; step3: turn kettle on to high; step4: open kettle when water has boiled; step5: pour hot water over tea bag; step6: try some new tea; step7: put bag of tea in the mug; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step7; step7 -> step5","gold_edges_for_prediction":["0->3","1->7","2->0","3->1","4->5","5->1","6->2","6->4"],"reference_code":"class TrySomeNewTea:\n\n    title = \"try some new tea\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try some new tea\"\n\n    def step1(self):\n        return \"open box of new tea\"\n\n    def step2(self):\n        return \"fill kettle with water\"\n\n    def step3(self):\n        return \"turn kettle on to high\"\n\n    def step4(self):\n        return \"open kettle when water has boiled\"\n\n    def step5(self):\n        return \"pour hot water over tea bag\"\n\n    def step6(self):\n        return \"try some new tea\"\n\n    def step7(self):\n        return \"put bag of tea in the mug\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step7\",\n            \"step7 -> step5\",\n        ]\n","input_prompt_code":"class TrySomeNewTea:\n\n    title = \"try some new tea\"\n    steps = 8\n\n","reference_graph":{"title":"try some new tea","num_steps":8,"schema":["step0: decided to try some new tea","step1: open box of new tea","step2: fill kettle with water","step3: turn kettle on to high","step4: open kettle when water has boiled","step5: pour hot water over tea bag","step6: try some new tea","step7: put bag of tea in the mug"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step7","step7 -> step5"]}}
{"scenario":"try rock climbing","events":{"0":"Put left glove on","1":"Do some research online","2":"Call and ask some friends to help","3":"Watch some instructional videos","4":"Drive over to a nice rocky hill","5":"Put right glove on","6":"NONE","7":"try rock climbing"},"context":"NONE","minutes":900.0,"events_minutes":{"0":0.5,"1":120.0,"2":60.0,"3":60.0,"4":60.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: Put left glove on; step1: Do some research online; step2: Call and ask some friends to help; step3: Watch some instructional videos; step4: Drive over to a nice rocky hill; step5: Put right glove on; step6: decided to try rock climbing; step7: try rock climbing","flatten_input_for_script_generation":"You want to try rock climbing. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step3 -> step4; step2 -> step4; step4 -> step0; step4 -> step5; step5 -> step7; step0 -> step7; step6 -> step3; step6 -> step1; step6 -> step2","flatten_output_for_script_generation":"step0: decided to try rock climbing; step1: Call and ask some friends to help; step2: Do some research online; step3: Drive over to a nice rocky hill; step4: Put left glove on; step5: Put right glove on; step6: Watch some instructional videos; step7: try rock climbing; step0 -> step1; step0 -> step6; step0 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step6 -> step3; step1 -> step3; step4 -> step7; step5 -> step7","gold_edges_for_prediction":["0->7","1->4","2->4","3->4","4->0","4->5","5->7","6->3","6->1","6->2"],"reference_code":"class TryRockClimbing:\n\n    title = \"try rock climbing\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try rock climbing\"\n\n    def step1(self):\n        return \"Call and ask some friends to help\"\n\n    def step2(self):\n        return \"Do some research online\"\n\n    def step3(self):\n        return \"Drive over to a nice rocky hill\"\n\n    def step4(self):\n        return \"Put left glove on\"\n\n    def step5(self):\n        return \"Put right glove on\"\n\n    def step6(self):\n        return \"Watch some instructional videos\"\n\n    def step7(self):\n        return \"try rock climbing\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step6 -> step3\",\n            \"step1 -> step3\",\n            \"step4 -> step7\",\n            \"step5 -> step7\",\n        ]\n","input_prompt_code":"class TryRockClimbing:\n\n    title = \"try rock climbing\"\n    steps = 8\n\n","reference_graph":{"title":"try rock climbing","num_steps":8,"schema":["step0: decided to try rock climbing","step1: Call and ask some friends to help","step2: Do some research online","step3: Drive over to a nice rocky hill","step4: Put left glove on","step5: Put right glove on","step6: Watch some instructional videos","step7: try rock climbing"],"relations":["step0 -> step1","step0 -> step6","step0 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step6 -> step3","step1 -> step3","step4 -> step7","step5 -> step7"]}}
{"scenario":"have for dinner","events":{"0":"search online for a recipe","1":"gather the cooking equipment","2":"choose a recipe","3":"cook the whole meal","4":"put together the ingredients","5":"gather the ingredients","6":"NONE","7":"have for dinner"},"context":"NONE","minutes":180.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":120.0,"4":15.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: search online for a recipe; step1: gather the cooking equipment; step2: choose a recipe; step3: cook the whole meal; step4: put together the ingredients; step5: gather the ingredients; step6: decided to have for dinner; step7: have for dinner","flatten_input_for_script_generation":"You want to have for dinner. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step5; step2 -> step1; step5 -> step4; step1 -> step4; step4 -> step3; step3 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to have for dinner; step1: search online for a recipe; step2: choose a recipe; step3: gather the ingredients; step4: gather the cooking equipment; step5: put together the ingredients; step6: cook the whole meal; step7: have for dinner; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->4","2->5","2->1","3->7","4->3","5->4","6->0"],"reference_code":"class HaveForDinner:\n\n    title = \"have for dinner\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to have for dinner\"\n\n    def step1(self):\n        return \"search online for a recipe\"\n\n    def step2(self):\n        return \"choose a recipe\"\n\n    def step3(self):\n        return \"gather the ingredients\"\n\n    def step4(self):\n        return \"gather the cooking equipment\"\n\n    def step5(self):\n        return \"put together the ingredients\"\n\n    def step6(self):\n        return \"cook the whole meal\"\n\n    def step7(self):\n        return \"have for dinner\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class HaveForDinner:\n\n    title = \"have for dinner\"\n    steps = 8\n\n","reference_graph":{"title":"have for dinner","num_steps":8,"schema":["step0: decided to have for dinner","step1: search online for a recipe","step2: choose a recipe","step3: gather the ingredients","step4: gather the cooking equipment","step5: put together the ingredients","step6: cook the whole meal","step7: have for dinner"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"own a kitten","events":{"0":"Pick out litter box.","1":"Go home with everything.","2":"Pick out litter gravel.","3":"Select a kitten to buy.","4":"Purchase the items and kitten.","5":"Pick out cat food.","6":"Go to a pet store.","7":"NONE","8":"own a kitten"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":20.0,"4":5.0,"5":5.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Pick out litter box.; step1: Go home with everything.; step2: Pick out litter gravel.; step3: Select a kitten to buy.; step4: Purchase the items and kitten.; step5: Pick out cat food.; step6: Go to a pet store.; step7: decided to own a kitten; step8: own a kitten","flatten_input_for_script_generation":"You want to own a kitten. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step5; step6 -> step0; step6 -> step2; step6 -> step3; step5 -> step4; step0 -> step4; step2 -> step4; step3 -> step4; step4 -> step1; step1 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to own a kitten; step1: Go to a pet store.; step2: Pick out cat food.; step3: Pick out litter box.; step4: Pick out litter gravel.; step5: Select a kitten to buy.; step6: Purchase the items and kitten.; step7: Go home with everything.; step8: own a kitten; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step1 -> step5; step2 -> step6; step3 -> step6; step4 -> step6; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->8","2->4","3->4","4->1","5->4","6->5","6->0","6->2","6->3","7->6"],"reference_code":"class OwnAKitten:\n\n    title = \"own a kitten\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to own a kitten\"\n\n    def step1(self):\n        return \"Go to a pet store.\"\n\n    def step2(self):\n        return \"Pick out cat food.\"\n\n    def step3(self):\n        return \"Pick out litter box.\"\n\n    def step4(self):\n        return \"Pick out litter gravel.\"\n\n    def step5(self):\n        return \"Select a kitten to buy.\"\n\n    def step6(self):\n        return \"Purchase the items and kitten.\"\n\n    def step7(self):\n        return \"Go home with everything.\"\n\n    def step8(self):\n        return \"own a kitten\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n            \"step2 -> step6\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class OwnAKitten:\n\n    title = \"own a kitten\"\n    steps = 9\n\n","reference_graph":{"title":"own a kitten","num_steps":9,"schema":["step0: decided to own a kitten","step1: Go to a pet store.","step2: Pick out cat food.","step3: Pick out litter box.","step4: Pick out litter gravel.","step5: Select a kitten to buy.","step6: Purchase the items and kitten.","step7: Go home with everything.","step8: own a kitten"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step1 -> step5","step2 -> step6","step3 -> step6","step4 -> step6","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"make a little bit of spending money on Mturk","events":{"0":"Make a payment plan","1":"Do a hit","2":"sign up at mturk using correct information","3":"Make a amazon payment account","4":"Wait till application is approved","5":"NONE","6":"make a little bit of spending money on Mturk"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":15.0,"1":15.0,"2":15.0,"3":1440.0,"4":2880.0},"flatten_input_for_edge_prediction":"step0: Make a payment plan; step1: Do a hit; step2: sign up at mturk using correct information; step3: Make a amazon payment account; step4: Wait till application is approved; step5: decided to make a little bit of spending money on Mturk; step6: make a little bit of spending money on Mturk","flatten_input_for_script_generation":"You want to make a little bit of spending money on Mturk. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to make a little bit of spending money on Mturk; step1: sign up at mturk using correct information; step2: Wait till application is approved; step3: Make a amazon payment account; step4: Make a payment plan; step5: Do a hit; step6: make a little bit of spending money on Mturk; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class MakeALittleBitOfSpendingMoneyOnMturk:\n\n    title = \"make a little bit of spending money on Mturk\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a little bit of spending money on Mturk\"\n\n    def step1(self):\n        return \"sign up at mturk using correct information\"\n\n    def step2(self):\n        return \"Wait till application is approved\"\n\n    def step3(self):\n        return \"Make a amazon payment account\"\n\n    def step4(self):\n        return \"Make a payment plan\"\n\n    def step5(self):\n        return \"Do a hit\"\n\n    def step6(self):\n        return \"make a little bit of spending money on Mturk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeALittleBitOfSpendingMoneyOnMturk:\n\n    title = \"make a little bit of spending money on Mturk\"\n    steps = 7\n\n","reference_graph":{"title":"make a little bit of spending money on Mturk","num_steps":7,"schema":["step0: decided to make a little bit of spending money on Mturk","step1: sign up at mturk using correct information","step2: Wait till application is approved","step3: Make a amazon payment account","step4: Make a payment plan","step5: Do a hit","step6: make a little bit of spending money on Mturk"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bake cookies at home","events":{"0":"Place baking sheet on the counter.","1":"Put cookie dough on baking sheet.","2":"Scoop dough from the bowl with a spoon.","3":"Put baking sheet with dough in the oven.","4":"Mix the ingredients.","5":"Preheat the oven.","6":"Add ingredients to a bowl.","7":"NONE","8":"bake cookies at home"},"context":"NONE","minutes":120.0,"events_minutes":{"0":1.0,"1":5.0,"2":10.0,"3":2.0,"4":5.0,"5":15.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Place baking sheet on the counter.; step1: Put cookie dough on baking sheet.; step2: Scoop dough from the bowl with a spoon.; step3: Put baking sheet with dough in the oven.; step4: Mix the ingredients.; step5: Preheat the oven.; step6: Add ingredients to a bowl.; step7: decided to bake cookies at home; step8: bake cookies at home","flatten_input_for_script_generation":"You want to bake cookies at home. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step5 -> step6; step1 -> step3; step3 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to bake cookies at home; step1: Preheat the oven.; step2: Add ingredients to a bowl.; step3: Mix the ingredients.; step4: Place baking sheet on the counter.; step5: Scoop dough from the bowl with a spoon.; step6: Put cookie dough on baking sheet.; step7: Put baking sheet with dough in the oven.; step8: bake cookies at home; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step1 -> step2; step7 -> step8","gold_edges_for_prediction":["0->2","1->3","2->1","3->8","4->0","5->6","6->4","7->5"],"reference_code":"class BakeCookiesAtHome:\n\n    title = \"bake cookies at home\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to bake cookies at home\"\n\n    def step1(self):\n        return \"Preheat the oven.\"\n\n    def step2(self):\n        return \"Add ingredients to a bowl.\"\n\n    def step3(self):\n        return \"Mix the ingredients.\"\n\n    def step4(self):\n        return \"Place baking sheet on the counter.\"\n\n    def step5(self):\n        return \"Scoop dough from the bowl with a spoon.\"\n\n    def step6(self):\n        return \"Put cookie dough on baking sheet.\"\n\n    def step7(self):\n        return \"Put baking sheet with dough in the oven.\"\n\n    def step8(self):\n        return \"bake cookies at home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step1 -> step2\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BakeCookiesAtHome:\n\n    title = \"bake cookies at home\"\n    steps = 9\n\n","reference_graph":{"title":"bake cookies at home","num_steps":9,"schema":["step0: decided to bake cookies at home","step1: Preheat the oven.","step2: Add ingredients to a bowl.","step3: Mix the ingredients.","step4: Place baking sheet on the counter.","step5: Scoop dough from the bowl with a spoon.","step6: Put cookie dough on baking sheet.","step7: Put baking sheet with dough in the oven.","step8: bake cookies at home"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step1 -> step2","step7 -> step8"]}}
{"scenario":"see some fossils","events":{"0":"find fossil exhibit","1":"enter the museum","2":"drive to museum","3":"look up museums","4":"look at fossils","5":"NONE","6":"see some fossils"},"context":"NONE","minutes":70.0,"events_minutes":{"0":5.0,"1":5.0,"2":20.0,"3":20.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: find fossil exhibit; step1: enter the museum; step2: drive to museum; step3: look up museums; step4: look at fossils; step5: decided to see some fossils; step6: see some fossils","flatten_input_for_script_generation":"You want to see some fossils. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to see some fossils; step1: look up museums; step2: drive to museum; step3: enter the museum; step4: find fossil exhibit; step5: look at fossils; step6: see some fossils; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->6","5->3"],"reference_code":"class SeeSomeFossils:\n\n    title = \"see some fossils\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to see some fossils\"\n\n    def step1(self):\n        return \"look up museums\"\n\n    def step2(self):\n        return \"drive to museum\"\n\n    def step3(self):\n        return \"enter the museum\"\n\n    def step4(self):\n        return \"find fossil exhibit\"\n\n    def step5(self):\n        return \"look at fossils\"\n\n    def step6(self):\n        return \"see some fossils\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SeeSomeFossils:\n\n    title = \"see some fossils\"\n    steps = 7\n\n","reference_graph":{"title":"see some fossils","num_steps":7,"schema":["step0: decided to see some fossils","step1: look up museums","step2: drive to museum","step3: enter the museum","step4: find fossil exhibit","step5: look at fossils","step6: see some fossils"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"have a bonfire","events":{"0":"Collect match and fuel.","1":"Add fuel to wood.","2":"Set wood on fire.","3":"Gather wood for fire.","4":"Arrange wood in area outside.","5":"NONE","6":"have a bonfire"},"context":"NONE","minutes":27.0,"events_minutes":{"0":5.0,"1":1.0,"2":1.0,"3":15.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Collect match and fuel.; step1: Add fuel to wood.; step2: Set wood on fire.; step3: Gather wood for fire.; step4: Arrange wood in area outside.; step5: decided to have a bonfire; step6: have a bonfire","flatten_input_for_script_generation":"You want to have a bonfire. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step1; step0 -> step4; step1 -> step2; step2 -> step6; step5 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: decided to have a bonfire; step1: Collect match and fuel.; step2: Gather wood for fire.; step3: Arrange wood in area outside.; step4: Add fuel to wood.; step5: Set wood on fire.; step6: have a bonfire; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->4","4->1","5->3","5->0"],"reference_code":"class HaveABonfire:\n\n    title = \"have a bonfire\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have a bonfire\"\n\n    def step1(self):\n        return \"Collect match and fuel.\"\n\n    def step2(self):\n        return \"Gather wood for fire.\"\n\n    def step3(self):\n        return \"Arrange wood in area outside.\"\n\n    def step4(self):\n        return \"Add fuel to wood.\"\n\n    def step5(self):\n        return \"Set wood on fire.\"\n\n    def step6(self):\n        return \"have a bonfire\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveABonfire:\n\n    title = \"have a bonfire\"\n    steps = 7\n\n","reference_graph":{"title":"have a bonfire","num_steps":7,"schema":["step0: decided to have a bonfire","step1: Collect match and fuel.","step2: Gather wood for fire.","step3: Arrange wood in area outside.","step4: Add fuel to wood.","step5: Set wood on fire.","step6: have a bonfire"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step5 -> step6"]}}
{"scenario":"go to the bars with friends","events":{"0":"have a drink while waiting for uber.","1":"call a friend to go out.","2":"wait for friend to come over.","3":"take a shower and get ready.","4":"take an uber out.","5":"NONE","6":"go to the bars with friends"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":5.0,"2":10.0,"3":20.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: have a drink while waiting for uber.; step1: call a friend to go out.; step2: wait for friend to come over.; step3: take a shower and get ready.; step4: take an uber out.; step5: decided to go to the bars with friends; step6: go to the bars with friends","flatten_input_for_script_generation":"You want to go to the bars with friends. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go to the bars with friends; step1: call a friend to go out.; step2: take a shower and get ready.; step3: wait for friend to come over.; step4: have a drink while waiting for uber.; step5: take an uber out.; step6: go to the bars with friends; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->6","5->1"],"reference_code":"class GoToTheBarsWithFriends:\n\n    title = \"go to the bars with friends\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the bars with friends\"\n\n    def step1(self):\n        return \"call a friend to go out.\"\n\n    def step2(self):\n        return \"take a shower and get ready.\"\n\n    def step3(self):\n        return \"wait for friend to come over.\"\n\n    def step4(self):\n        return \"have a drink while waiting for uber.\"\n\n    def step5(self):\n        return \"take an uber out.\"\n\n    def step6(self):\n        return \"go to the bars with friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheBarsWithFriends:\n\n    title = \"go to the bars with friends\"\n    steps = 7\n\n","reference_graph":{"title":"go to the bars with friends","num_steps":7,"schema":["step0: decided to go to the bars with friends","step1: call a friend to go out.","step2: take a shower and get ready.","step3: wait for friend to come over.","step4: have a drink while waiting for uber.","step5: take an uber out.","step6: go to the bars with friends"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take horse riding classes","events":{"0":"Schedule a lesson with this horse riding training company","1":"Find a local horse riding training business","2":"Call the horse riding training business once found","3":"Google Horse Riding Lessons","4":"Travel to the appointment made with the horse company","5":"Learn to ride the horse under the tutors","6":"Check in at the horse business for the appointment","7":"NONE","8":"take horse riding classes"},"context":"NONE","minutes":360.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":0.3333333333,"4":30.0,"5":240.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: Schedule a lesson with this horse riding training company; step1: Find a local horse riding training business; step2: Call the horse riding training business once found; step3: Google Horse Riding Lessons; step4: Travel to the appointment made with the horse company; step5: Learn to ride the horse under the tutors; step6: Check in at the horse business for the appointment; step7: decided to take horse riding classes; step8: take horse riding classes","flatten_input_for_script_generation":"You want to take horse riding classes. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step6 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to take horse riding classes; step1: Google Horse Riding Lessons; step2: Find a local horse riding training business; step3: Call the horse riding training business once found; step4: Schedule a lesson with this horse riding training company; step5: Travel to the appointment made with the horse company; step6: Check in at the horse business for the appointment; step7: Learn to ride the horse under the tutors; step8: take horse riding classes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->6","5->8","6->5","7->3"],"reference_code":"class TakeHorseRidingClasses:\n\n    title = \"take horse riding classes\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take horse riding classes\"\n\n    def step1(self):\n        return \"Google Horse Riding Lessons\"\n\n    def step2(self):\n        return \"Find a local horse riding training business\"\n\n    def step3(self):\n        return \"Call the horse riding training business once found\"\n\n    def step4(self):\n        return \"Schedule a lesson with this horse riding training company\"\n\n    def step5(self):\n        return \"Travel to the appointment made with the horse company\"\n\n    def step6(self):\n        return \"Check in at the horse business for the appointment\"\n\n    def step7(self):\n        return \"Learn to ride the horse under the tutors\"\n\n    def step8(self):\n        return \"take horse riding classes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeHorseRidingClasses:\n\n    title = \"take horse riding classes\"\n    steps = 9\n\n","reference_graph":{"title":"take horse riding classes","num_steps":9,"schema":["step0: decided to take horse riding classes","step1: Google Horse Riding Lessons","step2: Find a local horse riding training business","step3: Call the horse riding training business once found","step4: Schedule a lesson with this horse riding training company","step5: Travel to the appointment made with the horse company","step6: Check in at the horse business for the appointment","step7: Learn to ride the horse under the tutors","step8: take horse riding classes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"adopt some children","events":{"0":"meet the child","1":"choose an adoption agency","2":"look at the files of the children","3":"fill out the paperwork","4":"drive to the adoption agency","5":"search for an adoption agency","6":"decide on a child","7":"NONE","8":"adopt some children"},"context":"NONE","minutes":180.0,"events_minutes":{"0":15.0,"1":5.0,"2":45.0,"3":15.0,"4":15.0,"5":15.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: meet the child; step1: choose an adoption agency; step2: look at the files of the children; step3: fill out the paperwork; step4: drive to the adoption agency; step5: search for an adoption agency; step6: decide on a child; step7: decided to adopt some children; step8: adopt some children","flatten_input_for_script_generation":"You want to adopt some children. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step6 -> step0; step0 -> step3; step3 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to adopt some children; step1: search for an adoption agency; step2: choose an adoption agency; step3: drive to the adoption agency; step4: look at the files of the children; step5: decide on a child; step6: meet the child; step7: fill out the paperwork; step8: adopt some children; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->4","2->6","3->8","4->2","5->1","6->0","7->5"],"reference_code":"class AdoptSomeChildren:\n\n    title = \"adopt some children\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to adopt some children\"\n\n    def step1(self):\n        return \"search for an adoption agency\"\n\n    def step2(self):\n        return \"choose an adoption agency\"\n\n    def step3(self):\n        return \"drive to the adoption agency\"\n\n    def step4(self):\n        return \"look at the files of the children\"\n\n    def step5(self):\n        return \"decide on a child\"\n\n    def step6(self):\n        return \"meet the child\"\n\n    def step7(self):\n        return \"fill out the paperwork\"\n\n    def step8(self):\n        return \"adopt some children\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class AdoptSomeChildren:\n\n    title = \"adopt some children\"\n    steps = 9\n\n","reference_graph":{"title":"adopt some children","num_steps":9,"schema":["step0: decided to adopt some children","step1: search for an adoption agency","step2: choose an adoption agency","step3: drive to the adoption agency","step4: look at the files of the children","step5: decide on a child","step6: meet the child","step7: fill out the paperwork","step8: adopt some children"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"buy a book to read on the plane","events":{"0":"catch a ride to the bookstore","1":"browse sections with books of interest","2":"remit payment for the item","3":"read back cover summaries of interesting titles","4":"make a final pick","5":"stand in line at the cash register","6":"NONE","7":"buy a book to read on the plane"},"context":"NONE","minutes":45.0,"events_minutes":{"0":15.0,"1":10.0,"2":3.0,"3":10.0,"4":5.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: catch a ride to the bookstore; step1: browse sections with books of interest; step2: remit payment for the item; step3: read back cover summaries of interesting titles; step4: make a final pick; step5: stand in line at the cash register; step6: decided to buy a book to read on the plane; step7: buy a book to read on the plane","flatten_input_for_script_generation":"You want to buy a book to read on the plane. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step5; step5 -> step2; step2 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to buy a book to read on the plane; step1: catch a ride to the bookstore; step2: browse sections with books of interest; step3: read back cover summaries of interesting titles; step4: make a final pick; step5: stand in line at the cash register; step6: remit payment for the item; step7: buy a book to read on the plane; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->7","3->4","4->5","5->2","6->0"],"reference_code":"class BuyABookToReadOnThePlane:\n\n    title = \"buy a book to read on the plane\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy a book to read on the plane\"\n\n    def step1(self):\n        return \"catch a ride to the bookstore\"\n\n    def step2(self):\n        return \"browse sections with books of interest\"\n\n    def step3(self):\n        return \"read back cover summaries of interesting titles\"\n\n    def step4(self):\n        return \"make a final pick\"\n\n    def step5(self):\n        return \"stand in line at the cash register\"\n\n    def step6(self):\n        return \"remit payment for the item\"\n\n    def step7(self):\n        return \"buy a book to read on the plane\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyABookToReadOnThePlane:\n\n    title = \"buy a book to read on the plane\"\n    steps = 8\n\n","reference_graph":{"title":"buy a book to read on the plane","num_steps":8,"schema":["step0: decided to buy a book to read on the plane","step1: catch a ride to the bookstore","step2: browse sections with books of interest","step3: read back cover summaries of interesting titles","step4: make a final pick","step5: stand in line at the cash register","step6: remit payment for the item","step7: buy a book to read on the plane"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go on an adventure","events":{"0":"Narrow down the list of places","1":"Lookup the place online","2":"Brainstorm places to go","3":"Pick one place","4":"Take a trip to the place","5":"Pack everything needed","6":"NONE","7":"go on an adventure"},"context":"NONE","minutes":10.0,"events_minutes":{"0":2.0,"1":1.0,"2":3.0,"3":1.0,"4":2.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Narrow down the list of places; step1: Lookup the place online; step2: Brainstorm places to go; step3: Pick one place; step4: Take a trip to the place; step5: Pack everything needed; step6: decided to go on an adventure; step7: go on an adventure","flatten_input_for_script_generation":"You want to go on an adventure. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step0 -> step3; step3 -> step1; step1 -> step5; step5 -> step4; step4 -> step7; step6 -> step2; step6 -> step0","flatten_output_for_script_generation":"step0: decided to go on an adventure; step1: Narrow down the list of places; step2: Brainstorm places to go; step3: Pick one place; step4: Lookup the place online; step5: Pack everything needed; step6: Take a trip to the place; step7: go on an adventure; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->5","2->3","3->1","4->7","5->4","6->2","6->0"],"reference_code":"class GoOnAnAdventure:\n\n    title = \"go on an adventure\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go on an adventure\"\n\n    def step1(self):\n        return \"Narrow down the list of places\"\n\n    def step2(self):\n        return \"Brainstorm places to go\"\n\n    def step3(self):\n        return \"Pick one place\"\n\n    def step4(self):\n        return \"Lookup the place online\"\n\n    def step5(self):\n        return \"Pack everything needed\"\n\n    def step6(self):\n        return \"Take a trip to the place\"\n\n    def step7(self):\n        return \"go on an adventure\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoOnAnAdventure:\n\n    title = \"go on an adventure\"\n    steps = 8\n\n","reference_graph":{"title":"go on an adventure","num_steps":8,"schema":["step0: decided to go on an adventure","step1: Narrow down the list of places","step2: Brainstorm places to go","step3: Pick one place","step4: Lookup the place online","step5: Pack everything needed","step6: Take a trip to the place","step7: go on an adventure"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"eat a banana for lunch","events":{"0":"walk to the kitchen","1":"leave the bedroom","2":"find the bananas","3":"pick up a banana","4":"peel the banana","5":"NONE","6":"eat a banana for lunch"},"context":"NONE","minutes":2.0,"events_minutes":{"0":0.5,"1":1.0,"2":0.5,"3":0.3333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: walk to the kitchen; step1: leave the bedroom; step2: find the bananas; step3: pick up a banana; step4: peel the banana; step5: decided to eat a banana for lunch; step6: eat a banana for lunch","flatten_input_for_script_generation":"You want to eat a banana for lunch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to eat a banana for lunch; step1: leave the bedroom; step2: walk to the kitchen; step3: find the bananas; step4: pick up a banana; step5: peel the banana; step6: eat a banana for lunch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->4","4->6","5->1"],"reference_code":"class EatABananaForLunch:\n\n    title = \"eat a banana for lunch\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat a banana for lunch\"\n\n    def step1(self):\n        return \"leave the bedroom\"\n\n    def step2(self):\n        return \"walk to the kitchen\"\n\n    def step3(self):\n        return \"find the bananas\"\n\n    def step4(self):\n        return \"pick up a banana\"\n\n    def step5(self):\n        return \"peel the banana\"\n\n    def step6(self):\n        return \"eat a banana for lunch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatABananaForLunch:\n\n    title = \"eat a banana for lunch\"\n    steps = 7\n\n","reference_graph":{"title":"eat a banana for lunch","num_steps":7,"schema":["step0: decided to eat a banana for lunch","step1: leave the bedroom","step2: walk to the kitchen","step3: find the bananas","step4: pick up a banana","step5: peel the banana","step6: eat a banana for lunch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a laser","events":{"0":"park the car","1":"go inside the mall","2":"get in the car","3":"go to the right shop","4":"drive to the mall","5":"NONE","6":"get a laser"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":10.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: park the car; step1: go inside the mall; step2: get in the car; step3: go to the right shop; step4: drive to the mall; step5: decided to get a laser; step6: get a laser","flatten_input_for_script_generation":"You want to get a laser. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get a laser; step1: get in the car; step2: drive to the mall; step3: park the car; step4: go inside the mall; step5: go to the right shop; step6: get a laser; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->4","3->6","4->0","5->2"],"reference_code":"class GetALaser:\n\n    title = \"get a laser\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a laser\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the mall\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the mall\"\n\n    def step5(self):\n        return \"go to the right shop\"\n\n    def step6(self):\n        return \"get a laser\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetALaser:\n\n    title = \"get a laser\"\n    steps = 7\n\n","reference_graph":{"title":"get a laser","num_steps":7,"schema":["step0: decided to get a laser","step1: get in the car","step2: drive to the mall","step3: park the car","step4: go inside the mall","step5: go to the right shop","step6: get a laser"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play a musical instrument","events":{"0":"put sheet music on a music stand","1":"open instrument case","2":"remove instrument from case","3":"retrieve instrument case","4":"open book of sheet music","5":"assemble instrument parts","6":"put mouthpiece to mouth","7":"NONE","8":"play a musical instrument"},"context":"NONE","minutes":20.0,"events_minutes":{"0":0.3333333333,"1":1.0,"2":0.1666666667,"3":5.0,"4":0.3333333333,"5":5.0,"6":0.25},"flatten_input_for_edge_prediction":"step0: put sheet music on a music stand; step1: open instrument case; step2: remove instrument from case; step3: retrieve instrument case; step4: open book of sheet music; step5: assemble instrument parts; step6: put mouthpiece to mouth; step7: decided to play a musical instrument; step8: play a musical instrument","flatten_input_for_script_generation":"You want to play a musical instrument. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step4 -> step0; step0 -> step8; step2 -> step5; step5 -> step6; step6 -> step8; step7 -> step3; step7 -> step4","flatten_output_for_script_generation":"step0: decided to play a musical instrument; step1: open book of sheet music; step2: retrieve instrument case; step3: open instrument case; step4: remove instrument from case; step5: assemble instrument parts; step6: put sheet music on a music stand; step7: play a musical instrument; step8: put mouthpiece to mouth; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step7; step5 -> step8; step8 -> step7","gold_edges_for_prediction":["0->8","1->2","2->5","3->1","4->0","5->6","6->8","7->3","7->4"],"reference_code":"class PlayAMusicalInstrument:\n\n    title = \"play a musical instrument\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to play a musical instrument\"\n\n    def step1(self):\n        return \"open book of sheet music\"\n\n    def step2(self):\n        return \"retrieve instrument case\"\n\n    def step3(self):\n        return \"open instrument case\"\n\n    def step4(self):\n        return \"remove instrument from case\"\n\n    def step5(self):\n        return \"assemble instrument parts\"\n\n    def step6(self):\n        return \"put sheet music on a music stand\"\n\n    def step7(self):\n        return \"play a musical instrument\"\n\n    def step8(self):\n        return \"put mouthpiece to mouth\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step7\",\n            \"step5 -> step8\",\n            \"step8 -> step7\",\n        ]\n","input_prompt_code":"class PlayAMusicalInstrument:\n\n    title = \"play a musical instrument\"\n    steps = 9\n\n","reference_graph":{"title":"play a musical instrument","num_steps":9,"schema":["step0: decided to play a musical instrument","step1: open book of sheet music","step2: retrieve instrument case","step3: open instrument case","step4: remove instrument from case","step5: assemble instrument parts","step6: put sheet music on a music stand","step7: play a musical instrument","step8: put mouthpiece to mouth"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step7","step5 -> step8","step8 -> step7"]}}
{"scenario":"pen a metal symphony","events":{"0":"come up with a killer riff","1":"pick up a pen","2":"revise until composition is perfect","3":"pick up a piece of sheet music paper","4":"pen out the riff to the sheet music","5":"plug guitar into amp","6":"turn on amp","7":"NONE","8":"pen a metal symphony"},"context":"NONE","minutes":60.0,"events_minutes":{"0":60.0,"1":0.5833333333,"2":60.0,"3":0.5833333333,"4":15.0,"5":0.5833333333,"6":0.1666666667},"flatten_input_for_edge_prediction":"step0: come up with a killer riff; step1: pick up a pen; step2: revise until composition is perfect; step3: pick up a piece of sheet music paper; step4: pen out the riff to the sheet music; step5: plug guitar into amp; step6: turn on amp; step7: decided to pen a metal symphony; step8: pen a metal symphony","flatten_input_for_script_generation":"You want to pen a metal symphony. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step1 -> step4; step5 -> step6; step6 -> step0; step0 -> step4; step4 -> step2; step2 -> step8; step7 -> step3; step7 -> step1; step7 -> step5","flatten_output_for_script_generation":"step0: decided to pen a metal symphony; step1: plug guitar into amp; step2: pick up a piece of sheet music paper; step3: pen out the riff to the sheet music; step4: revise until composition is perfect; step5: pick up a pen; step6: turn on amp; step7: come up with a killer riff; step8: pen a metal symphony; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step6; step6 -> step7; step7 -> step3; step4 -> step8","gold_edges_for_prediction":["0->4","1->4","2->8","3->4","4->2","5->6","6->0","7->3","7->1","7->5"],"reference_code":"class PenAMetalSymphony:\n\n    title = \"pen a metal symphony\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to pen a metal symphony\"\n\n    def step1(self):\n        return \"plug guitar into amp\"\n\n    def step2(self):\n        return \"pick up a piece of sheet music paper\"\n\n    def step3(self):\n        return \"pen out the riff to the sheet music\"\n\n    def step4(self):\n        return \"revise until composition is perfect\"\n\n    def step5(self):\n        return \"pick up a pen\"\n\n    def step6(self):\n        return \"turn on amp\"\n\n    def step7(self):\n        return \"come up with a killer riff\"\n\n    def step8(self):\n        return \"pen a metal symphony\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step3\",\n            \"step4 -> step8\",\n        ]\n","input_prompt_code":"class PenAMetalSymphony:\n\n    title = \"pen a metal symphony\"\n    steps = 9\n\n","reference_graph":{"title":"pen a metal symphony","num_steps":9,"schema":["step0: decided to pen a metal symphony","step1: plug guitar into amp","step2: pick up a piece of sheet music paper","step3: pen out the riff to the sheet music","step4: revise until composition is perfect","step5: pick up a pen","step6: turn on amp","step7: come up with a killer riff","step8: pen a metal symphony"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step6","step6 -> step7","step7 -> step3","step4 -> step8"]}}
{"scenario":"have some a homemade banana split","events":{"0":"Cover ice cream with chocolate","1":"Slice a banana in half","2":"Get ice cream from the freezer","3":"Scoop ice cream onto banana","4":"Garnish with some nuts","5":"NONE","6":"have some a homemade banana split"},"context":"NONE","minutes":15.0,"events_minutes":{"0":0.5,"1":1.0,"2":1.0,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: Cover ice cream with chocolate; step1: Slice a banana in half; step2: Get ice cream from the freezer; step3: Scoop ice cream onto banana; step4: Garnish with some nuts; step5: decided to have some a homemade banana split; step6: have some a homemade banana split","flatten_input_for_script_generation":"You want to have some a homemade banana split. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: decided to have some a homemade banana split; step1: Slice a banana in half; step2: Get ice cream from the freezer; step3: Scoop ice cream onto banana; step4: Cover ice cream with chocolate; step5: Garnish with some nuts; step6: have some a homemade banana split; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->3","3->0","4->6","5->2","5->1"],"reference_code":"class HaveSomeAHomemadeBananaSplit:\n\n    title = \"have some a homemade banana split\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have some a homemade banana split\"\n\n    def step1(self):\n        return \"Slice a banana in half\"\n\n    def step2(self):\n        return \"Get ice cream from the freezer\"\n\n    def step3(self):\n        return \"Scoop ice cream onto banana\"\n\n    def step4(self):\n        return \"Cover ice cream with chocolate\"\n\n    def step5(self):\n        return \"Garnish with some nuts\"\n\n    def step6(self):\n        return \"have some a homemade banana split\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveSomeAHomemadeBananaSplit:\n\n    title = \"have some a homemade banana split\"\n    steps = 7\n\n","reference_graph":{"title":"have some a homemade banana split","num_steps":7,"schema":["step0: decided to have some a homemade banana split","step1: Slice a banana in half","step2: Get ice cream from the freezer","step3: Scoop ice cream onto banana","step4: Cover ice cream with chocolate","step5: Garnish with some nuts","step6: have some a homemade banana split"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"captain a boat","events":{"0":"attend formal interviews","1":"review job offers made","2":"dress for formal interviews","3":"submit applications for captain positions","4":"accept desired captain's position","5":"NONE","6":"captain a boat"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":7200.0,"1":1440.0,"2":15.0,"3":10080.0,"4":1440.0},"flatten_input_for_edge_prediction":"step0: attend formal interviews; step1: review job offers made; step2: dress for formal interviews; step3: submit applications for captain positions; step4: accept desired captain's position; step5: decided to captain a boat; step6: captain a boat","flatten_input_for_script_generation":"You want to captain a boat. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to captain a boat; step1: submit applications for captain positions; step2: dress for formal interviews; step3: attend formal interviews; step4: review job offers made; step5: accept desired captain's position; step6: captain a boat; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class CaptainABoat:\n\n    title = \"captain a boat\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to captain a boat\"\n\n    def step1(self):\n        return \"submit applications for captain positions\"\n\n    def step2(self):\n        return \"dress for formal interviews\"\n\n    def step3(self):\n        return \"attend formal interviews\"\n\n    def step4(self):\n        return \"review job offers made\"\n\n    def step5(self):\n        return \"accept desired captain's position\"\n\n    def step6(self):\n        return \"captain a boat\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CaptainABoat:\n\n    title = \"captain a boat\"\n    steps = 7\n\n","reference_graph":{"title":"captain a boat","num_steps":7,"schema":["step0: decided to captain a boat","step1: submit applications for captain positions","step2: dress for formal interviews","step3: attend formal interviews","step4: review job offers made","step5: accept desired captain's position","step6: captain a boat"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"open up a convenience store","events":{"0":"Speak with owner.","1":"Search out convenience store's for sale.","2":"Decide on price.","3":"Wait for loan approval.","4":"Put in loan application.","5":"Decide on desired store.","6":"Travel to bank.","7":"NONE","8":"open up a convenience store"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":60.0,"1":10080.0,"2":60.0,"3":10080.0,"4":60.0,"5":1440.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: Speak with owner.; step1: Search out convenience store's for sale.; step2: Decide on price.; step3: Wait for loan approval.; step4: Put in loan application.; step5: Decide on desired store.; step6: Travel to bank.; step7: decided to open up a convenience store; step8: open up a convenience store","flatten_input_for_script_generation":"You want to open up a convenience store. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step0; step0 -> step2; step2 -> step6; step6 -> step4; step4 -> step3; step3 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to open up a convenience store; step1: Search out convenience store's for sale.; step2: Decide on desired store.; step3: Speak with owner.; step4: Decide on price.; step5: Travel to bank.; step6: Put in loan application.; step7: Wait for loan approval.; step8: open up a convenience store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->5","2->6","3->8","4->3","5->0","6->4","7->1"],"reference_code":"class OpenUpAConvenienceStore:\n\n    title = \"open up a convenience store\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to open up a convenience store\"\n\n    def step1(self):\n        return \"Search out convenience store's for sale.\"\n\n    def step2(self):\n        return \"Decide on desired store.\"\n\n    def step3(self):\n        return \"Speak with owner.\"\n\n    def step4(self):\n        return \"Decide on price.\"\n\n    def step5(self):\n        return \"Travel to bank.\"\n\n    def step6(self):\n        return \"Put in loan application.\"\n\n    def step7(self):\n        return \"Wait for loan approval.\"\n\n    def step8(self):\n        return \"open up a convenience store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class OpenUpAConvenienceStore:\n\n    title = \"open up a convenience store\"\n    steps = 9\n\n","reference_graph":{"title":"open up a convenience store","num_steps":9,"schema":["step0: decided to open up a convenience store","step1: Search out convenience store's for sale.","step2: Decide on desired store.","step3: Speak with owner.","step4: Decide on price.","step5: Travel to bank.","step6: Put in loan application.","step7: Wait for loan approval.","step8: open up a convenience store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"study for a big test","events":{"0":"go to the library.","1":"study the note cards.","2":"make note cards.","3":"find a quiet area.","4":"read the chapters.","5":"NONE","6":"study for a big test"},"context":"NONE","minutes":300.0,"events_minutes":{"0":20.0,"1":180.0,"2":60.0,"3":5.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: go to the library.; step1: study the note cards.; step2: make note cards.; step3: find a quiet area.; step4: read the chapters.; step5: decided to study for a big test; step6: study for a big test","flatten_input_for_script_generation":"You want to study for a big test. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to study for a big test; step1: go to the library.; step2: find a quiet area.; step3: read the chapters.; step4: make note cards.; step5: study the note cards.; step6: study for a big test; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->2","5->0"],"reference_code":"class StudyForABigTest:\n\n    title = \"study for a big test\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to study for a big test\"\n\n    def step1(self):\n        return \"go to the library.\"\n\n    def step2(self):\n        return \"find a quiet area.\"\n\n    def step3(self):\n        return \"read the chapters.\"\n\n    def step4(self):\n        return \"make note cards.\"\n\n    def step5(self):\n        return \"study the note cards.\"\n\n    def step6(self):\n        return \"study for a big test\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StudyForABigTest:\n\n    title = \"study for a big test\"\n    steps = 7\n\n","reference_graph":{"title":"study for a big test","num_steps":7,"schema":["step0: decided to study for a big test","step1: go to the library.","step2: find a quiet area.","step3: read the chapters.","step4: make note cards.","step5: study the note cards.","step6: study for a big test"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go off roading","events":{"0":"Start the truck","1":"Drive onto recreation trails","2":"Unlock garage door with beeper","3":"Drive to local vehicle recreation area","4":"Get into truck","5":"Pay the day use fee","6":"Walk into garage","7":"NONE","8":"go off roading"},"context":"NONE","minutes":180.0,"events_minutes":{"0":0.0833333333,"1":5.0,"2":0.0833333333,"3":60.0,"4":0.5,"5":2.0,"6":2.0},"flatten_input_for_edge_prediction":"step0: Start the truck; step1: Drive onto recreation trails; step2: Unlock garage door with beeper; step3: Drive to local vehicle recreation area; step4: Get into truck; step5: Pay the day use fee; step6: Walk into garage; step7: decided to go off roading; step8: go off roading","flatten_input_for_script_generation":"You want to go off roading. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step4; step2 -> step3; step4 -> step0; step0 -> step3; step3 -> step5; step5 -> step1; step1 -> step8; step7 -> step6; step7 -> step2","flatten_output_for_script_generation":"step0: decided to go off roading; step1: Unlock garage door with beeper; step2: Walk into garage; step3: Get into truck; step4: Start the truck; step5: Drive to local vehicle recreation area; step6: Pay the day use fee; step7: Drive onto recreation trails; step8: go off roading; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step4 -> step5; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->8","2->3","3->5","4->0","5->1","6->4","7->6","7->2"],"reference_code":"class GoOffRoading:\n\n    title = \"go off roading\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go off roading\"\n\n    def step1(self):\n        return \"Unlock garage door with beeper\"\n\n    def step2(self):\n        return \"Walk into garage\"\n\n    def step3(self):\n        return \"Get into truck\"\n\n    def step4(self):\n        return \"Start the truck\"\n\n    def step5(self):\n        return \"Drive to local vehicle recreation area\"\n\n    def step6(self):\n        return \"Pay the day use fee\"\n\n    def step7(self):\n        return \"Drive onto recreation trails\"\n\n    def step8(self):\n        return \"go off roading\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoOffRoading:\n\n    title = \"go off roading\"\n    steps = 9\n\n","reference_graph":{"title":"go off roading","num_steps":9,"schema":["step0: decided to go off roading","step1: Unlock garage door with beeper","step2: Walk into garage","step3: Get into truck","step4: Start the truck","step5: Drive to local vehicle recreation area","step6: Pay the day use fee","step7: Drive onto recreation trails","step8: go off roading"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step4 -> step5","step6 -> step7","step7 -> step8"]}}
{"scenario":"make a fashion statement","events":{"0":"look through clothing","1":"wear the outfit","2":"decide on a fashion trend","3":"search for fashion trends online","4":"set up an outfit","5":"NONE","6":"make a fashion statement"},"context":"NONE","minutes":45.0,"events_minutes":{"0":15.0,"1":5.0,"2":5.0,"3":15.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: look through clothing; step1: wear the outfit; step2: decide on a fashion trend; step3: search for fashion trends online; step4: set up an outfit; step5: decided to make a fashion statement; step6: make a fashion statement","flatten_input_for_script_generation":"You want to make a fashion statement. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to make a fashion statement; step1: search for fashion trends online; step2: decide on a fashion trend; step3: look through clothing; step4: set up an outfit; step5: wear the outfit; step6: make a fashion statement; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class MakeAFashionStatement:\n\n    title = \"make a fashion statement\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a fashion statement\"\n\n    def step1(self):\n        return \"search for fashion trends online\"\n\n    def step2(self):\n        return \"decide on a fashion trend\"\n\n    def step3(self):\n        return \"look through clothing\"\n\n    def step4(self):\n        return \"set up an outfit\"\n\n    def step5(self):\n        return \"wear the outfit\"\n\n    def step6(self):\n        return \"make a fashion statement\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeAFashionStatement:\n\n    title = \"make a fashion statement\"\n    steps = 7\n\n","reference_graph":{"title":"make a fashion statement","num_steps":7,"schema":["step0: decided to make a fashion statement","step1: search for fashion trends online","step2: decide on a fashion trend","step3: look through clothing","step4: set up an outfit","step5: wear the outfit","step6: make a fashion statement"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go meet some new people","events":{"0":"enter area to meet people","1":"look up places with people online","2":"arrive at place of people","3":"get in car","4":"drive to place","5":"NONE","6":"go meet some new people"},"context":"NONE","minutes":30.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":3.0,"4":25.0},"flatten_input_for_edge_prediction":"step0: enter area to meet people; step1: look up places with people online; step2: arrive at place of people; step3: get in car; step4: drive to place; step5: decided to go meet some new people; step6: go meet some new people","flatten_input_for_script_generation":"You want to go meet some new people. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go meet some new people; step1: look up places with people online; step2: get in car; step3: drive to place; step4: arrive at place of people; step5: enter area to meet people; step6: go meet some new people; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->4","4->2","5->1"],"reference_code":"class GoMeetSomeNewPeople:\n\n    title = \"go meet some new people\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go meet some new people\"\n\n    def step1(self):\n        return \"look up places with people online\"\n\n    def step2(self):\n        return \"get in car\"\n\n    def step3(self):\n        return \"drive to place\"\n\n    def step4(self):\n        return \"arrive at place of people\"\n\n    def step5(self):\n        return \"enter area to meet people\"\n\n    def step6(self):\n        return \"go meet some new people\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoMeetSomeNewPeople:\n\n    title = \"go meet some new people\"\n    steps = 7\n\n","reference_graph":{"title":"go meet some new people","num_steps":7,"schema":["step0: decided to go meet some new people","step1: look up places with people online","step2: get in car","step3: drive to place","step4: arrive at place of people","step5: enter area to meet people","step6: go meet some new people"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"paint a portrait","events":{"0":"purchase painting supplies","1":"get in car","2":"set the equipment all up","3":"drive back home","4":"drive to store","5":"NONE","6":"paint a portrait"},"context":"NONE","minutes":120.0,"events_minutes":{"0":10.0,"1":5.0,"2":25.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: purchase painting supplies; step1: get in car; step2: set the equipment all up; step3: drive back home; step4: drive to store; step5: decided to paint a portrait; step6: paint a portrait","flatten_input_for_script_generation":"You want to paint a portrait. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to paint a portrait; step1: get in car; step2: drive to store; step3: purchase painting supplies; step4: drive back home; step5: set the equipment all up; step6: paint a portrait; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->2","4->0","5->1"],"reference_code":"class PaintAPortrait:\n\n    title = \"paint a portrait\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to paint a portrait\"\n\n    def step1(self):\n        return \"get in car\"\n\n    def step2(self):\n        return \"drive to store\"\n\n    def step3(self):\n        return \"purchase painting supplies\"\n\n    def step4(self):\n        return \"drive back home\"\n\n    def step5(self):\n        return \"set the equipment all up\"\n\n    def step6(self):\n        return \"paint a portrait\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PaintAPortrait:\n\n    title = \"paint a portrait\"\n    steps = 7\n\n","reference_graph":{"title":"paint a portrait","num_steps":7,"schema":["step0: decided to paint a portrait","step1: get in car","step2: drive to store","step3: purchase painting supplies","step4: drive back home","step5: set the equipment all up","step6: paint a portrait"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"relax on Saturday","events":{"0":"watch movies in bed","1":"take naps in house","2":"relax in bed","3":"don't leave the house","4":"find relaxing things to do","5":"NONE","6":"relax on Saturday"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":180.0,"1":60.0,"2":180.0,"3":1440.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: watch movies in bed; step1: take naps in house; step2: relax in bed; step3: don't leave the house; step4: find relaxing things to do; step5: decided to relax on Saturday; step6: relax on Saturday","flatten_input_for_script_generation":"You want to relax on Saturday. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step3 -> step4; step2 -> step6; step0 -> step2; step1 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: decided to relax on Saturday; step1: don't leave the house; step2: find relaxing things to do; step3: take naps in house; step4: watch movies in bed; step5: relax in bed; step6: relax on Saturday; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","4->1","5->3"],"reference_code":"class RelaxOnSaturday:\n\n    title = \"relax on Saturday\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to relax on Saturday\"\n\n    def step1(self):\n        return \"don't leave the house\"\n\n    def step2(self):\n        return \"find relaxing things to do\"\n\n    def step3(self):\n        return \"take naps in house\"\n\n    def step4(self):\n        return \"watch movies in bed\"\n\n    def step5(self):\n        return \"relax in bed\"\n\n    def step6(self):\n        return \"relax on Saturday\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class RelaxOnSaturday:\n\n    title = \"relax on Saturday\"\n    steps = 7\n\n","reference_graph":{"title":"relax on Saturday","num_steps":7,"schema":["step0: decided to relax on Saturday","step1: don't leave the house","step2: find relaxing things to do","step3: take naps in house","step4: watch movies in bed","step5: relax in bed","step6: relax on Saturday"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step5 -> step6","step4 -> step5"]}}
{"scenario":"take a shower before work","events":{"0":"turn on the shower","1":"pick up a towel","2":"walk to the linen closet","3":"walk to the bathroom","4":"go in the bathroom","5":"close the door","6":"get up from the bed","7":"NONE","8":"take a shower before work"},"context":"NONE","minutes":20.0,"events_minutes":{"0":0.3333333333,"1":0.3333333333,"2":1.0,"3":0.3333333333,"4":0.1666666667,"5":0.1666666667,"6":1.0},"flatten_input_for_edge_prediction":"step0: turn on the shower; step1: pick up a towel; step2: walk to the linen closet; step3: walk to the bathroom; step4: go in the bathroom; step5: close the door; step6: get up from the bed; step7: decided to take a shower before work; step8: take a shower before work","flatten_input_for_script_generation":"You want to take a shower before work. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step2; step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step0; step4 -> step5; step5 -> step8; step0 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to take a shower before work; step1: get up from the bed; step2: walk to the linen closet; step3: pick up a towel; step4: walk to the bathroom; step5: go in the bathroom; step6: turn on the shower; step7: close the door; step8: take a shower before work; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->3","2->1","3->4","4->0","4->5","5->8","6->2","7->6"],"reference_code":"class TakeAShowerBeforeWork:\n\n    title = \"take a shower before work\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take a shower before work\"\n\n    def step1(self):\n        return \"get up from the bed\"\n\n    def step2(self):\n        return \"walk to the linen closet\"\n\n    def step3(self):\n        return \"pick up a towel\"\n\n    def step4(self):\n        return \"walk to the bathroom\"\n\n    def step5(self):\n        return \"go in the bathroom\"\n\n    def step6(self):\n        return \"turn on the shower\"\n\n    def step7(self):\n        return \"close the door\"\n\n    def step8(self):\n        return \"take a shower before work\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeAShowerBeforeWork:\n\n    title = \"take a shower before work\"\n    steps = 9\n\n","reference_graph":{"title":"take a shower before work","num_steps":9,"schema":["step0: decided to take a shower before work","step1: get up from the bed","step2: walk to the linen closet","step3: pick up a towel","step4: walk to the bathroom","step5: go in the bathroom","step6: turn on the shower","step7: close the door","step8: take a shower before work"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"stop having a monotonous boring life","events":{"0":"go everyday to stop having a boring life","1":"find a hobby","2":"find location to practice hobby","3":"enter hobby location","4":"drive to locations","5":"NONE","6":"stop having a monotonous boring life"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":10080.0,"1":1440.0,"2":120.0,"3":5.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: go everyday to stop having a boring life; step1: find a hobby; step2: find location to practice hobby; step3: enter hobby location; step4: drive to locations; step5: decided to stop having a monotonous boring life; step6: stop having a monotonous boring life","flatten_input_for_script_generation":"You want to stop having a monotonous boring life. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to stop having a monotonous boring life; step1: find a hobby; step2: find location to practice hobby; step3: drive to locations; step4: enter hobby location; step5: go everyday to stop having a boring life; step6: stop having a monotonous boring life; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->3","5->1"],"reference_code":"class StopHavingAMonotonousBoringLife:\n\n    title = \"stop having a monotonous boring life\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to stop having a monotonous boring life\"\n\n    def step1(self):\n        return \"find a hobby\"\n\n    def step2(self):\n        return \"find location to practice hobby\"\n\n    def step3(self):\n        return \"drive to locations\"\n\n    def step4(self):\n        return \"enter hobby location\"\n\n    def step5(self):\n        return \"go everyday to stop having a boring life\"\n\n    def step6(self):\n        return \"stop having a monotonous boring life\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StopHavingAMonotonousBoringLife:\n\n    title = \"stop having a monotonous boring life\"\n    steps = 7\n\n","reference_graph":{"title":"stop having a monotonous boring life","num_steps":7,"schema":["step0: decided to stop having a monotonous boring life","step1: find a hobby","step2: find location to practice hobby","step3: drive to locations","step4: enter hobby location","step5: go everyday to stop having a boring life","step6: stop having a monotonous boring life"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"flip a car","events":{"0":"drive to somewhere the road is straight and long","1":"put on protective gear","2":"drive down the road and pick up speed","3":"start the car","4":"steer sharply to one side","5":"NONE","6":"flip a car"},"context":"NONE","minutes":28.0,"events_minutes":{"0":20.0,"1":5.0,"2":2.0,"3":1.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: drive to somewhere the road is straight and long; step1: put on protective gear; step2: drive down the road and pick up speed; step3: start the car; step4: steer sharply to one side; step5: decided to flip a car; step6: flip a car","flatten_input_for_script_generation":"You want to flip a car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step1 -> step3; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to flip a car; step1: put on protective gear; step2: start the car; step3: drive to somewhere the road is straight and long; step4: drive down the road and pick up speed; step5: steer sharply to one side; step6: flip a car; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->2","1->3","2->4","3->0","4->6","5->1"],"reference_code":"class FlipACar:\n\n    title = \"flip a car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to flip a car\"\n\n    def step1(self):\n        return \"put on protective gear\"\n\n    def step2(self):\n        return \"start the car\"\n\n    def step3(self):\n        return \"drive to somewhere the road is straight and long\"\n\n    def step4(self):\n        return \"drive down the road and pick up speed\"\n\n    def step5(self):\n        return \"steer sharply to one side\"\n\n    def step6(self):\n        return \"flip a car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class FlipACar:\n\n    title = \"flip a car\"\n    steps = 7\n\n","reference_graph":{"title":"flip a car","num_steps":7,"schema":["step0: decided to flip a car","step1: put on protective gear","step2: start the car","step3: drive to somewhere the road is straight and long","step4: drive down the road and pick up speed","step5: steer sharply to one side","step6: flip a car"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"catch a chick","events":{"0":"socialize with people","1":"put on nice clothes","2":"make sure to smell nice","3":"get a chick's number","4":"converse with a chick","5":"drive to the bar","6":"take a shower","7":"NONE","8":"catch a chick"},"context":"NONE","minutes":120.0,"events_minutes":{"0":25.0,"1":15.0,"2":2.0,"3":5.0,"4":15.0,"5":15.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: socialize with people; step1: put on nice clothes; step2: make sure to smell nice; step3: get a chick's number; step4: converse with a chick; step5: drive to the bar; step6: take a shower; step7: decided to catch a chick; step8: catch a chick","flatten_input_for_script_generation":"You want to catch a chick. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step1; step1 -> step2; step2 -> step5; step5 -> step0; step0 -> step4; step4 -> step3; step3 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to catch a chick; step1: take a shower; step2: put on nice clothes; step3: make sure to smell nice; step4: drive to the bar; step5: socialize with people; step6: converse with a chick; step7: get a chick's number; step8: catch a chick; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->2","2->5","3->8","4->3","5->0","6->1","7->6"],"reference_code":"class CatchAChick:\n\n    title = \"catch a chick\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a chick\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"put on nice clothes\"\n\n    def step3(self):\n        return \"make sure to smell nice\"\n\n    def step4(self):\n        return \"drive to the bar\"\n\n    def step5(self):\n        return \"socialize with people\"\n\n    def step6(self):\n        return \"converse with a chick\"\n\n    def step7(self):\n        return \"get a chick's number\"\n\n    def step8(self):\n        return \"catch a chick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class CatchAChick:\n\n    title = \"catch a chick\"\n    steps = 9\n\n","reference_graph":{"title":"catch a chick","num_steps":9,"schema":["step0: decided to catch a chick","step1: take a shower","step2: put on nice clothes","step3: make sure to smell nice","step4: drive to the bar","step5: socialize with people","step6: converse with a chick","step7: get a chick's number","step8: catch a chick"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"learn how to play piano","events":{"0":"Begin taking lessons","1":"Perform what was learned","2":"Find an instructor to teach","3":"Find a piano to play","4":"Practice the lessons that were taught","5":"NONE","6":"learn how to play piano"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":11520.0,"1":60.0,"2":1440.0,"3":1440.0,"4":43200.0},"flatten_input_for_edge_prediction":"step0: Begin taking lessons; step1: Perform what was learned; step2: Find an instructor to teach; step3: Find a piano to play; step4: Practice the lessons that were taught; step5: decided to learn how to play piano; step6: learn how to play piano","flatten_input_for_script_generation":"You want to learn how to play piano. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step2 -> step4; step0 -> step6; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to learn how to play piano; step1: Find a piano to play; step2: Find an instructor to teach; step3: Begin taking lessons; step4: Practice the lessons that were taught; step5: learn how to play piano; step6: Perform what was learned; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5","gold_edges_for_prediction":["0->6","1->6","2->0","2->4","3->2","4->1","5->3"],"reference_code":"class LearnHowToPlayPiano:\n\n    title = \"learn how to play piano\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to play piano\"\n\n    def step1(self):\n        return \"Find a piano to play\"\n\n    def step2(self):\n        return \"Find an instructor to teach\"\n\n    def step3(self):\n        return \"Begin taking lessons\"\n\n    def step4(self):\n        return \"Practice the lessons that were taught\"\n\n    def step5(self):\n        return \"learn how to play piano\"\n\n    def step6(self):\n        return \"Perform what was learned\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class LearnHowToPlayPiano:\n\n    title = \"learn how to play piano\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to play piano","num_steps":7,"schema":["step0: decided to learn how to play piano","step1: Find a piano to play","step2: Find an instructor to teach","step3: Begin taking lessons","step4: Practice the lessons that were taught","step5: learn how to play piano","step6: Perform what was learned"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5"]}}
{"scenario":"learn how to bake","events":{"0":"open chrome app","1":"drive to cooking class every day","2":"sign up for classes","3":"wait for classes to start","4":"search for cooking classes","5":"NONE","6":"learn how to bake"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":1.0,"1":43200.0,"2":5.0,"3":1440.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: open chrome app; step1: drive to cooking class every day; step2: sign up for classes; step3: wait for classes to start; step4: search for cooking classes; step5: decided to learn how to bake; step6: learn how to bake","flatten_input_for_script_generation":"You want to learn how to bake. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to learn how to bake; step1: open chrome app; step2: search for cooking classes; step3: sign up for classes; step4: wait for classes to start; step5: drive to cooking class every day; step6: learn how to bake; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class LearnHowToBake:\n\n    title = \"learn how to bake\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to bake\"\n\n    def step1(self):\n        return \"open chrome app\"\n\n    def step2(self):\n        return \"search for cooking classes\"\n\n    def step3(self):\n        return \"sign up for classes\"\n\n    def step4(self):\n        return \"wait for classes to start\"\n\n    def step5(self):\n        return \"drive to cooking class every day\"\n\n    def step6(self):\n        return \"learn how to bake\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToBake:\n\n    title = \"learn how to bake\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to bake","num_steps":7,"schema":["step0: decided to learn how to bake","step1: open chrome app","step2: search for cooking classes","step3: sign up for classes","step4: wait for classes to start","step5: drive to cooking class every day","step6: learn how to bake"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"know what happened to a body at death","events":{"0":"go inside the morgue","1":"drive to morgue","2":"go up to the front desk","3":"get in car","4":"park the car","5":"NONE","6":"know what happened to a body at death"},"context":"NONE","minutes":45.0,"events_minutes":{"0":10.0,"1":20.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: go inside the morgue; step1: drive to morgue; step2: go up to the front desk; step3: get in car; step4: park the car; step5: decided to know what happened to a body at death; step6: know what happened to a body at death","flatten_input_for_script_generation":"You want to know what happened to a body at death. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to know what happened to a body at death; step1: get in car; step2: drive to morgue; step3: park the car; step4: go inside the morgue; step5: go up to the front desk; step6: know what happened to a body at death; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->1","4->0","5->3"],"reference_code":"class KnowWhatHappenedToABodyAtDeath:\n\n    title = \"know what happened to a body at death\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to know what happened to a body at death\"\n\n    def step1(self):\n        return \"get in car\"\n\n    def step2(self):\n        return \"drive to morgue\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the morgue\"\n\n    def step5(self):\n        return \"go up to the front desk\"\n\n    def step6(self):\n        return \"know what happened to a body at death\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class KnowWhatHappenedToABodyAtDeath:\n\n    title = \"know what happened to a body at death\"\n    steps = 7\n\n","reference_graph":{"title":"know what happened to a body at death","num_steps":7,"schema":["step0: decided to know what happened to a body at death","step1: get in car","step2: drive to morgue","step3: park the car","step4: go inside the morgue","step5: go up to the front desk","step6: know what happened to a body at death"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"work as a maid anymore","events":{"0":"Perform work duties.","1":"Wake up on work-day.","2":"Get dressed in work clothes.","3":"Park car and go into work.","4":"Get into car and travel to work.","5":"Pick up cleaning assignments.","6":"NONE","7":"work as a maid anymore"},"context":"NONE","minutes":480.0,"events_minutes":{"0":420.0,"1":5.0,"2":10.0,"3":5.0,"4":20.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Perform work duties.; step1: Wake up on work-day.; step2: Get dressed in work clothes.; step3: Park car and go into work.; step4: Get into car and travel to work.; step5: Pick up cleaning assignments.; step6: decided to work as a maid anymore; step7: work as a maid anymore","flatten_input_for_script_generation":"You want to work as a maid anymore. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step5; step5 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to work as a maid anymore; step1: Wake up on work-day.; step2: Get dressed in work clothes.; step3: Get into car and travel to work.; step4: Park car and go into work.; step5: Pick up cleaning assignments.; step6: Perform work duties.; step7: work as a maid anymore; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->2","2->4","3->5","4->3","5->0","6->1"],"reference_code":"class WorkAsAMaidAnymore:\n\n    title = \"work as a maid anymore\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to work as a maid anymore\"\n\n    def step1(self):\n        return \"Wake up on work-day.\"\n\n    def step2(self):\n        return \"Get dressed in work clothes.\"\n\n    def step3(self):\n        return \"Get into car and travel to work.\"\n\n    def step4(self):\n        return \"Park car and go into work.\"\n\n    def step5(self):\n        return \"Pick up cleaning assignments.\"\n\n    def step6(self):\n        return \"Perform work duties.\"\n\n    def step7(self):\n        return \"work as a maid anymore\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WorkAsAMaidAnymore:\n\n    title = \"work as a maid anymore\"\n    steps = 8\n\n","reference_graph":{"title":"work as a maid anymore","num_steps":8,"schema":["step0: decided to work as a maid anymore","step1: Wake up on work-day.","step2: Get dressed in work clothes.","step3: Get into car and travel to work.","step4: Park car and go into work.","step5: Pick up cleaning assignments.","step6: Perform work duties.","step7: work as a maid anymore"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn how to do a backflip","events":{"0":"Ask someone else for feedback","1":"Pull up an instruction youtube video","2":"Practice a lot","3":"Watch the instruction video","4":"Keep practicing from the video","5":"NONE","6":"learn how to do a backflip"},"context":"NONE","minutes":120.0,"events_minutes":{"0":10.0,"1":0.0833333333,"2":60.0,"3":10.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Ask someone else for feedback; step1: Pull up an instruction youtube video; step2: Practice a lot; step3: Watch the instruction video; step4: Keep practicing from the video; step5: decided to learn how to do a backflip; step6: learn how to do a backflip","flatten_input_for_script_generation":"You want to learn how to do a backflip. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to learn how to do a backflip; step1: Pull up an instruction youtube video; step2: Watch the instruction video; step3: Practice a lot; step4: Ask someone else for feedback; step5: Keep practicing from the video; step6: learn how to do a backflip; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->6","5->1"],"reference_code":"class LearnHowToDoABackflip:\n\n    title = \"learn how to do a backflip\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to do a backflip\"\n\n    def step1(self):\n        return \"Pull up an instruction youtube video\"\n\n    def step2(self):\n        return \"Watch the instruction video\"\n\n    def step3(self):\n        return \"Practice a lot\"\n\n    def step4(self):\n        return \"Ask someone else for feedback\"\n\n    def step5(self):\n        return \"Keep practicing from the video\"\n\n    def step6(self):\n        return \"learn how to do a backflip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToDoABackflip:\n\n    title = \"learn how to do a backflip\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to do a backflip","num_steps":7,"schema":["step0: decided to learn how to do a backflip","step1: Pull up an instruction youtube video","step2: Watch the instruction video","step3: Practice a lot","step4: Ask someone else for feedback","step5: Keep practicing from the video","step6: learn how to do a backflip"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"wear gloves to bed","events":{"0":"locate some gloves","1":"Turn off lights and finish routine","2":"Choose proper warmth level","3":"Get into bed","4":"Put on gloves","5":"NONE","6":"wear gloves to bed"},"context":"NONE","minutes":2.0,"events_minutes":{"0":2.0,"1":1.0,"2":0.25,"3":0.3333333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: locate some gloves; step1: Turn off lights and finish routine; step2: Choose proper warmth level; step3: Get into bed; step4: Put on gloves; step5: decided to wear gloves to bed; step6: wear gloves to bed","flatten_input_for_script_generation":"You want to wear gloves to bed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step2 -> step4; step1 -> step3; step3 -> step6; step4 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: decided to wear gloves to bed; step1: locate some gloves; step2: Choose proper warmth level; step3: Turn off lights and finish routine; step4: Put on gloves; step5: Get into bed; step6: wear gloves to bed; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","2->4","3->6","4->3","5->0"],"reference_code":"class WearGlovesToBed:\n\n    title = \"wear gloves to bed\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to wear gloves to bed\"\n\n    def step1(self):\n        return \"locate some gloves\"\n\n    def step2(self):\n        return \"Choose proper warmth level\"\n\n    def step3(self):\n        return \"Turn off lights and finish routine\"\n\n    def step4(self):\n        return \"Put on gloves\"\n\n    def step5(self):\n        return \"Get into bed\"\n\n    def step6(self):\n        return \"wear gloves to bed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WearGlovesToBed:\n\n    title = \"wear gloves to bed\"\n    steps = 7\n\n","reference_graph":{"title":"wear gloves to bed","num_steps":7,"schema":["step0: decided to wear gloves to bed","step1: locate some gloves","step2: Choose proper warmth level","step3: Turn off lights and finish routine","step4: Put on gloves","step5: Get into bed","step6: wear gloves to bed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"run errands on a rainy day","events":{"0":"take a shower","1":"go out to the car","2":"get in the car","3":"get dressed for the day","4":"start the car","5":"NONE","6":"run errands on a rainy day"},"context":"NONE","minutes":45.0,"events_minutes":{"0":10.0,"1":2.0,"2":1.0,"3":30.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: take a shower; step1: go out to the car; step2: get in the car; step3: get dressed for the day; step4: start the car; step5: decided to run errands on a rainy day; step6: run errands on a rainy day","flatten_input_for_script_generation":"You want to run errands on a rainy day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to run errands on a rainy day; step1: take a shower; step2: get dressed for the day; step3: go out to the car; step4: get in the car; step5: start the car; step6: run errands on a rainy day; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->1","4->6","5->0"],"reference_code":"class RunErrandsOnARainyDay:\n\n    title = \"run errands on a rainy day\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run errands on a rainy day\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"get dressed for the day\"\n\n    def step3(self):\n        return \"go out to the car\"\n\n    def step4(self):\n        return \"get in the car\"\n\n    def step5(self):\n        return \"start the car\"\n\n    def step6(self):\n        return \"run errands on a rainy day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RunErrandsOnARainyDay:\n\n    title = \"run errands on a rainy day\"\n    steps = 7\n\n","reference_graph":{"title":"run errands on a rainy day","num_steps":7,"schema":["step0: decided to run errands on a rainy day","step1: take a shower","step2: get dressed for the day","step3: go out to the car","step4: get in the car","step5: start the car","step6: run errands on a rainy day"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"cook some chicken","events":{"0":"Ride to the supermarket","1":"Throw chicken in the oven","2":"Butcher the chicken up","3":"Ride back home","4":"Buy the uncooked chicken","5":"Wash both hands","6":"NONE","7":"cook some chicken"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":45.0,"2":15.0,"3":30.0,"4":15.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Ride to the supermarket; step1: Throw chicken in the oven; step2: Butcher the chicken up; step3: Ride back home; step4: Buy the uncooked chicken; step5: Wash both hands; step6: decided to cook some chicken; step7: cook some chicken","flatten_input_for_script_generation":"You want to cook some chicken. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step2; step5 -> step1; step2 -> step5; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to cook some chicken; step1: Ride to the supermarket; step2: Buy the uncooked chicken; step3: Ride back home; step4: Butcher the chicken up; step5: Wash both hands; step6: Throw chicken in the oven; step7: cook some chicken; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->7","2->5","3->2","4->3","5->1","6->0"],"reference_code":"class CookSomeChicken:\n\n    title = \"cook some chicken\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to cook some chicken\"\n\n    def step1(self):\n        return \"Ride to the supermarket\"\n\n    def step2(self):\n        return \"Buy the uncooked chicken\"\n\n    def step3(self):\n        return \"Ride back home\"\n\n    def step4(self):\n        return \"Butcher the chicken up\"\n\n    def step5(self):\n        return \"Wash both hands\"\n\n    def step6(self):\n        return \"Throw chicken in the oven\"\n\n    def step7(self):\n        return \"cook some chicken\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class CookSomeChicken:\n\n    title = \"cook some chicken\"\n    steps = 8\n\n","reference_graph":{"title":"cook some chicken","num_steps":8,"schema":["step0: decided to cook some chicken","step1: Ride to the supermarket","step2: Buy the uncooked chicken","step3: Ride back home","step4: Butcher the chicken up","step5: Wash both hands","step6: Throw chicken in the oven","step7: cook some chicken"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"eat an authentic hot dog","events":{"0":"Move hot dogs to hot side of grill","1":"Turn on grill","2":"Serve the hot dog","3":"Cook hot dogs on  cooler side of  grill","4":"Grab some hot dog","5":"NONE","6":"eat an authentic hot dog"},"context":"NONE","minutes":15.0,"events_minutes":{"0":5.0,"1":0.25,"2":3.0,"3":5.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Move hot dogs to hot side of grill; step1: Turn on grill; step2: Serve the hot dog; step3: Cook hot dogs on  cooler side of  grill; step4: Grab some hot dog; step5: decided to eat an authentic hot dog; step6: eat an authentic hot dog","flatten_input_for_script_generation":"You want to eat an authentic hot dog. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to eat an authentic hot dog; step1: Turn on grill; step2: Grab some hot dog; step3: Cook hot dogs on  cooler side of  grill; step4: Move hot dogs to hot side of grill; step5: Serve the hot dog; step6: eat an authentic hot dog; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class EatAnAuthenticHotDog:\n\n    title = \"eat an authentic hot dog\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat an authentic hot dog\"\n\n    def step1(self):\n        return \"Turn on grill\"\n\n    def step2(self):\n        return \"Grab some hot dog\"\n\n    def step3(self):\n        return \"Cook hot dogs on  cooler side of  grill\"\n\n    def step4(self):\n        return \"Move hot dogs to hot side of grill\"\n\n    def step5(self):\n        return \"Serve the hot dog\"\n\n    def step6(self):\n        return \"eat an authentic hot dog\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatAnAuthenticHotDog:\n\n    title = \"eat an authentic hot dog\"\n    steps = 7\n\n","reference_graph":{"title":"eat an authentic hot dog","num_steps":7,"schema":["step0: decided to eat an authentic hot dog","step1: Turn on grill","step2: Grab some hot dog","step3: Cook hot dogs on  cooler side of  grill","step4: Move hot dogs to hot side of grill","step5: Serve the hot dog","step6: eat an authentic hot dog"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"organize a campaign","events":{"0":"take notes for campaign","1":"call multiple people to assist","2":"get everyone together","3":"study organizational videos online","4":"tell everyone the plan","5":"NONE","6":"organize a campaign"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":30.0,"1":180.0,"2":1440.0,"3":1440.0,"4":120.0},"flatten_input_for_edge_prediction":"step0: take notes for campaign; step1: call multiple people to assist; step2: get everyone together; step3: study organizational videos online; step4: tell everyone the plan; step5: decided to organize a campaign; step6: organize a campaign","flatten_input_for_script_generation":"You want to organize a campaign. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to organize a campaign; step1: study organizational videos online; step2: take notes for campaign; step3: call multiple people to assist; step4: get everyone together; step5: tell everyone the plan; step6: organize a campaign; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->0","4->6","5->3"],"reference_code":"class OrganizeACampaign:\n\n    title = \"organize a campaign\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to organize a campaign\"\n\n    def step1(self):\n        return \"study organizational videos online\"\n\n    def step2(self):\n        return \"take notes for campaign\"\n\n    def step3(self):\n        return \"call multiple people to assist\"\n\n    def step4(self):\n        return \"get everyone together\"\n\n    def step5(self):\n        return \"tell everyone the plan\"\n\n    def step6(self):\n        return \"organize a campaign\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrganizeACampaign:\n\n    title = \"organize a campaign\"\n    steps = 7\n\n","reference_graph":{"title":"organize a campaign","num_steps":7,"schema":["step0: decided to organize a campaign","step1: study organizational videos online","step2: take notes for campaign","step3: call multiple people to assist","step4: get everyone together","step5: tell everyone the plan","step6: organize a campaign"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"see the new movie","events":{"0":"look up theaters close by.","1":"Drive to the movie theater.","2":"look up new movies.","3":"buy tickets for movie online.","4":"Look up show times.","5":"NONE","6":"see the new movie"},"context":"NONE","minutes":35.0,"events_minutes":{"0":2.0,"1":25.0,"2":5.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: look up theaters close by.; step1: Drive to the movie theater.; step2: look up new movies.; step3: buy tickets for movie online.; step4: Look up show times.; step5: decided to see the new movie; step6: see the new movie","flatten_input_for_script_generation":"You want to see the new movie. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step0 -> step2; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to see the new movie; step1: look up theaters close by.; step2: look up new movies.; step3: Look up show times.; step4: buy tickets for movie online.; step5: Drive to the movie theater.; step6: see the new movie; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->1","4->3","5->0"],"reference_code":"class SeeTheNewMovie:\n\n    title = \"see the new movie\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to see the new movie\"\n\n    def step1(self):\n        return \"look up theaters close by.\"\n\n    def step2(self):\n        return \"look up new movies.\"\n\n    def step3(self):\n        return \"Look up show times.\"\n\n    def step4(self):\n        return \"buy tickets for movie online.\"\n\n    def step5(self):\n        return \"Drive to the movie theater.\"\n\n    def step6(self):\n        return \"see the new movie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SeeTheNewMovie:\n\n    title = \"see the new movie\"\n    steps = 7\n\n","reference_graph":{"title":"see the new movie","num_steps":7,"schema":["step0: decided to see the new movie","step1: look up theaters close by.","step2: look up new movies.","step3: Look up show times.","step4: buy tickets for movie online.","step5: Drive to the movie theater.","step6: see the new movie"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"dress as endorman for halloween","events":{"0":"Cut eye holes in box.","1":"Get a black outfit.","2":"Paint box black.","3":"Get a box.","4":"Put on black outfit and box on head.","5":"NONE","6":"dress as endorman for halloween"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":10.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: Cut eye holes in box.; step1: Get a black outfit.; step2: Paint box black.; step3: Get a box.; step4: Put on black outfit and box on head.; step5: decided to dress as endorman for halloween; step6: dress as endorman for halloween","flatten_input_for_script_generation":"You want to dress as endorman for halloween. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: decided to dress as endorman for halloween; step1: Get a box.; step2: Get a black outfit.; step3: Put on black outfit and box on head.; step4: dress as endorman for halloween; step5: Paint box black.; step6: Cut eye holes in box.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->4","1->4","2->0","3->2","4->6","5->1","5->3"],"reference_code":"class DressAsEndormanForHalloween:\n\n    title = \"dress as endorman for halloween\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to dress as endorman for halloween\"\n\n    def step1(self):\n        return \"Get a box.\"\n\n    def step2(self):\n        return \"Get a black outfit.\"\n\n    def step3(self):\n        return \"Put on black outfit and box on head.\"\n\n    def step4(self):\n        return \"dress as endorman for halloween\"\n\n    def step5(self):\n        return \"Paint box black.\"\n\n    def step6(self):\n        return \"Cut eye holes in box.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class DressAsEndormanForHalloween:\n\n    title = \"dress as endorman for halloween\"\n    steps = 7\n\n","reference_graph":{"title":"dress as endorman for halloween","num_steps":7,"schema":["step0: decided to dress as endorman for halloween","step1: Get a box.","step2: Get a black outfit.","step3: Put on black outfit and box on head.","step4: dress as endorman for halloween","step5: Paint box black.","step6: Cut eye holes in box."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"adopt a child","events":{"0":"Pass the last identity checks","1":"Wait until called back","2":"Meet the child","3":"Call adoption agency","4":"Pass the identification checks","5":"Bring the child home","6":"NONE","7":"adopt a child"},"context":"NONE","minutes":525600.0,"events_minutes":{"0":525600.0,"1":525600.0,"2":120.0,"3":30.0,"4":7200.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: Pass the last identity checks; step1: Wait until called back; step2: Meet the child; step3: Call adoption agency; step4: Pass the identification checks; step5: Bring the child home; step6: decided to adopt a child; step7: adopt a child","flatten_input_for_script_generation":"You want to adopt a child. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step1; step1 -> step2; step1 -> step0; step2 -> step5; step0 -> step5; step5 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to adopt a child; step1: Call adoption agency; step2: Pass the identification checks; step3: Wait until called back; step4: Meet the child; step5: Pass the last identity checks; step6: Bring the child home; step7: adopt a child; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->2","1->0","2->5","3->4","4->1","5->7","6->3"],"reference_code":"class AdoptAChild:\n\n    title = \"adopt a child\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to adopt a child\"\n\n    def step1(self):\n        return \"Call adoption agency\"\n\n    def step2(self):\n        return \"Pass the identification checks\"\n\n    def step3(self):\n        return \"Wait until called back\"\n\n    def step4(self):\n        return \"Meet the child\"\n\n    def step5(self):\n        return \"Pass the last identity checks\"\n\n    def step6(self):\n        return \"Bring the child home\"\n\n    def step7(self):\n        return \"adopt a child\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class AdoptAChild:\n\n    title = \"adopt a child\"\n    steps = 8\n\n","reference_graph":{"title":"adopt a child","num_steps":8,"schema":["step0: decided to adopt a child","step1: Call adoption agency","step2: Pass the identification checks","step3: Wait until called back","step4: Meet the child","step5: Pass the last identity checks","step6: Bring the child home","step7: adopt a child"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"play a song","events":{"0":"find a song to listen to","1":"turn on the stereo","2":"download the song","3":"plug in speakers","4":"enter credit card information","5":"NONE","6":"play a song"},"context":"NONE","minutes":10.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: find a song to listen to; step1: turn on the stereo; step2: download the song; step3: plug in speakers; step4: enter credit card information; step5: decided to play a song; step6: play a song","flatten_input_for_script_generation":"You want to play a song. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step4 -> step3; step2 -> step1; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to play a song; step1: find a song to listen to; step2: enter credit card information; step3: download the song; step4: plug in speakers; step5: turn on the stereo; step6: play a song; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->1","4->2","4->3","5->0"],"reference_code":"class PlayASong:\n\n    title = \"play a song\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play a song\"\n\n    def step1(self):\n        return \"find a song to listen to\"\n\n    def step2(self):\n        return \"enter credit card information\"\n\n    def step3(self):\n        return \"download the song\"\n\n    def step4(self):\n        return \"plug in speakers\"\n\n    def step5(self):\n        return \"turn on the stereo\"\n\n    def step6(self):\n        return \"play a song\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayASong:\n\n    title = \"play a song\"\n    steps = 7\n\n","reference_graph":{"title":"play a song","num_steps":7,"schema":["step0: decided to play a song","step1: find a song to listen to","step2: enter credit card information","step3: download the song","step4: plug in speakers","step5: turn on the stereo","step6: play a song"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"give up on work this morning","events":{"0":"brush teeth for a while","1":"go out to the car","2":"take a shower","3":"drive to the park","4":"get dressed for the day","5":"get out of bed","6":"NONE","7":"give up on work this morning"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":5.0,"2":20.0,"3":10.0,"4":20.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: brush teeth for a while; step1: go out to the car; step2: take a shower; step3: drive to the park; step4: get dressed for the day; step5: get out of bed; step6: decided to give up on work this morning; step7: give up on work this morning","flatten_input_for_script_generation":"You want to give up on work this morning. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to give up on work this morning; step1: get out of bed; step2: take a shower; step3: brush teeth for a while; step4: get dressed for the day; step5: go out to the car; step6: drive to the park; step7: give up on work this morning; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->0","3->7","4->1","5->2","6->5"],"reference_code":"class GiveUpOnWorkThisMorning:\n\n    title = \"give up on work this morning\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to give up on work this morning\"\n\n    def step1(self):\n        return \"get out of bed\"\n\n    def step2(self):\n        return \"take a shower\"\n\n    def step3(self):\n        return \"brush teeth for a while\"\n\n    def step4(self):\n        return \"get dressed for the day\"\n\n    def step5(self):\n        return \"go out to the car\"\n\n    def step6(self):\n        return \"drive to the park\"\n\n    def step7(self):\n        return \"give up on work this morning\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GiveUpOnWorkThisMorning:\n\n    title = \"give up on work this morning\"\n    steps = 8\n\n","reference_graph":{"title":"give up on work this morning","num_steps":8,"schema":["step0: decided to give up on work this morning","step1: get out of bed","step2: take a shower","step3: brush teeth for a while","step4: get dressed for the day","step5: go out to the car","step6: drive to the park","step7: give up on work this morning"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make lemon bars","events":{"0":"bake in the oven as instructed","1":"let cool after removing","2":"make a list of ingredients needed","3":"go to the store and purchase items on list","4":"ready baking pan and preheat oven","5":"mix ingredients together and prepare filling","6":"look up recipe for the sweet treats","7":"NONE","8":"make lemon bars"},"context":"NONE","minutes":150.0,"events_minutes":{"0":45.0,"1":30.0,"2":5.0,"3":20.0,"4":10.0,"5":30.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: bake in the oven as instructed; step1: let cool after removing; step2: make a list of ingredients needed; step3: go to the store and purchase items on list; step4: ready baking pan and preheat oven; step5: mix ingredients together and prepare filling; step6: look up recipe for the sweet treats; step7: decided to make lemon bars; step8: make lemon bars","flatten_input_for_script_generation":"You want to make lemon bars. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step2; step2 -> step3; step3 -> step5; step3 -> step4; step5 -> step0; step4 -> step0; step0 -> step1; step1 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to make lemon bars; step1: look up recipe for the sweet treats; step2: make a list of ingredients needed; step3: go to the store and purchase items on list; step4: mix ingredients together and prepare filling; step5: ready baking pan and preheat oven; step6: bake in the oven as instructed; step7: let cool after removing; step8: make lemon bars; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->8","2->3","3->5","3->4","4->0","5->0","6->2","7->6"],"reference_code":"class MakeLemonBars:\n\n    title = \"make lemon bars\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make lemon bars\"\n\n    def step1(self):\n        return \"look up recipe for the sweet treats\"\n\n    def step2(self):\n        return \"make a list of ingredients needed\"\n\n    def step3(self):\n        return \"go to the store and purchase items on list\"\n\n    def step4(self):\n        return \"mix ingredients together and prepare filling\"\n\n    def step5(self):\n        return \"ready baking pan and preheat oven\"\n\n    def step6(self):\n        return \"bake in the oven as instructed\"\n\n    def step7(self):\n        return \"let cool after removing\"\n\n    def step8(self):\n        return \"make lemon bars\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeLemonBars:\n\n    title = \"make lemon bars\"\n    steps = 9\n\n","reference_graph":{"title":"make lemon bars","num_steps":9,"schema":["step0: decided to make lemon bars","step1: look up recipe for the sweet treats","step2: make a list of ingredients needed","step3: go to the store and purchase items on list","step4: mix ingredients together and prepare filling","step5: ready baking pan and preheat oven","step6: bake in the oven as instructed","step7: let cool after removing","step8: make lemon bars"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"meet the president","events":{"0":"Have team members go through background check","1":"Have team management speak with White House Staff","2":"Win the Super Bowl","3":"Have parade in team home town televised","4":"Schedule date for team to travel to White House","5":"NONE","6":"meet the president"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":20160.0,"1":15.0,"2":240.0,"3":180.0,"4":4320.0},"flatten_input_for_edge_prediction":"step0: Have team members go through background check; step1: Have team management speak with White House Staff; step2: Win the Super Bowl; step3: Have parade in team home town televised; step4: Schedule date for team to travel to White House; step5: decided to meet the president; step6: meet the president","flatten_input_for_script_generation":"You want to meet the president. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step4 -> step6; step0 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: decided to meet the president; step1: Win the Super Bowl; step2: Have parade in team home town televised; step3: Have team management speak with White House Staff; step4: Have team members go through background check; step5: Schedule date for team to travel to White House; step6: meet the president; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class MeetThePresident:\n\n    title = \"meet the president\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to meet the president\"\n\n    def step1(self):\n        return \"Win the Super Bowl\"\n\n    def step2(self):\n        return \"Have parade in team home town televised\"\n\n    def step3(self):\n        return \"Have team management speak with White House Staff\"\n\n    def step4(self):\n        return \"Have team members go through background check\"\n\n    def step5(self):\n        return \"Schedule date for team to travel to White House\"\n\n    def step6(self):\n        return \"meet the president\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MeetThePresident:\n\n    title = \"meet the president\"\n    steps = 7\n\n","reference_graph":{"title":"meet the president","num_steps":7,"schema":["step0: decided to meet the president","step1: Win the Super Bowl","step2: Have parade in team home town televised","step3: Have team management speak with White House Staff","step4: Have team members go through background check","step5: Schedule date for team to travel to White House","step6: meet the president"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sprint for the school's track team","events":{"0":"start to sprint","1":"stretch legs, arms and back","2":"do some warm up","3":"wait for whistle to blow","4":"go to start line","5":"NONE","6":"sprint for the school's track team"},"context":"NONE","minutes":40.0,"events_minutes":{"0":0.0166666667,"1":10.0,"2":20.0,"3":3.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: start to sprint; step1: stretch legs, arms and back; step2: do some warm up; step3: wait for whistle to blow; step4: go to start line; step5: decided to sprint for the school's track team; step6: sprint for the school's track team","flatten_input_for_script_generation":"You want to sprint for the school's track team. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to sprint for the school's track team; step1: do some warm up; step2: stretch legs, arms and back; step3: go to start line; step4: wait for whistle to blow; step5: start to sprint; step6: sprint for the school's track team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->0","4->3","5->2"],"reference_code":"class SprintForTheSchoolsTrackTeam:\n\n    title = \"sprint for the school's track team\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to sprint for the school's track team\"\n\n    def step1(self):\n        return \"do some warm up\"\n\n    def step2(self):\n        return \"stretch legs, arms and back\"\n\n    def step3(self):\n        return \"go to start line\"\n\n    def step4(self):\n        return \"wait for whistle to blow\"\n\n    def step5(self):\n        return \"start to sprint\"\n\n    def step6(self):\n        return \"sprint for the school's track team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SprintForTheSchoolsTrackTeam:\n\n    title = \"sprint for the school's track team\"\n    steps = 7\n\n","reference_graph":{"title":"sprint for the school's track team","num_steps":7,"schema":["step0: decided to sprint for the school's track team","step1: do some warm up","step2: stretch legs, arms and back","step3: go to start line","step4: wait for whistle to blow","step5: start to sprint","step6: sprint for the school's track team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a new pet","events":{"0":"drive to breeder","1":"call the breeder","2":"schedule a meeting","3":"look up breeders in area","4":"purchase pet from the breeder","5":"NONE","6":"buy a new pet"},"context":"NONE","minutes":180.0,"events_minutes":{"0":60.0,"1":25.0,"2":5.0,"3":20.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: drive to breeder; step1: call the breeder; step2: schedule a meeting; step3: look up breeders in area; step4: purchase pet from the breeder; step5: decided to buy a new pet; step6: buy a new pet","flatten_input_for_script_generation":"You want to buy a new pet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to buy a new pet; step1: look up breeders in area; step2: call the breeder; step3: schedule a meeting; step4: drive to breeder; step5: purchase pet from the breeder; step6: buy a new pet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->6","5->3"],"reference_code":"class BuyANewPet:\n\n    title = \"buy a new pet\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new pet\"\n\n    def step1(self):\n        return \"look up breeders in area\"\n\n    def step2(self):\n        return \"call the breeder\"\n\n    def step3(self):\n        return \"schedule a meeting\"\n\n    def step4(self):\n        return \"drive to breeder\"\n\n    def step5(self):\n        return \"purchase pet from the breeder\"\n\n    def step6(self):\n        return \"buy a new pet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewPet:\n\n    title = \"buy a new pet\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new pet","num_steps":7,"schema":["step0: decided to buy a new pet","step1: look up breeders in area","step2: call the breeder","step3: schedule a meeting","step4: drive to breeder","step5: purchase pet from the breeder","step6: buy a new pet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"build more muscle","events":{"0":"Pay for membership","1":"Continue doing exercises everyday","2":"Register to become member","3":"Begin to workout with weights","4":"Drive to health club","5":"Go into weight room","6":"Go on internet and search for muscle building exercises","7":"NONE","8":"build more muscle"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":5.0,"1":129600.0,"2":10.0,"3":60.0,"4":15.0,"5":2.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: Pay for membership; step1: Continue doing exercises everyday; step2: Register to become member; step3: Begin to workout with weights; step4: Drive to health club; step5: Go into weight room; step6: Go on internet and search for muscle building exercises; step7: decided to build more muscle; step8: build more muscle","flatten_input_for_script_generation":"You want to build more muscle. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step4; step4 -> step2; step2 -> step0; step0 -> step5; step5 -> step3; step3 -> step1; step1 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to build more muscle; step1: Go on internet and search for muscle building exercises; step2: Drive to health club; step3: Register to become member; step4: Pay for membership; step5: Go into weight room; step6: Begin to workout with weights; step7: Continue doing exercises everyday; step8: build more muscle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->8","2->0","3->1","4->2","5->3","6->4","7->6"],"reference_code":"class BuildMoreMuscle:\n\n    title = \"build more muscle\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to build more muscle\"\n\n    def step1(self):\n        return \"Go on internet and search for muscle building exercises\"\n\n    def step2(self):\n        return \"Drive to health club\"\n\n    def step3(self):\n        return \"Register to become member\"\n\n    def step4(self):\n        return \"Pay for membership\"\n\n    def step5(self):\n        return \"Go into weight room\"\n\n    def step6(self):\n        return \"Begin to workout with weights\"\n\n    def step7(self):\n        return \"Continue doing exercises everyday\"\n\n    def step8(self):\n        return \"build more muscle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuildMoreMuscle:\n\n    title = \"build more muscle\"\n    steps = 9\n\n","reference_graph":{"title":"build more muscle","num_steps":9,"schema":["step0: decided to build more muscle","step1: Go on internet and search for muscle building exercises","step2: Drive to health club","step3: Register to become member","step4: Pay for membership","step5: Go into weight room","step6: Begin to workout with weights","step7: Continue doing exercises everyday","step8: build more muscle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have an exciting adventure","events":{"0":"get in the car","1":"put on the backpack","2":"park the car","3":"drive to the mountains","4":"unpack the supplies","5":"NONE","6":"have an exciting adventure"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":2.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: put on the backpack; step2: park the car; step3: drive to the mountains; step4: unpack the supplies; step5: decided to have an exciting adventure; step6: have an exciting adventure","flatten_input_for_script_generation":"You want to have an exciting adventure. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to have an exciting adventure; step1: get in the car; step2: drive to the mountains; step3: park the car; step4: unpack the supplies; step5: put on the backpack; step6: have an exciting adventure; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class HaveAnExcitingAdventure:\n\n    title = \"have an exciting adventure\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have an exciting adventure\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the mountains\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"unpack the supplies\"\n\n    def step5(self):\n        return \"put on the backpack\"\n\n    def step6(self):\n        return \"have an exciting adventure\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveAnExcitingAdventure:\n\n    title = \"have an exciting adventure\"\n    steps = 7\n\n","reference_graph":{"title":"have an exciting adventure","num_steps":7,"schema":["step0: decided to have an exciting adventure","step1: get in the car","step2: drive to the mountains","step3: park the car","step4: unpack the supplies","step5: put on the backpack","step6: have an exciting adventure"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start lifting weights to build muscle","events":{"0":"Head to the bench press machine.","1":"Do bench presses.","2":"Go to the gym","3":"Go into the locker room.","4":"Put on workout attire.","5":"NONE","6":"start lifting weights to build muscle"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":20.0,"2":20.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: Head to the bench press machine.; step1: Do bench presses.; step2: Go to the gym; step3: Go into the locker room.; step4: Put on workout attire.; step5: decided to start lifting weights to build muscle; step6: start lifting weights to build muscle","flatten_input_for_script_generation":"You want to start lifting weights to build muscle. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to start lifting weights to build muscle; step1: Go to the gym; step2: Go into the locker room.; step3: Put on workout attire.; step4: Head to the bench press machine.; step5: Do bench presses.; step6: start lifting weights to build muscle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class StartLiftingWeightsToBuildMuscle:\n\n    title = \"start lifting weights to build muscle\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to start lifting weights to build muscle\"\n\n    def step1(self):\n        return \"Go to the gym\"\n\n    def step2(self):\n        return \"Go into the locker room.\"\n\n    def step3(self):\n        return \"Put on workout attire.\"\n\n    def step4(self):\n        return \"Head to the bench press machine.\"\n\n    def step5(self):\n        return \"Do bench presses.\"\n\n    def step6(self):\n        return \"start lifting weights to build muscle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartLiftingWeightsToBuildMuscle:\n\n    title = \"start lifting weights to build muscle\"\n    steps = 7\n\n","reference_graph":{"title":"start lifting weights to build muscle","num_steps":7,"schema":["step0: decided to start lifting weights to build muscle","step1: Go to the gym","step2: Go into the locker room.","step3: Put on workout attire.","step4: Head to the bench press machine.","step5: Do bench presses.","step6: start lifting weights to build muscle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"host the best house party ever","events":{"0":"set up the party","1":"drive to the store","2":"invite people to the party","3":"drive back home","4":"shop for party supplies","5":"wait for guests","6":"NONE","7":"host the best house party ever"},"context":"NONE","minutes":180.0,"events_minutes":{"0":30.0,"1":15.0,"2":15.0,"3":15.0,"4":30.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: set up the party; step1: drive to the store; step2: invite people to the party; step3: drive back home; step4: shop for party supplies; step5: wait for guests; step6: decided to host the best house party ever; step7: host the best house party ever","flatten_input_for_script_generation":"You want to host the best house party ever. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step5; step5 -> step7; step6 -> step1; step6 -> step2","flatten_output_for_script_generation":"step0: decided to host the best house party ever; step1: invite people to the party; step2: wait for guests; step3: host the best house party ever; step4: drive to the store; step5: shop for party supplies; step6: drive back home; step7: set up the party; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step2","gold_edges_for_prediction":["0->5","1->4","2->5","3->0","4->3","5->7","6->1","6->2"],"reference_code":"class HostTheBestHousePartyEver:\n\n    title = \"host the best house party ever\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to host the best house party ever\"\n\n    def step1(self):\n        return \"invite people to the party\"\n\n    def step2(self):\n        return \"wait for guests\"\n\n    def step3(self):\n        return \"host the best house party ever\"\n\n    def step4(self):\n        return \"drive to the store\"\n\n    def step5(self):\n        return \"shop for party supplies\"\n\n    def step6(self):\n        return \"drive back home\"\n\n    def step7(self):\n        return \"set up the party\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step2\",\n        ]\n","input_prompt_code":"class HostTheBestHousePartyEver:\n\n    title = \"host the best house party ever\"\n    steps = 8\n\n","reference_graph":{"title":"host the best house party ever","num_steps":8,"schema":["step0: decided to host the best house party ever","step1: invite people to the party","step2: wait for guests","step3: host the best house party ever","step4: drive to the store","step5: shop for party supplies","step6: drive back home","step7: set up the party"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step2"]}}
{"scenario":"go to the grocery store","events":{"0":"walk up to the door","1":"park the car","2":"drive to the grocery store","3":"choose a grocery store","4":"go into the grocery store","5":"look up grocery stores online","6":"NONE","7":"go to the grocery store"},"context":"NONE","minutes":45.0,"events_minutes":{"0":1.0,"1":3.0,"2":15.0,"3":5.0,"4":0.25,"5":15.0},"flatten_input_for_edge_prediction":"step0: walk up to the door; step1: park the car; step2: drive to the grocery store; step3: choose a grocery store; step4: go into the grocery store; step5: look up grocery stores online; step6: decided to go to the grocery store; step7: go to the grocery store","flatten_input_for_script_generation":"You want to go to the grocery store. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to go to the grocery store; step1: look up grocery stores online; step2: choose a grocery store; step3: drive to the grocery store; step4: park the car; step5: walk up to the door; step6: go into the grocery store; step7: go to the grocery store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->7","5->3","6->5"],"reference_code":"class GoToTheGroceryStore:\n\n    title = \"go to the grocery store\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to the grocery store\"\n\n    def step1(self):\n        return \"look up grocery stores online\"\n\n    def step2(self):\n        return \"choose a grocery store\"\n\n    def step3(self):\n        return \"drive to the grocery store\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"walk up to the door\"\n\n    def step6(self):\n        return \"go into the grocery store\"\n\n    def step7(self):\n        return \"go to the grocery store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToTheGroceryStore:\n\n    title = \"go to the grocery store\"\n    steps = 8\n\n","reference_graph":{"title":"go to the grocery store","num_steps":8,"schema":["step0: decided to go to the grocery store","step1: look up grocery stores online","step2: choose a grocery store","step3: drive to the grocery store","step4: park the car","step5: walk up to the door","step6: go into the grocery store","step7: go to the grocery store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"read a book that had just came out","events":{"0":"drive to book store","1":"get in the car","2":"park the car","3":"drive back home","4":"purchase the new book","5":"NONE","6":"read a book that had just came out"},"context":"NONE","minutes":60.0,"events_minutes":{"0":30.0,"1":5.0,"2":5.0,"3":30.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: drive to book store; step1: get in the car; step2: park the car; step3: drive back home; step4: purchase the new book; step5: decided to read a book that had just came out; step6: read a book that had just came out","flatten_input_for_script_generation":"You want to read a book that had just came out. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to read a book that had just came out; step1: get in the car; step2: drive to book store; step3: park the car; step4: purchase the new book; step5: drive back home; step6: read a book that had just came out; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class ReadABookThatHadJustCameOut:\n\n    title = \"read a book that had just came out\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to read a book that had just came out\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to book store\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"purchase the new book\"\n\n    def step5(self):\n        return \"drive back home\"\n\n    def step6(self):\n        return \"read a book that had just came out\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadABookThatHadJustCameOut:\n\n    title = \"read a book that had just came out\"\n    steps = 7\n\n","reference_graph":{"title":"read a book that had just came out","num_steps":7,"schema":["step0: decided to read a book that had just came out","step1: get in the car","step2: drive to book store","step3: park the car","step4: purchase the new book","step5: drive back home","step6: read a book that had just came out"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"raise money for their trip","events":{"0":"Collect the money.","1":"Set up a table for baked goods.","2":"Repeat until goal is met.","3":"Set up fundraiser on social media.","4":"Send social media page to friends.","5":"Bake sweets to sell.","6":"Offer baked goods to paying customers.","7":"NONE","8":"raise money for their trip"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":2.0,"1":30.0,"2":28800.0,"3":60.0,"4":5.0,"5":300.0,"6":2.0},"flatten_input_for_edge_prediction":"step0: Collect the money.; step1: Set up a table for baked goods.; step2: Repeat until goal is met.; step3: Set up fundraiser on social media.; step4: Send social media page to friends.; step5: Bake sweets to sell.; step6: Offer baked goods to paying customers.; step7: decided to raise money for their trip; step8: raise money for their trip","flatten_input_for_script_generation":"You want to raise money for their trip. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step5 -> step1; step1 -> step6; step0 -> step2; step2 -> step8; step6 -> step0; step7 -> step3; step7 -> step5","flatten_output_for_script_generation":"step0: decided to raise money for their trip; step1: Bake sweets to sell.; step2: Set up fundraiser on social media.; step3: Send social media page to friends.; step4: Collect the money.; step5: Repeat until goal is met.; step6: Set up a table for baked goods.; step7: Offer baked goods to paying customers.; step8: raise money for their trip; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step7; step7 -> step4; step5 -> step8","gold_edges_for_prediction":["0->2","1->6","2->8","3->4","4->0","5->1","6->0","7->3","7->5"],"reference_code":"class RaiseMoneyForTheirTrip:\n\n    title = \"raise money for their trip\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to raise money for their trip\"\n\n    def step1(self):\n        return \"Bake sweets to sell.\"\n\n    def step2(self):\n        return \"Set up fundraiser on social media.\"\n\n    def step3(self):\n        return \"Send social media page to friends.\"\n\n    def step4(self):\n        return \"Collect the money.\"\n\n    def step5(self):\n        return \"Repeat until goal is met.\"\n\n    def step6(self):\n        return \"Set up a table for baked goods.\"\n\n    def step7(self):\n        return \"Offer baked goods to paying customers.\"\n\n    def step8(self):\n        return \"raise money for their trip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step4\",\n            \"step5 -> step8\",\n        ]\n","input_prompt_code":"class RaiseMoneyForTheirTrip:\n\n    title = \"raise money for their trip\"\n    steps = 9\n\n","reference_graph":{"title":"raise money for their trip","num_steps":9,"schema":["step0: decided to raise money for their trip","step1: Bake sweets to sell.","step2: Set up fundraiser on social media.","step3: Send social media page to friends.","step4: Collect the money.","step5: Repeat until goal is met.","step6: Set up a table for baked goods.","step7: Offer baked goods to paying customers.","step8: raise money for their trip"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step7","step7 -> step4","step5 -> step8"]}}
{"scenario":"get a girl's attention","events":{"0":"Walk over next to girl.","1":"Stop next to girl.","2":"Look around for girls near.","3":"Wave hand and smile at girl.","4":"Decide on girl to attract.","5":"NONE","6":"get a girl's attention"},"context":"NONE","minutes":10.0,"events_minutes":{"0":1.0,"1":15.0,"2":2.0,"3":30.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Walk over next to girl.; step1: Stop next to girl.; step2: Look around for girls near.; step3: Wave hand and smile at girl.; step4: Decide on girl to attract.; step5: decided to get a girl's attention; step6: get a girl's attention","flatten_input_for_script_generation":"You want to get a girl's attention. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step0 -> step1; step1 -> step6; step3 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get a girl's attention; step1: Look around for girls near.; step2: Decide on girl to attract.; step3: Wave hand and smile at girl.; step4: Walk over next to girl.; step5: Stop next to girl.; step6: get a girl's attention; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class GetAGirlsAttention:\n\n    title = \"get a girl's attention\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a girl's attention\"\n\n    def step1(self):\n        return \"Look around for girls near.\"\n\n    def step2(self):\n        return \"Decide on girl to attract.\"\n\n    def step3(self):\n        return \"Wave hand and smile at girl.\"\n\n    def step4(self):\n        return \"Walk over next to girl.\"\n\n    def step5(self):\n        return \"Stop next to girl.\"\n\n    def step6(self):\n        return \"get a girl's attention\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAGirlsAttention:\n\n    title = \"get a girl's attention\"\n    steps = 7\n\n","reference_graph":{"title":"get a girl's attention","num_steps":7,"schema":["step0: decided to get a girl's attention","step1: Look around for girls near.","step2: Decide on girl to attract.","step3: Wave hand and smile at girl.","step4: Walk over next to girl.","step5: Stop next to girl.","step6: get a girl's attention"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to a popular rock concert","events":{"0":"call up friends to meet","1":"take out tickets","2":"enter the arena","3":"go to the seats","4":"meet friends at arena","5":"NONE","6":"go to a popular rock concert"},"context":"NONE","minutes":240.0,"events_minutes":{"0":5.0,"1":0.0833333333,"2":5.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: call up friends to meet; step1: take out tickets; step2: enter the arena; step3: go to the seats; step4: meet friends at arena; step5: decided to go to a popular rock concert; step6: go to a popular rock concert","flatten_input_for_script_generation":"You want to go to a popular rock concert. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to go to a popular rock concert; step1: call up friends to meet; step2: meet friends at arena; step3: take out tickets; step4: enter the arena; step5: go to the seats; step6: go to a popular rock concert; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->6","4->1","5->0"],"reference_code":"class GoToAPopularRockConcert:\n\n    title = \"go to a popular rock concert\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to a popular rock concert\"\n\n    def step1(self):\n        return \"call up friends to meet\"\n\n    def step2(self):\n        return \"meet friends at arena\"\n\n    def step3(self):\n        return \"take out tickets\"\n\n    def step4(self):\n        return \"enter the arena\"\n\n    def step5(self):\n        return \"go to the seats\"\n\n    def step6(self):\n        return \"go to a popular rock concert\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToAPopularRockConcert:\n\n    title = \"go to a popular rock concert\"\n    steps = 7\n\n","reference_graph":{"title":"go to a popular rock concert","num_steps":7,"schema":["step0: decided to go to a popular rock concert","step1: call up friends to meet","step2: meet friends at arena","step3: take out tickets","step4: enter the arena","step5: go to the seats","step6: go to a popular rock concert"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"attend cooking schooling","events":{"0":"Pay for the cooking class","1":"Visit the school","2":"Wait for the course to begin","3":"Pick the most appealing school","4":"Search for good schools offering cooking courses","5":"Go to the school to take the cooking class","6":"NONE","7":"attend cooking schooling"},"context":"NONE","minutes":14400.0,"events_minutes":{"0":15.0,"1":60.0,"2":12960.0,"3":15.0,"4":120.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: Pay for the cooking class; step1: Visit the school; step2: Wait for the course to begin; step3: Pick the most appealing school; step4: Search for good schools offering cooking courses; step5: Go to the school to take the cooking class; step6: decided to attend cooking schooling; step7: attend cooking schooling","flatten_input_for_script_generation":"You want to attend cooking schooling. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to attend cooking schooling; step1: Search for good schools offering cooking courses; step2: Pick the most appealing school; step3: Visit the school; step4: Pay for the cooking class; step5: Wait for the course to begin; step6: Go to the school to take the cooking class; step7: attend cooking schooling; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->0","2->5","3->1","4->3","5->7","6->4"],"reference_code":"class AttendCookingSchooling:\n\n    title = \"attend cooking schooling\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to attend cooking schooling\"\n\n    def step1(self):\n        return \"Search for good schools offering cooking courses\"\n\n    def step2(self):\n        return \"Pick the most appealing school\"\n\n    def step3(self):\n        return \"Visit the school\"\n\n    def step4(self):\n        return \"Pay for the cooking class\"\n\n    def step5(self):\n        return \"Wait for the course to begin\"\n\n    def step6(self):\n        return \"Go to the school to take the cooking class\"\n\n    def step7(self):\n        return \"attend cooking schooling\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class AttendCookingSchooling:\n\n    title = \"attend cooking schooling\"\n    steps = 8\n\n","reference_graph":{"title":"attend cooking schooling","num_steps":8,"schema":["step0: decided to attend cooking schooling","step1: Search for good schools offering cooking courses","step2: Pick the most appealing school","step3: Visit the school","step4: Pay for the cooking class","step5: Wait for the course to begin","step6: Go to the school to take the cooking class","step7: attend cooking schooling"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"run the 5K race at the end of the month","events":{"0":"Eat well every week","1":"Rest before race","2":"Practice running every week","3":"Sign up for race","4":"Arrive at the race","5":"NONE","6":"run the 5K race at the end of the month"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":43200.0,"1":1440.0,"2":43200.0,"3":10.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Eat well every week; step1: Rest before race; step2: Practice running every week; step3: Sign up for race; step4: Arrive at the race; step5: decided to run the 5K race at the end of the month; step6: run the 5K race at the end of the month","flatten_input_for_script_generation":"You want to run the 5K race at the end of the month. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step3 -> step0; step2 -> step1; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to run the 5K race at the end of the month; step1: Sign up for race; step2: Practice running every week; step3: Eat well every week; step4: Rest before race; step5: Arrive at the race; step6: run the 5K race at the end of the month; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->1","3->2","3->0","4->6","5->3"],"reference_code":"class RunThe5kRaceAtTheEndOfTheMonth:\n\n    title = \"run the 5K race at the end of the month\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run the 5K race at the end of the month\"\n\n    def step1(self):\n        return \"Sign up for race\"\n\n    def step2(self):\n        return \"Practice running every week\"\n\n    def step3(self):\n        return \"Eat well every week\"\n\n    def step4(self):\n        return \"Rest before race\"\n\n    def step5(self):\n        return \"Arrive at the race\"\n\n    def step6(self):\n        return \"run the 5K race at the end of the month\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RunThe5kRaceAtTheEndOfTheMonth:\n\n    title = \"run the 5K race at the end of the month\"\n    steps = 7\n\n","reference_graph":{"title":"run the 5K race at the end of the month","num_steps":7,"schema":["step0: decided to run the 5K race at the end of the month","step1: Sign up for race","step2: Practice running every week","step3: Eat well every week","step4: Rest before race","step5: Arrive at the race","step6: run the 5K race at the end of the month"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"travel to an exotic country","events":{"0":"go to google","1":"book a flight","2":"go to the airport","3":"search for flights to an exotic country","4":"park the car","5":"get stuff packed","6":"walk in the airport","7":"NONE","8":"travel to an exotic country"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":1.0,"1":20.0,"2":30.0,"3":20.0,"4":10.0,"5":30.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: go to google; step1: book a flight; step2: go to the airport; step3: search for flights to an exotic country; step4: park the car; step5: get stuff packed; step6: walk in the airport; step7: decided to travel to an exotic country; step8: travel to an exotic country","flatten_input_for_script_generation":"You want to travel to an exotic country. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step5; step5 -> step2; step2 -> step4; step4 -> step6; step6 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to travel to an exotic country; step1: go to google; step2: search for flights to an exotic country; step3: book a flight; step4: get stuff packed; step5: go to the airport; step6: park the car; step7: walk in the airport; step8: travel to an exotic country; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->5","2->4","3->1","4->6","5->2","6->8","7->0"],"reference_code":"class TravelToAnExoticCountry:\n\n    title = \"travel to an exotic country\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to travel to an exotic country\"\n\n    def step1(self):\n        return \"go to google\"\n\n    def step2(self):\n        return \"search for flights to an exotic country\"\n\n    def step3(self):\n        return \"book a flight\"\n\n    def step4(self):\n        return \"get stuff packed\"\n\n    def step5(self):\n        return \"go to the airport\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def step7(self):\n        return \"walk in the airport\"\n\n    def step8(self):\n        return \"travel to an exotic country\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TravelToAnExoticCountry:\n\n    title = \"travel to an exotic country\"\n    steps = 9\n\n","reference_graph":{"title":"travel to an exotic country","num_steps":9,"schema":["step0: decided to travel to an exotic country","step1: go to google","step2: search for flights to an exotic country","step3: book a flight","step4: get stuff packed","step5: go to the airport","step6: park the car","step7: walk in the airport","step8: travel to an exotic country"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to the beach for the summer","events":{"0":"get in car","1":"walk to beach","2":"get out of car","3":"drive to beach","4":"look up local beaches","5":"NONE","6":"go to the beach for the summer"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3.0,"1":5.0,"2":1.0,"3":20.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: get in car; step1: walk to beach; step2: get out of car; step3: drive to beach; step4: look up local beaches; step5: decided to go to the beach for the summer; step6: go to the beach for the summer","flatten_input_for_script_generation":"You want to go to the beach for the summer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to the beach for the summer; step1: look up local beaches; step2: get in car; step3: drive to beach; step4: get out of car; step5: walk to beach; step6: go to the beach for the summer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class GoToTheBeachForTheSummer:\n\n    title = \"go to the beach for the summer\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the beach for the summer\"\n\n    def step1(self):\n        return \"look up local beaches\"\n\n    def step2(self):\n        return \"get in car\"\n\n    def step3(self):\n        return \"drive to beach\"\n\n    def step4(self):\n        return \"get out of car\"\n\n    def step5(self):\n        return \"walk to beach\"\n\n    def step6(self):\n        return \"go to the beach for the summer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheBeachForTheSummer:\n\n    title = \"go to the beach for the summer\"\n    steps = 7\n\n","reference_graph":{"title":"go to the beach for the summer","num_steps":7,"schema":["step0: decided to go to the beach for the summer","step1: look up local beaches","step2: get in car","step3: drive to beach","step4: get out of car","step5: walk to beach","step6: go to the beach for the summer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start working out","events":{"0":"purchase some exercise equipment","1":"look up diets online","2":"pick one out","3":"wait for delivery","4":"unpack the equipment","5":"NONE","6":"start working out"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":30.0,"1":30.0,"2":10.0,"3":10080.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: purchase some exercise equipment; step1: look up diets online; step2: pick one out; step3: wait for delivery; step4: unpack the equipment; step5: decided to start working out; step6: start working out","flatten_input_for_script_generation":"You want to start working out. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to start working out; step1: look up diets online; step2: pick one out; step3: purchase some exercise equipment; step4: wait for delivery; step5: unpack the equipment; step6: start working out; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->4","4->6","5->1"],"reference_code":"class StartWorkingOut:\n\n    title = \"start working out\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to start working out\"\n\n    def step1(self):\n        return \"look up diets online\"\n\n    def step2(self):\n        return \"pick one out\"\n\n    def step3(self):\n        return \"purchase some exercise equipment\"\n\n    def step4(self):\n        return \"wait for delivery\"\n\n    def step5(self):\n        return \"unpack the equipment\"\n\n    def step6(self):\n        return \"start working out\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartWorkingOut:\n\n    title = \"start working out\"\n    steps = 7\n\n","reference_graph":{"title":"start working out","num_steps":7,"schema":["step0: decided to start working out","step1: look up diets online","step2: pick one out","step3: purchase some exercise equipment","step4: wait for delivery","step5: unpack the equipment","step6: start working out"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run a production company","events":{"0":"browse tutorials on company management","1":"study the videos thoroughly","2":"invest in a company","3":"put the knowledge to practice","4":"pick the top 3","5":"NONE","6":"run a production company"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":30.0,"1":10080.0,"2":180.0,"3":43200.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: browse tutorials on company management; step1: study the videos thoroughly; step2: invest in a company; step3: put the knowledge to practice; step4: pick the top 3; step5: decided to run a production company; step6: run a production company","flatten_input_for_script_generation":"You want to run a production company. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to run a production company; step1: browse tutorials on company management; step2: pick the top 3; step3: study the videos thoroughly; step4: put the knowledge to practice; step5: invest in a company; step6: run a production company; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->6","3->2","4->1","5->0"],"reference_code":"class RunAProductionCompany:\n\n    title = \"run a production company\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run a production company\"\n\n    def step1(self):\n        return \"browse tutorials on company management\"\n\n    def step2(self):\n        return \"pick the top 3\"\n\n    def step3(self):\n        return \"study the videos thoroughly\"\n\n    def step4(self):\n        return \"put the knowledge to practice\"\n\n    def step5(self):\n        return \"invest in a company\"\n\n    def step6(self):\n        return \"run a production company\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RunAProductionCompany:\n\n    title = \"run a production company\"\n    steps = 7\n\n","reference_graph":{"title":"run a production company","num_steps":7,"schema":["step0: decided to run a production company","step1: browse tutorials on company management","step2: pick the top 3","step3: study the videos thoroughly","step4: put the knowledge to practice","step5: invest in a company","step6: run a production company"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try practicing yoga","events":{"0":"Pick a video","1":"Practice the move","2":"Play the video","3":"Look up yoga tutorials online","4":"Pause the video","5":"Play the video again","6":"Hold the move for a few seconds","7":"NONE","8":"try practicing yoga"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":20.0,"2":10.0,"3":10.0,"4":1.0,"5":10.0,"6":0.3333333333},"flatten_input_for_edge_prediction":"step0: Pick a video; step1: Practice the move; step2: Play the video; step3: Look up yoga tutorials online; step4: Pause the video; step5: Play the video again; step6: Hold the move for a few seconds; step7: decided to try practicing yoga; step8: try practicing yoga","flatten_input_for_script_generation":"You want to try practicing yoga. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step2; step0 -> step4; step2 -> step4; step4 -> step1; step1 -> step6; step6 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to try practicing yoga; step1: Look up yoga tutorials online; step2: Pick a video; step3: Play the video; step4: Pause the video; step5: Practice the move; step6: Hold the move for a few seconds; step7: Play the video again; step8: try practicing yoga; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->6","2->4","3->0","3->2","4->1","5->8","6->5","7->3"],"reference_code":"class TryPracticingYoga:\n\n    title = \"try practicing yoga\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try practicing yoga\"\n\n    def step1(self):\n        return \"Look up yoga tutorials online\"\n\n    def step2(self):\n        return \"Pick a video\"\n\n    def step3(self):\n        return \"Play the video\"\n\n    def step4(self):\n        return \"Pause the video\"\n\n    def step5(self):\n        return \"Practice the move\"\n\n    def step6(self):\n        return \"Hold the move for a few seconds\"\n\n    def step7(self):\n        return \"Play the video again\"\n\n    def step8(self):\n        return \"try practicing yoga\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TryPracticingYoga:\n\n    title = \"try practicing yoga\"\n    steps = 9\n\n","reference_graph":{"title":"try practicing yoga","num_steps":9,"schema":["step0: decided to try practicing yoga","step1: Look up yoga tutorials online","step2: Pick a video","step3: Play the video","step4: Pause the video","step5: Practice the move","step6: Hold the move for a few seconds","step7: Play the video again","step8: try practicing yoga"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get into better shape","events":{"0":"go to the gym most days","1":"pay the fee","2":"search for a gym","3":"go to google","4":"sign up for the gym","5":"go to the sign up page","6":"NONE","7":"get into better shape"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":43200.0,"1":5.0,"2":20.0,"3":1.0,"4":10.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: go to the gym most days; step1: pay the fee; step2: search for a gym; step3: go to google; step4: sign up for the gym; step5: go to the sign up page; step6: decided to get into better shape; step7: get into better shape","flatten_input_for_script_generation":"You want to get into better shape. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step5; step5 -> step4; step4 -> step1; step1 -> step0; step0 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to get into better shape; step1: go to google; step2: search for a gym; step3: go to the sign up page; step4: sign up for the gym; step5: pay the fee; step6: go to the gym most days; step7: get into better shape; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->0","2->5","3->2","4->1","5->4","6->3"],"reference_code":"class GetIntoBetterShape:\n\n    title = \"get into better shape\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get into better shape\"\n\n    def step1(self):\n        return \"go to google\"\n\n    def step2(self):\n        return \"search for a gym\"\n\n    def step3(self):\n        return \"go to the sign up page\"\n\n    def step4(self):\n        return \"sign up for the gym\"\n\n    def step5(self):\n        return \"pay the fee\"\n\n    def step6(self):\n        return \"go to the gym most days\"\n\n    def step7(self):\n        return \"get into better shape\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetIntoBetterShape:\n\n    title = \"get into better shape\"\n    steps = 8\n\n","reference_graph":{"title":"get into better shape","num_steps":8,"schema":["step0: decided to get into better shape","step1: go to google","step2: search for a gym","step3: go to the sign up page","step4: sign up for the gym","step5: pay the fee","step6: go to the gym most days","step7: get into better shape"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"take a dance class","events":{"0":"Read reviews for local dance studios.","1":"Enter the building.","2":"Drive to the dance studio.","3":"Reserve a place in class.","4":"Call dance studio.","5":"Wait for instructor to enter.","6":"Decide which studio to contact.","7":"NONE","8":"take a dance class"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":60.0,"1":1.0,"2":60.0,"3":10.0,"4":10.0,"5":10.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: Read reviews for local dance studios.; step1: Enter the building.; step2: Drive to the dance studio.; step3: Reserve a place in class.; step4: Call dance studio.; step5: Wait for instructor to enter.; step6: Decide which studio to contact.; step7: decided to take a dance class; step8: take a dance class","flatten_input_for_script_generation":"You want to take a dance class. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step6 -> step4; step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step5; step5 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to take a dance class; step1: Read reviews for local dance studios.; step2: Decide which studio to contact.; step3: Call dance studio.; step4: Reserve a place in class.; step5: Drive to the dance studio.; step6: Enter the building.; step7: Wait for instructor to enter.; step8: take a dance class; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->5","2->1","3->2","4->3","5->8","6->4","7->0"],"reference_code":"class TakeADanceClass:\n\n    title = \"take a dance class\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take a dance class\"\n\n    def step1(self):\n        return \"Read reviews for local dance studios.\"\n\n    def step2(self):\n        return \"Decide which studio to contact.\"\n\n    def step3(self):\n        return \"Call dance studio.\"\n\n    def step4(self):\n        return \"Reserve a place in class.\"\n\n    def step5(self):\n        return \"Drive to the dance studio.\"\n\n    def step6(self):\n        return \"Enter the building.\"\n\n    def step7(self):\n        return \"Wait for instructor to enter.\"\n\n    def step8(self):\n        return \"take a dance class\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeADanceClass:\n\n    title = \"take a dance class\"\n    steps = 9\n\n","reference_graph":{"title":"take a dance class","num_steps":9,"schema":["step0: decided to take a dance class","step1: Read reviews for local dance studios.","step2: Decide which studio to contact.","step3: Call dance studio.","step4: Reserve a place in class.","step5: Drive to the dance studio.","step6: Enter the building.","step7: Wait for instructor to enter.","step8: take a dance class"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have a really cool place to hang out","events":{"0":"think about possibilities in and around the home","1":"add items that make the space comfortable","2":"add fun decorations","3":"paint in a cool color","4":"choose a place to update","5":"clear out the space","6":"NONE","7":"have a really cool place to hang out"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":60.0,"2":30.0,"3":60.0,"4":1.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: think about possibilities in and around the home; step1: add items that make the space comfortable; step2: add fun decorations; step3: paint in a cool color; step4: choose a place to update; step5: clear out the space; step6: decided to have a really cool place to hang out; step7: have a really cool place to hang out","flatten_input_for_script_generation":"You want to have a really cool place to hang out. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step5; step5 -> step3; step3 -> step2; step3 -> step1; step1 -> step7; step2 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to have a really cool place to hang out; step1: think about possibilities in and around the home; step2: choose a place to update; step3: clear out the space; step4: paint in a cool color; step5: add fun decorations; step6: add items that make the space comfortable; step7: have a really cool place to hang out; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7","gold_edges_for_prediction":["0->4","1->7","2->7","3->2","3->1","4->5","5->3","6->0"],"reference_code":"class HaveAReallyCoolPlaceToHangOut:\n\n    title = \"have a really cool place to hang out\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to have a really cool place to hang out\"\n\n    def step1(self):\n        return \"think about possibilities in and around the home\"\n\n    def step2(self):\n        return \"choose a place to update\"\n\n    def step3(self):\n        return \"clear out the space\"\n\n    def step4(self):\n        return \"paint in a cool color\"\n\n    def step5(self):\n        return \"add fun decorations\"\n\n    def step6(self):\n        return \"add items that make the space comfortable\"\n\n    def step7(self):\n        return \"have a really cool place to hang out\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class HaveAReallyCoolPlaceToHangOut:\n\n    title = \"have a really cool place to hang out\"\n    steps = 8\n\n","reference_graph":{"title":"have a really cool place to hang out","num_steps":8,"schema":["step0: decided to have a really cool place to hang out","step1: think about possibilities in and around the home","step2: choose a place to update","step3: clear out the space","step4: paint in a cool color","step5: add fun decorations","step6: add items that make the space comfortable","step7: have a really cool place to hang out"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7"]}}
{"scenario":"have a snack","events":{"0":"grab some bread","1":"go to the kitchen.","2":"Spread the peanut butter on the bread.","3":"open the pantry.","4":"grab some peanut butter","5":"Get a knife.","6":"NONE","7":"have a snack"},"context":"NONE","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":1.0,"2":8.0,"3":0.0833333333,"4":5.0,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: grab some bread; step1: go to the kitchen.; step2: Spread the peanut butter on the bread.; step3: open the pantry.; step4: grab some peanut butter; step5: Get a knife.; step6: decided to have a snack; step7: have a snack","flatten_input_for_script_generation":"You want to have a snack. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step0 -> step5; step4 -> step0; step5 -> step2; step2 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to have a snack; step1: go to the kitchen.; step2: open the pantry.; step3: grab some peanut butter; step4: grab some bread; step5: Get a knife.; step6: Spread the peanut butter on the bread.; step7: have a snack; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->7","3->4","4->0","5->2","6->1"],"reference_code":"class HaveASnack:\n\n    title = \"have a snack\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to have a snack\"\n\n    def step1(self):\n        return \"go to the kitchen.\"\n\n    def step2(self):\n        return \"open the pantry.\"\n\n    def step3(self):\n        return \"grab some peanut butter\"\n\n    def step4(self):\n        return \"grab some bread\"\n\n    def step5(self):\n        return \"Get a knife.\"\n\n    def step6(self):\n        return \"Spread the peanut butter on the bread.\"\n\n    def step7(self):\n        return \"have a snack\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class HaveASnack:\n\n    title = \"have a snack\"\n    steps = 8\n\n","reference_graph":{"title":"have a snack","num_steps":8,"schema":["step0: decided to have a snack","step1: go to the kitchen.","step2: open the pantry.","step3: grab some peanut butter","step4: grab some bread","step5: Get a knife.","step6: Spread the peanut butter on the bread.","step7: have a snack"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"gain more muscle","events":{"0":"drive to the gym","1":"park the car","2":"run the treadmill","3":"do legs lifting","4":"do yoga squat","5":"do weight lifting","6":"enter the gym","7":"NONE","8":"gain more muscle"},"context":"NONE","minutes":100.0,"events_minutes":{"0":30.0,"1":2.0,"2":20.0,"3":15.0,"4":15.0,"5":15.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: drive to the gym; step1: park the car; step2: run the treadmill; step3: do legs lifting; step4: do yoga squat; step5: do weight lifting; step6: enter the gym; step7: decided to gain more muscle; step8: gain more muscle","flatten_input_for_script_generation":"You want to gain more muscle. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step6; step6 -> step5; step6 -> step3; step6 -> step4; step6 -> step2; step5 -> step8; step3 -> step8; step4 -> step8; step2 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to gain more muscle; step1: drive to the gym; step2: park the car; step3: enter the gym; step4: do weight lifting; step5: do legs lifting; step6: do yoga squat; step7: run the treadmill; step8: gain more muscle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step3 -> step6; step3 -> step7; step4 -> step8; step5 -> step8; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->1","1->6","2->8","3->8","4->8","5->8","6->5","6->3","6->4","6->2","7->0"],"reference_code":"class GainMoreMuscle:\n\n    title = \"gain more muscle\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to gain more muscle\"\n\n    def step1(self):\n        return \"drive to the gym\"\n\n    def step2(self):\n        return \"park the car\"\n\n    def step3(self):\n        return \"enter the gym\"\n\n    def step4(self):\n        return \"do weight lifting\"\n\n    def step5(self):\n        return \"do legs lifting\"\n\n    def step6(self):\n        return \"do yoga squat\"\n\n    def step7(self):\n        return \"run the treadmill\"\n\n    def step8(self):\n        return \"gain more muscle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step3 -> step6\",\n            \"step3 -> step7\",\n            \"step4 -> step8\",\n            \"step5 -> step8\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GainMoreMuscle:\n\n    title = \"gain more muscle\"\n    steps = 9\n\n","reference_graph":{"title":"gain more muscle","num_steps":9,"schema":["step0: decided to gain more muscle","step1: drive to the gym","step2: park the car","step3: enter the gym","step4: do weight lifting","step5: do legs lifting","step6: do yoga squat","step7: run the treadmill","step8: gain more muscle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step3 -> step6","step3 -> step7","step4 -> step8","step5 -> step8","step6 -> step8","step7 -> step8"]}}
{"scenario":"go buy some new comics","events":{"0":"put the key in the ignition","1":"leave the house","2":"decide to buy some new comics","3":"start the car's engine","4":"get into the car","5":"grab wallet off of desk","6":"NONE","7":"go buy some new comics"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.25,"1":2.0,"2":1.0,"3":0.0833333333,"4":1.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: put the key in the ignition; step1: leave the house; step2: decide to buy some new comics; step3: start the car's engine; step4: get into the car; step5: grab wallet off of desk; step6: decided to go buy some new comics; step7: go buy some new comics","flatten_input_for_script_generation":"You want to go buy some new comics. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to go buy some new comics; step1: decide to buy some new comics; step2: grab wallet off of desk; step3: leave the house; step4: get into the car; step5: put the key in the ignition; step6: start the car's engine; step7: go buy some new comics; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->5","3->7","4->0","5->1","6->2"],"reference_code":"class GoBuySomeNewComics:\n\n    title = \"go buy some new comics\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go buy some new comics\"\n\n    def step1(self):\n        return \"decide to buy some new comics\"\n\n    def step2(self):\n        return \"grab wallet off of desk\"\n\n    def step3(self):\n        return \"leave the house\"\n\n    def step4(self):\n        return \"get into the car\"\n\n    def step5(self):\n        return \"put the key in the ignition\"\n\n    def step6(self):\n        return \"start the car's engine\"\n\n    def step7(self):\n        return \"go buy some new comics\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoBuySomeNewComics:\n\n    title = \"go buy some new comics\"\n    steps = 8\n\n","reference_graph":{"title":"go buy some new comics","num_steps":8,"schema":["step0: decided to go buy some new comics","step1: decide to buy some new comics","step2: grab wallet off of desk","step3: leave the house","step4: get into the car","step5: put the key in the ignition","step6: start the car's engine","step7: go buy some new comics"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to the prom","events":{"0":"ask to use the car","1":"take a shower","2":"drive to date's house","3":"dry off with a towel","4":"put on a suit","5":"pose for pictures with date","6":"NONE","7":"go to the prom"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":15.0,"2":10.0,"3":5.0,"4":10.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: ask to use the car; step1: take a shower; step2: drive to date's house; step3: dry off with a towel; step4: put on a suit; step5: pose for pictures with date; step6: decided to go to the prom; step7: go to the prom","flatten_input_for_script_generation":"You want to go to the prom. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step5; step5 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to go to the prom; step1: take a shower; step2: dry off with a towel; step3: put on a suit; step4: ask to use the car; step5: drive to date's house; step6: pose for pictures with date; step7: go to the prom; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->3","2->5","3->4","4->0","5->7","6->1"],"reference_code":"class GoToTheProm:\n\n    title = \"go to the prom\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to the prom\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"dry off with a towel\"\n\n    def step3(self):\n        return \"put on a suit\"\n\n    def step4(self):\n        return \"ask to use the car\"\n\n    def step5(self):\n        return \"drive to date's house\"\n\n    def step6(self):\n        return \"pose for pictures with date\"\n\n    def step7(self):\n        return \"go to the prom\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToTheProm:\n\n    title = \"go to the prom\"\n    steps = 8\n\n","reference_graph":{"title":"go to the prom","num_steps":8,"schema":["step0: decided to go to the prom","step1: take a shower","step2: dry off with a towel","step3: put on a suit","step4: ask to use the car","step5: drive to date's house","step6: pose for pictures with date","step7: go to the prom"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"watch a movie about a dying mother","events":{"0":"Decide on which movie to select.","1":"Turn on TV.","2":"Sit down on couch.","3":"Search through movies for dying mother films.","4":"Click play button.","5":"Click on Netflix app.","6":"NONE","7":"watch a movie about a dying mother"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":0.25,"2":3.0,"3":15.0,"4":0.25,"5":0.5},"flatten_input_for_edge_prediction":"step0: Decide on which movie to select.; step1: Turn on TV.; step2: Sit down on couch.; step3: Search through movies for dying mother films.; step4: Click play button.; step5: Click on Netflix app.; step6: decided to watch a movie about a dying mother; step7: watch a movie about a dying mother","flatten_input_for_script_generation":"You want to watch a movie about a dying mother. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step5; step5 -> step3; step3 -> step0; step0 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to watch a movie about a dying mother; step1: Sit down on couch.; step2: Turn on TV.; step3: Click on Netflix app.; step4: Search through movies for dying mother films.; step5: Decide on which movie to select.; step6: Click play button.; step7: watch a movie about a dying mother; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->5","2->1","3->0","4->7","5->3","6->2"],"reference_code":"class WatchAMovieAboutADyingMother:\n\n    title = \"watch a movie about a dying mother\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to watch a movie about a dying mother\"\n\n    def step1(self):\n        return \"Sit down on couch.\"\n\n    def step2(self):\n        return \"Turn on TV.\"\n\n    def step3(self):\n        return \"Click on Netflix app.\"\n\n    def step4(self):\n        return \"Search through movies for dying mother films.\"\n\n    def step5(self):\n        return \"Decide on which movie to select.\"\n\n    def step6(self):\n        return \"Click play button.\"\n\n    def step7(self):\n        return \"watch a movie about a dying mother\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WatchAMovieAboutADyingMother:\n\n    title = \"watch a movie about a dying mother\"\n    steps = 8\n\n","reference_graph":{"title":"watch a movie about a dying mother","num_steps":8,"schema":["step0: decided to watch a movie about a dying mother","step1: Sit down on couch.","step2: Turn on TV.","step3: Click on Netflix app.","step4: Search through movies for dying mother films.","step5: Decide on which movie to select.","step6: Click play button.","step7: watch a movie about a dying mother"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make a new salad","events":{"0":"gather the kitchen tools","1":"put the ingredients in a bowl","2":"add salad dressing","3":"choose a salad recipe","4":"gather the ingredients","5":"look for salad recipes online","6":"mix up the ingredients","7":"NONE","8":"make a new salad"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":1.0,"2":1.0,"3":5.0,"4":15.0,"5":15.0,"6":4.0},"flatten_input_for_edge_prediction":"step0: gather the kitchen tools; step1: put the ingredients in a bowl; step2: add salad dressing; step3: choose a salad recipe; step4: gather the ingredients; step5: look for salad recipes online; step6: mix up the ingredients; step7: decided to make a new salad; step8: make a new salad","flatten_input_for_script_generation":"You want to make a new salad. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step6 -> step2; step2 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to make a new salad; step1: look for salad recipes online; step2: choose a salad recipe; step3: gather the ingredients; step4: gather the kitchen tools; step5: put the ingredients in a bowl; step6: mix up the ingredients; step7: add salad dressing; step8: make a new salad; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->6","2->8","3->4","4->0","5->3","6->2","7->5"],"reference_code":"class MakeANewSalad:\n\n    title = \"make a new salad\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make a new salad\"\n\n    def step1(self):\n        return \"look for salad recipes online\"\n\n    def step2(self):\n        return \"choose a salad recipe\"\n\n    def step3(self):\n        return \"gather the ingredients\"\n\n    def step4(self):\n        return \"gather the kitchen tools\"\n\n    def step5(self):\n        return \"put the ingredients in a bowl\"\n\n    def step6(self):\n        return \"mix up the ingredients\"\n\n    def step7(self):\n        return \"add salad dressing\"\n\n    def step8(self):\n        return \"make a new salad\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeANewSalad:\n\n    title = \"make a new salad\"\n    steps = 9\n\n","reference_graph":{"title":"make a new salad","num_steps":9,"schema":["step0: decided to make a new salad","step1: look for salad recipes online","step2: choose a salad recipe","step3: gather the ingredients","step4: gather the kitchen tools","step5: put the ingredients in a bowl","step6: mix up the ingredients","step7: add salad dressing","step8: make a new salad"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"read a newly released book","events":{"0":"grab the book","1":"open the book","2":"find the book","3":"find a comfortable spot","4":"read the book","5":"NONE","6":"read a newly released book"},"context":"NONE","minutes":240.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":2.0,"4":180.0},"flatten_input_for_edge_prediction":"step0: grab the book; step1: open the book; step2: find the book; step3: find a comfortable spot; step4: read the book; step5: decided to read a newly released book; step6: read a newly released book","flatten_input_for_script_generation":"You want to read a newly released book. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to read a newly released book; step1: find the book; step2: grab the book; step3: find a comfortable spot; step4: open the book; step5: read the book; step6: read a newly released book; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class ReadANewlyReleasedBook:\n\n    title = \"read a newly released book\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to read a newly released book\"\n\n    def step1(self):\n        return \"find the book\"\n\n    def step2(self):\n        return \"grab the book\"\n\n    def step3(self):\n        return \"find a comfortable spot\"\n\n    def step4(self):\n        return \"open the book\"\n\n    def step5(self):\n        return \"read the book\"\n\n    def step6(self):\n        return \"read a newly released book\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadANewlyReleasedBook:\n\n    title = \"read a newly released book\"\n    steps = 7\n\n","reference_graph":{"title":"read a newly released book","num_steps":7,"schema":["step0: decided to read a newly released book","step1: find the book","step2: grab the book","step3: find a comfortable spot","step4: open the book","step5: read the book","step6: read a newly released book"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take a placement test to enroll in math courses","events":{"0":"drive to school","1":"get in the car","2":"show ID and pay a fee","3":"walk to the testing office","4":"park the car","5":"NONE","6":"take a placement test to enroll in math courses"},"context":"NONE","minutes":120.0,"events_minutes":{"0":10.0,"1":5.0,"2":10.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: drive to school; step1: get in the car; step2: show ID and pay a fee; step3: walk to the testing office; step4: park the car; step5: decided to take a placement test to enroll in math courses; step6: take a placement test to enroll in math courses","flatten_input_for_script_generation":"You want to take a placement test to enroll in math courses. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to take a placement test to enroll in math courses; step1: get in the car; step2: drive to school; step3: park the car; step4: walk to the testing office; step5: show ID and pay a fee; step6: take a placement test to enroll in math courses; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->2","4->3","5->1"],"reference_code":"class TakeAPlacementTestToEnrollInMathCourses:\n\n    title = \"take a placement test to enroll in math courses\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to take a placement test to enroll in math courses\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to school\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"walk to the testing office\"\n\n    def step5(self):\n        return \"show ID and pay a fee\"\n\n    def step6(self):\n        return \"take a placement test to enroll in math courses\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeAPlacementTestToEnrollInMathCourses:\n\n    title = \"take a placement test to enroll in math courses\"\n    steps = 7\n\n","reference_graph":{"title":"take a placement test to enroll in math courses","num_steps":7,"schema":["step0: decided to take a placement test to enroll in math courses","step1: get in the car","step2: drive to school","step3: park the car","step4: walk to the testing office","step5: show ID and pay a fee","step6: take a placement test to enroll in math courses"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get snacks for the road trip","events":{"0":"drive to the grocery store","1":"drive back home","2":"make a list of snacks","3":"pack the snacks up","4":"find out what everyone wants","5":"get everything on the list","6":"NONE","7":"get snacks for the road trip"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":15.0,"4":15.0,"5":35.0},"flatten_input_for_edge_prediction":"step0: drive to the grocery store; step1: drive back home; step2: make a list of snacks; step3: pack the snacks up; step4: find out what everyone wants; step5: get everything on the list; step6: decided to get snacks for the road trip; step7: get snacks for the road trip","flatten_input_for_script_generation":"You want to get snacks for the road trip. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step5; step5 -> step1; step1 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to get snacks for the road trip; step1: find out what everyone wants; step2: make a list of snacks; step3: drive to the grocery store; step4: get everything on the list; step5: drive back home; step6: pack the snacks up; step7: get snacks for the road trip; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->0","3->7","4->2","5->1","6->4"],"reference_code":"class GetSnacksForTheRoadTrip:\n\n    title = \"get snacks for the road trip\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get snacks for the road trip\"\n\n    def step1(self):\n        return \"find out what everyone wants\"\n\n    def step2(self):\n        return \"make a list of snacks\"\n\n    def step3(self):\n        return \"drive to the grocery store\"\n\n    def step4(self):\n        return \"get everything on the list\"\n\n    def step5(self):\n        return \"drive back home\"\n\n    def step6(self):\n        return \"pack the snacks up\"\n\n    def step7(self):\n        return \"get snacks for the road trip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetSnacksForTheRoadTrip:\n\n    title = \"get snacks for the road trip\"\n    steps = 8\n\n","reference_graph":{"title":"get snacks for the road trip","num_steps":8,"schema":["step0: decided to get snacks for the road trip","step1: find out what everyone wants","step2: make a list of snacks","step3: drive to the grocery store","step4: get everything on the list","step5: drive back home","step6: pack the snacks up","step7: get snacks for the road trip"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"visit Great Adventures water park","events":{"0":"drive to the park","1":"set gps to park","2":"fill up gas tank","3":"buy ticket enter park","4":"get family in car","5":"NONE","6":"visit Great Adventures water park"},"context":"NONE","minutes":120.0,"events_minutes":{"0":60.0,"1":20.0,"2":20.0,"3":10.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: drive to the park; step1: set gps to park; step2: fill up gas tank; step3: buy ticket enter park; step4: get family in car; step5: decided to visit Great Adventures water park; step6: visit Great Adventures water park","flatten_input_for_script_generation":"You want to visit Great Adventures water park. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to visit Great Adventures water park; step1: get family in car; step2: fill up gas tank; step3: set gps to park; step4: drive to the park; step5: buy ticket enter park; step6: visit Great Adventures water park; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->6","4->2","5->4"],"reference_code":"class VisitGreatAdventuresWaterPark:\n\n    title = \"visit Great Adventures water park\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to visit Great Adventures water park\"\n\n    def step1(self):\n        return \"get family in car\"\n\n    def step2(self):\n        return \"fill up gas tank\"\n\n    def step3(self):\n        return \"set gps to park\"\n\n    def step4(self):\n        return \"drive to the park\"\n\n    def step5(self):\n        return \"buy ticket enter park\"\n\n    def step6(self):\n        return \"visit Great Adventures water park\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class VisitGreatAdventuresWaterPark:\n\n    title = \"visit Great Adventures water park\"\n    steps = 7\n\n","reference_graph":{"title":"visit Great Adventures water park","num_steps":7,"schema":["step0: decided to visit Great Adventures water park","step1: get family in car","step2: fill up gas tank","step3: set gps to park","step4: drive to the park","step5: buy ticket enter park","step6: visit Great Adventures water park"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"join the beauty pageant to win 1st prize","events":{"0":"wait in line for auditions","1":"drive to pageant","2":"get inside car","3":"get ready at home","4":"kill the auditions","5":"NONE","6":"join the beauty pageant to win 1st prize"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":10.0,"2":5.0,"3":10.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: wait in line for auditions; step1: drive to pageant; step2: get inside car; step3: get ready at home; step4: kill the auditions; step5: decided to join the beauty pageant to win 1st prize; step6: join the beauty pageant to win 1st prize","flatten_input_for_script_generation":"You want to join the beauty pageant to win 1st prize. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to join the beauty pageant to win 1st prize; step1: get ready at home; step2: get inside car; step3: drive to pageant; step4: wait in line for auditions; step5: kill the auditions; step6: join the beauty pageant to win 1st prize; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->6","5->3"],"reference_code":"class JoinTheBeautyPageantToWin1stPrize:\n\n    title = \"join the beauty pageant to win 1st prize\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to join the beauty pageant to win 1st prize\"\n\n    def step1(self):\n        return \"get ready at home\"\n\n    def step2(self):\n        return \"get inside car\"\n\n    def step3(self):\n        return \"drive to pageant\"\n\n    def step4(self):\n        return \"wait in line for auditions\"\n\n    def step5(self):\n        return \"kill the auditions\"\n\n    def step6(self):\n        return \"join the beauty pageant to win 1st prize\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class JoinTheBeautyPageantToWin1stPrize:\n\n    title = \"join the beauty pageant to win 1st prize\"\n    steps = 7\n\n","reference_graph":{"title":"join the beauty pageant to win 1st prize","num_steps":7,"schema":["step0: decided to join the beauty pageant to win 1st prize","step1: get ready at home","step2: get inside car","step3: drive to pageant","step4: wait in line for auditions","step5: kill the auditions","step6: join the beauty pageant to win 1st prize"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"work for the government","events":{"0":"Clear background checks","1":"Apply for government job","2":"Sign job offer","3":"Find suitable government job online","4":"Pass interview with government","5":"Gain security clearances","6":"Agree to interview with government","7":"NONE","8":"work for the government"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":2880.0,"1":60.0,"2":60.0,"3":120.0,"4":180.0,"5":10080.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: Clear background checks; step1: Apply for government job; step2: Sign job offer; step3: Find suitable government job online; step4: Pass interview with government; step5: Gain security clearances; step6: Agree to interview with government; step7: decided to work for the government; step8: work for the government","flatten_input_for_script_generation":"You want to work for the government. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step6; step6 -> step4; step4 -> step2; step4 -> step0; step0 -> step5; step5 -> step8; step2 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to work for the government; step1: Find suitable government job online; step2: Apply for government job; step3: Agree to interview with government; step4: Pass interview with government; step5: Sign job offer; step6: Clear background checks; step7: work for the government; step8: Gain security clearances; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step8; step8 -> step7","gold_edges_for_prediction":["0->5","1->6","2->8","3->1","4->2","4->0","5->8","6->4","7->3"],"reference_code":"class WorkForTheGovernment:\n\n    title = \"work for the government\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to work for the government\"\n\n    def step1(self):\n        return \"Find suitable government job online\"\n\n    def step2(self):\n        return \"Apply for government job\"\n\n    def step3(self):\n        return \"Agree to interview with government\"\n\n    def step4(self):\n        return \"Pass interview with government\"\n\n    def step5(self):\n        return \"Sign job offer\"\n\n    def step6(self):\n        return \"Clear background checks\"\n\n    def step7(self):\n        return \"work for the government\"\n\n    def step8(self):\n        return \"Gain security clearances\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step8 -> step7\",\n        ]\n","input_prompt_code":"class WorkForTheGovernment:\n\n    title = \"work for the government\"\n    steps = 9\n\n","reference_graph":{"title":"work for the government","num_steps":9,"schema":["step0: decided to work for the government","step1: Find suitable government job online","step2: Apply for government job","step3: Agree to interview with government","step4: Pass interview with government","step5: Sign job offer","step6: Clear background checks","step7: work for the government","step8: Gain security clearances"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step8","step8 -> step7"]}}
{"scenario":"get groceries yesterday","events":{"0":"lined up at cashier","1":"picked the required groceries","2":"parked the car","3":"paid for groceries","4":"drove to grocery store","5":"entered grocery store","6":"NONE","7":"get groceries yesterday"},"context":"NONE","minutes":50.0,"events_minutes":{"0":5.0,"1":20.0,"2":3.0,"3":5.0,"4":15.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: lined up at cashier; step1: picked the required groceries; step2: parked the car; step3: paid for groceries; step4: drove to grocery store; step5: entered grocery store; step6: decided to get groceries yesterday; step7: get groceries yesterday","flatten_input_for_script_generation":"You want to get groceries yesterday. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step5; step5 -> step1; step1 -> step0; step0 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to get groceries yesterday; step1: drove to grocery store; step2: parked the car; step3: entered grocery store; step4: picked the required groceries; step5: lined up at cashier; step6: paid for groceries; step7: get groceries yesterday; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->0","2->5","3->7","4->2","5->1","6->4"],"reference_code":"class GetGroceriesYesterday:\n\n    title = \"get groceries yesterday\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get groceries yesterday\"\n\n    def step1(self):\n        return \"drove to grocery store\"\n\n    def step2(self):\n        return \"parked the car\"\n\n    def step3(self):\n        return \"entered grocery store\"\n\n    def step4(self):\n        return \"picked the required groceries\"\n\n    def step5(self):\n        return \"lined up at cashier\"\n\n    def step6(self):\n        return \"paid for groceries\"\n\n    def step7(self):\n        return \"get groceries yesterday\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetGroceriesYesterday:\n\n    title = \"get groceries yesterday\"\n    steps = 8\n\n","reference_graph":{"title":"get groceries yesterday","num_steps":8,"schema":["step0: decided to get groceries yesterday","step1: drove to grocery store","step2: parked the car","step3: entered grocery store","step4: picked the required groceries","step5: lined up at cashier","step6: paid for groceries","step7: get groceries yesterday"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to the party on Saturday night","events":{"0":"wait for saturday","1":"take a shower","2":"get invited to the part","3":"get dressed in nice clothes","4":"get into the car","5":"NONE","6":"go to the party on Saturday night"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":1440.0,"1":20.0,"2":2.0,"3":30.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: wait for saturday; step1: take a shower; step2: get invited to the part; step3: get dressed in nice clothes; step4: get into the car; step5: decided to go to the party on Saturday night; step6: go to the party on Saturday night","flatten_input_for_script_generation":"You want to go to the party on Saturday night. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go to the party on Saturday night; step1: get invited to the part; step2: wait for saturday; step3: take a shower; step4: get dressed in nice clothes; step5: get into the car; step6: go to the party on Saturday night; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->6","5->2"],"reference_code":"class GoToThePartyOnSaturdayNight:\n\n    title = \"go to the party on Saturday night\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the party on Saturday night\"\n\n    def step1(self):\n        return \"get invited to the part\"\n\n    def step2(self):\n        return \"wait for saturday\"\n\n    def step3(self):\n        return \"take a shower\"\n\n    def step4(self):\n        return \"get dressed in nice clothes\"\n\n    def step5(self):\n        return \"get into the car\"\n\n    def step6(self):\n        return \"go to the party on Saturday night\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToThePartyOnSaturdayNight:\n\n    title = \"go to the party on Saturday night\"\n    steps = 7\n\n","reference_graph":{"title":"go to the party on Saturday night","num_steps":7,"schema":["step0: decided to go to the party on Saturday night","step1: get invited to the part","step2: wait for saturday","step3: take a shower","step4: get dressed in nice clothes","step5: get into the car","step6: go to the party on Saturday night"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"cook a delicious dinner","events":{"0":"drive to the store","1":"go in the store","2":"purchase some groceries","3":"drive back home","4":"get in the car","5":"NONE","6":"cook a delicious dinner"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":3.0,"2":10.0,"3":30.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: drive to the store; step1: go in the store; step2: purchase some groceries; step3: drive back home; step4: get in the car; step5: decided to cook a delicious dinner; step6: cook a delicious dinner","flatten_input_for_script_generation":"You want to cook a delicious dinner. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to cook a delicious dinner; step1: get in the car; step2: drive to the store; step3: go in the store; step4: purchase some groceries; step5: drive back home; step6: cook a delicious dinner; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class CookADeliciousDinner:\n\n    title = \"cook a delicious dinner\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to cook a delicious dinner\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"go in the store\"\n\n    def step4(self):\n        return \"purchase some groceries\"\n\n    def step5(self):\n        return \"drive back home\"\n\n    def step6(self):\n        return \"cook a delicious dinner\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CookADeliciousDinner:\n\n    title = \"cook a delicious dinner\"\n    steps = 7\n\n","reference_graph":{"title":"cook a delicious dinner","num_steps":7,"schema":["step0: decided to cook a delicious dinner","step1: get in the car","step2: drive to the store","step3: go in the store","step4: purchase some groceries","step5: drive back home","step6: cook a delicious dinner"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make money from home","events":{"0":"look up how to make money online","1":"write a first blog post","2":"set up a website","3":"set up an affiliate link","4":"decide on a niche","5":"NONE","6":"make money from home"},"context":"NONE","minutes":120.0,"events_minutes":{"0":45.0,"1":45.0,"2":15.0,"3":15.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: look up how to make money online; step1: write a first blog post; step2: set up a website; step3: set up an affiliate link; step4: decide on a niche; step5: decided to make money from home; step6: make money from home","flatten_input_for_script_generation":"You want to make money from home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step1; step2 -> step3; step1 -> step6; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make money from home; step1: look up how to make money online; step2: decide on a niche; step3: set up a website; step4: write a first blog post; step5: set up an affiliate link; step6: make money from home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","2->3","3->6","4->2","5->0"],"reference_code":"class MakeMoneyFromHome:\n\n    title = \"make money from home\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make money from home\"\n\n    def step1(self):\n        return \"look up how to make money online\"\n\n    def step2(self):\n        return \"decide on a niche\"\n\n    def step3(self):\n        return \"set up a website\"\n\n    def step4(self):\n        return \"write a first blog post\"\n\n    def step5(self):\n        return \"set up an affiliate link\"\n\n    def step6(self):\n        return \"make money from home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeMoneyFromHome:\n\n    title = \"make money from home\"\n    steps = 7\n\n","reference_graph":{"title":"make money from home","num_steps":7,"schema":["step0: decided to make money from home","step1: look up how to make money online","step2: decide on a niche","step3: set up a website","step4: write a first blog post","step5: set up an affiliate link","step6: make money from home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"take a trip to the jungle","events":{"0":"Enter the jungle.","1":"Pay for the trip.","2":"Go to a travel agent.","3":"Select a trip to country with a jungle.","4":"Travel to the country by plane.","5":"Check in at tour guide center.","6":"NONE","7":"take a trip to the jungle"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":5760.0,"1":10.0,"2":60.0,"3":30.0,"4":1440.0,"5":120.0},"flatten_input_for_edge_prediction":"step0: Enter the jungle.; step1: Pay for the trip.; step2: Go to a travel agent.; step3: Select a trip to country with a jungle.; step4: Travel to the country by plane.; step5: Check in at tour guide center.; step6: decided to take a trip to the jungle; step7: take a trip to the jungle","flatten_input_for_script_generation":"You want to take a trip to the jungle. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step5; step5 -> step0; step0 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to take a trip to the jungle; step1: Go to a travel agent.; step2: Select a trip to country with a jungle.; step3: Pay for the trip.; step4: Travel to the country by plane.; step5: Check in at tour guide center.; step6: Enter the jungle.; step7: take a trip to the jungle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->3","3->1","4->5","5->0","6->2"],"reference_code":"class TakeATripToTheJungle:\n\n    title = \"take a trip to the jungle\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to take a trip to the jungle\"\n\n    def step1(self):\n        return \"Go to a travel agent.\"\n\n    def step2(self):\n        return \"Select a trip to country with a jungle.\"\n\n    def step3(self):\n        return \"Pay for the trip.\"\n\n    def step4(self):\n        return \"Travel to the country by plane.\"\n\n    def step5(self):\n        return \"Check in at tour guide center.\"\n\n    def step6(self):\n        return \"Enter the jungle.\"\n\n    def step7(self):\n        return \"take a trip to the jungle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TakeATripToTheJungle:\n\n    title = \"take a trip to the jungle\"\n    steps = 8\n\n","reference_graph":{"title":"take a trip to the jungle","num_steps":8,"schema":["step0: decided to take a trip to the jungle","step1: Go to a travel agent.","step2: Select a trip to country with a jungle.","step3: Pay for the trip.","step4: Travel to the country by plane.","step5: Check in at tour guide center.","step6: Enter the jungle.","step7: take a trip to the jungle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"own a bar","events":{"0":"Obtain a liquor license","1":"Obtain a business license","2":"Buy a building property","3":"Have inspectors certify building","4":"Renovate building suitable for serving alcohol","5":"NONE","6":"own a bar"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":30240.0,"1":43200.0,"2":43200.0,"3":4320.0,"4":86400.0},"flatten_input_for_edge_prediction":"step0: Obtain a liquor license; step1: Obtain a business license; step2: Buy a building property; step3: Have inspectors certify building; step4: Renovate building suitable for serving alcohol; step5: decided to own a bar; step6: own a bar","flatten_input_for_script_generation":"You want to own a bar. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step1 -> step0; step0 -> step6; step4 -> step3; step3 -> step0; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: decided to own a bar; step1: Obtain a business license; step2: Buy a building property; step3: Renovate building suitable for serving alcohol; step4: Have inspectors certify building; step5: Obtain a liquor license; step6: own a bar; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->6","1->0","2->4","3->0","4->3","5->2","5->1"],"reference_code":"class OwnABar:\n\n    title = \"own a bar\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to own a bar\"\n\n    def step1(self):\n        return \"Obtain a business license\"\n\n    def step2(self):\n        return \"Buy a building property\"\n\n    def step3(self):\n        return \"Renovate building suitable for serving alcohol\"\n\n    def step4(self):\n        return \"Have inspectors certify building\"\n\n    def step5(self):\n        return \"Obtain a liquor license\"\n\n    def step6(self):\n        return \"own a bar\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class OwnABar:\n\n    title = \"own a bar\"\n    steps = 7\n\n","reference_graph":{"title":"own a bar","num_steps":7,"schema":["step0: decided to own a bar","step1: Obtain a business license","step2: Buy a building property","step3: Renovate building suitable for serving alcohol","step4: Have inspectors certify building","step5: Obtain a liquor license","step6: own a bar"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step4 -> step5"]}}
{"scenario":"play cards together","events":{"0":"get out cards","1":"invite over friends","2":"pick a card game","3":"play the card game","4":"let friends in","5":"NONE","6":"play cards together"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":5.0,"2":0.0833333333,"3":45.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: get out cards; step1: invite over friends; step2: pick a card game; step3: play the card game; step4: let friends in; step5: decided to play cards together; step6: play cards together","flatten_input_for_script_generation":"You want to play cards together. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to play cards together; step1: invite over friends; step2: let friends in; step3: get out cards; step4: pick a card game; step5: play the card game; step6: play cards together; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class PlayCardsTogether:\n\n    title = \"play cards together\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play cards together\"\n\n    def step1(self):\n        return \"invite over friends\"\n\n    def step2(self):\n        return \"let friends in\"\n\n    def step3(self):\n        return \"get out cards\"\n\n    def step4(self):\n        return \"pick a card game\"\n\n    def step5(self):\n        return \"play the card game\"\n\n    def step6(self):\n        return \"play cards together\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayCardsTogether:\n\n    title = \"play cards together\"\n    steps = 7\n\n","reference_graph":{"title":"play cards together","num_steps":7,"schema":["step0: decided to play cards together","step1: invite over friends","step2: let friends in","step3: get out cards","step4: pick a card game","step5: play the card game","step6: play cards together"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"join the yearbook staff","events":{"0":"reach into backpack","1":"walk over to the bulletin board in school","2":"see paper for yearbook club","3":"grab a pen","4":"write name on sign up sheet","5":"NONE","6":"join the yearbook staff"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.5,"1":1.0,"2":1.0,"3":0.3333333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: reach into backpack; step1: walk over to the bulletin board in school; step2: see paper for yearbook club; step3: grab a pen; step4: write name on sign up sheet; step5: decided to join the yearbook staff; step6: join the yearbook staff","flatten_input_for_script_generation":"You want to join the yearbook staff. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to join the yearbook staff; step1: walk over to the bulletin board in school; step2: see paper for yearbook club; step3: reach into backpack; step4: grab a pen; step5: write name on sign up sheet; step6: join the yearbook staff; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->4","4->6","5->1"],"reference_code":"class JoinTheYearbookStaff:\n\n    title = \"join the yearbook staff\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to join the yearbook staff\"\n\n    def step1(self):\n        return \"walk over to the bulletin board in school\"\n\n    def step2(self):\n        return \"see paper for yearbook club\"\n\n    def step3(self):\n        return \"reach into backpack\"\n\n    def step4(self):\n        return \"grab a pen\"\n\n    def step5(self):\n        return \"write name on sign up sheet\"\n\n    def step6(self):\n        return \"join the yearbook staff\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class JoinTheYearbookStaff:\n\n    title = \"join the yearbook staff\"\n    steps = 7\n\n","reference_graph":{"title":"join the yearbook staff","num_steps":7,"schema":["step0: decided to join the yearbook staff","step1: walk over to the bulletin board in school","step2: see paper for yearbook club","step3: reach into backpack","step4: grab a pen","step5: write name on sign up sheet","step6: join the yearbook staff"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"throw a big party","events":{"0":"drive to the store","1":"add party food to cart","2":"add party drinks to cart","3":"send out invites before event","4":"take items to checkout","5":"setup party items at home","6":"add party decorations to cart","7":"NONE","8":"throw a big party"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":15.0,"1":30.0,"2":15.0,"3":120.0,"4":10.0,"5":120.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: drive to the store; step1: add party food to cart; step2: add party drinks to cart; step3: send out invites before event; step4: take items to checkout; step5: setup party items at home; step6: add party decorations to cart; step7: decided to throw a big party; step8: throw a big party","flatten_input_for_script_generation":"You want to throw a big party. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step8; step0 -> step1; step0 -> step2; step0 -> step6; step1 -> step4; step2 -> step4; step6 -> step4; step4 -> step5; step5 -> step8; step7 -> step0; step7 -> step3","flatten_output_for_script_generation":"step0: decided to throw a big party; step1: send out invites before event; step2: throw a big party; step3: drive to the store; step4: add party food to cart; step5: add party drinks to cart; step6: add party decorations to cart; step7: take items to checkout; step8: setup party items at home; step0 -> step1; step0 -> step3; step1 -> step2; step3 -> step4; step3 -> step5; step3 -> step6; step4 -> step7; step5 -> step7; step6 -> step7; step7 -> step8; step8 -> step2","gold_edges_for_prediction":["0->1","0->2","0->6","1->4","2->4","3->8","4->5","5->8","6->4","7->0","7->3"],"reference_code":"class ThrowABigParty:\n\n    title = \"throw a big party\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to throw a big party\"\n\n    def step1(self):\n        return \"send out invites before event\"\n\n    def step2(self):\n        return \"throw a big party\"\n\n    def step3(self):\n        return \"drive to the store\"\n\n    def step4(self):\n        return \"add party food to cart\"\n\n    def step5(self):\n        return \"add party drinks to cart\"\n\n    def step6(self):\n        return \"add party decorations to cart\"\n\n    def step7(self):\n        return \"take items to checkout\"\n\n    def step8(self):\n        return \"setup party items at home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step3\",\n            \"step1 -> step2\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step7\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n            \"step8 -> step2\",\n        ]\n","input_prompt_code":"class ThrowABigParty:\n\n    title = \"throw a big party\"\n    steps = 9\n\n","reference_graph":{"title":"throw a big party","num_steps":9,"schema":["step0: decided to throw a big party","step1: send out invites before event","step2: throw a big party","step3: drive to the store","step4: add party food to cart","step5: add party drinks to cart","step6: add party decorations to cart","step7: take items to checkout","step8: setup party items at home"],"relations":["step0 -> step1","step0 -> step3","step1 -> step2","step3 -> step4","step3 -> step5","step3 -> step6","step4 -> step7","step5 -> step7","step6 -> step7","step7 -> step8","step8 -> step2"]}}
{"scenario":"settle some affairs","events":{"0":"perform second task on list","1":"perform first task on list","2":"perform fourth task on list","3":"perform third task on list","4":"make a to-do list","5":"NONE","6":"settle some affairs"},"context":"NONE","minutes":180.0,"events_minutes":{"0":60.0,"1":60.0,"2":60.0,"3":60.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: perform second task on list; step1: perform first task on list; step2: perform fourth task on list; step3: perform third task on list; step4: make a to-do list; step5: decided to settle some affairs; step6: settle some affairs","flatten_input_for_script_generation":"You want to settle some affairs. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to settle some affairs; step1: make a to-do list; step2: perform first task on list; step3: perform second task on list; step4: perform third task on list; step5: perform fourth task on list; step6: settle some affairs; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->4"],"reference_code":"class SettleSomeAffairs:\n\n    title = \"settle some affairs\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to settle some affairs\"\n\n    def step1(self):\n        return \"make a to-do list\"\n\n    def step2(self):\n        return \"perform first task on list\"\n\n    def step3(self):\n        return \"perform second task on list\"\n\n    def step4(self):\n        return \"perform third task on list\"\n\n    def step5(self):\n        return \"perform fourth task on list\"\n\n    def step6(self):\n        return \"settle some affairs\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SettleSomeAffairs:\n\n    title = \"settle some affairs\"\n    steps = 7\n\n","reference_graph":{"title":"settle some affairs","num_steps":7,"schema":["step0: decided to settle some affairs","step1: make a to-do list","step2: perform first task on list","step3: perform second task on list","step4: perform third task on list","step5: perform fourth task on list","step6: settle some affairs"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bake the best pie","events":{"0":"Follow the recipe to add ingredients together.","1":"Put pie in the oven.","2":"Take out the necessary ingredients from the refrigerator.","3":"Take out necessary ingredients from the cupboard.","4":"Find the recipe for best pie.","5":"NONE","6":"bake the best pie"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":30.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Follow the recipe to add ingredients together.; step1: Put pie in the oven.; step2: Take out the necessary ingredients from the refrigerator.; step3: Take out necessary ingredients from the cupboard.; step4: Find the recipe for best pie.; step5: decided to bake the best pie; step6: bake the best pie","flatten_input_for_script_generation":"You want to bake the best pie. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step4 -> step2; step3 -> step0; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to bake the best pie; step1: Find the recipe for best pie.; step2: Take out necessary ingredients from the cupboard.; step3: Take out the necessary ingredients from the refrigerator.; step4: Follow the recipe to add ingredients together.; step5: Put pie in the oven.; step6: bake the best pie; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->0","4->3","4->2","5->4"],"reference_code":"class BakeTheBestPie:\n\n    title = \"bake the best pie\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to bake the best pie\"\n\n    def step1(self):\n        return \"Find the recipe for best pie.\"\n\n    def step2(self):\n        return \"Take out necessary ingredients from the cupboard.\"\n\n    def step3(self):\n        return \"Take out the necessary ingredients from the refrigerator.\"\n\n    def step4(self):\n        return \"Follow the recipe to add ingredients together.\"\n\n    def step5(self):\n        return \"Put pie in the oven.\"\n\n    def step6(self):\n        return \"bake the best pie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BakeTheBestPie:\n\n    title = \"bake the best pie\"\n    steps = 7\n\n","reference_graph":{"title":"bake the best pie","num_steps":7,"schema":["step0: decided to bake the best pie","step1: Find the recipe for best pie.","step2: Take out necessary ingredients from the cupboard.","step3: Take out the necessary ingredients from the refrigerator.","step4: Follow the recipe to add ingredients together.","step5: Put pie in the oven.","step6: bake the best pie"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"wear to class","events":{"0":"Pick out a shirt","1":"Grab some accessories","2":"Put on outfit","3":"Go to the closet","4":"Pick out other items","5":"Pick out pants","6":"NONE","7":"wear to class"},"context":"NONE","minutes":10.0,"events_minutes":{"0":120.0,"1":1.0,"2":2.0,"3":1.0,"4":2.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: Pick out a shirt; step1: Grab some accessories; step2: Put on outfit; step3: Go to the closet; step4: Pick out other items; step5: Pick out pants; step6: decided to wear to class; step7: wear to class","flatten_input_for_script_generation":"You want to wear to class. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step5; step3 -> step4; step3 -> step1; step0 -> step2; step5 -> step2; step4 -> step2; step1 -> step2; step2 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to wear to class; step1: Go to the closet; step2: Pick out a shirt; step3: Pick out pants; step4: Pick out other items; step5: Grab some accessories; step6: Put on outfit; step7: wear to class; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step1 -> step5; step2 -> step6; step3 -> step6; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->2","2->7","3->0","3->5","3->4","3->1","4->2","5->2","6->3"],"reference_code":"class WearToClass:\n\n    title = \"wear to class\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to wear to class\"\n\n    def step1(self):\n        return \"Go to the closet\"\n\n    def step2(self):\n        return \"Pick out a shirt\"\n\n    def step3(self):\n        return \"Pick out pants\"\n\n    def step4(self):\n        return \"Pick out other items\"\n\n    def step5(self):\n        return \"Grab some accessories\"\n\n    def step6(self):\n        return \"Put on outfit\"\n\n    def step7(self):\n        return \"wear to class\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n            \"step2 -> step6\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WearToClass:\n\n    title = \"wear to class\"\n    steps = 8\n\n","reference_graph":{"title":"wear to class","num_steps":8,"schema":["step0: decided to wear to class","step1: Go to the closet","step2: Pick out a shirt","step3: Pick out pants","step4: Pick out other items","step5: Grab some accessories","step6: Put on outfit","step7: wear to class"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step1 -> step5","step2 -> step6","step3 -> step6","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"get a new pet","events":{"0":"get in the car","1":"drive to the animal shelter","2":"park the car","3":"go inside the shelter","4":"pick out a cat","5":"NONE","6":"get a new pet"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":30.0,"2":5.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: drive to the animal shelter; step2: park the car; step3: go inside the shelter; step4: pick out a cat; step5: decided to get a new pet; step6: get a new pet","flatten_input_for_script_generation":"You want to get a new pet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to get a new pet; step1: get in the car; step2: drive to the animal shelter; step3: park the car; step4: go inside the shelter; step5: pick out a cat; step6: get a new pet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->6","5->0"],"reference_code":"class GetANewPet:\n\n    title = \"get a new pet\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a new pet\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the animal shelter\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside the shelter\"\n\n    def step5(self):\n        return \"pick out a cat\"\n\n    def step6(self):\n        return \"get a new pet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetANewPet:\n\n    title = \"get a new pet\"\n    steps = 7\n\n","reference_graph":{"title":"get a new pet","num_steps":7,"schema":["step0: decided to get a new pet","step1: get in the car","step2: drive to the animal shelter","step3: park the car","step4: go inside the shelter","step5: pick out a cat","step6: get a new pet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch shrek the third","events":{"0":"find shrek DVD","1":"walk to DVD player","2":"press play to watch movie","3":"grab DVD player remote","4":"put DVD in player","5":"NONE","6":"watch shrek the third"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":1.0,"2":120.0,"3":0.3333333333,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: find shrek DVD; step1: walk to DVD player; step2: press play to watch movie; step3: grab DVD player remote; step4: put DVD in player; step5: decided to watch shrek the third; step6: watch shrek the third","flatten_input_for_script_generation":"You want to watch shrek the third. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to watch shrek the third; step1: find shrek DVD; step2: walk to DVD player; step3: put DVD in player; step4: grab DVD player remote; step5: press play to watch movie; step6: watch shrek the third; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->6","3->2","4->3","5->0"],"reference_code":"class WatchShrekTheThird:\n\n    title = \"watch shrek the third\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to watch shrek the third\"\n\n    def step1(self):\n        return \"find shrek DVD\"\n\n    def step2(self):\n        return \"walk to DVD player\"\n\n    def step3(self):\n        return \"put DVD in player\"\n\n    def step4(self):\n        return \"grab DVD player remote\"\n\n    def step5(self):\n        return \"press play to watch movie\"\n\n    def step6(self):\n        return \"watch shrek the third\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WatchShrekTheThird:\n\n    title = \"watch shrek the third\"\n    steps = 7\n\n","reference_graph":{"title":"watch shrek the third","num_steps":7,"schema":["step0: decided to watch shrek the third","step1: find shrek DVD","step2: walk to DVD player","step3: put DVD in player","step4: grab DVD player remote","step5: press play to watch movie","step6: watch shrek the third"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"find the perfect dress","events":{"0":"ask for directions to dress area","1":"get inside car","2":"drive to the store","3":"walk inside store","4":"go to dress section","5":"NONE","6":"find the perfect dress"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":5.0,"2":20.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: ask for directions to dress area; step1: get inside car; step2: drive to the store; step3: walk inside store; step4: go to dress section; step5: decided to find the perfect dress; step6: find the perfect dress","flatten_input_for_script_generation":"You want to find the perfect dress. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to find the perfect dress; step1: get inside car; step2: drive to the store; step3: walk inside store; step4: ask for directions to dress area; step5: go to dress section; step6: find the perfect dress; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->0","4->6","5->1"],"reference_code":"class FindThePerfectDress:\n\n    title = \"find the perfect dress\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to find the perfect dress\"\n\n    def step1(self):\n        return \"get inside car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"walk inside store\"\n\n    def step4(self):\n        return \"ask for directions to dress area\"\n\n    def step5(self):\n        return \"go to dress section\"\n\n    def step6(self):\n        return \"find the perfect dress\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FindThePerfectDress:\n\n    title = \"find the perfect dress\"\n    steps = 7\n\n","reference_graph":{"title":"find the perfect dress","num_steps":7,"schema":["step0: decided to find the perfect dress","step1: get inside car","step2: drive to the store","step3: walk inside store","step4: ask for directions to dress area","step5: go to dress section","step6: find the perfect dress"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn how to play drums","events":{"0":"go to lessons everyday to learn","1":"enter the building","2":"look up drum lessons","3":"meet with instructor","4":"drive to lessons","5":"NONE","6":"learn how to play drums"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":10080.0,"1":5.0,"2":20.0,"3":5.0,"4":25.0},"flatten_input_for_edge_prediction":"step0: go to lessons everyday to learn; step1: enter the building; step2: look up drum lessons; step3: meet with instructor; step4: drive to lessons; step5: decided to learn how to play drums; step6: learn how to play drums","flatten_input_for_script_generation":"You want to learn how to play drums. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn how to play drums; step1: look up drum lessons; step2: drive to lessons; step3: enter the building; step4: meet with instructor; step5: go to lessons everyday to learn; step6: learn how to play drums; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class LearnHowToPlayDrums:\n\n    title = \"learn how to play drums\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to play drums\"\n\n    def step1(self):\n        return \"look up drum lessons\"\n\n    def step2(self):\n        return \"drive to lessons\"\n\n    def step3(self):\n        return \"enter the building\"\n\n    def step4(self):\n        return \"meet with instructor\"\n\n    def step5(self):\n        return \"go to lessons everyday to learn\"\n\n    def step6(self):\n        return \"learn how to play drums\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToPlayDrums:\n\n    title = \"learn how to play drums\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to play drums","num_steps":7,"schema":["step0: decided to learn how to play drums","step1: look up drum lessons","step2: drive to lessons","step3: enter the building","step4: meet with instructor","step5: go to lessons everyday to learn","step6: learn how to play drums"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make scarves to sell","events":{"0":"put together a work station","1":"browse hobbies online","2":"order the supplies","3":"pick a favorite","4":"receive the supplies","5":"NONE","6":"make scarves to sell"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":180.0,"1":60.0,"2":5.0,"3":30.0,"4":4320.0},"flatten_input_for_edge_prediction":"step0: put together a work station; step1: browse hobbies online; step2: order the supplies; step3: pick a favorite; step4: receive the supplies; step5: decided to make scarves to sell; step6: make scarves to sell","flatten_input_for_script_generation":"You want to make scarves to sell. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to make scarves to sell; step1: browse hobbies online; step2: pick a favorite; step3: order the supplies; step4: receive the supplies; step5: put together a work station; step6: make scarves to sell; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class MakeScarvesToSell:\n\n    title = \"make scarves to sell\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make scarves to sell\"\n\n    def step1(self):\n        return \"browse hobbies online\"\n\n    def step2(self):\n        return \"pick a favorite\"\n\n    def step3(self):\n        return \"order the supplies\"\n\n    def step4(self):\n        return \"receive the supplies\"\n\n    def step5(self):\n        return \"put together a work station\"\n\n    def step6(self):\n        return \"make scarves to sell\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeScarvesToSell:\n\n    title = \"make scarves to sell\"\n    steps = 7\n\n","reference_graph":{"title":"make scarves to sell","num_steps":7,"schema":["step0: decided to make scarves to sell","step1: browse hobbies online","step2: pick a favorite","step3: order the supplies","step4: receive the supplies","step5: put together a work station","step6: make scarves to sell"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grow a golden rose","events":{"0":"place the plant in the hole.","1":"go to the store","2":"take the plant home","3":"choose a plant","4":"dig a hole in the yard","5":"buy the plant","6":"find the golden rose plants","7":"NONE","8":"grow a golden rose"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":10.0,"3":5.0,"4":10.0,"5":2.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: place the plant in the hole.; step1: go to the store; step2: take the plant home; step3: choose a plant; step4: dig a hole in the yard; step5: buy the plant; step6: find the golden rose plants; step7: decided to grow a golden rose; step8: grow a golden rose","flatten_input_for_script_generation":"You want to grow a golden rose. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step6; step6 -> step3; step3 -> step5; step5 -> step2; step2 -> step4; step4 -> step0; step0 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to grow a golden rose; step1: go to the store; step2: find the golden rose plants; step3: choose a plant; step4: buy the plant; step5: take the plant home; step6: dig a hole in the yard; step7: place the plant in the hole.; step8: grow a golden rose; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->6","2->4","3->5","4->0","5->2","6->3","7->1"],"reference_code":"class GrowAGoldenRose:\n\n    title = \"grow a golden rose\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to grow a golden rose\"\n\n    def step1(self):\n        return \"go to the store\"\n\n    def step2(self):\n        return \"find the golden rose plants\"\n\n    def step3(self):\n        return \"choose a plant\"\n\n    def step4(self):\n        return \"buy the plant\"\n\n    def step5(self):\n        return \"take the plant home\"\n\n    def step6(self):\n        return \"dig a hole in the yard\"\n\n    def step7(self):\n        return \"place the plant in the hole.\"\n\n    def step8(self):\n        return \"grow a golden rose\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GrowAGoldenRose:\n\n    title = \"grow a golden rose\"\n    steps = 9\n\n","reference_graph":{"title":"grow a golden rose","num_steps":9,"schema":["step0: decided to grow a golden rose","step1: go to the store","step2: find the golden rose plants","step3: choose a plant","step4: buy the plant","step5: take the plant home","step6: dig a hole in the yard","step7: place the plant in the hole.","step8: grow a golden rose"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"buy some new hairspray","events":{"0":"ask an associate for help","1":"research good brands","2":"drive to the store","3":"make a list","4":"find the right product","5":"NONE","6":"buy some new hairspray"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":3.0,"2":4.0,"3":3.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: ask an associate for help; step1: research good brands; step2: drive to the store; step3: make a list; step4: find the right product; step5: decided to buy some new hairspray; step6: buy some new hairspray","flatten_input_for_script_generation":"You want to buy some new hairspray. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: decided to buy some new hairspray; step1: make a list; step2: research good brands; step3: drive to the store; step4: ask an associate for help; step5: find the right product; step6: buy some new hairspray; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->2","4->6","5->1","5->3"],"reference_code":"class BuySomeNewHairspray:\n\n    title = \"buy some new hairspray\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy some new hairspray\"\n\n    def step1(self):\n        return \"make a list\"\n\n    def step2(self):\n        return \"research good brands\"\n\n    def step3(self):\n        return \"drive to the store\"\n\n    def step4(self):\n        return \"ask an associate for help\"\n\n    def step5(self):\n        return \"find the right product\"\n\n    def step6(self):\n        return \"buy some new hairspray\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuySomeNewHairspray:\n\n    title = \"buy some new hairspray\"\n    steps = 7\n\n","reference_graph":{"title":"buy some new hairspray","num_steps":7,"schema":["step0: decided to buy some new hairspray","step1: make a list","step2: research good brands","step3: drive to the store","step4: ask an associate for help","step5: find the right product","step6: buy some new hairspray"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a new hard drive","events":{"0":"bring hard drive to cashier","1":"find the hard drive on the shelf","2":"find out where hard drive is sold","3":"drive to the store","4":"research what hard drive is compatible with computer","5":"NONE","6":"buy a new hard drive"},"context":"NONE","minutes":63.0,"events_minutes":{"0":3.0,"1":5.0,"2":5.0,"3":30.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: bring hard drive to cashier; step1: find the hard drive on the shelf; step2: find out where hard drive is sold; step3: drive to the store; step4: research what hard drive is compatible with computer; step5: decided to buy a new hard drive; step6: buy a new hard drive","flatten_input_for_script_generation":"You want to buy a new hard drive. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to buy a new hard drive; step1: research what hard drive is compatible with computer; step2: find out where hard drive is sold; step3: drive to the store; step4: find the hard drive on the shelf; step5: bring hard drive to cashier; step6: buy a new hard drive; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class BuyANewHardDrive:\n\n    title = \"buy a new hard drive\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new hard drive\"\n\n    def step1(self):\n        return \"research what hard drive is compatible with computer\"\n\n    def step2(self):\n        return \"find out where hard drive is sold\"\n\n    def step3(self):\n        return \"drive to the store\"\n\n    def step4(self):\n        return \"find the hard drive on the shelf\"\n\n    def step5(self):\n        return \"bring hard drive to cashier\"\n\n    def step6(self):\n        return \"buy a new hard drive\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewHardDrive:\n\n    title = \"buy a new hard drive\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new hard drive","num_steps":7,"schema":["step0: decided to buy a new hard drive","step1: research what hard drive is compatible with computer","step2: find out where hard drive is sold","step3: drive to the store","step4: find the hard drive on the shelf","step5: bring hard drive to cashier","step6: buy a new hard drive"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a sparkly ring","events":{"0":"make final choice from options","1":"try on for size and adjust accordingly","2":"make payment to salesperson for item","3":"drive to the store location","4":"select several options","5":"ask salesperson for direction","6":"search online for jewelry stores","7":"NONE","8":"buy a sparkly ring"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":15.0,"4":10.0,"5":5.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: make final choice from options; step1: try on for size and adjust accordingly; step2: make payment to salesperson for item; step3: drive to the store location; step4: select several options; step5: ask salesperson for direction; step6: search online for jewelry stores; step7: decided to buy a sparkly ring; step8: buy a sparkly ring","flatten_input_for_script_generation":"You want to buy a sparkly ring. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step3; step3 -> step5; step5 -> step4; step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to buy a sparkly ring; step1: search online for jewelry stores; step2: drive to the store location; step3: ask salesperson for direction; step4: select several options; step5: try on for size and adjust accordingly; step6: make final choice from options; step7: make payment to salesperson for item; step8: buy a sparkly ring; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->0","2->8","3->5","4->1","5->4","6->3","7->6"],"reference_code":"class BuyASparklyRing:\n\n    title = \"buy a sparkly ring\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to buy a sparkly ring\"\n\n    def step1(self):\n        return \"search online for jewelry stores\"\n\n    def step2(self):\n        return \"drive to the store location\"\n\n    def step3(self):\n        return \"ask salesperson for direction\"\n\n    def step4(self):\n        return \"select several options\"\n\n    def step5(self):\n        return \"try on for size and adjust accordingly\"\n\n    def step6(self):\n        return \"make final choice from options\"\n\n    def step7(self):\n        return \"make payment to salesperson for item\"\n\n    def step8(self):\n        return \"buy a sparkly ring\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuyASparklyRing:\n\n    title = \"buy a sparkly ring\"\n    steps = 9\n\n","reference_graph":{"title":"buy a sparkly ring","num_steps":9,"schema":["step0: decided to buy a sparkly ring","step1: search online for jewelry stores","step2: drive to the store location","step3: ask salesperson for direction","step4: select several options","step5: try on for size and adjust accordingly","step6: make final choice from options","step7: make payment to salesperson for item","step8: buy a sparkly ring"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have lots of friends","events":{"0":"meet the new people for coffee a few times","1":"invite a few people out for a coffee","2":"introduce himself to people at the gatherings","3":"go to several of the gatherings","4":"find something in common with several people","5":"find out where there might be gatherings of people","6":"have conversations with some of the people","7":"NONE","8":"have lots of friends"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":43200.0,"1":15.0,"2":60.0,"3":43200.0,"4":60.0,"5":60.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: meet the new people for coffee a few times; step1: invite a few people out for a coffee; step2: introduce himself to people at the gatherings; step3: go to several of the gatherings; step4: find something in common with several people; step5: find out where there might be gatherings of people; step6: have conversations with some of the people; step7: decided to have lots of friends; step8: have lots of friends","flatten_input_for_script_generation":"You want to have lots of friends. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step2; step3 -> step6; step2 -> step4; step6 -> step4; step4 -> step1; step1 -> step0; step0 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to have lots of friends; step1: find out where there might be gatherings of people; step2: go to several of the gatherings; step3: introduce himself to people at the gatherings; step4: have conversations with some of the people; step5: find something in common with several people; step6: invite a few people out for a coffee; step7: meet the new people for coffee a few times; step8: have lots of friends; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","2->4","3->2","3->6","4->1","5->3","6->4","7->5"],"reference_code":"class HaveLotsOfFriends:\n\n    title = \"have lots of friends\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to have lots of friends\"\n\n    def step1(self):\n        return \"find out where there might be gatherings of people\"\n\n    def step2(self):\n        return \"go to several of the gatherings\"\n\n    def step3(self):\n        return \"introduce himself to people at the gatherings\"\n\n    def step4(self):\n        return \"have conversations with some of the people\"\n\n    def step5(self):\n        return \"find something in common with several people\"\n\n    def step6(self):\n        return \"invite a few people out for a coffee\"\n\n    def step7(self):\n        return \"meet the new people for coffee a few times\"\n\n    def step8(self):\n        return \"have lots of friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class HaveLotsOfFriends:\n\n    title = \"have lots of friends\"\n    steps = 9\n\n","reference_graph":{"title":"have lots of friends","num_steps":9,"schema":["step0: decided to have lots of friends","step1: find out where there might be gatherings of people","step2: go to several of the gatherings","step3: introduce himself to people at the gatherings","step4: have conversations with some of the people","step5: find something in common with several people","step6: invite a few people out for a coffee","step7: meet the new people for coffee a few times","step8: have lots of friends"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"make some potato chips","events":{"0":"Cut potatoes to desired size","1":"Find a potato recipe","2":"Get necessary ingredients","3":"Drive back home","4":"Drive to store","5":"follow cooking directions from recipe","6":"NONE","7":"make some potato chips"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":15.0,"2":15.0,"3":15.0,"4":15.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Cut potatoes to desired size; step1: Find a potato recipe; step2: Get necessary ingredients; step3: Drive back home; step4: Drive to store; step5: follow cooking directions from recipe; step6: decided to make some potato chips; step7: make some potato chips","flatten_input_for_script_generation":"You want to make some potato chips. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step5; step5 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to make some potato chips; step1: Find a potato recipe; step2: Drive to store; step3: Get necessary ingredients; step4: Drive back home; step5: Cut potatoes to desired size; step6: follow cooking directions from recipe; step7: make some potato chips; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->3","3->0","4->2","5->7","6->1"],"reference_code":"class MakeSomePotatoChips:\n\n    title = \"make some potato chips\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to make some potato chips\"\n\n    def step1(self):\n        return \"Find a potato recipe\"\n\n    def step2(self):\n        return \"Drive to store\"\n\n    def step3(self):\n        return \"Get necessary ingredients\"\n\n    def step4(self):\n        return \"Drive back home\"\n\n    def step5(self):\n        return \"Cut potatoes to desired size\"\n\n    def step6(self):\n        return \"follow cooking directions from recipe\"\n\n    def step7(self):\n        return \"make some potato chips\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MakeSomePotatoChips:\n\n    title = \"make some potato chips\"\n    steps = 8\n\n","reference_graph":{"title":"make some potato chips","num_steps":8,"schema":["step0: decided to make some potato chips","step1: Find a potato recipe","step2: Drive to store","step3: Get necessary ingredients","step4: Drive back home","step5: Cut potatoes to desired size","step6: follow cooking directions from recipe","step7: make some potato chips"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go on the water ride","events":{"0":"get in the car","1":"get ready to leave","2":"drive to the water park","3":"go inside the park","4":"park the car","5":"NONE","6":"go on the water ride"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":20.0,"2":30.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: get ready to leave; step2: drive to the water park; step3: go inside the park; step4: park the car; step5: decided to go on the water ride; step6: go on the water ride","flatten_input_for_script_generation":"You want to go on the water ride. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go on the water ride; step1: get ready to leave; step2: get in the car; step3: drive to the water park; step4: park the car; step5: go inside the park; step6: go on the water ride; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class GoOnTheWaterRide:\n\n    title = \"go on the water ride\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go on the water ride\"\n\n    def step1(self):\n        return \"get ready to leave\"\n\n    def step2(self):\n        return \"get in the car\"\n\n    def step3(self):\n        return \"drive to the water park\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"go inside the park\"\n\n    def step6(self):\n        return \"go on the water ride\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOnTheWaterRide:\n\n    title = \"go on the water ride\"\n    steps = 7\n\n","reference_graph":{"title":"go on the water ride","num_steps":7,"schema":["step0: decided to go on the water ride","step1: get ready to leave","step2: get in the car","step3: drive to the water park","step4: park the car","step5: go inside the park","step6: go on the water ride"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bring home wild ones","events":{"0":"gather capturing equipment","1":"take the wild one home","2":"go up to the wild ones","3":"catch one of the wild ones","4":"look for the wild ones","5":"make the wild one feel comfortable","6":"NONE","7":"bring home wild ones"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":25.0,"4":15.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: gather capturing equipment; step1: take the wild one home; step2: go up to the wild ones; step3: catch one of the wild ones; step4: look for the wild ones; step5: make the wild one feel comfortable; step6: decided to bring home wild ones; step7: bring home wild ones","flatten_input_for_script_generation":"You want to bring home wild ones. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step5; step3 -> step1; step5 -> step3; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to bring home wild ones; step1: gather capturing equipment; step2: look for the wild ones; step3: go up to the wild ones; step4: make the wild one feel comfortable; step5: catch one of the wild ones; step6: take the wild one home; step7: bring home wild ones; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->7","2->5","3->1","4->2","5->3","6->0"],"reference_code":"class BringHomeWildOnes:\n\n    title = \"bring home wild ones\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to bring home wild ones\"\n\n    def step1(self):\n        return \"gather capturing equipment\"\n\n    def step2(self):\n        return \"look for the wild ones\"\n\n    def step3(self):\n        return \"go up to the wild ones\"\n\n    def step4(self):\n        return \"make the wild one feel comfortable\"\n\n    def step5(self):\n        return \"catch one of the wild ones\"\n\n    def step6(self):\n        return \"take the wild one home\"\n\n    def step7(self):\n        return \"bring home wild ones\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BringHomeWildOnes:\n\n    title = \"bring home wild ones\"\n    steps = 8\n\n","reference_graph":{"title":"bring home wild ones","num_steps":8,"schema":["step0: decided to bring home wild ones","step1: gather capturing equipment","step2: look for the wild ones","step3: go up to the wild ones","step4: make the wild one feel comfortable","step5: catch one of the wild ones","step6: take the wild one home","step7: bring home wild ones"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to a concert with friends","events":{"0":"Travel to concert.","1":"Send group message to friends inquiring about desire to go.","2":"Decide which concert to go to.","3":"Wait for friend responses.","4":"Sit down at computer.","5":"Search upcoming concerts.","6":"Confirm date of concert.","7":"NONE","8":"go to a concert with friends"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":120.0,"1":30.0,"2":5.0,"3":60.0,"4":5.0,"5":30.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: Travel to concert.; step1: Send group message to friends inquiring about desire to go.; step2: Decide which concert to go to.; step3: Wait for friend responses.; step4: Sit down at computer.; step5: Search upcoming concerts.; step6: Confirm date of concert.; step7: decided to go to a concert with friends; step8: go to a concert with friends","flatten_input_for_script_generation":"You want to go to a concert with friends. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step5 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step6 -> step0; step0 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to go to a concert with friends; step1: Sit down at computer.; step2: Search upcoming concerts.; step3: Decide which concert to go to.; step4: Send group message to friends inquiring about desire to go.; step5: Wait for friend responses.; step6: Confirm date of concert.; step7: Travel to concert.; step8: go to a concert with friends; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->3","2->1","3->6","4->5","5->2","6->0","7->4"],"reference_code":"class GoToAConcertWithFriends:\n\n    title = \"go to a concert with friends\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to a concert with friends\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Search upcoming concerts.\"\n\n    def step3(self):\n        return \"Decide which concert to go to.\"\n\n    def step4(self):\n        return \"Send group message to friends inquiring about desire to go.\"\n\n    def step5(self):\n        return \"Wait for friend responses.\"\n\n    def step6(self):\n        return \"Confirm date of concert.\"\n\n    def step7(self):\n        return \"Travel to concert.\"\n\n    def step8(self):\n        return \"go to a concert with friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToAConcertWithFriends:\n\n    title = \"go to a concert with friends\"\n    steps = 9\n\n","reference_graph":{"title":"go to a concert with friends","num_steps":9,"schema":["step0: decided to go to a concert with friends","step1: Sit down at computer.","step2: Search upcoming concerts.","step3: Decide which concert to go to.","step4: Send group message to friends inquiring about desire to go.","step5: Wait for friend responses.","step6: Confirm date of concert.","step7: Travel to concert.","step8: go to a concert with friends"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"own a horse","events":{"0":"build a barn","1":"shop around for horses","2":"take the horse home","3":"Chooses a horse","4":"meet different horses","5":"buy a large plot of land","6":"NONE","7":"own a horse"},"context":"NONE","minutes":259200.0,"events_minutes":{"0":43200.0,"1":43200.0,"2":60.0,"3":43200.0,"4":43200.0,"5":10080.0},"flatten_input_for_edge_prediction":"step0: build a barn; step1: shop around for horses; step2: take the horse home; step3: Chooses a horse; step4: meet different horses; step5: buy a large plot of land; step6: decided to own a horse; step7: own a horse","flatten_input_for_script_generation":"You want to own a horse. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step1; step0 -> step4; step1 -> step3; step4 -> step3; step3 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to own a horse; step1: buy a large plot of land; step2: build a barn; step3: shop around for horses; step4: meet different horses; step5: Chooses a horse; step6: take the horse home; step7: own a horse; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","0->4","1->3","2->7","3->2","4->3","5->0","6->5"],"reference_code":"class OwnAHorse:\n\n    title = \"own a horse\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to own a horse\"\n\n    def step1(self):\n        return \"buy a large plot of land\"\n\n    def step2(self):\n        return \"build a barn\"\n\n    def step3(self):\n        return \"shop around for horses\"\n\n    def step4(self):\n        return \"meet different horses\"\n\n    def step5(self):\n        return \"Chooses a horse\"\n\n    def step6(self):\n        return \"take the horse home\"\n\n    def step7(self):\n        return \"own a horse\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class OwnAHorse:\n\n    title = \"own a horse\"\n    steps = 8\n\n","reference_graph":{"title":"own a horse","num_steps":8,"schema":["step0: decided to own a horse","step1: buy a large plot of land","step2: build a barn","step3: shop around for horses","step4: meet different horses","step5: Chooses a horse","step6: take the horse home","step7: own a horse"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"cut the grass at the edge of our yard","events":{"0":"Carefully line up with edge","1":"Turn on mower","2":"Get to lawnmower","3":"Ensure adequate gas","4":"Choose starting place","5":"NONE","6":"cut the grass at the edge of our yard"},"context":"NONE","minutes":10.0,"events_minutes":{"0":0.5,"1":0.1666666667,"2":1.0,"3":0.3333333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: Carefully line up with edge; step1: Turn on mower; step2: Get to lawnmower; step3: Ensure adequate gas; step4: Choose starting place; step5: decided to cut the grass at the edge of our yard; step6: cut the grass at the edge of our yard","flatten_input_for_script_generation":"You want to cut the grass at the edge of our yard. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step1 -> step6; step0 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: decided to cut the grass at the edge of our yard; step1: Get to lawnmower; step2: Ensure adequate gas; step3: Choose starting place; step4: Carefully line up with edge; step5: Turn on mower; step6: cut the grass at the edge of our yard; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class CutTheGrassAtTheEdgeOfOurYard:\n\n    title = \"cut the grass at the edge of our yard\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to cut the grass at the edge of our yard\"\n\n    def step1(self):\n        return \"Get to lawnmower\"\n\n    def step2(self):\n        return \"Ensure adequate gas\"\n\n    def step3(self):\n        return \"Choose starting place\"\n\n    def step4(self):\n        return \"Carefully line up with edge\"\n\n    def step5(self):\n        return \"Turn on mower\"\n\n    def step6(self):\n        return \"cut the grass at the edge of our yard\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CutTheGrassAtTheEdgeOfOurYard:\n\n    title = \"cut the grass at the edge of our yard\"\n    steps = 7\n\n","reference_graph":{"title":"cut the grass at the edge of our yard","num_steps":7,"schema":["step0: decided to cut the grass at the edge of our yard","step1: Get to lawnmower","step2: Ensure adequate gas","step3: Choose starting place","step4: Carefully line up with edge","step5: Turn on mower","step6: cut the grass at the edge of our yard"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"climb the tower for a long time","events":{"0":"open the door","1":"go through the door","2":"walk up the steps","3":"find the steps","4":"get to the building","5":"walk toward the building","6":"grab the door handle","7":"NONE","8":"climb the tower for a long time"},"context":"NONE","minutes":60.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":45.0,"3":5.0,"4":15.0,"5":3.0,"6":0.0333333333},"flatten_input_for_edge_prediction":"step0: open the door; step1: go through the door; step2: walk up the steps; step3: find the steps; step4: get to the building; step5: walk toward the building; step6: grab the door handle; step7: decided to climb the tower for a long time; step8: climb the tower for a long time","flatten_input_for_script_generation":"You want to climb the tower for a long time. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step5 -> step4; step6 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to climb the tower for a long time; step1: walk toward the building; step2: get to the building; step3: grab the door handle; step4: open the door; step5: go through the door; step6: find the steps; step7: walk up the steps; step8: climb the tower for a long time; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->3","2->8","3->2","4->6","5->4","6->0","7->5"],"reference_code":"class ClimbTheTowerForALongTime:\n\n    title = \"climb the tower for a long time\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to climb the tower for a long time\"\n\n    def step1(self):\n        return \"walk toward the building\"\n\n    def step2(self):\n        return \"get to the building\"\n\n    def step3(self):\n        return \"grab the door handle\"\n\n    def step4(self):\n        return \"open the door\"\n\n    def step5(self):\n        return \"go through the door\"\n\n    def step6(self):\n        return \"find the steps\"\n\n    def step7(self):\n        return \"walk up the steps\"\n\n    def step8(self):\n        return \"climb the tower for a long time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ClimbTheTowerForALongTime:\n\n    title = \"climb the tower for a long time\"\n    steps = 9\n\n","reference_graph":{"title":"climb the tower for a long time","num_steps":9,"schema":["step0: decided to climb the tower for a long time","step1: walk toward the building","step2: get to the building","step3: grab the door handle","step4: open the door","step5: go through the door","step6: find the steps","step7: walk up the steps","step8: climb the tower for a long time"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to Wallmart","events":{"0":"Find a parking spot.","1":"drive to walmart.","2":"get in the car.","3":"make a grocery list.","4":"put on some clothes.","5":"NONE","6":"go to Wallmart"},"context":"NONE","minutes":25.0,"events_minutes":{"0":2.0,"1":20.0,"2":1.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Find a parking spot.; step1: drive to walmart.; step2: get in the car.; step3: make a grocery list.; step4: put on some clothes.; step5: decided to go to Wallmart; step6: go to Wallmart","flatten_input_for_script_generation":"You want to go to Wallmart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step3; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to Wallmart; step1: put on some clothes.; step2: make a grocery list.; step3: get in the car.; step4: drive to walmart.; step5: Find a parking spot.; step6: go to Wallmart; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","4->2","5->3","5->4"],"reference_code":"class GoToWallmart:\n\n    title = \"go to Wallmart\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to Wallmart\"\n\n    def step1(self):\n        return \"put on some clothes.\"\n\n    def step2(self):\n        return \"make a grocery list.\"\n\n    def step3(self):\n        return \"get in the car.\"\n\n    def step4(self):\n        return \"drive to walmart.\"\n\n    def step5(self):\n        return \"Find a parking spot.\"\n\n    def step6(self):\n        return \"go to Wallmart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToWallmart:\n\n    title = \"go to Wallmart\"\n    steps = 7\n\n","reference_graph":{"title":"go to Wallmart","num_steps":7,"schema":["step0: decided to go to Wallmart","step1: put on some clothes.","step2: make a grocery list.","step3: get in the car.","step4: drive to walmart.","step5: Find a parking spot.","step6: go to Wallmart"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy some drinks","events":{"0":"search for local bars","1":"choose a local bar","2":"show legal identification","3":"take a ride to the local bar","4":"walk up to the bartender","5":"ask for some drinks","6":"NONE","7":"buy some drinks"},"context":"NONE","minutes":45.0,"events_minutes":{"0":15.0,"1":5.0,"2":0.0833333333,"3":15.0,"4":0.25,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: search for local bars; step1: choose a local bar; step2: show legal identification; step3: take a ride to the local bar; step4: walk up to the bartender; step5: ask for some drinks; step6: decided to buy some drinks; step7: buy some drinks","flatten_input_for_script_generation":"You want to buy some drinks. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to buy some drinks; step1: search for local bars; step2: choose a local bar; step3: take a ride to the local bar; step4: show legal identification; step5: walk up to the bartender; step6: ask for some drinks; step7: buy some drinks; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->4","3->2","4->5","5->7","6->0"],"reference_code":"class BuySomeDrinks:\n\n    title = \"buy some drinks\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy some drinks\"\n\n    def step1(self):\n        return \"search for local bars\"\n\n    def step2(self):\n        return \"choose a local bar\"\n\n    def step3(self):\n        return \"take a ride to the local bar\"\n\n    def step4(self):\n        return \"show legal identification\"\n\n    def step5(self):\n        return \"walk up to the bartender\"\n\n    def step6(self):\n        return \"ask for some drinks\"\n\n    def step7(self):\n        return \"buy some drinks\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuySomeDrinks:\n\n    title = \"buy some drinks\"\n    steps = 8\n\n","reference_graph":{"title":"buy some drinks","num_steps":8,"schema":["step0: decided to buy some drinks","step1: search for local bars","step2: choose a local bar","step3: take a ride to the local bar","step4: show legal identification","step5: walk up to the bartender","step6: ask for some drinks","step7: buy some drinks"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"try black coffee","events":{"0":"scoop coffee into coffee machine basket","1":"turn on coffee maker","2":"pour water into coffee maker","3":"take out a bag of dark roast coffee","4":"fill coffee pot with water","5":"open the bag of coffee","6":"get out a measuring cup","7":"NONE","8":"try black coffee"},"context":"NONE","minutes":15.0,"events_minutes":{"0":0.5833333333,"1":0.3333333333,"2":0.75,"3":0.5833333333,"4":1.0,"5":0.5833333333,"6":0.5833333333},"flatten_input_for_edge_prediction":"step0: scoop coffee into coffee machine basket; step1: turn on coffee maker; step2: pour water into coffee maker; step3: take out a bag of dark roast coffee; step4: fill coffee pot with water; step5: open the bag of coffee; step6: get out a measuring cup; step7: decided to try black coffee; step8: try black coffee","flatten_input_for_script_generation":"You want to try black coffee. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step0; step6 -> step0; step0 -> step1; step4 -> step2; step2 -> step1; step1 -> step8; step7 -> step3; step7 -> step6; step7 -> step4","flatten_output_for_script_generation":"step0: decided to try black coffee; step1: fill coffee pot with water; step2: take out a bag of dark roast coffee; step3: open the bag of coffee; step4: scoop coffee into coffee machine basket; step5: turn on coffee maker; step6: get out a measuring cup; step7: try black coffee; step8: pour water into coffee maker; step0 -> step1; step0 -> step2; step0 -> step6; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step4; step5 -> step7; step1 -> step8; step8 -> step5","gold_edges_for_prediction":["0->1","1->8","2->1","3->5","4->2","5->0","6->0","7->3","7->6","7->4"],"reference_code":"class TryBlackCoffee:\n\n    title = \"try black coffee\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try black coffee\"\n\n    def step1(self):\n        return \"fill coffee pot with water\"\n\n    def step2(self):\n        return \"take out a bag of dark roast coffee\"\n\n    def step3(self):\n        return \"open the bag of coffee\"\n\n    def step4(self):\n        return \"scoop coffee into coffee machine basket\"\n\n    def step5(self):\n        return \"turn on coffee maker\"\n\n    def step6(self):\n        return \"get out a measuring cup\"\n\n    def step7(self):\n        return \"try black coffee\"\n\n    def step8(self):\n        return \"pour water into coffee maker\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step4\",\n            \"step5 -> step7\",\n            \"step1 -> step8\",\n            \"step8 -> step5\",\n        ]\n","input_prompt_code":"class TryBlackCoffee:\n\n    title = \"try black coffee\"\n    steps = 9\n\n","reference_graph":{"title":"try black coffee","num_steps":9,"schema":["step0: decided to try black coffee","step1: fill coffee pot with water","step2: take out a bag of dark roast coffee","step3: open the bag of coffee","step4: scoop coffee into coffee machine basket","step5: turn on coffee maker","step6: get out a measuring cup","step7: try black coffee","step8: pour water into coffee maker"],"relations":["step0 -> step1","step0 -> step2","step0 -> step6","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step4","step5 -> step7","step1 -> step8","step8 -> step5"]}}
{"scenario":"make cookies for dessert","events":{"0":"put together the ingredients","1":"set the oven","2":"look up the recipe online","3":"set the cookies to bake","4":"print the recipe out","5":"gather the ingredients","6":"NONE","7":"make cookies for dessert"},"context":"NONE","minutes":180.0,"events_minutes":{"0":35.0,"1":0.25,"2":4.0,"3":120.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: put together the ingredients; step1: set the oven; step2: look up the recipe online; step3: set the cookies to bake; step4: print the recipe out; step5: gather the ingredients; step6: decided to make cookies for dessert; step7: make cookies for dessert","flatten_input_for_script_generation":"You want to make cookies for dessert. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step5; step4 -> step1; step5 -> step0; step1 -> step3; step0 -> step3; step3 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to make cookies for dessert; step1: look up the recipe online; step2: print the recipe out; step3: gather the ingredients; step4: set the oven; step5: put together the ingredients; step6: set the cookies to bake; step7: make cookies for dessert; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->3","2->4","3->7","4->5","4->1","5->0","6->2"],"reference_code":"class MakeCookiesForDessert:\n\n    title = \"make cookies for dessert\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to make cookies for dessert\"\n\n    def step1(self):\n        return \"look up the recipe online\"\n\n    def step2(self):\n        return \"print the recipe out\"\n\n    def step3(self):\n        return \"gather the ingredients\"\n\n    def step4(self):\n        return \"set the oven\"\n\n    def step5(self):\n        return \"put together the ingredients\"\n\n    def step6(self):\n        return \"set the cookies to bake\"\n\n    def step7(self):\n        return \"make cookies for dessert\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MakeCookiesForDessert:\n\n    title = \"make cookies for dessert\"\n    steps = 8\n\n","reference_graph":{"title":"make cookies for dessert","num_steps":8,"schema":["step0: decided to make cookies for dessert","step1: look up the recipe online","step2: print the recipe out","step3: gather the ingredients","step4: set the oven","step5: put together the ingredients","step6: set the cookies to bake","step7: make cookies for dessert"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn to ride horses","events":{"0":"call to schedule an appointment","1":"look online for horse riding training","2":"drive to the ranch","3":"pick the top rated one","4":"get on a horse","5":"NONE","6":"learn to ride horses"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":30.0,"2":30.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: call to schedule an appointment; step1: look online for horse riding training; step2: drive to the ranch; step3: pick the top rated one; step4: get on a horse; step5: decided to learn to ride horses; step6: learn to ride horses","flatten_input_for_script_generation":"You want to learn to ride horses. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to learn to ride horses; step1: look online for horse riding training; step2: pick the top rated one; step3: call to schedule an appointment; step4: drive to the ranch; step5: get on a horse; step6: learn to ride horses; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->0","4->6","5->1"],"reference_code":"class LearnToRideHorses:\n\n    title = \"learn to ride horses\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn to ride horses\"\n\n    def step1(self):\n        return \"look online for horse riding training\"\n\n    def step2(self):\n        return \"pick the top rated one\"\n\n    def step3(self):\n        return \"call to schedule an appointment\"\n\n    def step4(self):\n        return \"drive to the ranch\"\n\n    def step5(self):\n        return \"get on a horse\"\n\n    def step6(self):\n        return \"learn to ride horses\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnToRideHorses:\n\n    title = \"learn to ride horses\"\n    steps = 7\n\n","reference_graph":{"title":"learn to ride horses","num_steps":7,"schema":["step0: decided to learn to ride horses","step1: look online for horse riding training","step2: pick the top rated one","step3: call to schedule an appointment","step4: drive to the ranch","step5: get on a horse","step6: learn to ride horses"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go eat some cake","events":{"0":"get in the car","1":"drive to the store","2":"purchase some cake","3":"park the car","4":"go in the store","5":"NONE","6":"go eat some cake"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":30.0,"2":10.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: drive to the store; step2: purchase some cake; step3: park the car; step4: go in the store; step5: decided to go eat some cake; step6: go eat some cake","flatten_input_for_script_generation":"You want to go eat some cake. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to go eat some cake; step1: get in the car; step2: drive to the store; step3: park the car; step4: go in the store; step5: purchase some cake; step6: go eat some cake; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->4","4->2","5->0"],"reference_code":"class GoEatSomeCake:\n\n    title = \"go eat some cake\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go eat some cake\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go in the store\"\n\n    def step5(self):\n        return \"purchase some cake\"\n\n    def step6(self):\n        return \"go eat some cake\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoEatSomeCake:\n\n    title = \"go eat some cake\"\n    steps = 7\n\n","reference_graph":{"title":"go eat some cake","num_steps":7,"schema":["step0: decided to go eat some cake","step1: get in the car","step2: drive to the store","step3: park the car","step4: go in the store","step5: purchase some cake","step6: go eat some cake"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try a new haircut","events":{"0":"get ready to go out","1":"tell the hair dresser about wanting a new look","2":"drive to the hair salon","3":"get out of the car","4":"walk to the hair salon","5":"go to the car","6":"get a haircut","7":"NONE","8":"try a new haircut"},"context":"NONE","minutes":60.0,"events_minutes":{"0":20.0,"1":5.0,"2":10.0,"3":2.0,"4":1.0,"5":5.0,"6":20.0},"flatten_input_for_edge_prediction":"step0: get ready to go out; step1: tell the hair dresser about wanting a new look; step2: drive to the hair salon; step3: get out of the car; step4: walk to the hair salon; step5: go to the car; step6: get a haircut; step7: decided to try a new haircut; step8: try a new haircut","flatten_input_for_script_generation":"You want to try a new haircut. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step2; step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step6 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to try a new haircut; step1: get ready to go out; step2: go to the car; step3: drive to the hair salon; step4: get out of the car; step5: walk to the hair salon; step6: tell the hair dresser about wanting a new look; step7: get a haircut; step8: try a new haircut; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->6","2->3","3->4","4->1","5->2","6->8","7->0"],"reference_code":"class TryANewHaircut:\n\n    title = \"try a new haircut\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try a new haircut\"\n\n    def step1(self):\n        return \"get ready to go out\"\n\n    def step2(self):\n        return \"go to the car\"\n\n    def step3(self):\n        return \"drive to the hair salon\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"walk to the hair salon\"\n\n    def step6(self):\n        return \"tell the hair dresser about wanting a new look\"\n\n    def step7(self):\n        return \"get a haircut\"\n\n    def step8(self):\n        return \"try a new haircut\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TryANewHaircut:\n\n    title = \"try a new haircut\"\n    steps = 9\n\n","reference_graph":{"title":"try a new haircut","num_steps":9,"schema":["step0: decided to try a new haircut","step1: get ready to go out","step2: go to the car","step3: drive to the hair salon","step4: get out of the car","step5: walk to the hair salon","step6: tell the hair dresser about wanting a new look","step7: get a haircut","step8: try a new haircut"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"do in life","events":{"0":"Work at a career.","1":"Get married to another.","2":"Go through school.","3":"Enjoy not working after retirement.","4":"Go through college.","5":"NONE","6":"do in life"},"context":"NONE","minutes":36792000.0,"events_minutes":{"0":10512000.0,"1":1440.0,"2":6307200.0,"3":10512000.0,"4":2102400.0},"flatten_input_for_edge_prediction":"step0: Work at a career.; step1: Get married to another.; step2: Go through school.; step3: Enjoy not working after retirement.; step4: Go through college.; step5: decided to do in life; step6: do in life","flatten_input_for_script_generation":"You want to do in life. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step6; step1 -> step6; step0 -> step3; step3 -> step6; step5 -> step2; step5 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: decided to do in life; step1: Work at a career.; step2: Go through school.; step3: Go through college.; step4: do in life; step5: Get married to another.; step6: Enjoy not working after retirement.; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step4; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->3","1->6","2->4","3->6","4->6","5->2","5->1","5->0"],"reference_code":"class DoInLife:\n\n    title = \"do in life\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to do in life\"\n\n    def step1(self):\n        return \"Work at a career.\"\n\n    def step2(self):\n        return \"Go through school.\"\n\n    def step3(self):\n        return \"Go through college.\"\n\n    def step4(self):\n        return \"do in life\"\n\n    def step5(self):\n        return \"Get married to another.\"\n\n    def step6(self):\n        return \"Enjoy not working after retirement.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step4\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class DoInLife:\n\n    title = \"do in life\"\n    steps = 7\n\n","reference_graph":{"title":"do in life","num_steps":7,"schema":["step0: decided to do in life","step1: Work at a career.","step2: Go through school.","step3: Go through college.","step4: do in life","step5: Get married to another.","step6: Enjoy not working after retirement."],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step4","step1 -> step6","step6 -> step4"]}}
{"scenario":"get some items for school","events":{"0":"walk to school section","1":"enter the store","2":"browse through school items","3":"look for school section","4":"drive to store","5":"NONE","6":"get some items for school"},"context":"NONE","minutes":45.0,"events_minutes":{"0":1.0,"1":1.0,"2":25.0,"3":1.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: walk to school section; step1: enter the store; step2: browse through school items; step3: look for school section; step4: drive to store; step5: decided to get some items for school; step6: get some items for school","flatten_input_for_script_generation":"You want to get some items for school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to get some items for school; step1: drive to store; step2: enter the store; step3: look for school section; step4: walk to school section; step5: browse through school items; step6: get some items for school; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->0","4->1","5->4"],"reference_code":"class GetSomeItemsForSchool:\n\n    title = \"get some items for school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get some items for school\"\n\n    def step1(self):\n        return \"drive to store\"\n\n    def step2(self):\n        return \"enter the store\"\n\n    def step3(self):\n        return \"look for school section\"\n\n    def step4(self):\n        return \"walk to school section\"\n\n    def step5(self):\n        return \"browse through school items\"\n\n    def step6(self):\n        return \"get some items for school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSomeItemsForSchool:\n\n    title = \"get some items for school\"\n    steps = 7\n\n","reference_graph":{"title":"get some items for school","num_steps":7,"schema":["step0: decided to get some items for school","step1: drive to store","step2: enter the store","step3: look for school section","step4: walk to school section","step5: browse through school items","step6: get some items for school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a new one","events":{"0":"get out the credit card","1":"go to the store","2":"browse the jackets","3":"bring the jacket to the cashier","4":"walk inside the store","5":"NONE","6":"buy a new one"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":5.0,"2":10.0,"3":5.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: get out the credit card; step1: go to the store; step2: browse the jackets; step3: bring the jacket to the cashier; step4: walk inside the store; step5: decided to buy a new one; step6: buy a new one","flatten_input_for_script_generation":"You want to buy a new one. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to buy a new one; step1: go to the store; step2: walk inside the store; step3: browse the jackets; step4: bring the jacket to the cashier; step5: get out the credit card; step6: buy a new one; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->0","4->2","5->1"],"reference_code":"class BuyANewOne:\n\n    title = \"buy a new one\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new one\"\n\n    def step1(self):\n        return \"go to the store\"\n\n    def step2(self):\n        return \"walk inside the store\"\n\n    def step3(self):\n        return \"browse the jackets\"\n\n    def step4(self):\n        return \"bring the jacket to the cashier\"\n\n    def step5(self):\n        return \"get out the credit card\"\n\n    def step6(self):\n        return \"buy a new one\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewOne:\n\n    title = \"buy a new one\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new one","num_steps":7,"schema":["step0: decided to buy a new one","step1: go to the store","step2: walk inside the store","step3: browse the jackets","step4: bring the jacket to the cashier","step5: get out the credit card","step6: buy a new one"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a call to a friend","events":{"0":"Look for cell phone","1":"Verify if phone number is correct","2":"Dial phone number","3":"Put new phone number in contact list","4":"Find friends new phone number","5":"NONE","6":"make a call to a friend"},"context":"NONE","minutes":5.0,"events_minutes":{"0":2.0,"1":0.3333333333,"2":0.1666666667,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Look for cell phone; step1: Verify if phone number is correct; step2: Dial phone number; step3: Put new phone number in contact list; step4: Find friends new phone number; step5: decided to make a call to a friend; step6: make a call to a friend","flatten_input_for_script_generation":"You want to make a call to a friend. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step4 -> step1; step3 -> step2; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make a call to a friend; step1: Look for cell phone; step2: Find friends new phone number; step3: Put new phone number in contact list; step4: Verify if phone number is correct; step5: Dial phone number; step6: make a call to a friend; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->2","4->3","4->1","5->0"],"reference_code":"class MakeACallToAFriend:\n\n    title = \"make a call to a friend\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a call to a friend\"\n\n    def step1(self):\n        return \"Look for cell phone\"\n\n    def step2(self):\n        return \"Find friends new phone number\"\n\n    def step3(self):\n        return \"Put new phone number in contact list\"\n\n    def step4(self):\n        return \"Verify if phone number is correct\"\n\n    def step5(self):\n        return \"Dial phone number\"\n\n    def step6(self):\n        return \"make a call to a friend\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeACallToAFriend:\n\n    title = \"make a call to a friend\"\n    steps = 7\n\n","reference_graph":{"title":"make a call to a friend","num_steps":7,"schema":["step0: decided to make a call to a friend","step1: Look for cell phone","step2: Find friends new phone number","step3: Put new phone number in contact list","step4: Verify if phone number is correct","step5: Dial phone number","step6: make a call to a friend"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"join the swim team","events":{"0":"Ask coach about swim team tryouts.","1":"Practice for swim team tryouts.","2":"Go to school.","3":"Knock on coach's door.","4":"Walk to coach's office.","5":"Travel to swim team tryouts when specified and tryout.","6":"NONE","7":"join the swim team"},"context":"NONE","minutes":7200.0,"events_minutes":{"0":5.0,"1":4320.0,"2":30.0,"3":1.0,"4":10.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: Ask coach about swim team tryouts.; step1: Practice for swim team tryouts.; step2: Go to school.; step3: Knock on coach's door.; step4: Walk to coach's office.; step5: Travel to swim team tryouts when specified and tryout.; step6: decided to join the swim team; step7: join the swim team","flatten_input_for_script_generation":"You want to join the swim team. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step5; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to join the swim team; step1: Go to school.; step2: Walk to coach's office.; step3: Knock on coach's door.; step4: Ask coach about swim team tryouts.; step5: Practice for swim team tryouts.; step6: Travel to swim team tryouts when specified and tryout.; step7: join the swim team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->4","3->0","4->3","5->7","6->2"],"reference_code":"class JoinTheSwimTeam:\n\n    title = \"join the swim team\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to join the swim team\"\n\n    def step1(self):\n        return \"Go to school.\"\n\n    def step2(self):\n        return \"Walk to coach's office.\"\n\n    def step3(self):\n        return \"Knock on coach's door.\"\n\n    def step4(self):\n        return \"Ask coach about swim team tryouts.\"\n\n    def step5(self):\n        return \"Practice for swim team tryouts.\"\n\n    def step6(self):\n        return \"Travel to swim team tryouts when specified and tryout.\"\n\n    def step7(self):\n        return \"join the swim team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class JoinTheSwimTeam:\n\n    title = \"join the swim team\"\n    steps = 8\n\n","reference_graph":{"title":"join the swim team","num_steps":8,"schema":["step0: decided to join the swim team","step1: Go to school.","step2: Walk to coach's office.","step3: Knock on coach's door.","step4: Ask coach about swim team tryouts.","step5: Practice for swim team tryouts.","step6: Travel to swim team tryouts when specified and tryout.","step7: join the swim team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"find a book to read","events":{"0":"walk around the aisle","1":"drive to the bookstore","2":"purchase books to read","3":"take books up to register","4":"read some synopsis pages","5":"NONE","6":"find a book to read"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":15.0,"2":5.0,"3":3.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: walk around the aisle; step1: drive to the bookstore; step2: purchase books to read; step3: take books up to register; step4: read some synopsis pages; step5: decided to find a book to read; step6: find a book to read","flatten_input_for_script_generation":"You want to find a book to read. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to find a book to read; step1: drive to the bookstore; step2: walk around the aisle; step3: read some synopsis pages; step4: take books up to register; step5: purchase books to read; step6: find a book to read; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->2","4->3","5->1"],"reference_code":"class FindABookToRead:\n\n    title = \"find a book to read\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to find a book to read\"\n\n    def step1(self):\n        return \"drive to the bookstore\"\n\n    def step2(self):\n        return \"walk around the aisle\"\n\n    def step3(self):\n        return \"read some synopsis pages\"\n\n    def step4(self):\n        return \"take books up to register\"\n\n    def step5(self):\n        return \"purchase books to read\"\n\n    def step6(self):\n        return \"find a book to read\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FindABookToRead:\n\n    title = \"find a book to read\"\n    steps = 7\n\n","reference_graph":{"title":"find a book to read","num_steps":7,"schema":["step0: decided to find a book to read","step1: drive to the bookstore","step2: walk around the aisle","step3: read some synopsis pages","step4: take books up to register","step5: purchase books to read","step6: find a book to read"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go into nature","events":{"0":"look online for a trail","1":"be mindful in nature","2":"walk on the trail","3":"choose a trail","4":"drive to the trail","5":"NONE","6":"go into nature"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":5.0,"2":35.0,"3":5.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: look online for a trail; step1: be mindful in nature; step2: walk on the trail; step3: choose a trail; step4: drive to the trail; step5: decided to go into nature; step6: go into nature","flatten_input_for_script_generation":"You want to go into nature. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step2; step4 -> step1; step2 -> step6; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to go into nature; step1: look online for a trail; step2: choose a trail; step3: drive to the trail; step4: walk on the trail; step5: be mindful in nature; step6: go into nature; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->6","3->4","4->2","4->1","5->0"],"reference_code":"class GoIntoNature:\n\n    title = \"go into nature\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go into nature\"\n\n    def step1(self):\n        return \"look online for a trail\"\n\n    def step2(self):\n        return \"choose a trail\"\n\n    def step3(self):\n        return \"drive to the trail\"\n\n    def step4(self):\n        return \"walk on the trail\"\n\n    def step5(self):\n        return \"be mindful in nature\"\n\n    def step6(self):\n        return \"go into nature\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoIntoNature:\n\n    title = \"go into nature\"\n    steps = 7\n\n","reference_graph":{"title":"go into nature","num_steps":7,"schema":["step0: decided to go into nature","step1: look online for a trail","step2: choose a trail","step3: drive to the trail","step4: walk on the trail","step5: be mindful in nature","step6: go into nature"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"work for the new tech company in town","events":{"0":"send the resume","1":"drive to the company","2":"choose a tech company","3":"look for tech companies that are hiring","4":"accept the job","5":"be at the interview","6":"NONE","7":"work for the new tech company in town"},"context":"NONE","minutes":60.0,"events_minutes":{"0":2.0,"1":15.0,"2":5.0,"3":15.0,"4":1.0,"5":25.0},"flatten_input_for_edge_prediction":"step0: send the resume; step1: drive to the company; step2: choose a tech company; step3: look for tech companies that are hiring; step4: accept the job; step5: be at the interview; step6: decided to work for the new tech company in town; step7: work for the new tech company in town","flatten_input_for_script_generation":"You want to work for the new tech company in town. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step5; step5 -> step4; step4 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to work for the new tech company in town; step1: look for tech companies that are hiring; step2: choose a tech company; step3: send the resume; step4: drive to the company; step5: be at the interview; step6: accept the job; step7: work for the new tech company in town; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->0","3->2","4->7","5->4","6->3"],"reference_code":"class WorkForTheNewTechCompanyInTown:\n\n    title = \"work for the new tech company in town\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to work for the new tech company in town\"\n\n    def step1(self):\n        return \"look for tech companies that are hiring\"\n\n    def step2(self):\n        return \"choose a tech company\"\n\n    def step3(self):\n        return \"send the resume\"\n\n    def step4(self):\n        return \"drive to the company\"\n\n    def step5(self):\n        return \"be at the interview\"\n\n    def step6(self):\n        return \"accept the job\"\n\n    def step7(self):\n        return \"work for the new tech company in town\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WorkForTheNewTechCompanyInTown:\n\n    title = \"work for the new tech company in town\"\n    steps = 8\n\n","reference_graph":{"title":"work for the new tech company in town","num_steps":8,"schema":["step0: decided to work for the new tech company in town","step1: look for tech companies that are hiring","step2: choose a tech company","step3: send the resume","step4: drive to the company","step5: be at the interview","step6: accept the job","step7: work for the new tech company in town"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make a handmade gift","events":{"0":"get in the car","1":"purchase the materials","2":"drive back home","3":"go inside the store","4":"drive to the store","5":"NONE","6":"make a handmade gift"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":30.0,"3":2.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: purchase the materials; step2: drive back home; step3: go inside the store; step4: drive to the store; step5: decided to make a handmade gift; step6: make a handmade gift","flatten_input_for_script_generation":"You want to make a handmade gift. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make a handmade gift; step1: get in the car; step2: drive to the store; step3: go inside the store; step4: purchase the materials; step5: drive back home; step6: make a handmade gift; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->1","4->3","5->0"],"reference_code":"class MakeAHandmadeGift:\n\n    title = \"make a handmade gift\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a handmade gift\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"go inside the store\"\n\n    def step4(self):\n        return \"purchase the materials\"\n\n    def step5(self):\n        return \"drive back home\"\n\n    def step6(self):\n        return \"make a handmade gift\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeAHandmadeGift:\n\n    title = \"make a handmade gift\"\n    steps = 7\n\n","reference_graph":{"title":"make a handmade gift","num_steps":7,"schema":["step0: decided to make a handmade gift","step1: get in the car","step2: drive to the store","step3: go inside the store","step4: purchase the materials","step5: drive back home","step6: make a handmade gift"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch Suicide Squad at the movie theater","events":{"0":"Pick the nearest theater","1":"Purchase the ticket for the movie","2":"Check the theaters showing the Suicide Squad","3":"Note the time of the show","4":"Prepare to go to the theater","5":"Go to the theater","6":"NONE","7":"watch Suicide Squad at the movie theater"},"context":"NONE","minutes":25.0,"events_minutes":{"0":0.5,"1":2.0,"2":5.0,"3":2.0,"4":5.0,"5":12.0},"flatten_input_for_edge_prediction":"step0: Pick the nearest theater; step1: Purchase the ticket for the movie; step2: Check the theaters showing the Suicide Squad; step3: Note the time of the show; step4: Prepare to go to the theater; step5: Go to the theater; step6: decided to watch Suicide Squad at the movie theater; step7: watch Suicide Squad at the movie theater","flatten_input_for_script_generation":"You want to watch Suicide Squad at the movie theater. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step5; step5 -> step1; step1 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to watch Suicide Squad at the movie theater; step1: Check the theaters showing the Suicide Squad; step2: Pick the nearest theater; step3: Note the time of the show; step4: Prepare to go to the theater; step5: Go to the theater; step6: Purchase the ticket for the movie; step7: watch Suicide Squad at the movie theater; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->0","3->4","4->5","5->1","6->2"],"reference_code":"class WatchSuicideSquadAtTheMovieTheater:\n\n    title = \"watch Suicide Squad at the movie theater\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to watch Suicide Squad at the movie theater\"\n\n    def step1(self):\n        return \"Check the theaters showing the Suicide Squad\"\n\n    def step2(self):\n        return \"Pick the nearest theater\"\n\n    def step3(self):\n        return \"Note the time of the show\"\n\n    def step4(self):\n        return \"Prepare to go to the theater\"\n\n    def step5(self):\n        return \"Go to the theater\"\n\n    def step6(self):\n        return \"Purchase the ticket for the movie\"\n\n    def step7(self):\n        return \"watch Suicide Squad at the movie theater\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WatchSuicideSquadAtTheMovieTheater:\n\n    title = \"watch Suicide Squad at the movie theater\"\n    steps = 8\n\n","reference_graph":{"title":"watch Suicide Squad at the movie theater","num_steps":8,"schema":["step0: decided to watch Suicide Squad at the movie theater","step1: Check the theaters showing the Suicide Squad","step2: Pick the nearest theater","step3: Note the time of the show","step4: Prepare to go to the theater","step5: Go to the theater","step6: Purchase the ticket for the movie","step7: watch Suicide Squad at the movie theater"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"buy a new jacket","events":{"0":"Browse through the jackets.","1":"Go to the store.","2":"Try on a jacket.","3":"Pay for the jacket.","4":"Go to the register.","5":"NONE","6":"buy a new jacket"},"context":"NONE","minutes":60.0,"events_minutes":{"0":60.0,"1":60.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Browse through the jackets.; step1: Go to the store.; step2: Try on a jacket.; step3: Pay for the jacket.; step4: Go to the register.; step5: decided to buy a new jacket; step6: buy a new jacket","flatten_input_for_script_generation":"You want to buy a new jacket. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to buy a new jacket; step1: Go to the store.; step2: Browse through the jackets.; step3: Try on a jacket.; step4: Go to the register.; step5: Pay for the jacket.; step6: buy a new jacket; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class BuyANewJacket:\n\n    title = \"buy a new jacket\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new jacket\"\n\n    def step1(self):\n        return \"Go to the store.\"\n\n    def step2(self):\n        return \"Browse through the jackets.\"\n\n    def step3(self):\n        return \"Try on a jacket.\"\n\n    def step4(self):\n        return \"Go to the register.\"\n\n    def step5(self):\n        return \"Pay for the jacket.\"\n\n    def step6(self):\n        return \"buy a new jacket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewJacket:\n\n    title = \"buy a new jacket\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new jacket","num_steps":7,"schema":["step0: decided to buy a new jacket","step1: Go to the store.","step2: Browse through the jackets.","step3: Try on a jacket.","step4: Go to the register.","step5: Pay for the jacket.","step6: buy a new jacket"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"stand out at school","events":{"0":"put on neon clothing","1":"wake up in the morning","2":"add bright neon makeup","3":"put hair into large buns","4":"be loud at school","5":"NONE","6":"stand out at school"},"context":"NONE","minutes":15.0,"events_minutes":{"0":2.0,"1":1.0,"2":4.0,"3":2.0,"4":4.0},"flatten_input_for_edge_prediction":"step0: put on neon clothing; step1: wake up in the morning; step2: add bright neon makeup; step3: put hair into large buns; step4: be loud at school; step5: decided to stand out at school; step6: stand out at school","flatten_input_for_script_generation":"You want to stand out at school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step3 -> step0; step2 -> step4; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to stand out at school; step1: wake up in the morning; step2: put hair into large buns; step3: add bright neon makeup; step4: put on neon clothing; step5: be loud at school; step6: stand out at school; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->4","3->2","3->0","4->6","5->1"],"reference_code":"class StandOutAtSchool:\n\n    title = \"stand out at school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to stand out at school\"\n\n    def step1(self):\n        return \"wake up in the morning\"\n\n    def step2(self):\n        return \"put hair into large buns\"\n\n    def step3(self):\n        return \"add bright neon makeup\"\n\n    def step4(self):\n        return \"put on neon clothing\"\n\n    def step5(self):\n        return \"be loud at school\"\n\n    def step6(self):\n        return \"stand out at school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StandOutAtSchool:\n\n    title = \"stand out at school\"\n    steps = 7\n\n","reference_graph":{"title":"stand out at school","num_steps":7,"schema":["step0: decided to stand out at school","step1: wake up in the morning","step2: put hair into large buns","step3: add bright neon makeup","step4: put on neon clothing","step5: be loud at school","step6: stand out at school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a garden","events":{"0":"Unload materials and make garden plot.","1":"Load materials and drive home.","2":"Plant seeds in garden soil.","3":"Ask store clerk about needed materials for garden.","4":"Purchase needed materials.","5":"Water daily as needed.","6":"Travel to gardening store.","7":"NONE","8":"make a garden"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":60.0,"1":30.0,"2":60.0,"3":10.0,"4":10.0,"5":129600.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: Unload materials and make garden plot.; step1: Load materials and drive home.; step2: Plant seeds in garden soil.; step3: Ask store clerk about needed materials for garden.; step4: Purchase needed materials.; step5: Water daily as needed.; step6: Travel to gardening store.; step7: decided to make a garden; step8: make a garden","flatten_input_for_script_generation":"You want to make a garden. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step3; step3 -> step4; step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step5; step5 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to make a garden; step1: Travel to gardening store.; step2: Ask store clerk about needed materials for garden.; step3: Purchase needed materials.; step4: Load materials and drive home.; step5: Unload materials and make garden plot.; step6: Plant seeds in garden soil.; step7: Water daily as needed.; step8: make a garden; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->0","2->5","3->4","4->1","5->8","6->3","7->6"],"reference_code":"class MakeAGarden:\n\n    title = \"make a garden\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make a garden\"\n\n    def step1(self):\n        return \"Travel to gardening store.\"\n\n    def step2(self):\n        return \"Ask store clerk about needed materials for garden.\"\n\n    def step3(self):\n        return \"Purchase needed materials.\"\n\n    def step4(self):\n        return \"Load materials and drive home.\"\n\n    def step5(self):\n        return \"Unload materials and make garden plot.\"\n\n    def step6(self):\n        return \"Plant seeds in garden soil.\"\n\n    def step7(self):\n        return \"Water daily as needed.\"\n\n    def step8(self):\n        return \"make a garden\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeAGarden:\n\n    title = \"make a garden\"\n    steps = 9\n\n","reference_graph":{"title":"make a garden","num_steps":9,"schema":["step0: decided to make a garden","step1: Travel to gardening store.","step2: Ask store clerk about needed materials for garden.","step3: Purchase needed materials.","step4: Load materials and drive home.","step5: Unload materials and make garden plot.","step6: Plant seeds in garden soil.","step7: Water daily as needed.","step8: make a garden"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to a concert on the weekend","events":{"0":"get dressed for the concert.","1":"Style hair for the concert.","2":"Do make-up for the concert.","3":"drive to the concert.","4":"get directions to the concert","5":"Buy tickets to a concert.","6":"NONE","7":"go to a concert on the weekend"},"context":"NONE","minutes":240.0,"events_minutes":{"0":30.0,"1":60.0,"2":30.0,"3":30.0,"4":10.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: get dressed for the concert.; step1: Style hair for the concert.; step2: Do make-up for the concert.; step3: drive to the concert.; step4: get directions to the concert; step5: Buy tickets to a concert.; step6: decided to go to a concert on the weekend; step7: go to a concert on the weekend","flatten_input_for_script_generation":"You want to go to a concert on the weekend. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step1; step0 -> step2; step1 -> step4; step2 -> step4; step4 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to go to a concert on the weekend; step1: Buy tickets to a concert.; step2: get dressed for the concert.; step3: Style hair for the concert.; step4: Do make-up for the concert.; step5: get directions to the concert; step6: drive to the concert.; step7: go to a concert on the weekend; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","0->2","1->4","2->4","3->7","4->3","5->0","6->5"],"reference_code":"class GoToAConcertOnTheWeekend:\n\n    title = \"go to a concert on the weekend\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to a concert on the weekend\"\n\n    def step1(self):\n        return \"Buy tickets to a concert.\"\n\n    def step2(self):\n        return \"get dressed for the concert.\"\n\n    def step3(self):\n        return \"Style hair for the concert.\"\n\n    def step4(self):\n        return \"Do make-up for the concert.\"\n\n    def step5(self):\n        return \"get directions to the concert\"\n\n    def step6(self):\n        return \"drive to the concert.\"\n\n    def step7(self):\n        return \"go to a concert on the weekend\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToAConcertOnTheWeekend:\n\n    title = \"go to a concert on the weekend\"\n    steps = 8\n\n","reference_graph":{"title":"go to a concert on the weekend","num_steps":8,"schema":["step0: decided to go to a concert on the weekend","step1: Buy tickets to a concert.","step2: get dressed for the concert.","step3: Style hair for the concert.","step4: Do make-up for the concert.","step5: get directions to the concert","step6: drive to the concert.","step7: go to a concert on the weekend"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"try making jewelry","events":{"0":"go to amazon.com","1":"check out with a credit card","2":"add charms to cart","3":"open the package","4":"spread everything out","5":"wait for package to arrive","6":"add plain bracelets to cart","7":"NONE","8":"try making jewelry"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":1.0,"1":2.0,"2":5.0,"3":5.0,"4":5.0,"5":1440.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: go to amazon.com; step1: check out with a credit card; step2: add charms to cart; step3: open the package; step4: spread everything out; step5: wait for package to arrive; step6: add plain bracelets to cart; step7: decided to try making jewelry; step8: try making jewelry","flatten_input_for_script_generation":"You want to try making jewelry. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step0 -> step6; step6 -> step1; step2 -> step1; step1 -> step5; step5 -> step3; step3 -> step4; step4 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to try making jewelry; step1: go to amazon.com; step2: add charms to cart; step3: add plain bracelets to cart; step4: check out with a credit card; step5: wait for package to arrive; step6: open the package; step7: spread everything out; step8: try making jewelry; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","0->6","1->5","2->1","3->4","4->8","5->3","6->1","7->0"],"reference_code":"class TryMakingJewelry:\n\n    title = \"try making jewelry\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try making jewelry\"\n\n    def step1(self):\n        return \"go to amazon.com\"\n\n    def step2(self):\n        return \"add charms to cart\"\n\n    def step3(self):\n        return \"add plain bracelets to cart\"\n\n    def step4(self):\n        return \"check out with a credit card\"\n\n    def step5(self):\n        return \"wait for package to arrive\"\n\n    def step6(self):\n        return \"open the package\"\n\n    def step7(self):\n        return \"spread everything out\"\n\n    def step8(self):\n        return \"try making jewelry\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TryMakingJewelry:\n\n    title = \"try making jewelry\"\n    steps = 9\n\n","reference_graph":{"title":"try making jewelry","num_steps":9,"schema":["step0: decided to try making jewelry","step1: go to amazon.com","step2: add charms to cart","step3: add plain bracelets to cart","step4: check out with a credit card","step5: wait for package to arrive","step6: open the package","step7: spread everything out","step8: try making jewelry"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"learn the Tango","events":{"0":"schedule the lessons","1":"take lessons everyday to learn","2":"look up dance lessons","3":"drive to lessons","4":"enter the building","5":"NONE","6":"learn the Tango"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":5.0,"1":10080.0,"2":20.0,"3":25.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: schedule the lessons; step1: take lessons everyday to learn; step2: look up dance lessons; step3: drive to lessons; step4: enter the building; step5: decided to learn the Tango; step6: learn the Tango","flatten_input_for_script_generation":"You want to learn the Tango. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn the Tango; step1: look up dance lessons; step2: schedule the lessons; step3: drive to lessons; step4: enter the building; step5: take lessons everyday to learn; step6: learn the Tango; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class LearnTheTango:\n\n    title = \"learn the Tango\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn the Tango\"\n\n    def step1(self):\n        return \"look up dance lessons\"\n\n    def step2(self):\n        return \"schedule the lessons\"\n\n    def step3(self):\n        return \"drive to lessons\"\n\n    def step4(self):\n        return \"enter the building\"\n\n    def step5(self):\n        return \"take lessons everyday to learn\"\n\n    def step6(self):\n        return \"learn the Tango\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnTheTango:\n\n    title = \"learn the Tango\"\n    steps = 7\n\n","reference_graph":{"title":"learn the Tango","num_steps":7,"schema":["step0: decided to learn the Tango","step1: look up dance lessons","step2: schedule the lessons","step3: drive to lessons","step4: enter the building","step5: take lessons everyday to learn","step6: learn the Tango"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"drive a red car","events":{"0":"Choose desired car rental company","1":"Go on internet","2":"Take city bus to car rental location","3":"Rent red car on rental website","4":"Check for desired red car","5":"Pick up red car at car rental office","6":"Search for car rental companies","7":"NONE","8":"drive a red car"},"context":"NONE","minutes":120.0,"events_minutes":{"0":3.0,"1":2.0,"2":60.0,"3":5.0,"4":5.0,"5":10.0,"6":2.0},"flatten_input_for_edge_prediction":"step0: Choose desired car rental company; step1: Go on internet; step2: Take city bus to car rental location; step3: Rent red car on rental website; step4: Check for desired red car; step5: Pick up red car at car rental office; step6: Search for car rental companies; step7: decided to drive a red car; step8: drive a red car","flatten_input_for_script_generation":"You want to drive a red car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step6; step6 -> step0; step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step5; step5 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to drive a red car; step1: Go on internet; step2: Search for car rental companies; step3: Choose desired car rental company; step4: Check for desired red car; step5: Rent red car on rental website; step6: Take city bus to car rental location; step7: Pick up red car at car rental office; step8: drive a red car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->6","2->5","3->2","4->3","5->8","6->0","7->1"],"reference_code":"class DriveARedCar:\n\n    title = \"drive a red car\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to drive a red car\"\n\n    def step1(self):\n        return \"Go on internet\"\n\n    def step2(self):\n        return \"Search for car rental companies\"\n\n    def step3(self):\n        return \"Choose desired car rental company\"\n\n    def step4(self):\n        return \"Check for desired red car\"\n\n    def step5(self):\n        return \"Rent red car on rental website\"\n\n    def step6(self):\n        return \"Take city bus to car rental location\"\n\n    def step7(self):\n        return \"Pick up red car at car rental office\"\n\n    def step8(self):\n        return \"drive a red car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class DriveARedCar:\n\n    title = \"drive a red car\"\n    steps = 9\n\n","reference_graph":{"title":"drive a red car","num_steps":9,"schema":["step0: decided to drive a red car","step1: Go on internet","step2: Search for car rental companies","step3: Choose desired car rental company","step4: Check for desired red car","step5: Rent red car on rental website","step6: Take city bus to car rental location","step7: Pick up red car at car rental office","step8: drive a red car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go white water rafting","events":{"0":"buy rafting equipment","1":"go back home","2":"put all the equipment on","3":"get in the car","4":"drive to the store","5":"NONE","6":"go white water rafting"},"context":"NONE","minutes":180.0,"events_minutes":{"0":45.0,"1":30.0,"2":120.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: buy rafting equipment; step1: go back home; step2: put all the equipment on; step3: get in the car; step4: drive to the store; step5: decided to go white water rafting; step6: go white water rafting","flatten_input_for_script_generation":"You want to go white water rafting. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go white water rafting; step1: get in the car; step2: drive to the store; step3: buy rafting equipment; step4: go back home; step5: put all the equipment on; step6: go white water rafting; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->4","4->0","5->3"],"reference_code":"class GoWhiteWaterRafting:\n\n    title = \"go white water rafting\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go white water rafting\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"buy rafting equipment\"\n\n    def step4(self):\n        return \"go back home\"\n\n    def step5(self):\n        return \"put all the equipment on\"\n\n    def step6(self):\n        return \"go white water rafting\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoWhiteWaterRafting:\n\n    title = \"go white water rafting\"\n    steps = 7\n\n","reference_graph":{"title":"go white water rafting","num_steps":7,"schema":["step0: decided to go white water rafting","step1: get in the car","step2: drive to the store","step3: buy rafting equipment","step4: go back home","step5: put all the equipment on","step6: go white water rafting"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the zoo all summer","events":{"0":"walk around the local zoo to see the animals","1":"pick a local zoo","2":"enter the local zoo","3":"look up local zoos online","4":"drive to the local zoo","5":"NONE","6":"go to the zoo all summer"},"context":"NONE","minutes":60.0,"events_minutes":{"0":45.0,"1":5.0,"2":15.0,"3":15.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: walk around the local zoo to see the animals; step1: pick a local zoo; step2: enter the local zoo; step3: look up local zoos online; step4: drive to the local zoo; step5: decided to go to the zoo all summer; step6: go to the zoo all summer","flatten_input_for_script_generation":"You want to go to the zoo all summer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go to the zoo all summer; step1: look up local zoos online; step2: pick a local zoo; step3: drive to the local zoo; step4: enter the local zoo; step5: walk around the local zoo to see the animals; step6: go to the zoo all summer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->1","4->2","5->3"],"reference_code":"class GoToTheZooAllSummer:\n\n    title = \"go to the zoo all summer\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the zoo all summer\"\n\n    def step1(self):\n        return \"look up local zoos online\"\n\n    def step2(self):\n        return \"pick a local zoo\"\n\n    def step3(self):\n        return \"drive to the local zoo\"\n\n    def step4(self):\n        return \"enter the local zoo\"\n\n    def step5(self):\n        return \"walk around the local zoo to see the animals\"\n\n    def step6(self):\n        return \"go to the zoo all summer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheZooAllSummer:\n\n    title = \"go to the zoo all summer\"\n    steps = 7\n\n","reference_graph":{"title":"go to the zoo all summer","num_steps":7,"schema":["step0: decided to go to the zoo all summer","step1: look up local zoos online","step2: pick a local zoo","step3: drive to the local zoo","step4: enter the local zoo","step5: walk around the local zoo to see the animals","step6: go to the zoo all summer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"travel to an isolated island somewhere","events":{"0":"pay for cruise tour","1":"pack for vacation","2":"shop for cruise tours online","3":"drive to pier","4":"park the car","5":"pick a cruise tour","6":"check in and board the cruise","7":"NONE","8":"travel to an isolated island somewhere"},"context":"NONE","minutes":7200.0,"events_minutes":{"0":10.0,"1":30.0,"2":4320.0,"3":60.0,"4":3.0,"5":5.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: pay for cruise tour; step1: pack for vacation; step2: shop for cruise tours online; step3: drive to pier; step4: park the car; step5: pick a cruise tour; step6: check in and board the cruise; step7: decided to travel to an isolated island somewhere; step8: travel to an isolated island somewhere","flatten_input_for_script_generation":"You want to travel to an isolated island somewhere. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step6 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to travel to an isolated island somewhere; step1: shop for cruise tours online; step2: pick a cruise tour; step3: pay for cruise tour; step4: pack for vacation; step5: drive to pier; step6: park the car; step7: check in and board the cruise; step8: travel to an isolated island somewhere; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->3","2->5","3->4","4->6","5->0","6->8","7->2"],"reference_code":"class TravelToAnIsolatedIslandSomewhere:\n\n    title = \"travel to an isolated island somewhere\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to travel to an isolated island somewhere\"\n\n    def step1(self):\n        return \"shop for cruise tours online\"\n\n    def step2(self):\n        return \"pick a cruise tour\"\n\n    def step3(self):\n        return \"pay for cruise tour\"\n\n    def step4(self):\n        return \"pack for vacation\"\n\n    def step5(self):\n        return \"drive to pier\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def step7(self):\n        return \"check in and board the cruise\"\n\n    def step8(self):\n        return \"travel to an isolated island somewhere\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TravelToAnIsolatedIslandSomewhere:\n\n    title = \"travel to an isolated island somewhere\"\n    steps = 9\n\n","reference_graph":{"title":"travel to an isolated island somewhere","num_steps":9,"schema":["step0: decided to travel to an isolated island somewhere","step1: shop for cruise tours online","step2: pick a cruise tour","step3: pay for cruise tour","step4: pack for vacation","step5: drive to pier","step6: park the car","step7: check in and board the cruise","step8: travel to an isolated island somewhere"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"add a large animal","events":{"0":"set up an area for the large animal","1":"receive the large animal","2":"drive to the zoo","3":"call about the large animal","4":"set up the paperwork","5":"NONE","6":"add a large animal"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":30.0,"2":35.0,"3":15.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: set up an area for the large animal; step1: receive the large animal; step2: drive to the zoo; step3: call about the large animal; step4: set up the paperwork; step5: decided to add a large animal; step6: add a large animal","flatten_input_for_script_generation":"You want to add a large animal. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step2 -> step0; step4 -> step1; step1 -> step6; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to add a large animal; step1: call about the large animal; step2: drive to the zoo; step3: set up the paperwork; step4: set up an area for the large animal; step5: receive the large animal; step6: add a large animal; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->6","2->4","2->0","3->2","4->1","5->3"],"reference_code":"class AddALargeAnimal:\n\n    title = \"add a large animal\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to add a large animal\"\n\n    def step1(self):\n        return \"call about the large animal\"\n\n    def step2(self):\n        return \"drive to the zoo\"\n\n    def step3(self):\n        return \"set up the paperwork\"\n\n    def step4(self):\n        return \"set up an area for the large animal\"\n\n    def step5(self):\n        return \"receive the large animal\"\n\n    def step6(self):\n        return \"add a large animal\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AddALargeAnimal:\n\n    title = \"add a large animal\"\n    steps = 7\n\n","reference_graph":{"title":"add a large animal","num_steps":7,"schema":["step0: decided to add a large animal","step1: call about the large animal","step2: drive to the zoo","step3: set up the paperwork","step4: set up an area for the large animal","step5: receive the large animal","step6: add a large animal"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"start a vegetable garden","events":{"0":"buy the seeds","1":"dig rows in the tilled area","2":"Take the seeds home","3":"drop seeds spaced out into the rows.","4":"choose a variety of seeds","5":"till an area of the yard","6":"go to the garden store","7":"NONE","8":"start a vegetable garden"},"context":"NONE","minutes":180.0,"events_minutes":{"0":5.0,"1":30.0,"2":10.0,"3":10.0,"4":30.0,"5":60.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: buy the seeds; step1: dig rows in the tilled area; step2: Take the seeds home; step3: drop seeds spaced out into the rows.; step4: choose a variety of seeds; step5: till an area of the yard; step6: go to the garden store; step7: decided to start a vegetable garden; step8: start a vegetable garden","flatten_input_for_script_generation":"You want to start a vegetable garden. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step4; step4 -> step0; step0 -> step2; step2 -> step5; step5 -> step1; step1 -> step3; step3 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to start a vegetable garden; step1: go to the garden store; step2: choose a variety of seeds; step3: buy the seeds; step4: Take the seeds home; step5: till an area of the yard; step6: dig rows in the tilled area; step7: drop seeds spaced out into the rows.; step8: start a vegetable garden; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->3","2->5","3->8","4->0","5->1","6->4","7->6"],"reference_code":"class StartAVegetableGarden:\n\n    title = \"start a vegetable garden\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to start a vegetable garden\"\n\n    def step1(self):\n        return \"go to the garden store\"\n\n    def step2(self):\n        return \"choose a variety of seeds\"\n\n    def step3(self):\n        return \"buy the seeds\"\n\n    def step4(self):\n        return \"Take the seeds home\"\n\n    def step5(self):\n        return \"till an area of the yard\"\n\n    def step6(self):\n        return \"dig rows in the tilled area\"\n\n    def step7(self):\n        return \"drop seeds spaced out into the rows.\"\n\n    def step8(self):\n        return \"start a vegetable garden\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class StartAVegetableGarden:\n\n    title = \"start a vegetable garden\"\n    steps = 9\n\n","reference_graph":{"title":"start a vegetable garden","num_steps":9,"schema":["step0: decided to start a vegetable garden","step1: go to the garden store","step2: choose a variety of seeds","step3: buy the seeds","step4: Take the seeds home","step5: till an area of the yard","step6: dig rows in the tilled area","step7: drop seeds spaced out into the rows.","step8: start a vegetable garden"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"have a stamp collection","events":{"0":"wait for delivery","1":"purchase the stamps","2":"open up package","3":"find a thing of stamps","4":"shop around online","5":"NONE","6":"have a stamp collection"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":4320.0,"1":10.0,"2":5.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: wait for delivery; step1: purchase the stamps; step2: open up package; step3: find a thing of stamps; step4: shop around online; step5: decided to have a stamp collection; step6: have a stamp collection","flatten_input_for_script_generation":"You want to have a stamp collection. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to have a stamp collection; step1: shop around online; step2: find a thing of stamps; step3: purchase the stamps; step4: wait for delivery; step5: open up package; step6: have a stamp collection; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class HaveAStampCollection:\n\n    title = \"have a stamp collection\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have a stamp collection\"\n\n    def step1(self):\n        return \"shop around online\"\n\n    def step2(self):\n        return \"find a thing of stamps\"\n\n    def step3(self):\n        return \"purchase the stamps\"\n\n    def step4(self):\n        return \"wait for delivery\"\n\n    def step5(self):\n        return \"open up package\"\n\n    def step6(self):\n        return \"have a stamp collection\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveAStampCollection:\n\n    title = \"have a stamp collection\"\n    steps = 7\n\n","reference_graph":{"title":"have a stamp collection","num_steps":7,"schema":["step0: decided to have a stamp collection","step1: shop around online","step2: find a thing of stamps","step3: purchase the stamps","step4: wait for delivery","step5: open up package","step6: have a stamp collection"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"mail a letter","events":{"0":"fold up paper","1":"address the envelope","2":"seal the envelope","3":"add a stamp","4":"walk to the mailbox","5":"Finish writing letter","6":"put paper in envelope","7":"NONE","8":"mail a letter"},"context":"NONE","minutes":20.0,"events_minutes":{"0":0.1666666667,"1":2.0,"2":0.0833333333,"3":0.05,"4":5.0,"5":5.0,"6":0.1666666667},"flatten_input_for_edge_prediction":"step0: fold up paper; step1: address the envelope; step2: seal the envelope; step3: add a stamp; step4: walk to the mailbox; step5: Finish writing letter; step6: put paper in envelope; step7: decided to mail a letter; step8: mail a letter","flatten_input_for_script_generation":"You want to mail a letter. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step6; step6 -> step3; step6 -> step1; step6 -> step2; step3 -> step4; step1 -> step4; step2 -> step4; step4 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: decided to mail a letter; step1: Finish writing letter; step2: fold up paper; step3: put paper in envelope; step4: add a stamp; step5: address the envelope; step6: seal the envelope; step7: walk to the mailbox; step8: mail a letter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step3 -> step6; step4 -> step7; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->4","3->4","4->8","5->0","6->3","6->1","6->2","7->5"],"reference_code":"class MailALetter:\n\n    title = \"mail a letter\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to mail a letter\"\n\n    def step1(self):\n        return \"Finish writing letter\"\n\n    def step2(self):\n        return \"fold up paper\"\n\n    def step3(self):\n        return \"put paper in envelope\"\n\n    def step4(self):\n        return \"add a stamp\"\n\n    def step5(self):\n        return \"address the envelope\"\n\n    def step6(self):\n        return \"seal the envelope\"\n\n    def step7(self):\n        return \"walk to the mailbox\"\n\n    def step8(self):\n        return \"mail a letter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step7\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MailALetter:\n\n    title = \"mail a letter\"\n    steps = 9\n\n","reference_graph":{"title":"mail a letter","num_steps":9,"schema":["step0: decided to mail a letter","step1: Finish writing letter","step2: fold up paper","step3: put paper in envelope","step4: add a stamp","step5: address the envelope","step6: seal the envelope","step7: walk to the mailbox","step8: mail a letter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step3 -> step6","step4 -> step7","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"compete in a 5k race","events":{"0":"go to the race","1":"look up races online","2":"receive the invitation","3":"call to apply","4":"pick one to participate in","5":"NONE","6":"compete in a 5k race"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":30.0,"1":30.0,"2":4320.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: go to the race; step1: look up races online; step2: receive the invitation; step3: call to apply; step4: pick one to participate in; step5: decided to compete in a 5k race; step6: compete in a 5k race","flatten_input_for_script_generation":"You want to compete in a 5k race. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to compete in a 5k race; step1: look up races online; step2: pick one to participate in; step3: call to apply; step4: receive the invitation; step5: go to the race; step6: compete in a 5k race; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class CompeteInA5kRace:\n\n    title = \"compete in a 5k race\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to compete in a 5k race\"\n\n    def step1(self):\n        return \"look up races online\"\n\n    def step2(self):\n        return \"pick one to participate in\"\n\n    def step3(self):\n        return \"call to apply\"\n\n    def step4(self):\n        return \"receive the invitation\"\n\n    def step5(self):\n        return \"go to the race\"\n\n    def step6(self):\n        return \"compete in a 5k race\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CompeteInA5kRace:\n\n    title = \"compete in a 5k race\"\n    steps = 7\n\n","reference_graph":{"title":"compete in a 5k race","num_steps":7,"schema":["step0: decided to compete in a 5k race","step1: look up races online","step2: pick one to participate in","step3: call to apply","step4: receive the invitation","step5: go to the race","step6: compete in a 5k race"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bake something new","events":{"0":"BAKE THE ITEMS","1":"PREPARE THE ITEMS TO BAKE","2":"DECORATE AND SERVE THE ITEM","3":"BUY ITEMS NEED FOR THE RECIPE","4":"FIND A NEW RECIEPE","5":"NONE","6":"bake something new"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":30.0,"2":30.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: BAKE THE ITEMS; step1: PREPARE THE ITEMS TO BAKE; step2: DECORATE AND SERVE THE ITEM; step3: BUY ITEMS NEED FOR THE RECIPE; step4: FIND A NEW RECIEPE; step5: decided to bake something new; step6: bake something new","flatten_input_for_script_generation":"You want to bake something new. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to bake something new; step1: FIND A NEW RECIEPE; step2: BUY ITEMS NEED FOR THE RECIPE; step3: PREPARE THE ITEMS TO BAKE; step4: BAKE THE ITEMS; step5: DECORATE AND SERVE THE ITEM; step6: bake something new; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class BakeSomethingNew:\n\n    title = \"bake something new\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to bake something new\"\n\n    def step1(self):\n        return \"FIND A NEW RECIEPE\"\n\n    def step2(self):\n        return \"BUY ITEMS NEED FOR THE RECIPE\"\n\n    def step3(self):\n        return \"PREPARE THE ITEMS TO BAKE\"\n\n    def step4(self):\n        return \"BAKE THE ITEMS\"\n\n    def step5(self):\n        return \"DECORATE AND SERVE THE ITEM\"\n\n    def step6(self):\n        return \"bake something new\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BakeSomethingNew:\n\n    title = \"bake something new\"\n    steps = 7\n\n","reference_graph":{"title":"bake something new","num_steps":7,"schema":["step0: decided to bake something new","step1: FIND A NEW RECIEPE","step2: BUY ITEMS NEED FOR THE RECIPE","step3: PREPARE THE ITEMS TO BAKE","step4: BAKE THE ITEMS","step5: DECORATE AND SERVE THE ITEM","step6: bake something new"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get some honey","events":{"0":"Walk out of the house","1":"Walk to the aisle with honey","2":"Drive to the grocery store","3":"Select a jar of honey","4":"Pay for the honey","5":"Get into the car","6":"Ask where the honey is kept","7":"NONE","8":"get some honey"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":7.0,"3":2.0,"4":3.0,"5":0.5,"6":1.0},"flatten_input_for_edge_prediction":"step0: Walk out of the house; step1: Walk to the aisle with honey; step2: Drive to the grocery store; step3: Select a jar of honey; step4: Pay for the honey; step5: Get into the car; step6: Ask where the honey is kept; step7: decided to get some honey; step8: get some honey","flatten_input_for_script_generation":"You want to get some honey. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step2; step2 -> step6; step1 -> step3; step6 -> step1; step3 -> step4; step4 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to get some honey; step1: Walk out of the house; step2: Get into the car; step3: Drive to the grocery store; step4: Ask where the honey is kept; step5: Walk to the aisle with honey; step6: Select a jar of honey; step7: Pay for the honey; step8: get some honey; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->3","2->6","3->4","4->8","5->2","6->1","7->0"],"reference_code":"class GetSomeHoney:\n\n    title = \"get some honey\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get some honey\"\n\n    def step1(self):\n        return \"Walk out of the house\"\n\n    def step2(self):\n        return \"Get into the car\"\n\n    def step3(self):\n        return \"Drive to the grocery store\"\n\n    def step4(self):\n        return \"Ask where the honey is kept\"\n\n    def step5(self):\n        return \"Walk to the aisle with honey\"\n\n    def step6(self):\n        return \"Select a jar of honey\"\n\n    def step7(self):\n        return \"Pay for the honey\"\n\n    def step8(self):\n        return \"get some honey\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetSomeHoney:\n\n    title = \"get some honey\"\n    steps = 9\n\n","reference_graph":{"title":"get some honey","num_steps":9,"schema":["step0: decided to get some honey","step1: Walk out of the house","step2: Get into the car","step3: Drive to the grocery store","step4: Ask where the honey is kept","step5: Walk to the aisle with honey","step6: Select a jar of honey","step7: Pay for the honey","step8: get some honey"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go in the woods","events":{"0":"Close the door.","1":"Walk outside of the house.","2":"Walk towards the woods.","3":"Put on shoes.","4":"Open the door.","5":"NONE","6":"go in the woods"},"context":"NONE","minutes":6.0,"events_minutes":{"0":0.5,"1":1.0,"2":2.0,"3":2.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: Close the door.; step1: Walk outside of the house.; step2: Walk towards the woods.; step3: Put on shoes.; step4: Open the door.; step5: decided to go in the woods; step6: go in the woods","flatten_input_for_script_generation":"You want to go in the woods. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go in the woods; step1: Put on shoes.; step2: Open the door.; step3: Walk outside of the house.; step4: Close the door.; step5: Walk towards the woods.; step6: go in the woods; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","4->1","5->3"],"reference_code":"class GoInTheWoods:\n\n    title = \"go in the woods\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go in the woods\"\n\n    def step1(self):\n        return \"Put on shoes.\"\n\n    def step2(self):\n        return \"Open the door.\"\n\n    def step3(self):\n        return \"Walk outside of the house.\"\n\n    def step4(self):\n        return \"Close the door.\"\n\n    def step5(self):\n        return \"Walk towards the woods.\"\n\n    def step6(self):\n        return \"go in the woods\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoInTheWoods:\n\n    title = \"go in the woods\"\n    steps = 7\n\n","reference_graph":{"title":"go in the woods","num_steps":7,"schema":["step0: decided to go in the woods","step1: Put on shoes.","step2: Open the door.","step3: Walk outside of the house.","step4: Close the door.","step5: Walk towards the woods.","step6: go in the woods"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to school at the University of Louisville","events":{"0":"drive to Louisville","1":"fill out application to University of Lousville","2":"open letter of acceptance","3":"take standardized tests","4":"graduate from high school","5":"pay the tuition","6":"wait to hear if accepted","7":"NONE","8":"go to school at the University of Louisville"},"context":"NONE","minutes":2102400.0,"events_minutes":{"0":60.0,"1":2880.0,"2":1.0,"3":240.0,"4":2102400.0,"5":30.0,"6":43200.0},"flatten_input_for_edge_prediction":"step0: drive to Louisville; step1: fill out application to University of Lousville; step2: open letter of acceptance; step3: take standardized tests; step4: graduate from high school; step5: pay the tuition; step6: wait to hear if accepted; step7: decided to go to school at the University of Louisville; step8: go to school at the University of Louisville","flatten_input_for_script_generation":"You want to go to school at the University of Louisville. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step6; step6 -> step2; step2 -> step5; step5 -> step0; step0 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to go to school at the University of Louisville; step1: graduate from high school; step2: take standardized tests; step3: fill out application to University of Lousville; step4: wait to hear if accepted; step5: open letter of acceptance; step6: pay the tuition; step7: drive to Louisville; step8: go to school at the University of Louisville; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->6","2->5","3->1","4->3","5->0","6->2","7->4"],"reference_code":"class GoToSchoolAtTheUniversityOfLouisville:\n\n    title = \"go to school at the University of Louisville\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to school at the University of Louisville\"\n\n    def step1(self):\n        return \"graduate from high school\"\n\n    def step2(self):\n        return \"take standardized tests\"\n\n    def step3(self):\n        return \"fill out application to University of Lousville\"\n\n    def step4(self):\n        return \"wait to hear if accepted\"\n\n    def step5(self):\n        return \"open letter of acceptance\"\n\n    def step6(self):\n        return \"pay the tuition\"\n\n    def step7(self):\n        return \"drive to Louisville\"\n\n    def step8(self):\n        return \"go to school at the University of Louisville\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToSchoolAtTheUniversityOfLouisville:\n\n    title = \"go to school at the University of Louisville\"\n    steps = 9\n\n","reference_graph":{"title":"go to school at the University of Louisville","num_steps":9,"schema":["step0: decided to go to school at the University of Louisville","step1: graduate from high school","step2: take standardized tests","step3: fill out application to University of Lousville","step4: wait to hear if accepted","step5: open letter of acceptance","step6: pay the tuition","step7: drive to Louisville","step8: go to school at the University of Louisville"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get a gun","events":{"0":"purchase the gun","1":"fill out information for background check","2":"find a store near that sells guns","3":"pick out the type of gun","4":"drive to the store","5":"NONE","6":"get a gun"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":5.0,"1":30.0,"2":60.0,"3":30.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: purchase the gun; step1: fill out information for background check; step2: find a store near that sells guns; step3: pick out the type of gun; step4: drive to the store; step5: decided to get a gun; step6: get a gun","flatten_input_for_script_generation":"You want to get a gun. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get a gun; step1: find a store near that sells guns; step2: drive to the store; step3: pick out the type of gun; step4: fill out information for background check; step5: purchase the gun; step6: get a gun; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->3","5->2"],"reference_code":"class GetAGun:\n\n    title = \"get a gun\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a gun\"\n\n    def step1(self):\n        return \"find a store near that sells guns\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"pick out the type of gun\"\n\n    def step4(self):\n        return \"fill out information for background check\"\n\n    def step5(self):\n        return \"purchase the gun\"\n\n    def step6(self):\n        return \"get a gun\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAGun:\n\n    title = \"get a gun\"\n    steps = 7\n\n","reference_graph":{"title":"get a gun","num_steps":7,"schema":["step0: decided to get a gun","step1: find a store near that sells guns","step2: drive to the store","step3: pick out the type of gun","step4: fill out information for background check","step5: purchase the gun","step6: get a gun"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a pizza","events":{"0":"Put ingredients on kitchen counter","1":"Buy ingredients to make pizza","2":"Drive back home","3":"Drive to grocery store","4":"Roll out pizza doe","5":"NONE","6":"make a pizza"},"context":"NONE","minutes":90.0,"events_minutes":{"0":1.0,"1":15.0,"2":15.0,"3":15.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Put ingredients on kitchen counter; step1: Buy ingredients to make pizza; step2: Drive back home; step3: Drive to grocery store; step4: Roll out pizza doe; step5: decided to make a pizza; step6: make a pizza","flatten_input_for_script_generation":"You want to make a pizza. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to make a pizza; step1: Drive to grocery store; step2: Buy ingredients to make pizza; step3: Drive back home; step4: Put ingredients on kitchen counter; step5: Roll out pizza doe; step6: make a pizza; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->6","5->3"],"reference_code":"class MakeAPizza:\n\n    title = \"make a pizza\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a pizza\"\n\n    def step1(self):\n        return \"Drive to grocery store\"\n\n    def step2(self):\n        return \"Buy ingredients to make pizza\"\n\n    def step3(self):\n        return \"Drive back home\"\n\n    def step4(self):\n        return \"Put ingredients on kitchen counter\"\n\n    def step5(self):\n        return \"Roll out pizza doe\"\n\n    def step6(self):\n        return \"make a pizza\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeAPizza:\n\n    title = \"make a pizza\"\n    steps = 7\n\n","reference_graph":{"title":"make a pizza","num_steps":7,"schema":["step0: decided to make a pizza","step1: Drive to grocery store","step2: Buy ingredients to make pizza","step3: Drive back home","step4: Put ingredients on kitchen counter","step5: Roll out pizza doe","step6: make a pizza"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take a walk","events":{"0":"leave the house","1":"follow the neighborhood trail","2":"walk to front door","3":"walk to shoes","4":"pick up shoes","5":"close front door","6":"put shoes on feet","7":"NONE","8":"take a walk"},"context":"NONE","minutes":60.0,"events_minutes":{"0":0.4166666667,"1":45.0,"2":1.0,"3":0.3333333333,"4":0.3333333333,"5":0.4166666667,"6":0.75},"flatten_input_for_edge_prediction":"step0: leave the house; step1: follow the neighborhood trail; step2: walk to front door; step3: walk to shoes; step4: pick up shoes; step5: close front door; step6: put shoes on feet; step7: decided to take a walk; step8: take a walk","flatten_input_for_script_generation":"You want to take a walk. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step6; step6 -> step2; step2 -> step0; step0 -> step5; step5 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to take a walk; step1: walk to shoes; step2: pick up shoes; step3: put shoes on feet; step4: walk to front door; step5: leave the house; step6: close front door; step7: follow the neighborhood trail; step8: take a walk; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->8","2->0","3->4","4->6","5->1","6->2","7->3"],"reference_code":"class TakeAWalk:\n\n    title = \"take a walk\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take a walk\"\n\n    def step1(self):\n        return \"walk to shoes\"\n\n    def step2(self):\n        return \"pick up shoes\"\n\n    def step3(self):\n        return \"put shoes on feet\"\n\n    def step4(self):\n        return \"walk to front door\"\n\n    def step5(self):\n        return \"leave the house\"\n\n    def step6(self):\n        return \"close front door\"\n\n    def step7(self):\n        return \"follow the neighborhood trail\"\n\n    def step8(self):\n        return \"take a walk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeAWalk:\n\n    title = \"take a walk\"\n    steps = 9\n\n","reference_graph":{"title":"take a walk","num_steps":9,"schema":["step0: decided to take a walk","step1: walk to shoes","step2: pick up shoes","step3: put shoes on feet","step4: walk to front door","step5: leave the house","step6: close front door","step7: follow the neighborhood trail","step8: take a walk"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"play some new music","events":{"0":"sit on the bed","1":"launch a music playing app","2":"open up the laptop","3":"change the playlist","4":"go to the bedroom","5":"NONE","6":"play some new music"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":2.0,"2":2.0,"3":1.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: sit on the bed; step1: launch a music playing app; step2: open up the laptop; step3: change the playlist; step4: go to the bedroom; step5: decided to play some new music; step6: play some new music","flatten_input_for_script_generation":"You want to play some new music. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to play some new music; step1: go to the bedroom; step2: sit on the bed; step3: open up the laptop; step4: launch a music playing app; step5: change the playlist; step6: play some new music; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->6","4->0","5->4"],"reference_code":"class PlaySomeNewMusic:\n\n    title = \"play some new music\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play some new music\"\n\n    def step1(self):\n        return \"go to the bedroom\"\n\n    def step2(self):\n        return \"sit on the bed\"\n\n    def step3(self):\n        return \"open up the laptop\"\n\n    def step4(self):\n        return \"launch a music playing app\"\n\n    def step5(self):\n        return \"change the playlist\"\n\n    def step6(self):\n        return \"play some new music\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaySomeNewMusic:\n\n    title = \"play some new music\"\n    steps = 7\n\n","reference_graph":{"title":"play some new music","num_steps":7,"schema":["step0: decided to play some new music","step1: go to the bedroom","step2: sit on the bed","step3: open up the laptop","step4: launch a music playing app","step5: change the playlist","step6: play some new music"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"have friends over","events":{"0":"enjoy the company","1":"contact each party","2":"make a list","3":"open door when arrive","4":"Plan which to have over","5":"NONE","6":"have friends over"},"context":"NONE","minutes":120.0,"events_minutes":{"0":60.0,"1":5.0,"2":5.0,"3":0.0166666667,"4":5.0},"flatten_input_for_edge_prediction":"step0: enjoy the company; step1: contact each party; step2: make a list; step3: open door when arrive; step4: Plan which to have over; step5: decided to have friends over; step6: have friends over","flatten_input_for_script_generation":"You want to have friends over. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to have friends over; step1: Plan which to have over; step2: make a list; step3: contact each party; step4: open door when arrive; step5: enjoy the company; step6: have friends over; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class HaveFriendsOver:\n\n    title = \"have friends over\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have friends over\"\n\n    def step1(self):\n        return \"Plan which to have over\"\n\n    def step2(self):\n        return \"make a list\"\n\n    def step3(self):\n        return \"contact each party\"\n\n    def step4(self):\n        return \"open door when arrive\"\n\n    def step5(self):\n        return \"enjoy the company\"\n\n    def step6(self):\n        return \"have friends over\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveFriendsOver:\n\n    title = \"have friends over\"\n    steps = 7\n\n","reference_graph":{"title":"have friends over","num_steps":7,"schema":["step0: decided to have friends over","step1: Plan which to have over","step2: make a list","step3: contact each party","step4: open door when arrive","step5: enjoy the company","step6: have friends over"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn a different language","events":{"0":"search for language courses","1":"wait for courses to start","2":"go to google.com","3":"sign up for course","4":"go to courses for a semester","5":"NONE","6":"learn a different language"},"context":"NONE","minutes":172800.0,"events_minutes":{"0":10.0,"1":43200.0,"2":1.0,"3":5.0,"4":129600.0},"flatten_input_for_edge_prediction":"step0: search for language courses; step1: wait for courses to start; step2: go to google.com; step3: sign up for course; step4: go to courses for a semester; step5: decided to learn a different language; step6: learn a different language","flatten_input_for_script_generation":"You want to learn a different language. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn a different language; step1: go to google.com; step2: search for language courses; step3: sign up for course; step4: wait for courses to start; step5: go to courses for a semester; step6: learn a different language; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class LearnADifferentLanguage:\n\n    title = \"learn a different language\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn a different language\"\n\n    def step1(self):\n        return \"go to google.com\"\n\n    def step2(self):\n        return \"search for language courses\"\n\n    def step3(self):\n        return \"sign up for course\"\n\n    def step4(self):\n        return \"wait for courses to start\"\n\n    def step5(self):\n        return \"go to courses for a semester\"\n\n    def step6(self):\n        return \"learn a different language\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnADifferentLanguage:\n\n    title = \"learn a different language\"\n    steps = 7\n\n","reference_graph":{"title":"learn a different language","num_steps":7,"schema":["step0: decided to learn a different language","step1: go to google.com","step2: search for language courses","step3: sign up for course","step4: wait for courses to start","step5: go to courses for a semester","step6: learn a different language"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a computer game","events":{"0":"Look at the computers games available.","1":"Choose a game that looks interesting.","2":"Take the game off of the shelf.","3":"Take the game to the cashier.","4":"Place the game on the counter.","5":"NONE","6":"buy a computer game"},"context":"NONE","minutes":30.0,"events_minutes":{"0":10.0,"1":1.0,"2":1.0,"3":1.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: Look at the computers games available.; step1: Choose a game that looks interesting.; step2: Take the game off of the shelf.; step3: Take the game to the cashier.; step4: Place the game on the counter.; step5: decided to buy a computer game; step6: buy a computer game","flatten_input_for_script_generation":"You want to buy a computer game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to buy a computer game; step1: Look at the computers games available.; step2: Choose a game that looks interesting.; step3: Take the game off of the shelf.; step4: Take the game to the cashier.; step5: Place the game on the counter.; step6: buy a computer game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->6","5->0"],"reference_code":"class BuyAComputerGame:\n\n    title = \"buy a computer game\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a computer game\"\n\n    def step1(self):\n        return \"Look at the computers games available.\"\n\n    def step2(self):\n        return \"Choose a game that looks interesting.\"\n\n    def step3(self):\n        return \"Take the game off of the shelf.\"\n\n    def step4(self):\n        return \"Take the game to the cashier.\"\n\n    def step5(self):\n        return \"Place the game on the counter.\"\n\n    def step6(self):\n        return \"buy a computer game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyAComputerGame:\n\n    title = \"buy a computer game\"\n    steps = 7\n\n","reference_graph":{"title":"buy a computer game","num_steps":7,"schema":["step0: decided to buy a computer game","step1: Look at the computers games available.","step2: Choose a game that looks interesting.","step3: Take the game off of the shelf.","step4: Take the game to the cashier.","step5: Place the game on the counter.","step6: buy a computer game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"live in the dorms next year","events":{"0":"set up in the dorm","1":"sign up for classes","2":"order the books online","3":"order school supplies","4":"look up books required for class","5":"fly to the college","6":"apply for financial aid","7":"NONE","8":"live in the dorms next year"},"context":"NONE","minutes":180.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":5.0,"4":10.0,"5":120.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: set up in the dorm; step1: sign up for classes; step2: order the books online; step3: order school supplies; step4: look up books required for class; step5: fly to the college; step6: apply for financial aid; step7: decided to live in the dorms next year; step8: live in the dorms next year","flatten_input_for_script_generation":"You want to live in the dorms next year. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step5; step5 -> step0; step0 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to live in the dorms next year; step1: apply for financial aid; step2: sign up for classes; step3: look up books required for class; step4: order the books online; step5: order school supplies; step6: fly to the college; step7: set up in the dorm; step8: live in the dorms next year; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->4","2->3","3->5","4->2","5->0","6->1","7->6"],"reference_code":"class LiveInTheDormsNextYear:\n\n    title = \"live in the dorms next year\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to live in the dorms next year\"\n\n    def step1(self):\n        return \"apply for financial aid\"\n\n    def step2(self):\n        return \"sign up for classes\"\n\n    def step3(self):\n        return \"look up books required for class\"\n\n    def step4(self):\n        return \"order the books online\"\n\n    def step5(self):\n        return \"order school supplies\"\n\n    def step6(self):\n        return \"fly to the college\"\n\n    def step7(self):\n        return \"set up in the dorm\"\n\n    def step8(self):\n        return \"live in the dorms next year\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LiveInTheDormsNextYear:\n\n    title = \"live in the dorms next year\"\n    steps = 9\n\n","reference_graph":{"title":"live in the dorms next year","num_steps":9,"schema":["step0: decided to live in the dorms next year","step1: apply for financial aid","step2: sign up for classes","step3: look up books required for class","step4: order the books online","step5: order school supplies","step6: fly to the college","step7: set up in the dorm","step8: live in the dorms next year"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"try rally driving","events":{"0":"park the car","1":"walk out to the track","2":"ask about trying a race car","3":"go to the track's office","4":"drive to the track","5":"sign paperwork and pay fee","6":"NONE","7":"try rally driving"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":2.0,"2":10.0,"3":5.0,"4":30.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: park the car; step1: walk out to the track; step2: ask about trying a race car; step3: go to the track's office; step4: drive to the track; step5: sign paperwork and pay fee; step6: decided to try rally driving; step7: try rally driving","flatten_input_for_script_generation":"You want to try rally driving. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step5; step5 -> step1; step1 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to try rally driving; step1: drive to the track; step2: park the car; step3: go to the track's office; step4: ask about trying a race car; step5: sign paperwork and pay fee; step6: walk out to the track; step7: try rally driving; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->5","3->2","4->0","5->1","6->4"],"reference_code":"class TryRallyDriving:\n\n    title = \"try rally driving\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to try rally driving\"\n\n    def step1(self):\n        return \"drive to the track\"\n\n    def step2(self):\n        return \"park the car\"\n\n    def step3(self):\n        return \"go to the track's office\"\n\n    def step4(self):\n        return \"ask about trying a race car\"\n\n    def step5(self):\n        return \"sign paperwork and pay fee\"\n\n    def step6(self):\n        return \"walk out to the track\"\n\n    def step7(self):\n        return \"try rally driving\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TryRallyDriving:\n\n    title = \"try rally driving\"\n    steps = 8\n\n","reference_graph":{"title":"try rally driving","num_steps":8,"schema":["step0: decided to try rally driving","step1: drive to the track","step2: park the car","step3: go to the track's office","step4: ask about trying a race car","step5: sign paperwork and pay fee","step6: walk out to the track","step7: try rally driving"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"fill out taxes for the first time","events":{"0":"begin filling in the requested information","1":"File the tax","2":"Open the tax return program","3":"Check tax return for errors","4":"Purchase an affordable e-file program","5":"NONE","6":"fill out taxes for the first time"},"context":"NONE","minutes":30.0,"events_minutes":{"0":35.0,"1":5.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: begin filling in the requested information; step1: File the tax; step2: Open the tax return program; step3: Check tax return for errors; step4: Purchase an affordable e-file program; step5: decided to fill out taxes for the first time; step6: fill out taxes for the first time","flatten_input_for_script_generation":"You want to fill out taxes for the first time. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to fill out taxes for the first time; step1: Purchase an affordable e-file program; step2: Open the tax return program; step3: begin filling in the requested information; step4: Check tax return for errors; step5: File the tax; step6: fill out taxes for the first time; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->2","5->4"],"reference_code":"class FillOutTaxesForTheFirstTime:\n\n    title = \"fill out taxes for the first time\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to fill out taxes for the first time\"\n\n    def step1(self):\n        return \"Purchase an affordable e-file program\"\n\n    def step2(self):\n        return \"Open the tax return program\"\n\n    def step3(self):\n        return \"begin filling in the requested information\"\n\n    def step4(self):\n        return \"Check tax return for errors\"\n\n    def step5(self):\n        return \"File the tax\"\n\n    def step6(self):\n        return \"fill out taxes for the first time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutTaxesForTheFirstTime:\n\n    title = \"fill out taxes for the first time\"\n    steps = 7\n\n","reference_graph":{"title":"fill out taxes for the first time","num_steps":7,"schema":["step0: decided to fill out taxes for the first time","step1: Purchase an affordable e-file program","step2: Open the tax return program","step3: begin filling in the requested information","step4: Check tax return for errors","step5: File the tax","step6: fill out taxes for the first time"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go camping very badly","events":{"0":"gather camping equipment","1":"look online for a camping spot","2":"set up camp","3":"choose a camping spot","4":"gather camping supplies","5":"drive to the camping site","6":"NONE","7":"go camping very badly"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":25.0,"3":5.0,"4":15.0,"5":35.0},"flatten_input_for_edge_prediction":"step0: gather camping equipment; step1: look online for a camping spot; step2: set up camp; step3: choose a camping spot; step4: gather camping supplies; step5: drive to the camping site; step6: decided to go camping very badly; step7: go camping very badly","flatten_input_for_script_generation":"You want to go camping very badly. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step3 -> step4; step0 -> step5; step4 -> step5; step5 -> step2; step2 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to go camping very badly; step1: look online for a camping spot; step2: choose a camping spot; step3: gather camping equipment; step4: gather camping supplies; step5: drive to the camping site; step6: set up camp; step7: go camping very badly; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->7","3->0","3->4","4->5","5->2","6->1"],"reference_code":"class GoCampingVeryBadly:\n\n    title = \"go camping very badly\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go camping very badly\"\n\n    def step1(self):\n        return \"look online for a camping spot\"\n\n    def step2(self):\n        return \"choose a camping spot\"\n\n    def step3(self):\n        return \"gather camping equipment\"\n\n    def step4(self):\n        return \"gather camping supplies\"\n\n    def step5(self):\n        return \"drive to the camping site\"\n\n    def step6(self):\n        return \"set up camp\"\n\n    def step7(self):\n        return \"go camping very badly\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoCampingVeryBadly:\n\n    title = \"go camping very badly\"\n    steps = 8\n\n","reference_graph":{"title":"go camping very badly","num_steps":8,"schema":["step0: decided to go camping very badly","step1: look online for a camping spot","step2: choose a camping spot","step3: gather camping equipment","step4: gather camping supplies","step5: drive to the camping site","step6: set up camp","step7: go camping very badly"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"visit a zoo","events":{"0":"Take the zoo ticket.","1":"Lock the car doors.","2":"Hand cash to the ticket cashier for a zoo ticket.","3":"Walk to the front ticket counter of the zoo.","4":"Enter the zoo front gates.","5":"Park the vehicle in the parking spot.","6":"Find a empty space in the parking lot.","7":"NONE","8":"visit a zoo"},"context":"NONE","minutes":20.0,"events_minutes":{"0":0.5,"1":2.0,"2":5.0,"3":5.0,"4":2.0,"5":2.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: Take the zoo ticket.; step1: Lock the car doors.; step2: Hand cash to the ticket cashier for a zoo ticket.; step3: Walk to the front ticket counter of the zoo.; step4: Enter the zoo front gates.; step5: Park the vehicle in the parking spot.; step6: Find a empty space in the parking lot.; step7: decided to visit a zoo; step8: visit a zoo","flatten_input_for_script_generation":"You want to visit a zoo. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step5; step5 -> step1; step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to visit a zoo; step1: Find a empty space in the parking lot.; step2: Park the vehicle in the parking spot.; step3: Lock the car doors.; step4: Walk to the front ticket counter of the zoo.; step5: Hand cash to the ticket cashier for a zoo ticket.; step6: Take the zoo ticket.; step7: Enter the zoo front gates.; step8: visit a zoo; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->8","5->1","6->5","7->6"],"reference_code":"class VisitAZoo:\n\n    title = \"visit a zoo\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to visit a zoo\"\n\n    def step1(self):\n        return \"Find a empty space in the parking lot.\"\n\n    def step2(self):\n        return \"Park the vehicle in the parking spot.\"\n\n    def step3(self):\n        return \"Lock the car doors.\"\n\n    def step4(self):\n        return \"Walk to the front ticket counter of the zoo.\"\n\n    def step5(self):\n        return \"Hand cash to the ticket cashier for a zoo ticket.\"\n\n    def step6(self):\n        return \"Take the zoo ticket.\"\n\n    def step7(self):\n        return \"Enter the zoo front gates.\"\n\n    def step8(self):\n        return \"visit a zoo\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class VisitAZoo:\n\n    title = \"visit a zoo\"\n    steps = 9\n\n","reference_graph":{"title":"visit a zoo","num_steps":9,"schema":["step0: decided to visit a zoo","step1: Find a empty space in the parking lot.","step2: Park the vehicle in the parking spot.","step3: Lock the car doors.","step4: Walk to the front ticket counter of the zoo.","step5: Hand cash to the ticket cashier for a zoo ticket.","step6: Take the zoo ticket.","step7: Enter the zoo front gates.","step8: visit a zoo"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go on a ride","events":{"0":"Drive to destination","1":"Plan where to go","2":"start the car","3":"look at directions","4":"walk to car","5":"NONE","6":"go on a ride"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3300.0,"1":10.0,"2":0.0166666667,"3":5.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Drive to destination; step1: Plan where to go; step2: start the car; step3: look at directions; step4: walk to car; step5: decided to go on a ride; step6: go on a ride","flatten_input_for_script_generation":"You want to go on a ride. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go on a ride; step1: Plan where to go; step2: look at directions; step3: walk to car; step4: start the car; step5: Drive to destination; step6: go on a ride; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->4","4->2","5->1"],"reference_code":"class GoOnARide:\n\n    title = \"go on a ride\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go on a ride\"\n\n    def step1(self):\n        return \"Plan where to go\"\n\n    def step2(self):\n        return \"look at directions\"\n\n    def step3(self):\n        return \"walk to car\"\n\n    def step4(self):\n        return \"start the car\"\n\n    def step5(self):\n        return \"Drive to destination\"\n\n    def step6(self):\n        return \"go on a ride\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOnARide:\n\n    title = \"go on a ride\"\n    steps = 7\n\n","reference_graph":{"title":"go on a ride","num_steps":7,"schema":["step0: decided to go on a ride","step1: Plan where to go","step2: look at directions","step3: walk to car","step4: start the car","step5: Drive to destination","step6: go on a ride"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bake a dozen chocolate chip cookies","events":{"0":"mix ingredient according to recipe","1":"find a recipe for cookies","2":"take out bowl","3":"scoop cookie dough onto baking tray","4":"buy ingredients for cookies","5":"take out baking tray","6":"NONE","7":"bake a dozen chocolate chip cookies"},"context":"NONE","minutes":53.0,"events_minutes":{"0":15.0,"1":5.0,"2":1.0,"3":1.0,"4":30.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: mix ingredient according to recipe; step1: find a recipe for cookies; step2: take out bowl; step3: scoop cookie dough onto baking tray; step4: buy ingredients for cookies; step5: take out baking tray; step6: decided to bake a dozen chocolate chip cookies; step7: bake a dozen chocolate chip cookies","flatten_input_for_script_generation":"You want to bake a dozen chocolate chip cookies. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step4 -> step5; step2 -> step0; step5 -> step3; step0 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to bake a dozen chocolate chip cookies; step1: find a recipe for cookies; step2: buy ingredients for cookies; step3: take out bowl; step4: take out baking tray; step5: mix ingredient according to recipe; step6: scoop cookie dough onto baking tray; step7: bake a dozen chocolate chip cookies; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->0","3->7","4->2","4->5","5->3","6->1"],"reference_code":"class BakeADozenChocolateChipCookies:\n\n    title = \"bake a dozen chocolate chip cookies\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to bake a dozen chocolate chip cookies\"\n\n    def step1(self):\n        return \"find a recipe for cookies\"\n\n    def step2(self):\n        return \"buy ingredients for cookies\"\n\n    def step3(self):\n        return \"take out bowl\"\n\n    def step4(self):\n        return \"take out baking tray\"\n\n    def step5(self):\n        return \"mix ingredient according to recipe\"\n\n    def step6(self):\n        return \"scoop cookie dough onto baking tray\"\n\n    def step7(self):\n        return \"bake a dozen chocolate chip cookies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BakeADozenChocolateChipCookies:\n\n    title = \"bake a dozen chocolate chip cookies\"\n    steps = 8\n\n","reference_graph":{"title":"bake a dozen chocolate chip cookies","num_steps":8,"schema":["step0: decided to bake a dozen chocolate chip cookies","step1: find a recipe for cookies","step2: buy ingredients for cookies","step3: take out bowl","step4: take out baking tray","step5: mix ingredient according to recipe","step6: scoop cookie dough onto baking tray","step7: bake a dozen chocolate chip cookies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to a party one night","events":{"0":"be invited by a friend to a party","1":"park the car","2":"shop for a party costume","3":"put on costume and make up","4":"drive to the party venue","5":"enter the party venue","6":"shop for makeup","7":"NONE","8":"go to a party one night"},"context":"NONE","minutes":300.0,"events_minutes":{"0":10.0,"1":3.0,"2":120.0,"3":60.0,"4":30.0,"5":3.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: be invited by a friend to a party; step1: park the car; step2: shop for a party costume; step3: put on costume and make up; step4: drive to the party venue; step5: enter the party venue; step6: shop for makeup; step7: decided to go to a party one night; step8: go to a party one night","flatten_input_for_script_generation":"You want to go to a party one night. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step0 -> step6; step2 -> step3; step6 -> step3; step3 -> step4; step4 -> step1; step1 -> step5; step5 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to go to a party one night; step1: be invited by a friend to a party; step2: shop for a party costume; step3: shop for makeup; step4: put on costume and make up; step5: drive to the party venue; step6: park the car; step7: enter the party venue; step8: go to a party one night; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","0->6","1->5","2->3","3->4","4->1","5->8","6->3","7->0"],"reference_code":"class GoToAPartyOneNight:\n\n    title = \"go to a party one night\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to a party one night\"\n\n    def step1(self):\n        return \"be invited by a friend to a party\"\n\n    def step2(self):\n        return \"shop for a party costume\"\n\n    def step3(self):\n        return \"shop for makeup\"\n\n    def step4(self):\n        return \"put on costume and make up\"\n\n    def step5(self):\n        return \"drive to the party venue\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def step7(self):\n        return \"enter the party venue\"\n\n    def step8(self):\n        return \"go to a party one night\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToAPartyOneNight:\n\n    title = \"go to a party one night\"\n    steps = 9\n\n","reference_graph":{"title":"go to a party one night","num_steps":9,"schema":["step0: decided to go to a party one night","step1: be invited by a friend to a party","step2: shop for a party costume","step3: shop for makeup","step4: put on costume and make up","step5: drive to the party venue","step6: park the car","step7: enter the party venue","step8: go to a party one night"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"grill some asparagus","events":{"0":"put asparagus on plate","1":"light the grill","2":"carry plate with asparagus out to grill","3":"take asparagus out of the refrigerator","4":"sprinkle asparagus with pepper","5":"sprinkle asparagus with salt","6":"NONE","7":"grill some asparagus"},"context":"NONE","minutes":30.0,"events_minutes":{"0":2.0,"1":4.0,"2":2.0,"3":1.0,"4":0.5,"5":0.5},"flatten_input_for_edge_prediction":"step0: put asparagus on plate; step1: light the grill; step2: carry plate with asparagus out to grill; step3: take asparagus out of the refrigerator; step4: sprinkle asparagus with pepper; step5: sprinkle asparagus with salt; step6: decided to grill some asparagus; step7: grill some asparagus","flatten_input_for_script_generation":"You want to grill some asparagus. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step7; step3 -> step0; step0 -> step5; step0 -> step4; step5 -> step2; step4 -> step2; step2 -> step7; step6 -> step3; step6 -> step1","flatten_output_for_script_generation":"step0: decided to grill some asparagus; step1: light the grill; step2: grill some asparagus; step3: take asparagus out of the refrigerator; step4: put asparagus on plate; step5: sprinkle asparagus with salt; step6: sprinkle asparagus with pepper; step7: carry plate with asparagus out to grill; step0 -> step1; step0 -> step3; step1 -> step2; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step2","gold_edges_for_prediction":["0->5","0->4","1->7","2->7","3->0","4->2","5->2","6->3","6->1"],"reference_code":"class GrillSomeAsparagus:\n\n    title = \"grill some asparagus\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to grill some asparagus\"\n\n    def step1(self):\n        return \"light the grill\"\n\n    def step2(self):\n        return \"grill some asparagus\"\n\n    def step3(self):\n        return \"take asparagus out of the refrigerator\"\n\n    def step4(self):\n        return \"put asparagus on plate\"\n\n    def step5(self):\n        return \"sprinkle asparagus with salt\"\n\n    def step6(self):\n        return \"sprinkle asparagus with pepper\"\n\n    def step7(self):\n        return \"carry plate with asparagus out to grill\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step3\",\n            \"step1 -> step2\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step2\",\n        ]\n","input_prompt_code":"class GrillSomeAsparagus:\n\n    title = \"grill some asparagus\"\n    steps = 8\n\n","reference_graph":{"title":"grill some asparagus","num_steps":8,"schema":["step0: decided to grill some asparagus","step1: light the grill","step2: grill some asparagus","step3: take asparagus out of the refrigerator","step4: put asparagus on plate","step5: sprinkle asparagus with salt","step6: sprinkle asparagus with pepper","step7: carry plate with asparagus out to grill"],"relations":["step0 -> step1","step0 -> step3","step1 -> step2","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step2"]}}
{"scenario":"purchase a new lighter","events":{"0":"ask the cashier for a lighter","1":"walk to the counter","2":"walk in the gas station","3":"take out credit card","4":"park the car","5":"NONE","6":"purchase a new lighter"},"context":"NONE","minutes":3.0,"events_minutes":{"0":0.5,"1":0.3333333333,"2":1.0,"3":0.3333333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: ask the cashier for a lighter; step1: walk to the counter; step2: walk in the gas station; step3: take out credit card; step4: park the car; step5: decided to purchase a new lighter; step6: purchase a new lighter","flatten_input_for_script_generation":"You want to purchase a new lighter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to purchase a new lighter; step1: park the car; step2: walk in the gas station; step3: walk to the counter; step4: ask the cashier for a lighter; step5: take out credit card; step6: purchase a new lighter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->6","4->2","5->4"],"reference_code":"class PurchaseANewLighter:\n\n    title = \"purchase a new lighter\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to purchase a new lighter\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"walk in the gas station\"\n\n    def step3(self):\n        return \"walk to the counter\"\n\n    def step4(self):\n        return \"ask the cashier for a lighter\"\n\n    def step5(self):\n        return \"take out credit card\"\n\n    def step6(self):\n        return \"purchase a new lighter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseANewLighter:\n\n    title = \"purchase a new lighter\"\n    steps = 7\n\n","reference_graph":{"title":"purchase a new lighter","num_steps":7,"schema":["step0: decided to purchase a new lighter","step1: park the car","step2: walk in the gas station","step3: walk to the counter","step4: ask the cashier for a lighter","step5: take out credit card","step6: purchase a new lighter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"do something nice","events":{"0":"think of a person to do something nice for","1":"follow through doing the item","2":"think about what sort of stuff enjoyed by the person","3":"make a list of possibilities","4":"choose one of the items","5":"NONE","6":"do something nice"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.4166666667,"1":2.0,"2":0.4166666667,"3":2.0,"4":0.5666666667},"flatten_input_for_edge_prediction":"step0: think of a person to do something nice for; step1: follow through doing the item; step2: think about what sort of stuff enjoyed by the person; step3: make a list of possibilities; step4: choose one of the items; step5: decided to do something nice; step6: do something nice","flatten_input_for_script_generation":"You want to do something nice. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to do something nice; step1: think of a person to do something nice for; step2: think about what sort of stuff enjoyed by the person; step3: make a list of possibilities; step4: choose one of the items; step5: follow through doing the item; step6: do something nice; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->4","4->1","5->0"],"reference_code":"class DoSomethingNice:\n\n    title = \"do something nice\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to do something nice\"\n\n    def step1(self):\n        return \"think of a person to do something nice for\"\n\n    def step2(self):\n        return \"think about what sort of stuff enjoyed by the person\"\n\n    def step3(self):\n        return \"make a list of possibilities\"\n\n    def step4(self):\n        return \"choose one of the items\"\n\n    def step5(self):\n        return \"follow through doing the item\"\n\n    def step6(self):\n        return \"do something nice\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DoSomethingNice:\n\n    title = \"do something nice\"\n    steps = 7\n\n","reference_graph":{"title":"do something nice","num_steps":7,"schema":["step0: decided to do something nice","step1: think of a person to do something nice for","step2: think about what sort of stuff enjoyed by the person","step3: make a list of possibilities","step4: choose one of the items","step5: follow through doing the item","step6: do something nice"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"eat Italian food for lunch","events":{"0":"invite friends to lunch","1":"decide what to eat","2":"get in the car","3":"go inside the restaurant","4":"drive to restaurant","5":"NONE","6":"eat Italian food for lunch"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":10.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: invite friends to lunch; step1: decide what to eat; step2: get in the car; step3: go inside the restaurant; step4: drive to restaurant; step5: decided to eat Italian food for lunch; step6: eat Italian food for lunch","flatten_input_for_script_generation":"You want to eat Italian food for lunch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to eat Italian food for lunch; step1: decide what to eat; step2: invite friends to lunch; step3: get in the car; step4: drive to restaurant; step5: go inside the restaurant; step6: eat Italian food for lunch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class EatItalianFoodForLunch:\n\n    title = \"eat Italian food for lunch\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat Italian food for lunch\"\n\n    def step1(self):\n        return \"decide what to eat\"\n\n    def step2(self):\n        return \"invite friends to lunch\"\n\n    def step3(self):\n        return \"get in the car\"\n\n    def step4(self):\n        return \"drive to restaurant\"\n\n    def step5(self):\n        return \"go inside the restaurant\"\n\n    def step6(self):\n        return \"eat Italian food for lunch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatItalianFoodForLunch:\n\n    title = \"eat Italian food for lunch\"\n    steps = 7\n\n","reference_graph":{"title":"eat Italian food for lunch","num_steps":7,"schema":["step0: decided to eat Italian food for lunch","step1: decide what to eat","step2: invite friends to lunch","step3: get in the car","step4: drive to restaurant","step5: go inside the restaurant","step6: eat Italian food for lunch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick up school supplies","events":{"0":"enter the store","1":"drive to store","2":"pick up supplies","3":"walk to school supplies","4":"pick out supplies","5":"NONE","6":"pick up school supplies"},"context":"NONE","minutes":30.0,"events_minutes":{"0":3.0,"1":20.0,"2":3.0,"3":3.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: enter the store; step1: drive to store; step2: pick up supplies; step3: walk to school supplies; step4: pick out supplies; step5: decided to pick up school supplies; step6: pick up school supplies","flatten_input_for_script_generation":"You want to pick up school supplies. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to pick up school supplies; step1: drive to store; step2: enter the store; step3: walk to school supplies; step4: pick out supplies; step5: pick up supplies; step6: pick up school supplies; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->4","4->2","5->1"],"reference_code":"class PickUpSchoolSupplies:\n\n    title = \"pick up school supplies\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to pick up school supplies\"\n\n    def step1(self):\n        return \"drive to store\"\n\n    def step2(self):\n        return \"enter the store\"\n\n    def step3(self):\n        return \"walk to school supplies\"\n\n    def step4(self):\n        return \"pick out supplies\"\n\n    def step5(self):\n        return \"pick up supplies\"\n\n    def step6(self):\n        return \"pick up school supplies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickUpSchoolSupplies:\n\n    title = \"pick up school supplies\"\n    steps = 7\n\n","reference_graph":{"title":"pick up school supplies","num_steps":7,"schema":["step0: decided to pick up school supplies","step1: drive to store","step2: enter the store","step3: walk to school supplies","step4: pick out supplies","step5: pick up supplies","step6: pick up school supplies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"do yoga in the morning","events":{"0":"Wake up from bed.","1":"Put on yoga clothes.","2":"Do various yoga poses.","3":"Sit on yoga mat.","4":"Place yoga mat on ground.","5":"NONE","6":"do yoga in the morning"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":30.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Wake up from bed.; step1: Put on yoga clothes.; step2: Do various yoga poses.; step3: Sit on yoga mat.; step4: Place yoga mat on ground.; step5: decided to do yoga in the morning; step6: do yoga in the morning","flatten_input_for_script_generation":"You want to do yoga in the morning. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step4; step1 -> step3; step4 -> step3; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to do yoga in the morning; step1: Wake up from bed.; step2: Put on yoga clothes.; step3: Place yoga mat on ground.; step4: Sit on yoga mat.; step5: Do various yoga poses.; step6: do yoga in the morning; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->4","1->3","2->6","3->2","4->3","5->0"],"reference_code":"class DoYogaInTheMorning:\n\n    title = \"do yoga in the morning\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to do yoga in the morning\"\n\n    def step1(self):\n        return \"Wake up from bed.\"\n\n    def step2(self):\n        return \"Put on yoga clothes.\"\n\n    def step3(self):\n        return \"Place yoga mat on ground.\"\n\n    def step4(self):\n        return \"Sit on yoga mat.\"\n\n    def step5(self):\n        return \"Do various yoga poses.\"\n\n    def step6(self):\n        return \"do yoga in the morning\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DoYogaInTheMorning:\n\n    title = \"do yoga in the morning\"\n    steps = 7\n\n","reference_graph":{"title":"do yoga in the morning","num_steps":7,"schema":["step0: decided to do yoga in the morning","step1: Wake up from bed.","step2: Put on yoga clothes.","step3: Place yoga mat on ground.","step4: Sit on yoga mat.","step5: Do various yoga poses.","step6: do yoga in the morning"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play soccer in a league","events":{"0":"contact one of the leagues","1":"drive to location","2":"sign up through the website","3":"search top leagues in the area","4":"suit up for the game","5":"NONE","6":"play soccer in a league"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":30.0,"2":10.0,"3":60.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: contact one of the leagues; step1: drive to location; step2: sign up through the website; step3: search top leagues in the area; step4: suit up for the game; step5: decided to play soccer in a league; step6: play soccer in a league","flatten_input_for_script_generation":"You want to play soccer in a league. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to play soccer in a league; step1: search top leagues in the area; step2: contact one of the leagues; step3: sign up through the website; step4: drive to location; step5: suit up for the game; step6: play soccer in a league; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->1","3->0","4->6","5->3"],"reference_code":"class PlaySoccerInALeague:\n\n    title = \"play soccer in a league\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play soccer in a league\"\n\n    def step1(self):\n        return \"search top leagues in the area\"\n\n    def step2(self):\n        return \"contact one of the leagues\"\n\n    def step3(self):\n        return \"sign up through the website\"\n\n    def step4(self):\n        return \"drive to location\"\n\n    def step5(self):\n        return \"suit up for the game\"\n\n    def step6(self):\n        return \"play soccer in a league\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaySoccerInALeague:\n\n    title = \"play soccer in a league\"\n    steps = 7\n\n","reference_graph":{"title":"play soccer in a league","num_steps":7,"schema":["step0: decided to play soccer in a league","step1: search top leagues in the area","step2: contact one of the leagues","step3: sign up through the website","step4: drive to location","step5: suit up for the game","step6: play soccer in a league"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go out for dinner","events":{"0":"get into car","1":"dress for the dinner","2":"check in with front desk","3":"drive to the restaurant","4":"sit down for dinner","5":"eat the dinner","6":"NONE","7":"go out for dinner"},"context":"NONE","minutes":120.0,"events_minutes":{"0":0.5,"1":10.0,"2":1.0,"3":10.0,"4":0.1666666667,"5":60.0},"flatten_input_for_edge_prediction":"step0: get into car; step1: dress for the dinner; step2: check in with front desk; step3: drive to the restaurant; step4: sit down for dinner; step5: eat the dinner; step6: decided to go out for dinner; step7: go out for dinner","flatten_input_for_script_generation":"You want to go out for dinner. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step5; step5 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to go out for dinner; step1: dress for the dinner; step2: get into car; step3: drive to the restaurant; step4: check in with front desk; step5: sit down for dinner; step6: eat the dinner; step7: go out for dinner; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->0","2->4","3->2","4->5","5->7","6->1"],"reference_code":"class GoOutForDinner:\n\n    title = \"go out for dinner\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go out for dinner\"\n\n    def step1(self):\n        return \"dress for the dinner\"\n\n    def step2(self):\n        return \"get into car\"\n\n    def step3(self):\n        return \"drive to the restaurant\"\n\n    def step4(self):\n        return \"check in with front desk\"\n\n    def step5(self):\n        return \"sit down for dinner\"\n\n    def step6(self):\n        return \"eat the dinner\"\n\n    def step7(self):\n        return \"go out for dinner\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoOutForDinner:\n\n    title = \"go out for dinner\"\n    steps = 8\n\n","reference_graph":{"title":"go out for dinner","num_steps":8,"schema":["step0: decided to go out for dinner","step1: dress for the dinner","step2: get into car","step3: drive to the restaurant","step4: check in with front desk","step5: sit down for dinner","step6: eat the dinner","step7: go out for dinner"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get some orange juice","events":{"0":"open the fridge","1":"go to the kitchen","2":"look through the shelves","3":"decide on a drink","4":"get home from work","5":"NONE","6":"get some orange juice"},"context":"NONE","minutes":15.0,"events_minutes":{"0":2.0,"1":3.0,"2":5.0,"3":1.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: open the fridge; step1: go to the kitchen; step2: look through the shelves; step3: decide on a drink; step4: get home from work; step5: decided to get some orange juice; step6: get some orange juice","flatten_input_for_script_generation":"You want to get some orange juice. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to get some orange juice; step1: get home from work; step2: go to the kitchen; step3: open the fridge; step4: look through the shelves; step5: decide on a drink; step6: get some orange juice; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->1","5->4"],"reference_code":"class GetSomeOrangeJuice:\n\n    title = \"get some orange juice\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get some orange juice\"\n\n    def step1(self):\n        return \"get home from work\"\n\n    def step2(self):\n        return \"go to the kitchen\"\n\n    def step3(self):\n        return \"open the fridge\"\n\n    def step4(self):\n        return \"look through the shelves\"\n\n    def step5(self):\n        return \"decide on a drink\"\n\n    def step6(self):\n        return \"get some orange juice\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSomeOrangeJuice:\n\n    title = \"get some orange juice\"\n    steps = 7\n\n","reference_graph":{"title":"get some orange juice","num_steps":7,"schema":["step0: decided to get some orange juice","step1: get home from work","step2: go to the kitchen","step3: open the fridge","step4: look through the shelves","step5: decide on a drink","step6: get some orange juice"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"have money to buy things","events":{"0":"get hired for the job","1":"start saving money","2":"apply for a job","3":"drive to the interview","4":"get in the car","5":"NONE","6":"have money to buy things"},"context":"NONE","minutes":525600.0,"events_minutes":{"0":60.0,"1":525600.0,"2":30.0,"3":30.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: get hired for the job; step1: start saving money; step2: apply for a job; step3: drive to the interview; step4: get in the car; step5: decided to have money to buy things; step6: have money to buy things","flatten_input_for_script_generation":"You want to have money to buy things. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to have money to buy things; step1: apply for a job; step2: get in the car; step3: drive to the interview; step4: get hired for the job; step5: start saving money; step6: have money to buy things; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class HaveMoneyToBuyThings:\n\n    title = \"have money to buy things\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to have money to buy things\"\n\n    def step1(self):\n        return \"apply for a job\"\n\n    def step2(self):\n        return \"get in the car\"\n\n    def step3(self):\n        return \"drive to the interview\"\n\n    def step4(self):\n        return \"get hired for the job\"\n\n    def step5(self):\n        return \"start saving money\"\n\n    def step6(self):\n        return \"have money to buy things\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveMoneyToBuyThings:\n\n    title = \"have money to buy things\"\n    steps = 7\n\n","reference_graph":{"title":"have money to buy things","num_steps":7,"schema":["step0: decided to have money to buy things","step1: apply for a job","step2: get in the car","step3: drive to the interview","step4: get hired for the job","step5: start saving money","step6: have money to buy things"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a frozen banana from the banana stand","events":{"0":"Get the frozen banana from vendor","1":"Pay for the frozen banana","2":"Talk with the vendor","3":"Order frozen banana","4":"Walk up to the stand","5":"NONE","6":"get a frozen banana from the banana stand"},"context":"NONE","minutes":2.0,"events_minutes":{"0":0.5,"1":0.1666666667,"2":0.5,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Get the frozen banana from vendor; step1: Pay for the frozen banana; step2: Talk with the vendor; step3: Order frozen banana; step4: Walk up to the stand; step5: decided to get a frozen banana from the banana stand; step6: get a frozen banana from the banana stand","flatten_input_for_script_generation":"You want to get a frozen banana from the banana stand. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to get a frozen banana from the banana stand; step1: Walk up to the stand; step2: Talk with the vendor; step3: Order frozen banana; step4: Pay for the frozen banana; step5: Get the frozen banana from vendor; step6: get a frozen banana from the banana stand; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class GetAFrozenBananaFromTheBananaStand:\n\n    title = \"get a frozen banana from the banana stand\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a frozen banana from the banana stand\"\n\n    def step1(self):\n        return \"Walk up to the stand\"\n\n    def step2(self):\n        return \"Talk with the vendor\"\n\n    def step3(self):\n        return \"Order frozen banana\"\n\n    def step4(self):\n        return \"Pay for the frozen banana\"\n\n    def step5(self):\n        return \"Get the frozen banana from vendor\"\n\n    def step6(self):\n        return \"get a frozen banana from the banana stand\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAFrozenBananaFromTheBananaStand:\n\n    title = \"get a frozen banana from the banana stand\"\n    steps = 7\n\n","reference_graph":{"title":"get a frozen banana from the banana stand","num_steps":7,"schema":["step0: decided to get a frozen banana from the banana stand","step1: Walk up to the stand","step2: Talk with the vendor","step3: Order frozen banana","step4: Pay for the frozen banana","step5: Get the frozen banana from vendor","step6: get a frozen banana from the banana stand"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"rent a SUV for a road trip","events":{"0":"Make an agreement over the phone","1":"Gather necessary identification","2":"Research rental companies online","3":"Call the rental company","4":"Show up to collect the car","5":"NONE","6":"rent a SUV for a road trip"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":15.0,"1":5.0,"2":60.0,"3":30.0,"4":2880.0},"flatten_input_for_edge_prediction":"step0: Make an agreement over the phone; step1: Gather necessary identification; step2: Research rental companies online; step3: Call the rental company; step4: Show up to collect the car; step5: decided to rent a SUV for a road trip; step6: rent a SUV for a road trip","flatten_input_for_script_generation":"You want to rent a SUV for a road trip. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to rent a SUV for a road trip; step1: Research rental companies online; step2: Call the rental company; step3: Gather necessary identification; step4: Make an agreement over the phone; step5: Show up to collect the car; step6: rent a SUV for a road trip; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class RentASuvForARoadTrip:\n\n    title = \"rent a SUV for a road trip\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to rent a SUV for a road trip\"\n\n    def step1(self):\n        return \"Research rental companies online\"\n\n    def step2(self):\n        return \"Call the rental company\"\n\n    def step3(self):\n        return \"Gather necessary identification\"\n\n    def step4(self):\n        return \"Make an agreement over the phone\"\n\n    def step5(self):\n        return \"Show up to collect the car\"\n\n    def step6(self):\n        return \"rent a SUV for a road trip\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RentASuvForARoadTrip:\n\n    title = \"rent a SUV for a road trip\"\n    steps = 7\n\n","reference_graph":{"title":"rent a SUV for a road trip","num_steps":7,"schema":["step0: decided to rent a SUV for a road trip","step1: Research rental companies online","step2: Call the rental company","step3: Gather necessary identification","step4: Make an agreement over the phone","step5: Show up to collect the car","step6: rent a SUV for a road trip"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"picnic at the campgrounds","events":{"0":"cut up fruit","1":"get out ingredients","2":"make a bunch of sandwiches","3":"pack food in basket","4":"park the car","5":"go to the car","6":"drive to campgrounds","7":"NONE","8":"picnic at the campgrounds"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":10.0,"3":5.0,"4":2.0,"5":5.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: cut up fruit; step1: get out ingredients; step2: make a bunch of sandwiches; step3: pack food in basket; step4: park the car; step5: go to the car; step6: drive to campgrounds; step7: decided to picnic at the campgrounds; step8: picnic at the campgrounds","flatten_input_for_script_generation":"You want to picnic at the campgrounds. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step1 -> step0; step2 -> step3; step0 -> step3; step3 -> step5; step5 -> step6; step6 -> step4; step4 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to picnic at the campgrounds; step1: get out ingredients; step2: make a bunch of sandwiches; step3: cut up fruit; step4: pack food in basket; step5: go to the car; step6: drive to campgrounds; step7: park the car; step8: picnic at the campgrounds; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->2","1->0","2->3","3->5","4->8","5->6","6->4","7->1"],"reference_code":"class PicnicAtTheCampgrounds:\n\n    title = \"picnic at the campgrounds\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to picnic at the campgrounds\"\n\n    def step1(self):\n        return \"get out ingredients\"\n\n    def step2(self):\n        return \"make a bunch of sandwiches\"\n\n    def step3(self):\n        return \"cut up fruit\"\n\n    def step4(self):\n        return \"pack food in basket\"\n\n    def step5(self):\n        return \"go to the car\"\n\n    def step6(self):\n        return \"drive to campgrounds\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def step8(self):\n        return \"picnic at the campgrounds\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PicnicAtTheCampgrounds:\n\n    title = \"picnic at the campgrounds\"\n    steps = 9\n\n","reference_graph":{"title":"picnic at the campgrounds","num_steps":9,"schema":["step0: decided to picnic at the campgrounds","step1: get out ingredients","step2: make a bunch of sandwiches","step3: cut up fruit","step4: pack food in basket","step5: go to the car","step6: drive to campgrounds","step7: park the car","step8: picnic at the campgrounds"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"run a race","events":{"0":"sign up for the race","1":"practice until day of race","2":"look for a local race either competitive or for charity","3":"make sure scheduled day is free","4":"show up to race","5":"contact the race organizers","6":"dress in running clothes","7":"NONE","8":"run a race"},"context":"NONE","minutes":21600.0,"events_minutes":{"0":5.0,"1":20160.0,"2":60.0,"3":10.0,"4":20.0,"5":30.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: sign up for the race; step1: practice until day of race; step2: look for a local race either competitive or for charity; step3: make sure scheduled day is free; step4: show up to race; step5: contact the race organizers; step6: dress in running clothes; step7: decided to run a race; step8: run a race","flatten_input_for_script_generation":"You want to run a race. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step5 -> step0; step0 -> step1; step3 -> step5; step1 -> step6; step6 -> step4; step4 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to run a race; step1: look for a local race either competitive or for charity; step2: make sure scheduled day is free; step3: contact the race organizers; step4: sign up for the race; step5: practice until day of race; step6: dress in running clothes; step7: show up to race; step8: run a race; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->6","2->3","3->5","4->8","5->0","6->4","7->2"],"reference_code":"class RunARace:\n\n    title = \"run a race\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to run a race\"\n\n    def step1(self):\n        return \"look for a local race either competitive or for charity\"\n\n    def step2(self):\n        return \"make sure scheduled day is free\"\n\n    def step3(self):\n        return \"contact the race organizers\"\n\n    def step4(self):\n        return \"sign up for the race\"\n\n    def step5(self):\n        return \"practice until day of race\"\n\n    def step6(self):\n        return \"dress in running clothes\"\n\n    def step7(self):\n        return \"show up to race\"\n\n    def step8(self):\n        return \"run a race\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class RunARace:\n\n    title = \"run a race\"\n    steps = 9\n\n","reference_graph":{"title":"run a race","num_steps":9,"schema":["step0: decided to run a race","step1: look for a local race either competitive or for charity","step2: make sure scheduled day is free","step3: contact the race organizers","step4: sign up for the race","step5: practice until day of race","step6: dress in running clothes","step7: show up to race","step8: run a race"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"earn extra money this summer","events":{"0":"Get an interview","1":"Go into stores and apply there","2":"Get the job","3":"Apply for jobs online","4":"Work at the job","5":"NONE","6":"earn extra money this summer"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":35.0,"1":180.0,"2":0.0166666667,"3":120.0,"4":129600.0},"flatten_input_for_edge_prediction":"step0: Get an interview; step1: Go into stores and apply there; step2: Get the job; step3: Apply for jobs online; step4: Work at the job; step5: decided to earn extra money this summer; step6: earn extra money this summer","flatten_input_for_script_generation":"You want to earn extra money this summer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: decided to earn extra money this summer; step1: Go into stores and apply there; step2: Apply for jobs online; step3: Get an interview; step4: Get the job; step5: Work at the job; step6: earn extra money this summer; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->0","4->6","5->3","5->1"],"reference_code":"class EarnExtraMoneyThisSummer:\n\n    title = \"earn extra money this summer\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to earn extra money this summer\"\n\n    def step1(self):\n        return \"Go into stores and apply there\"\n\n    def step2(self):\n        return \"Apply for jobs online\"\n\n    def step3(self):\n        return \"Get an interview\"\n\n    def step4(self):\n        return \"Get the job\"\n\n    def step5(self):\n        return \"Work at the job\"\n\n    def step6(self):\n        return \"earn extra money this summer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EarnExtraMoneyThisSummer:\n\n    title = \"earn extra money this summer\"\n    steps = 7\n\n","reference_graph":{"title":"earn extra money this summer","num_steps":7,"schema":["step0: decided to earn extra money this summer","step1: Go into stores and apply there","step2: Apply for jobs online","step3: Get an interview","step4: Get the job","step5: Work at the job","step6: earn extra money this summer"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a snack","events":{"0":"Put the ingredients on the plate.","1":"Get a plate.","2":"Determine which snack to make.","3":"Open the refrigerator door.","4":"Pull ingredients out of the fridge.","5":"NONE","6":"make a snack"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":0.25,"2":2.0,"3":0.1666666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: Put the ingredients on the plate.; step1: Get a plate.; step2: Determine which snack to make.; step3: Open the refrigerator door.; step4: Pull ingredients out of the fridge.; step5: decided to make a snack; step6: make a snack","flatten_input_for_script_generation":"You want to make a snack. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step2 -> step1; step2 -> step3; step4 -> step0; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to make a snack; step1: Determine which snack to make.; step2: Open the refrigerator door.; step3: Pull ingredients out of the fridge.; step4: Put the ingredients on the plate.; step5: Get a plate.; step6: make a snack; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step1 -> step2; step5 -> step4; step4 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","2->3","3->4","4->0","5->2"],"reference_code":"class MakeASnack:\n\n    title = \"make a snack\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a snack\"\n\n    def step1(self):\n        return \"Determine which snack to make.\"\n\n    def step2(self):\n        return \"Open the refrigerator door.\"\n\n    def step3(self):\n        return \"Pull ingredients out of the fridge.\"\n\n    def step4(self):\n        return \"Put the ingredients on the plate.\"\n\n    def step5(self):\n        return \"Get a plate.\"\n\n    def step6(self):\n        return \"make a snack\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step4\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class MakeASnack:\n\n    title = \"make a snack\"\n    steps = 7\n\n","reference_graph":{"title":"make a snack","num_steps":7,"schema":["step0: decided to make a snack","step1: Determine which snack to make.","step2: Open the refrigerator door.","step3: Pull ingredients out of the fridge.","step4: Put the ingredients on the plate.","step5: Get a plate.","step6: make a snack"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step1 -> step2","step5 -> step4","step4 -> step6"]}}
{"scenario":"walk to work!","events":{"0":"plan the walk with enough time.","1":"put on comfortable shoes.","2":"dress in work attire.","3":"walk out of house.","4":"lock the door.","5":"NONE","6":"walk to work!"},"context":"NONE","minutes":360.0,"events_minutes":{"0":5.0,"1":0.6666666667,"2":1.0,"3":0.5,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: plan the walk with enough time.; step1: put on comfortable shoes.; step2: dress in work attire.; step3: walk out of house.; step4: lock the door.; step5: decided to walk to work!; step6: walk to work!","flatten_input_for_script_generation":"You want to walk to work!. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to walk to work!; step1: plan the walk with enough time.; step2: dress in work attire.; step3: put on comfortable shoes.; step4: walk out of house.; step5: lock the door.; step6: walk to work!; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->4","4->6","5->0"],"reference_code":"class WalkToWork:\n\n    title = \"walk to work!\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to walk to work!\"\n\n    def step1(self):\n        return \"plan the walk with enough time.\"\n\n    def step2(self):\n        return \"dress in work attire.\"\n\n    def step3(self):\n        return \"put on comfortable shoes.\"\n\n    def step4(self):\n        return \"walk out of house.\"\n\n    def step5(self):\n        return \"lock the door.\"\n\n    def step6(self):\n        return \"walk to work!\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToWork:\n\n    title = \"walk to work!\"\n    steps = 7\n\n","reference_graph":{"title":"walk to work!","num_steps":7,"schema":["step0: decided to walk to work!","step1: plan the walk with enough time.","step2: dress in work attire.","step3: put on comfortable shoes.","step4: walk out of house.","step5: lock the door.","step6: walk to work!"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch a TV show","events":{"0":"turn on TV","1":"check TV schedule","2":"get remote control","3":"find desired program","4":"tune to channel","5":"NONE","6":"watch a TV show"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.25,"3":2.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: turn on TV; step1: check TV schedule; step2: get remote control; step3: find desired program; step4: tune to channel; step5: decided to watch a TV show; step6: watch a TV show","flatten_input_for_script_generation":"You want to watch a TV show. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to watch a TV show; step1: check TV schedule; step2: find desired program; step3: get remote control; step4: turn on TV; step5: tune to channel; step6: watch a TV show; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->6","5->1"],"reference_code":"class WatchATvShow:\n\n    title = \"watch a TV show\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to watch a TV show\"\n\n    def step1(self):\n        return \"check TV schedule\"\n\n    def step2(self):\n        return \"find desired program\"\n\n    def step3(self):\n        return \"get remote control\"\n\n    def step4(self):\n        return \"turn on TV\"\n\n    def step5(self):\n        return \"tune to channel\"\n\n    def step6(self):\n        return \"watch a TV show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WatchATvShow:\n\n    title = \"watch a TV show\"\n    steps = 7\n\n","reference_graph":{"title":"watch a TV show","num_steps":7,"schema":["step0: decided to watch a TV show","step1: check TV schedule","step2: find desired program","step3: get remote control","step4: turn on TV","step5: tune to channel","step6: watch a TV show"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"try to use the edger","events":{"0":"get in the car","1":"go inside the store","2":"drive back home","3":"drive to the store","4":"purchase the edger","5":"NONE","6":"try to use the edger"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":5.0,"2":30.0,"3":30.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: go inside the store; step2: drive back home; step3: drive to the store; step4: purchase the edger; step5: decided to try to use the edger; step6: try to use the edger","flatten_input_for_script_generation":"You want to try to use the edger. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to try to use the edger; step1: get in the car; step2: drive to the store; step3: go inside the store; step4: purchase the edger; step5: drive back home; step6: try to use the edger; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->1","4->2","5->0"],"reference_code":"class TryToUseTheEdger:\n\n    title = \"try to use the edger\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to try to use the edger\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"go inside the store\"\n\n    def step4(self):\n        return \"purchase the edger\"\n\n    def step5(self):\n        return \"drive back home\"\n\n    def step6(self):\n        return \"try to use the edger\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TryToUseTheEdger:\n\n    title = \"try to use the edger\"\n    steps = 7\n\n","reference_graph":{"title":"try to use the edger","num_steps":7,"schema":["step0: decided to try to use the edger","step1: get in the car","step2: drive to the store","step3: go inside the store","step4: purchase the edger","step5: drive back home","step6: try to use the edger"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take art classes","events":{"0":"Look up the classes","1":"Decide what classes to take","2":"Go to the classes","3":"Make some great artwork","4":"Make sure to have supplies","5":"Listen to the teacher","6":"Find the classes and pay money","7":"NONE","8":"take art classes"},"context":"NONE","minutes":300.0,"events_minutes":{"0":30.0,"1":30.0,"2":30.0,"3":120.0,"4":30.0,"5":30.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: Look up the classes; step1: Decide what classes to take; step2: Go to the classes; step3: Make some great artwork; step4: Make sure to have supplies; step5: Listen to the teacher; step6: Find the classes and pay money; step7: decided to take art classes; step8: take art classes","flatten_input_for_script_generation":"You want to take art classes. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step6; step6 -> step4; step4 -> step2; step2 -> step5; step5 -> step3; step3 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to take art classes; step1: Look up the classes; step2: Decide what classes to take; step3: Find the classes and pay money; step4: Make sure to have supplies; step5: Go to the classes; step6: Listen to the teacher; step7: Make some great artwork; step8: take art classes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->6","2->5","3->8","4->2","5->3","6->4","7->0"],"reference_code":"class TakeArtClasses:\n\n    title = \"take art classes\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take art classes\"\n\n    def step1(self):\n        return \"Look up the classes\"\n\n    def step2(self):\n        return \"Decide what classes to take\"\n\n    def step3(self):\n        return \"Find the classes and pay money\"\n\n    def step4(self):\n        return \"Make sure to have supplies\"\n\n    def step5(self):\n        return \"Go to the classes\"\n\n    def step6(self):\n        return \"Listen to the teacher\"\n\n    def step7(self):\n        return \"Make some great artwork\"\n\n    def step8(self):\n        return \"take art classes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeArtClasses:\n\n    title = \"take art classes\"\n    steps = 9\n\n","reference_graph":{"title":"take art classes","num_steps":9,"schema":["step0: decided to take art classes","step1: Look up the classes","step2: Decide what classes to take","step3: Find the classes and pay money","step4: Make sure to have supplies","step5: Go to the classes","step6: Listen to the teacher","step7: Make some great artwork","step8: take art classes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"plant a garden","events":{"0":"Cover the holes with soil.","1":"Purchase gardening supplies.","2":"Water the soil.","3":"Fertilize the soil in the garden.","4":"Dig small holes.","5":"Plant seeds in the holes.","6":"NONE","7":"plant a garden"},"context":"NONE","minutes":240.0,"events_minutes":{"0":30.0,"1":60.0,"2":15.0,"3":60.0,"4":30.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: Cover the holes with soil.; step1: Purchase gardening supplies.; step2: Water the soil.; step3: Fertilize the soil in the garden.; step4: Dig small holes.; step5: Plant seeds in the holes.; step6: decided to plant a garden; step7: plant a garden","flatten_input_for_script_generation":"You want to plant a garden. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step3 -> step7; step4 -> step5; step5 -> step0; step0 -> step2; step0 -> step3; step2 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to plant a garden; step1: Purchase gardening supplies.; step2: Dig small holes.; step3: Plant seeds in the holes.; step4: Fertilize the soil in the garden.; step5: plant a garden; step6: Cover the holes with soil.; step7: Water the soil.; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step3 -> step6; step6 -> step7; step6 -> step4; step7 -> step5","gold_edges_for_prediction":["0->2","0->3","1->4","2->7","3->7","4->5","5->0","6->1"],"reference_code":"class PlantAGarden:\n\n    title = \"plant a garden\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to plant a garden\"\n\n    def step1(self):\n        return \"Purchase gardening supplies.\"\n\n    def step2(self):\n        return \"Dig small holes.\"\n\n    def step3(self):\n        return \"Plant seeds in the holes.\"\n\n    def step4(self):\n        return \"Fertilize the soil in the garden.\"\n\n    def step5(self):\n        return \"plant a garden\"\n\n    def step6(self):\n        return \"Cover the holes with soil.\"\n\n    def step7(self):\n        return \"Water the soil.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step3 -> step6\",\n            \"step6 -> step7\",\n            \"step6 -> step4\",\n            \"step7 -> step5\",\n        ]\n","input_prompt_code":"class PlantAGarden:\n\n    title = \"plant a garden\"\n    steps = 8\n\n","reference_graph":{"title":"plant a garden","num_steps":8,"schema":["step0: decided to plant a garden","step1: Purchase gardening supplies.","step2: Dig small holes.","step3: Plant seeds in the holes.","step4: Fertilize the soil in the garden.","step5: plant a garden","step6: Cover the holes with soil.","step7: Water the soil."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step3 -> step6","step6 -> step7","step6 -> step4","step7 -> step5"]}}
{"scenario":"submit some art for an upcoming art show","events":{"0":"Go to the art show.","1":"register the art at the front desk.","2":"Bring the art inside the show.","3":"Find an art show.","4":"Create a piece of art.","5":"NONE","6":"submit some art for an upcoming art show"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":60.0,"1":5.0,"2":5.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Go to the art show.; step1: register the art at the front desk.; step2: Bring the art inside the show.; step3: Find an art show.; step4: Create a piece of art.; step5: decided to submit some art for an upcoming art show; step6: submit some art for an upcoming art show","flatten_input_for_script_generation":"You want to submit some art for an upcoming art show. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to submit some art for an upcoming art show; step1: Create a piece of art.; step2: Find an art show.; step3: Go to the art show.; step4: Bring the art inside the show.; step5: register the art at the front desk.; step6: submit some art for an upcoming art show; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->0","4->3","5->4"],"reference_code":"class SubmitSomeArtForAnUpcomingArtShow:\n\n    title = \"submit some art for an upcoming art show\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to submit some art for an upcoming art show\"\n\n    def step1(self):\n        return \"Create a piece of art.\"\n\n    def step2(self):\n        return \"Find an art show.\"\n\n    def step3(self):\n        return \"Go to the art show.\"\n\n    def step4(self):\n        return \"Bring the art inside the show.\"\n\n    def step5(self):\n        return \"register the art at the front desk.\"\n\n    def step6(self):\n        return \"submit some art for an upcoming art show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SubmitSomeArtForAnUpcomingArtShow:\n\n    title = \"submit some art for an upcoming art show\"\n    steps = 7\n\n","reference_graph":{"title":"submit some art for an upcoming art show","num_steps":7,"schema":["step0: decided to submit some art for an upcoming art show","step1: Create a piece of art.","step2: Find an art show.","step3: Go to the art show.","step4: Bring the art inside the show.","step5: register the art at the front desk.","step6: submit some art for an upcoming art show"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the drive in","events":{"0":"walk to the car","1":"start the car again","2":"walk out of the house","3":"get dressed to go out","4":"pick up a date","5":"NONE","6":"go to the drive in"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":10.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: walk to the car; step1: start the car again; step2: walk out of the house; step3: get dressed to go out; step4: pick up a date; step5: decided to go to the drive in; step6: go to the drive in","flatten_input_for_script_generation":"You want to go to the drive in. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go to the drive in; step1: get dressed to go out; step2: walk out of the house; step3: walk to the car; step4: pick up a date; step5: start the car again; step6: go to the drive in; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class GoToTheDriveIn:\n\n    title = \"go to the drive in\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the drive in\"\n\n    def step1(self):\n        return \"get dressed to go out\"\n\n    def step2(self):\n        return \"walk out of the house\"\n\n    def step3(self):\n        return \"walk to the car\"\n\n    def step4(self):\n        return \"pick up a date\"\n\n    def step5(self):\n        return \"start the car again\"\n\n    def step6(self):\n        return \"go to the drive in\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheDriveIn:\n\n    title = \"go to the drive in\"\n    steps = 7\n\n","reference_graph":{"title":"go to the drive in","num_steps":7,"schema":["step0: decided to go to the drive in","step1: get dressed to go out","step2: walk out of the house","step3: walk to the car","step4: pick up a date","step5: start the car again","step6: go to the drive in"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"cross the river","events":{"0":"Continue stepping until reaching the riverbank.","1":"Find shallow water.","2":"Put left foot in the water.","3":"Move the other foot forward.","4":"Put right foot in the water.","5":"Find a solid spot to take another step.","6":"NONE","7":"cross the river"},"context":"NONE","minutes":3.0,"events_minutes":{"0":2.0,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: Continue stepping until reaching the riverbank.; step1: Find shallow water.; step2: Put left foot in the water.; step3: Move the other foot forward.; step4: Put right foot in the water.; step5: Find a solid spot to take another step.; step6: decided to cross the river; step7: cross the river","flatten_input_for_script_generation":"You want to cross the river. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step1 -> step2; step4 -> step3; step2 -> step3; step3 -> step5; step5 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to cross the river; step1: Find shallow water.; step2: Put right foot in the water.; step3: Put left foot in the water.; step4: Move the other foot forward.; step5: Find a solid spot to take another step.; step6: Continue stepping until reaching the riverbank.; step7: cross the river; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","1->2","2->3","3->5","4->3","5->0","6->1"],"reference_code":"class CrossTheRiver:\n\n    title = \"cross the river\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to cross the river\"\n\n    def step1(self):\n        return \"Find shallow water.\"\n\n    def step2(self):\n        return \"Put right foot in the water.\"\n\n    def step3(self):\n        return \"Put left foot in the water.\"\n\n    def step4(self):\n        return \"Move the other foot forward.\"\n\n    def step5(self):\n        return \"Find a solid spot to take another step.\"\n\n    def step6(self):\n        return \"Continue stepping until reaching the riverbank.\"\n\n    def step7(self):\n        return \"cross the river\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class CrossTheRiver:\n\n    title = \"cross the river\"\n    steps = 8\n\n","reference_graph":{"title":"cross the river","num_steps":8,"schema":["step0: decided to cross the river","step1: Find shallow water.","step2: Put right foot in the water.","step3: Put left foot in the water.","step4: Move the other foot forward.","step5: Find a solid spot to take another step.","step6: Continue stepping until reaching the riverbank.","step7: cross the river"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn how to box","events":{"0":"choose a boxing class","1":"order boxing equipment","2":"drive to the boxing class","3":"attend the boxing class","4":"look up boxing classes online","5":"NONE","6":"learn how to box"},"context":"NONE","minutes":180.0,"events_minutes":{"0":5.0,"1":5.0,"2":15.0,"3":120.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: choose a boxing class; step1: order boxing equipment; step2: drive to the boxing class; step3: attend the boxing class; step4: look up boxing classes online; step5: decided to learn how to box; step6: learn how to box","flatten_input_for_script_generation":"You want to learn how to box. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to learn how to box; step1: look up boxing classes online; step2: choose a boxing class; step3: order boxing equipment; step4: drive to the boxing class; step5: attend the boxing class; step6: learn how to box; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class LearnHowToBox:\n\n    title = \"learn how to box\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to box\"\n\n    def step1(self):\n        return \"look up boxing classes online\"\n\n    def step2(self):\n        return \"choose a boxing class\"\n\n    def step3(self):\n        return \"order boxing equipment\"\n\n    def step4(self):\n        return \"drive to the boxing class\"\n\n    def step5(self):\n        return \"attend the boxing class\"\n\n    def step6(self):\n        return \"learn how to box\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToBox:\n\n    title = \"learn how to box\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to box","num_steps":7,"schema":["step0: decided to learn how to box","step1: look up boxing classes online","step2: choose a boxing class","step3: order boxing equipment","step4: drive to the boxing class","step5: attend the boxing class","step6: learn how to box"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"eat crab legs for dinner","events":{"0":"enter the restaurant","1":"drive to seafood restaurant","2":"look up seafood resturaunt","3":"get in car","4":"order crab legs","5":"NONE","6":"eat crab legs for dinner"},"context":"NONE","minutes":45.0,"events_minutes":{"0":3.0,"1":20.0,"2":5.0,"3":3.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: enter the restaurant; step1: drive to seafood restaurant; step2: look up seafood resturaunt; step3: get in car; step4: order crab legs; step5: decided to eat crab legs for dinner; step6: eat crab legs for dinner","flatten_input_for_script_generation":"You want to eat crab legs for dinner. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to eat crab legs for dinner; step1: look up seafood resturaunt; step2: get in car; step3: drive to seafood restaurant; step4: enter the restaurant; step5: order crab legs; step6: eat crab legs for dinner; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class EatCrabLegsForDinner:\n\n    title = \"eat crab legs for dinner\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat crab legs for dinner\"\n\n    def step1(self):\n        return \"look up seafood resturaunt\"\n\n    def step2(self):\n        return \"get in car\"\n\n    def step3(self):\n        return \"drive to seafood restaurant\"\n\n    def step4(self):\n        return \"enter the restaurant\"\n\n    def step5(self):\n        return \"order crab legs\"\n\n    def step6(self):\n        return \"eat crab legs for dinner\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatCrabLegsForDinner:\n\n    title = \"eat crab legs for dinner\"\n    steps = 7\n\n","reference_graph":{"title":"eat crab legs for dinner","num_steps":7,"schema":["step0: decided to eat crab legs for dinner","step1: look up seafood resturaunt","step2: get in car","step3: drive to seafood restaurant","step4: enter the restaurant","step5: order crab legs","step6: eat crab legs for dinner"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the dentist","events":{"0":"Shower and dress for appointment.","1":"Drive to dentist office.","2":"Find nearby dentist.","3":"Make an appointment.","4":"Get in the car.","5":"NONE","6":"go to the dentist"},"context":"NONE","minutes":105.0,"events_minutes":{"0":60.0,"1":20.0,"2":15.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Shower and dress for appointment.; step1: Drive to dentist office.; step2: Find nearby dentist.; step3: Make an appointment.; step4: Get in the car.; step5: decided to go to the dentist; step6: go to the dentist","flatten_input_for_script_generation":"You want to go to the dentist. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go to the dentist; step1: Find nearby dentist.; step2: Make an appointment.; step3: Shower and dress for appointment.; step4: Get in the car.; step5: Drive to dentist office.; step6: go to the dentist; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class GoToTheDentist:\n\n    title = \"go to the dentist\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the dentist\"\n\n    def step1(self):\n        return \"Find nearby dentist.\"\n\n    def step2(self):\n        return \"Make an appointment.\"\n\n    def step3(self):\n        return \"Shower and dress for appointment.\"\n\n    def step4(self):\n        return \"Get in the car.\"\n\n    def step5(self):\n        return \"Drive to dentist office.\"\n\n    def step6(self):\n        return \"go to the dentist\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheDentist:\n\n    title = \"go to the dentist\"\n    steps = 7\n\n","reference_graph":{"title":"go to the dentist","num_steps":7,"schema":["step0: decided to go to the dentist","step1: Find nearby dentist.","step2: Make an appointment.","step3: Shower and dress for appointment.","step4: Get in the car.","step5: Drive to dentist office.","step6: go to the dentist"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to an overnight camp","events":{"0":"park the car","1":"walk to campground","2":"get in the car","3":"drive to the camp","4":"turn off car","5":"NONE","6":"go to an overnight camp"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":30.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: park the car; step1: walk to campground; step2: get in the car; step3: drive to the camp; step4: turn off car; step5: decided to go to an overnight camp; step6: go to an overnight camp","flatten_input_for_script_generation":"You want to go to an overnight camp. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to go to an overnight camp; step1: get in the car; step2: drive to the camp; step3: park the car; step4: turn off car; step5: walk to campground; step6: go to an overnight camp; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class GoToAnOvernightCamp:\n\n    title = \"go to an overnight camp\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to an overnight camp\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the camp\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"turn off car\"\n\n    def step5(self):\n        return \"walk to campground\"\n\n    def step6(self):\n        return \"go to an overnight camp\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToAnOvernightCamp:\n\n    title = \"go to an overnight camp\"\n    steps = 7\n\n","reference_graph":{"title":"go to an overnight camp","num_steps":7,"schema":["step0: decided to go to an overnight camp","step1: get in the car","step2: drive to the camp","step3: park the car","step4: turn off car","step5: walk to campground","step6: go to an overnight camp"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get away for a little while","events":{"0":"walk to door","1":"open the door outside","2":"stand up from desk","3":"walk outside of office","4":"walk down the hall","5":"NONE","6":"get away for a little while"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.3333333333,"1":0.3333333333,"2":0.5,"3":0.1666666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to door; step1: open the door outside; step2: stand up from desk; step3: walk outside of office; step4: walk down the hall; step5: decided to get away for a little while; step6: get away for a little while","flatten_input_for_script_generation":"You want to get away for a little while. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get away for a little while; step1: stand up from desk; step2: walk to door; step3: walk outside of office; step4: walk down the hall; step5: open the door outside; step6: get away for a little while; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class GetAwayForALittleWhile:\n\n    title = \"get away for a little while\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get away for a little while\"\n\n    def step1(self):\n        return \"stand up from desk\"\n\n    def step2(self):\n        return \"walk to door\"\n\n    def step3(self):\n        return \"walk outside of office\"\n\n    def step4(self):\n        return \"walk down the hall\"\n\n    def step5(self):\n        return \"open the door outside\"\n\n    def step6(self):\n        return \"get away for a little while\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAwayForALittleWhile:\n\n    title = \"get away for a little while\"\n    steps = 7\n\n","reference_graph":{"title":"get away for a little while","num_steps":7,"schema":["step0: decided to get away for a little while","step1: stand up from desk","step2: walk to door","step3: walk outside of office","step4: walk down the hall","step5: open the door outside","step6: get away for a little while"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy a new book","events":{"0":"choose a particular book","1":"read samples of books","2":"order the book","3":"find the lowest price of the book","4":"research books online","5":"NONE","6":"buy a new book"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":15.0,"2":1.0,"3":5.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: choose a particular book; step1: read samples of books; step2: order the book; step3: find the lowest price of the book; step4: research books online; step5: decided to buy a new book; step6: buy a new book","flatten_input_for_script_generation":"You want to buy a new book. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to buy a new book; step1: research books online; step2: read samples of books; step3: choose a particular book; step4: find the lowest price of the book; step5: order the book; step6: buy a new book; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->4"],"reference_code":"class BuyANewBook:\n\n    title = \"buy a new book\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new book\"\n\n    def step1(self):\n        return \"research books online\"\n\n    def step2(self):\n        return \"read samples of books\"\n\n    def step3(self):\n        return \"choose a particular book\"\n\n    def step4(self):\n        return \"find the lowest price of the book\"\n\n    def step5(self):\n        return \"order the book\"\n\n    def step6(self):\n        return \"buy a new book\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewBook:\n\n    title = \"buy a new book\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new book","num_steps":7,"schema":["step0: decided to buy a new book","step1: research books online","step2: read samples of books","step3: choose a particular book","step4: find the lowest price of the book","step5: order the book","step6: buy a new book"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn how to draw flowers","events":{"0":"navigate to flower tutorial","1":"follow tutorial instructions","2":"turn on computer","3":"turn on flower drawing tutorial","4":"gather drawing supplies","5":"NONE","6":"learn how to draw flowers"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":5.0,"1":20.0,"2":1.0,"3":0.5,"4":30.0},"flatten_input_for_edge_prediction":"step0: navigate to flower tutorial; step1: follow tutorial instructions; step2: turn on computer; step3: turn on flower drawing tutorial; step4: gather drawing supplies; step5: decided to learn how to draw flowers; step6: learn how to draw flowers","flatten_input_for_script_generation":"You want to learn how to draw flowers. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn how to draw flowers; step1: turn on computer; step2: gather drawing supplies; step3: follow tutorial instructions; step4: learn how to draw flowers; step5: navigate to flower tutorial; step6: turn on flower drawing tutorial; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->1","5->4","5->2"],"reference_code":"class LearnHowToDrawFlowers:\n\n    title = \"learn how to draw flowers\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to draw flowers\"\n\n    def step1(self):\n        return \"turn on computer\"\n\n    def step2(self):\n        return \"gather drawing supplies\"\n\n    def step3(self):\n        return \"follow tutorial instructions\"\n\n    def step4(self):\n        return \"learn how to draw flowers\"\n\n    def step5(self):\n        return \"navigate to flower tutorial\"\n\n    def step6(self):\n        return \"turn on flower drawing tutorial\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class LearnHowToDrawFlowers:\n\n    title = \"learn how to draw flowers\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to draw flowers","num_steps":7,"schema":["step0: decided to learn how to draw flowers","step1: turn on computer","step2: gather drawing supplies","step3: follow tutorial instructions","step4: learn how to draw flowers","step5: navigate to flower tutorial","step6: turn on flower drawing tutorial"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"buy a nice ring","events":{"0":"go inside store","1":"get inside car","2":"insert proper GPS instructions","3":"drive to the ring store","4":"go to ring section","5":"NONE","6":"buy a nice ring"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":5.0,"2":5.0,"3":30.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: go inside store; step1: get inside car; step2: insert proper GPS instructions; step3: drive to the ring store; step4: go to ring section; step5: decided to buy a nice ring; step6: buy a nice ring","flatten_input_for_script_generation":"You want to buy a nice ring. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to buy a nice ring; step1: get inside car; step2: insert proper GPS instructions; step3: drive to the ring store; step4: go inside store; step5: go to ring section; step6: buy a nice ring; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->0","4->6","5->1"],"reference_code":"class BuyANiceRing:\n\n    title = \"buy a nice ring\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a nice ring\"\n\n    def step1(self):\n        return \"get inside car\"\n\n    def step2(self):\n        return \"insert proper GPS instructions\"\n\n    def step3(self):\n        return \"drive to the ring store\"\n\n    def step4(self):\n        return \"go inside store\"\n\n    def step5(self):\n        return \"go to ring section\"\n\n    def step6(self):\n        return \"buy a nice ring\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANiceRing:\n\n    title = \"buy a nice ring\"\n    steps = 7\n\n","reference_graph":{"title":"buy a nice ring","num_steps":7,"schema":["step0: decided to buy a nice ring","step1: get inside car","step2: insert proper GPS instructions","step3: drive to the ring store","step4: go inside store","step5: go to ring section","step6: buy a nice ring"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"lose 40 pounds before summer","events":{"0":"attend liposuction consultation","1":"check in for surgery","2":"schedule liposuction date","3":"drive to hospital","4":"prep for liposuction surgery","5":"setup consultation with surgeon","6":"call plastic surgeon's office","7":"NONE","8":"lose 40 pounds before summer"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":60.0,"1":15.0,"2":15.0,"3":15.0,"4":1440.0,"5":10.0,"6":2.0},"flatten_input_for_edge_prediction":"step0: attend liposuction consultation; step1: check in for surgery; step2: schedule liposuction date; step3: drive to hospital; step4: prep for liposuction surgery; step5: setup consultation with surgeon; step6: call plastic surgeon's office; step7: decided to lose 40 pounds before summer; step8: lose 40 pounds before summer","flatten_input_for_script_generation":"You want to lose 40 pounds before summer. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step5; step5 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to lose 40 pounds before summer; step1: call plastic surgeon's office; step2: setup consultation with surgeon; step3: attend liposuction consultation; step4: schedule liposuction date; step5: prep for liposuction surgery; step6: drive to hospital; step7: check in for surgery; step8: lose 40 pounds before summer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->8","2->4","3->1","4->3","5->0","6->5","7->6"],"reference_code":"class Lose40PoundsBeforeSummer:\n\n    title = \"lose 40 pounds before summer\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to lose 40 pounds before summer\"\n\n    def step1(self):\n        return \"call plastic surgeon's office\"\n\n    def step2(self):\n        return \"setup consultation with surgeon\"\n\n    def step3(self):\n        return \"attend liposuction consultation\"\n\n    def step4(self):\n        return \"schedule liposuction date\"\n\n    def step5(self):\n        return \"prep for liposuction surgery\"\n\n    def step6(self):\n        return \"drive to hospital\"\n\n    def step7(self):\n        return \"check in for surgery\"\n\n    def step8(self):\n        return \"lose 40 pounds before summer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class Lose40PoundsBeforeSummer:\n\n    title = \"lose 40 pounds before summer\"\n    steps = 9\n\n","reference_graph":{"title":"lose 40 pounds before summer","num_steps":9,"schema":["step0: decided to lose 40 pounds before summer","step1: call plastic surgeon's office","step2: setup consultation with surgeon","step3: attend liposuction consultation","step4: schedule liposuction date","step5: prep for liposuction surgery","step6: drive to hospital","step7: check in for surgery","step8: lose 40 pounds before summer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"start on Varsity","events":{"0":"Receive varsity spot from coach","1":"Perform well in pre-season game","2":"Show improved skills at training camp","3":"Head onto the field at the first varsity game","4":"Play the season on JV","5":"Train skills all summer long","6":"Confess commitment to coach","7":"NONE","8":"start on Varsity"},"context":"NONE","minutes":1051200.0,"events_minutes":{"0":60.0,"1":180.0,"2":4320.0,"3":5.0,"4":525600.0,"5":129600.0,"6":60.0},"flatten_input_for_edge_prediction":"step0: Receive varsity spot from coach; step1: Perform well in pre-season game; step2: Show improved skills at training camp; step3: Head onto the field at the first varsity game; step4: Play the season on JV; step5: Train skills all summer long; step6: Confess commitment to coach; step7: decided to start on Varsity; step8: start on Varsity","flatten_input_for_script_generation":"You want to start on Varsity. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step4 -> step6; step5 -> step2; step2 -> step1; step6 -> step0; step1 -> step0; step0 -> step3; step3 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to start on Varsity; step1: Play the season on JV; step2: Train skills all summer long; step3: Confess commitment to coach; step4: Show improved skills at training camp; step5: Receive varsity spot from coach; step6: Perform well in pre-season game; step7: Head onto the field at the first varsity game; step8: start on Varsity; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->0","2->1","3->8","4->5","4->6","5->2","6->0","7->4"],"reference_code":"class StartOnVarsity:\n\n    title = \"start on Varsity\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to start on Varsity\"\n\n    def step1(self):\n        return \"Play the season on JV\"\n\n    def step2(self):\n        return \"Train skills all summer long\"\n\n    def step3(self):\n        return \"Confess commitment to coach\"\n\n    def step4(self):\n        return \"Show improved skills at training camp\"\n\n    def step5(self):\n        return \"Receive varsity spot from coach\"\n\n    def step6(self):\n        return \"Perform well in pre-season game\"\n\n    def step7(self):\n        return \"Head onto the field at the first varsity game\"\n\n    def step8(self):\n        return \"start on Varsity\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class StartOnVarsity:\n\n    title = \"start on Varsity\"\n    steps = 9\n\n","reference_graph":{"title":"start on Varsity","num_steps":9,"schema":["step0: decided to start on Varsity","step1: Play the season on JV","step2: Train skills all summer long","step3: Confess commitment to coach","step4: Show improved skills at training camp","step5: Receive varsity spot from coach","step6: Perform well in pre-season game","step7: Head onto the field at the first varsity game","step8: start on Varsity"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5","step5 -> step7","step7 -> step8"]}}
{"scenario":"learn how to rollerblade","events":{"0":"Rent a pair of roller blades","1":"Wait for lessons to start","2":"Walk to bus stop","3":"Follow teacher's instructions","4":"Sign up for roller blade lessons","5":"Take bus to roller skating rink","6":"Wait for bus to arrive","7":"NONE","8":"learn how to rollerblade"},"context":"NONE","minutes":240.0,"events_minutes":{"0":5.0,"1":60.0,"2":10.0,"3":60.0,"4":5.0,"5":20.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: Rent a pair of roller blades; step1: Wait for lessons to start; step2: Walk to bus stop; step3: Follow teacher's instructions; step4: Sign up for roller blade lessons; step5: Take bus to roller skating rink; step6: Wait for bus to arrive; step7: decided to learn how to rollerblade; step8: learn how to rollerblade","flatten_input_for_script_generation":"You want to learn how to rollerblade. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step6 -> step5; step5 -> step4; step5 -> step0; step4 -> step1; step0 -> step3; step1 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to learn how to rollerblade; step1: Walk to bus stop; step2: Wait for bus to arrive; step3: Take bus to roller skating rink; step4: Sign up for roller blade lessons; step5: Rent a pair of roller blades; step6: Wait for lessons to start; step7: Follow teacher's instructions; step8: learn how to rollerblade; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->3","2->6","3->8","4->1","5->4","5->0","6->5","7->2"],"reference_code":"class LearnHowToRollerblade:\n\n    title = \"learn how to rollerblade\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to learn how to rollerblade\"\n\n    def step1(self):\n        return \"Walk to bus stop\"\n\n    def step2(self):\n        return \"Wait for bus to arrive\"\n\n    def step3(self):\n        return \"Take bus to roller skating rink\"\n\n    def step4(self):\n        return \"Sign up for roller blade lessons\"\n\n    def step5(self):\n        return \"Rent a pair of roller blades\"\n\n    def step6(self):\n        return \"Wait for lessons to start\"\n\n    def step7(self):\n        return \"Follow teacher's instructions\"\n\n    def step8(self):\n        return \"learn how to rollerblade\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LearnHowToRollerblade:\n\n    title = \"learn how to rollerblade\"\n    steps = 9\n\n","reference_graph":{"title":"learn how to rollerblade","num_steps":9,"schema":["step0: decided to learn how to rollerblade","step1: Walk to bus stop","step2: Wait for bus to arrive","step3: Take bus to roller skating rink","step4: Sign up for roller blade lessons","step5: Rent a pair of roller blades","step6: Wait for lessons to start","step7: Follow teacher's instructions","step8: learn how to rollerblade"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"audition for the local singing competition","events":{"0":"look up local competitions","1":"schedule appointments with the coach","2":"look online for singing coach","3":"apply online for the competitions","4":"practice singing for hours a day","5":"NONE","6":"audition for the local singing competition"},"context":"NONE","minutes":86400.0,"events_minutes":{"0":30.0,"1":15.0,"2":30.0,"3":30.0,"4":86400.0},"flatten_input_for_edge_prediction":"step0: look up local competitions; step1: schedule appointments with the coach; step2: look online for singing coach; step3: apply online for the competitions; step4: practice singing for hours a day; step5: decided to audition for the local singing competition; step6: audition for the local singing competition","flatten_input_for_script_generation":"You want to audition for the local singing competition. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to audition for the local singing competition; step1: look online for singing coach; step2: schedule appointments with the coach; step3: practice singing for hours a day; step4: look up local competitions; step5: apply online for the competitions; step6: audition for the local singing competition; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->6","4->0","5->2"],"reference_code":"class AuditionForTheLocalSingingCompetition:\n\n    title = \"audition for the local singing competition\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to audition for the local singing competition\"\n\n    def step1(self):\n        return \"look online for singing coach\"\n\n    def step2(self):\n        return \"schedule appointments with the coach\"\n\n    def step3(self):\n        return \"practice singing for hours a day\"\n\n    def step4(self):\n        return \"look up local competitions\"\n\n    def step5(self):\n        return \"apply online for the competitions\"\n\n    def step6(self):\n        return \"audition for the local singing competition\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AuditionForTheLocalSingingCompetition:\n\n    title = \"audition for the local singing competition\"\n    steps = 7\n\n","reference_graph":{"title":"audition for the local singing competition","num_steps":7,"schema":["step0: decided to audition for the local singing competition","step1: look online for singing coach","step2: schedule appointments with the coach","step3: practice singing for hours a day","step4: look up local competitions","step5: apply online for the competitions","step6: audition for the local singing competition"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run twenty miles after work","events":{"0":"Take off work clothes.","1":"Leave house and run 20 miles.","2":"Get out of car and go inside house.","3":"Drive home from work.","4":"Put on left running shoe.","5":"Put on running shorts and shirt.","6":"Put on right running shoe.","7":"NONE","8":"run twenty miles after work"},"context":"NONE","minutes":300.0,"events_minutes":{"0":3.0,"1":240.0,"2":5.0,"3":15.0,"4":0.5,"5":3.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: Take off work clothes.; step1: Leave house and run 20 miles.; step2: Get out of car and go inside house.; step3: Drive home from work.; step4: Put on left running shoe.; step5: Put on running shorts and shirt.; step6: Put on right running shoe.; step7: decided to run twenty miles after work; step8: run twenty miles after work","flatten_input_for_script_generation":"You want to run twenty miles after work. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step5; step5 -> step4; step5 -> step6; step4 -> step1; step6 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to run twenty miles after work; step1: Drive home from work.; step2: Get out of car and go inside house.; step3: Take off work clothes.; step4: Put on running shorts and shirt.; step5: Put on left running shoe.; step6: Put on right running shoe.; step7: Leave house and run 20 miles.; step8: run twenty miles after work; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->8","2->0","3->2","4->1","5->4","5->6","6->1","7->3"],"reference_code":"class RunTwentyMilesAfterWork:\n\n    title = \"run twenty miles after work\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to run twenty miles after work\"\n\n    def step1(self):\n        return \"Drive home from work.\"\n\n    def step2(self):\n        return \"Get out of car and go inside house.\"\n\n    def step3(self):\n        return \"Take off work clothes.\"\n\n    def step4(self):\n        return \"Put on running shorts and shirt.\"\n\n    def step5(self):\n        return \"Put on left running shoe.\"\n\n    def step6(self):\n        return \"Put on right running shoe.\"\n\n    def step7(self):\n        return \"Leave house and run 20 miles.\"\n\n    def step8(self):\n        return \"run twenty miles after work\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class RunTwentyMilesAfterWork:\n\n    title = \"run twenty miles after work\"\n    steps = 9\n\n","reference_graph":{"title":"run twenty miles after work","num_steps":9,"schema":["step0: decided to run twenty miles after work","step1: Drive home from work.","step2: Get out of car and go inside house.","step3: Take off work clothes.","step4: Put on running shorts and shirt.","step5: Put on left running shoe.","step6: Put on right running shoe.","step7: Leave house and run 20 miles.","step8: run twenty miles after work"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"eat some leftovers","events":{"0":"walk to the counter","1":"open the fridge","2":"search for leftovers","3":"walk to the fridge","4":"walk into the kitchen","5":"take out leftovers","6":"NONE","7":"eat some leftovers"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.5,"1":0.1666666667,"2":1.0,"3":0.3333333333,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: walk to the counter; step1: open the fridge; step2: search for leftovers; step3: walk to the fridge; step4: walk into the kitchen; step5: take out leftovers; step6: decided to eat some leftovers; step7: eat some leftovers","flatten_input_for_script_generation":"You want to eat some leftovers. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step5; step5 -> step0; step0 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to eat some leftovers; step1: walk into the kitchen; step2: walk to the fridge; step3: open the fridge; step4: search for leftovers; step5: take out leftovers; step6: walk to the counter; step7: eat some leftovers; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->2","2->5","3->1","4->3","5->0","6->4"],"reference_code":"class EatSomeLeftovers:\n\n    title = \"eat some leftovers\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to eat some leftovers\"\n\n    def step1(self):\n        return \"walk into the kitchen\"\n\n    def step2(self):\n        return \"walk to the fridge\"\n\n    def step3(self):\n        return \"open the fridge\"\n\n    def step4(self):\n        return \"search for leftovers\"\n\n    def step5(self):\n        return \"take out leftovers\"\n\n    def step6(self):\n        return \"walk to the counter\"\n\n    def step7(self):\n        return \"eat some leftovers\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EatSomeLeftovers:\n\n    title = \"eat some leftovers\"\n    steps = 8\n\n","reference_graph":{"title":"eat some leftovers","num_steps":8,"schema":["step0: decided to eat some leftovers","step1: walk into the kitchen","step2: walk to the fridge","step3: open the fridge","step4: search for leftovers","step5: take out leftovers","step6: walk to the counter","step7: eat some leftovers"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to the grocery store before getting lunch","events":{"0":"Walk through entrance of grocery store.","1":"Walk out of house before lunchtime.","2":"Park car and get out.","3":"Turn car on and drive to store.","4":"Get into car.","5":"NONE","6":"go to the grocery store before getting lunch"},"context":"NONE","minutes":45.0,"events_minutes":{"0":3.0,"1":3.0,"2":5.0,"3":15.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Walk through entrance of grocery store.; step1: Walk out of house before lunchtime.; step2: Park car and get out.; step3: Turn car on and drive to store.; step4: Get into car.; step5: decided to go to the grocery store before getting lunch; step6: go to the grocery store before getting lunch","flatten_input_for_script_generation":"You want to go to the grocery store before getting lunch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go to the grocery store before getting lunch; step1: Walk out of house before lunchtime.; step2: Get into car.; step3: Turn car on and drive to store.; step4: Park car and get out.; step5: Walk through entrance of grocery store.; step6: go to the grocery store before getting lunch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class GoToTheGroceryStoreBeforeGettingLunch:\n\n    title = \"go to the grocery store before getting lunch\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the grocery store before getting lunch\"\n\n    def step1(self):\n        return \"Walk out of house before lunchtime.\"\n\n    def step2(self):\n        return \"Get into car.\"\n\n    def step3(self):\n        return \"Turn car on and drive to store.\"\n\n    def step4(self):\n        return \"Park car and get out.\"\n\n    def step5(self):\n        return \"Walk through entrance of grocery store.\"\n\n    def step6(self):\n        return \"go to the grocery store before getting lunch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheGroceryStoreBeforeGettingLunch:\n\n    title = \"go to the grocery store before getting lunch\"\n    steps = 7\n\n","reference_graph":{"title":"go to the grocery store before getting lunch","num_steps":7,"schema":["step0: decided to go to the grocery store before getting lunch","step1: Walk out of house before lunchtime.","step2: Get into car.","step3: Turn car on and drive to store.","step4: Park car and get out.","step5: Walk through entrance of grocery store.","step6: go to the grocery store before getting lunch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"explore a dangerous part of town","events":{"0":"Head to the wrong side of the tracks.","1":"Leave the house.","2":"Cross over to the wrong side of the tracks.","3":"Put phone in pocket in case of emergency.","4":"Explore the dangerous areas.","5":"NONE","6":"explore a dangerous part of town"},"context":"NONE","minutes":60.0,"events_minutes":{"0":10.0,"1":1.0,"2":1.0,"3":1.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Head to the wrong side of the tracks.; step1: Leave the house.; step2: Cross over to the wrong side of the tracks.; step3: Put phone in pocket in case of emergency.; step4: Explore the dangerous areas.; step5: decided to explore a dangerous part of town; step6: explore a dangerous part of town","flatten_input_for_script_generation":"You want to explore a dangerous part of town. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to explore a dangerous part of town; step1: Put phone in pocket in case of emergency.; step2: Leave the house.; step3: Head to the wrong side of the tracks.; step4: Cross over to the wrong side of the tracks.; step5: Explore the dangerous areas.; step6: explore a dangerous part of town; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class ExploreADangerousPartOfTown:\n\n    title = \"explore a dangerous part of town\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to explore a dangerous part of town\"\n\n    def step1(self):\n        return \"Put phone in pocket in case of emergency.\"\n\n    def step2(self):\n        return \"Leave the house.\"\n\n    def step3(self):\n        return \"Head to the wrong side of the tracks.\"\n\n    def step4(self):\n        return \"Cross over to the wrong side of the tracks.\"\n\n    def step5(self):\n        return \"Explore the dangerous areas.\"\n\n    def step6(self):\n        return \"explore a dangerous part of town\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ExploreADangerousPartOfTown:\n\n    title = \"explore a dangerous part of town\"\n    steps = 7\n\n","reference_graph":{"title":"explore a dangerous part of town","num_steps":7,"schema":["step0: decided to explore a dangerous part of town","step1: Put phone in pocket in case of emergency.","step2: Leave the house.","step3: Head to the wrong side of the tracks.","step4: Cross over to the wrong side of the tracks.","step5: Explore the dangerous areas.","step6: explore a dangerous part of town"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the olympics for running","events":{"0":"Be the best runner on the team.","1":"Be recognized by a scout.","2":"become part of the Olympic team","3":"practice for the Olympics.","4":"Make the track team.","5":"NONE","6":"go to the olympics for running"},"context":"NONE","minutes":1576800.0,"events_minutes":{"0":259200.0,"1":60.0,"2":259200.0,"3":1051200.0,"4":120.0},"flatten_input_for_edge_prediction":"step0: Be the best runner on the team.; step1: Be recognized by a scout.; step2: become part of the Olympic team; step3: practice for the Olympics.; step4: Make the track team.; step5: decided to go to the olympics for running; step6: go to the olympics for running","flatten_input_for_script_generation":"You want to go to the olympics for running. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step1; step0 -> step2; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to the olympics for running; step1: Make the track team.; step2: Be the best runner on the team.; step3: Be recognized by a scout.; step4: become part of the Olympic team; step5: practice for the Olympics.; step6: go to the olympics for running; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->3","3->6","4->0","4->1","5->4"],"reference_code":"class GoToTheOlympicsForRunning:\n\n    title = \"go to the olympics for running\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the olympics for running\"\n\n    def step1(self):\n        return \"Make the track team.\"\n\n    def step2(self):\n        return \"Be the best runner on the team.\"\n\n    def step3(self):\n        return \"Be recognized by a scout.\"\n\n    def step4(self):\n        return \"become part of the Olympic team\"\n\n    def step5(self):\n        return \"practice for the Olympics.\"\n\n    def step6(self):\n        return \"go to the olympics for running\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheOlympicsForRunning:\n\n    title = \"go to the olympics for running\"\n    steps = 7\n\n","reference_graph":{"title":"go to the olympics for running","num_steps":7,"schema":["step0: decided to go to the olympics for running","step1: Make the track team.","step2: Be the best runner on the team.","step3: Be recognized by a scout.","step4: become part of the Olympic team","step5: practice for the Olympics.","step6: go to the olympics for running"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"earn some money","events":{"0":"Highlight want ads.","1":"Look through the paper.","2":"Go in for interviews.","3":"Fill out applications.","4":"Get a paycheck.","5":"Get hired at a job.","6":"NONE","7":"earn some money"},"context":"NONE","minutes":20160.0,"events_minutes":{"0":1.0,"1":60.0,"2":60.0,"3":1.0,"4":60.0,"5":60.0},"flatten_input_for_edge_prediction":"step0: Highlight want ads.; step1: Look through the paper.; step2: Go in for interviews.; step3: Fill out applications.; step4: Get a paycheck.; step5: Get hired at a job.; step6: decided to earn some money; step7: earn some money","flatten_input_for_script_generation":"You want to earn some money. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step5; step5 -> step4; step4 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to earn some money; step1: Look through the paper.; step2: Highlight want ads.; step3: Fill out applications.; step4: Go in for interviews.; step5: Get hired at a job.; step6: Get a paycheck.; step7: earn some money; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->0","2->5","3->2","4->7","5->4","6->1"],"reference_code":"class EarnSomeMoney:\n\n    title = \"earn some money\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to earn some money\"\n\n    def step1(self):\n        return \"Look through the paper.\"\n\n    def step2(self):\n        return \"Highlight want ads.\"\n\n    def step3(self):\n        return \"Fill out applications.\"\n\n    def step4(self):\n        return \"Go in for interviews.\"\n\n    def step5(self):\n        return \"Get hired at a job.\"\n\n    def step6(self):\n        return \"Get a paycheck.\"\n\n    def step7(self):\n        return \"earn some money\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EarnSomeMoney:\n\n    title = \"earn some money\"\n    steps = 8\n\n","reference_graph":{"title":"earn some money","num_steps":8,"schema":["step0: decided to earn some money","step1: Look through the paper.","step2: Highlight want ads.","step3: Fill out applications.","step4: Go in for interviews.","step5: Get hired at a job.","step6: Get a paycheck.","step7: earn some money"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"learn the saxophone","events":{"0":"schedule lessons with teacher","1":"attend weekly lessons","2":"find a saxophone teacher","3":"buy a saxophone","4":"practice every week","5":"NONE","6":"learn the saxophone"},"context":"NONE","minutes":525600.0,"events_minutes":{"0":21000.0,"1":3120.0,"2":30.0,"3":120.0,"4":21000.0},"flatten_input_for_edge_prediction":"step0: schedule lessons with teacher; step1: attend weekly lessons; step2: find a saxophone teacher; step3: buy a saxophone; step4: practice every week; step5: decided to learn the saxophone; step6: learn the saxophone","flatten_input_for_script_generation":"You want to learn the saxophone. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to learn the saxophone; step1: buy a saxophone; step2: find a saxophone teacher; step3: schedule lessons with teacher; step4: attend weekly lessons; step5: practice every week; step6: learn the saxophone; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class LearnTheSaxophone:\n\n    title = \"learn the saxophone\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn the saxophone\"\n\n    def step1(self):\n        return \"buy a saxophone\"\n\n    def step2(self):\n        return \"find a saxophone teacher\"\n\n    def step3(self):\n        return \"schedule lessons with teacher\"\n\n    def step4(self):\n        return \"attend weekly lessons\"\n\n    def step5(self):\n        return \"practice every week\"\n\n    def step6(self):\n        return \"learn the saxophone\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnTheSaxophone:\n\n    title = \"learn the saxophone\"\n    steps = 7\n\n","reference_graph":{"title":"learn the saxophone","num_steps":7,"schema":["step0: decided to learn the saxophone","step1: buy a saxophone","step2: find a saxophone teacher","step3: schedule lessons with teacher","step4: attend weekly lessons","step5: practice every week","step6: learn the saxophone"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"save money on plant milk","events":{"0":"drive to the grocery store","1":"sign up for the rewards program","2":"go to checkout","3":"get a discount at checkout","4":"look for plant milk","5":"walk into the grocery store","6":"NONE","7":"save money on plant milk"},"context":"NONE","minutes":50.0,"events_minutes":{"0":15.0,"1":5.0,"2":5.0,"3":3.0,"4":15.0,"5":3.0},"flatten_input_for_edge_prediction":"step0: drive to the grocery store; step1: sign up for the rewards program; step2: go to checkout; step3: get a discount at checkout; step4: look for plant milk; step5: walk into the grocery store; step6: decided to save money on plant milk; step7: save money on plant milk","flatten_input_for_script_generation":"You want to save money on plant milk. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step4; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to save money on plant milk; step1: drive to the grocery store; step2: walk into the grocery store; step3: look for plant milk; step4: go to checkout; step5: sign up for the rewards program; step6: get a discount at checkout; step7: save money on plant milk; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->1","3->7","4->2","5->4","6->0"],"reference_code":"class SaveMoneyOnPlantMilk:\n\n    title = \"save money on plant milk\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to save money on plant milk\"\n\n    def step1(self):\n        return \"drive to the grocery store\"\n\n    def step2(self):\n        return \"walk into the grocery store\"\n\n    def step3(self):\n        return \"look for plant milk\"\n\n    def step4(self):\n        return \"go to checkout\"\n\n    def step5(self):\n        return \"sign up for the rewards program\"\n\n    def step6(self):\n        return \"get a discount at checkout\"\n\n    def step7(self):\n        return \"save money on plant milk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SaveMoneyOnPlantMilk:\n\n    title = \"save money on plant milk\"\n    steps = 8\n\n","reference_graph":{"title":"save money on plant milk","num_steps":8,"schema":["step0: decided to save money on plant milk","step1: drive to the grocery store","step2: walk into the grocery store","step3: look for plant milk","step4: go to checkout","step5: sign up for the rewards program","step6: get a discount at checkout","step7: save money on plant milk"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to a doctor's appointment","events":{"0":"Prepare for the appointment","1":"Note down the date and time of appointment","2":"Schedule for the appointment","3":"Call the doctor's office","4":"Check for available appointments","5":"NONE","6":"go to a doctor's appointment"},"context":"NONE","minutes":20.0,"events_minutes":{"0":10.0,"1":2.0,"2":4.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Prepare for the appointment; step1: Note down the date and time of appointment; step2: Schedule for the appointment; step3: Call the doctor's office; step4: Check for available appointments; step5: decided to go to a doctor's appointment; step6: go to a doctor's appointment","flatten_input_for_script_generation":"You want to go to a doctor's appointment. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to go to a doctor's appointment; step1: Call the doctor's office; step2: Check for available appointments; step3: Schedule for the appointment; step4: Note down the date and time of appointment; step5: Prepare for the appointment; step6: go to a doctor's appointment; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->4","4->2","5->3"],"reference_code":"class GoToADoctorsAppointment:\n\n    title = \"go to a doctor's appointment\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to a doctor's appointment\"\n\n    def step1(self):\n        return \"Call the doctor's office\"\n\n    def step2(self):\n        return \"Check for available appointments\"\n\n    def step3(self):\n        return \"Schedule for the appointment\"\n\n    def step4(self):\n        return \"Note down the date and time of appointment\"\n\n    def step5(self):\n        return \"Prepare for the appointment\"\n\n    def step6(self):\n        return \"go to a doctor's appointment\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToADoctorsAppointment:\n\n    title = \"go to a doctor's appointment\"\n    steps = 7\n\n","reference_graph":{"title":"go to a doctor's appointment","num_steps":7,"schema":["step0: decided to go to a doctor's appointment","step1: Call the doctor's office","step2: Check for available appointments","step3: Schedule for the appointment","step4: Note down the date and time of appointment","step5: Prepare for the appointment","step6: go to a doctor's appointment"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"earn a college degree","events":{"0":"ride to school","1":"go to class for two years","2":"get a parking pass","3":"sign up for classes","4":"walk to class","5":"go to orientation","6":"park the car","7":"NONE","8":"earn a college degree"},"context":"NONE","minutes":1051200.0,"events_minutes":{"0":10.0,"1":1051200.0,"2":10.0,"3":60.0,"4":5.0,"5":30.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: ride to school; step1: go to class for two years; step2: get a parking pass; step3: sign up for classes; step4: walk to class; step5: go to orientation; step6: park the car; step7: decided to earn a college degree; step8: earn a college degree","flatten_input_for_script_generation":"You want to earn a college degree. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step2; step2 -> step0; step0 -> step6; step6 -> step4; step4 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to earn a college degree; step1: sign up for classes; step2: go to orientation; step3: get a parking pass; step4: ride to school; step5: park the car; step6: walk to class; step7: go to class for two years; step8: earn a college degree; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->0","3->5","4->1","5->2","6->4","7->3"],"reference_code":"class EarnACollegeDegree:\n\n    title = \"earn a college degree\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to earn a college degree\"\n\n    def step1(self):\n        return \"sign up for classes\"\n\n    def step2(self):\n        return \"go to orientation\"\n\n    def step3(self):\n        return \"get a parking pass\"\n\n    def step4(self):\n        return \"ride to school\"\n\n    def step5(self):\n        return \"park the car\"\n\n    def step6(self):\n        return \"walk to class\"\n\n    def step7(self):\n        return \"go to class for two years\"\n\n    def step8(self):\n        return \"earn a college degree\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class EarnACollegeDegree:\n\n    title = \"earn a college degree\"\n    steps = 9\n\n","reference_graph":{"title":"earn a college degree","num_steps":9,"schema":["step0: decided to earn a college degree","step1: sign up for classes","step2: go to orientation","step3: get a parking pass","step4: ride to school","step5: park the car","step6: walk to class","step7: go to class for two years","step8: earn a college degree"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"learn a new sport","events":{"0":"Sit down at computer.","1":"Decide on which sport is of interest.","2":"search how-to videos on desired sport.","3":"go to youtube.com.","4":"Watch all highest rated videos.","5":"NONE","6":"learn a new sport"},"context":"NONE","minutes":180.0,"events_minutes":{"0":2.0,"1":10.0,"2":3.0,"3":1.0,"4":180.0},"flatten_input_for_edge_prediction":"step0: Sit down at computer.; step1: Decide on which sport is of interest.; step2: search how-to videos on desired sport.; step3: go to youtube.com.; step4: Watch all highest rated videos.; step5: decided to learn a new sport; step6: learn a new sport","flatten_input_for_script_generation":"You want to learn a new sport. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to learn a new sport; step1: Decide on which sport is of interest.; step2: Sit down at computer.; step3: go to youtube.com.; step4: search how-to videos on desired sport.; step5: Watch all highest rated videos.; step6: learn a new sport; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->2","4->6","5->1"],"reference_code":"class LearnANewSport:\n\n    title = \"learn a new sport\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn a new sport\"\n\n    def step1(self):\n        return \"Decide on which sport is of interest.\"\n\n    def step2(self):\n        return \"Sit down at computer.\"\n\n    def step3(self):\n        return \"go to youtube.com.\"\n\n    def step4(self):\n        return \"search how-to videos on desired sport.\"\n\n    def step5(self):\n        return \"Watch all highest rated videos.\"\n\n    def step6(self):\n        return \"learn a new sport\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnANewSport:\n\n    title = \"learn a new sport\"\n    steps = 7\n\n","reference_graph":{"title":"learn a new sport","num_steps":7,"schema":["step0: decided to learn a new sport","step1: Decide on which sport is of interest.","step2: Sit down at computer.","step3: go to youtube.com.","step4: search how-to videos on desired sport.","step5: Watch all highest rated videos.","step6: learn a new sport"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make the high school football team","events":{"0":"get the gear together","1":"read flyer for tryouts","2":"go to tryouts","3":"perform well at tryouts","4":"go home that night","5":"NONE","6":"make the high school football team"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":10.0,"1":5.0,"2":20.0,"3":60.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get the gear together; step1: read flyer for tryouts; step2: go to tryouts; step3: perform well at tryouts; step4: go home that night; step5: decided to make the high school football team; step6: make the high school football team","flatten_input_for_script_generation":"You want to make the high school football team. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to make the high school football team; step1: read flyer for tryouts; step2: go home that night; step3: get the gear together; step4: go to tryouts; step5: perform well at tryouts; step6: make the high school football team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class MakeTheHighSchoolFootballTeam:\n\n    title = \"make the high school football team\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make the high school football team\"\n\n    def step1(self):\n        return \"read flyer for tryouts\"\n\n    def step2(self):\n        return \"go home that night\"\n\n    def step3(self):\n        return \"get the gear together\"\n\n    def step4(self):\n        return \"go to tryouts\"\n\n    def step5(self):\n        return \"perform well at tryouts\"\n\n    def step6(self):\n        return \"make the high school football team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeTheHighSchoolFootballTeam:\n\n    title = \"make the high school football team\"\n    steps = 7\n\n","reference_graph":{"title":"make the high school football team","num_steps":7,"schema":["step0: decided to make the high school football team","step1: read flyer for tryouts","step2: go home that night","step3: get the gear together","step4: go to tryouts","step5: perform well at tryouts","step6: make the high school football team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"work for us","events":{"0":"make updates to  resume","1":"email resume and cover letter","2":"set interview time","3":"write cover letter","4":"do interview at company","5":"accept job offer","6":"NONE","7":"work for us"},"context":"NONE","minutes":240.0,"events_minutes":{"0":60.0,"1":5.0,"2":5.0,"3":30.0,"4":120.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: make updates to  resume; step1: email resume and cover letter; step2: set interview time; step3: write cover letter; step4: do interview at company; step5: accept job offer; step6: decided to work for us; step7: work for us","flatten_input_for_script_generation":"You want to work for us. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to work for us; step1: make updates to  resume; step2: write cover letter; step3: email resume and cover letter; step4: set interview time; step5: do interview at company; step6: accept job offer; step7: work for us; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->2","2->4","3->1","4->5","5->7","6->0"],"reference_code":"class WorkForUs:\n\n    title = \"work for us\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to work for us\"\n\n    def step1(self):\n        return \"make updates to  resume\"\n\n    def step2(self):\n        return \"write cover letter\"\n\n    def step3(self):\n        return \"email resume and cover letter\"\n\n    def step4(self):\n        return \"set interview time\"\n\n    def step5(self):\n        return \"do interview at company\"\n\n    def step6(self):\n        return \"accept job offer\"\n\n    def step7(self):\n        return \"work for us\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WorkForUs:\n\n    title = \"work for us\"\n    steps = 8\n\n","reference_graph":{"title":"work for us","num_steps":8,"schema":["step0: decided to work for us","step1: make updates to  resume","step2: write cover letter","step3: email resume and cover letter","step4: set interview time","step5: do interview at company","step6: accept job offer","step7: work for us"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go to Iceland","events":{"0":"Check in at the desk.","1":"Go through security line.","2":"Take a vehicle to the airport.","3":"Sit in the seat.","4":"Board the plane.","5":"Go to boarding area.","6":"Buy a plane ticket.","7":"NONE","8":"go to Iceland"},"context":"NONE","minutes":180.0,"events_minutes":{"0":10.0,"1":10.0,"2":30.0,"3":1.0,"4":3.0,"5":5.0,"6":25.0},"flatten_input_for_edge_prediction":"step0: Check in at the desk.; step1: Go through security line.; step2: Take a vehicle to the airport.; step3: Sit in the seat.; step4: Board the plane.; step5: Go to boarding area.; step6: Buy a plane ticket.; step7: decided to go to Iceland; step8: go to Iceland","flatten_input_for_script_generation":"You want to go to Iceland. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step2; step2 -> step0; step0 -> step1; step1 -> step5; step5 -> step4; step4 -> step3; step3 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: decided to go to Iceland; step1: Buy a plane ticket.; step2: Take a vehicle to the airport.; step3: Check in at the desk.; step4: Go through security line.; step5: Go to boarding area.; step6: Board the plane.; step7: Sit in the seat.; step8: go to Iceland; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->5","2->0","3->8","4->3","5->4","6->2","7->6"],"reference_code":"class GoToIceland:\n\n    title = \"go to Iceland\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to Iceland\"\n\n    def step1(self):\n        return \"Buy a plane ticket.\"\n\n    def step2(self):\n        return \"Take a vehicle to the airport.\"\n\n    def step3(self):\n        return \"Check in at the desk.\"\n\n    def step4(self):\n        return \"Go through security line.\"\n\n    def step5(self):\n        return \"Go to boarding area.\"\n\n    def step6(self):\n        return \"Board the plane.\"\n\n    def step7(self):\n        return \"Sit in the seat.\"\n\n    def step8(self):\n        return \"go to Iceland\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToIceland:\n\n    title = \"go to Iceland\"\n    steps = 9\n\n","reference_graph":{"title":"go to Iceland","num_steps":9,"schema":["step0: decided to go to Iceland","step1: Buy a plane ticket.","step2: Take a vehicle to the airport.","step3: Check in at the desk.","step4: Go through security line.","step5: Go to boarding area.","step6: Board the plane.","step7: Sit in the seat.","step8: go to Iceland"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"go to the store to get a loaf of bread","events":{"0":"go to counter and pay for bread","1":"grab the loaf of bread","2":"drive to the store","3":"find the bread aisle","4":"get into car","5":"NONE","6":"go to the store to get a loaf of bread"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1.0,"1":2.0,"2":10.0,"3":2.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: go to counter and pay for bread; step1: grab the loaf of bread; step2: drive to the store; step3: find the bread aisle; step4: get into car; step5: decided to go to the store to get a loaf of bread; step6: go to the store to get a loaf of bread","flatten_input_for_script_generation":"You want to go to the store to get a loaf of bread. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to the store to get a loaf of bread; step1: get into car; step2: drive to the store; step3: find the bread aisle; step4: grab the loaf of bread; step5: go to counter and pay for bread; step6: go to the store to get a loaf of bread; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class GoToTheStoreToGetALoafOfBread:\n\n    title = \"go to the store to get a loaf of bread\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the store to get a loaf of bread\"\n\n    def step1(self):\n        return \"get into car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"find the bread aisle\"\n\n    def step4(self):\n        return \"grab the loaf of bread\"\n\n    def step5(self):\n        return \"go to counter and pay for bread\"\n\n    def step6(self):\n        return \"go to the store to get a loaf of bread\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheStoreToGetALoafOfBread:\n\n    title = \"go to the store to get a loaf of bread\"\n    steps = 7\n\n","reference_graph":{"title":"go to the store to get a loaf of bread","num_steps":7,"schema":["step0: decided to go to the store to get a loaf of bread","step1: get into car","step2: drive to the store","step3: find the bread aisle","step4: grab the loaf of bread","step5: go to counter and pay for bread","step6: go to the store to get a loaf of bread"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"meet some friends","events":{"0":"make plans to meet with friend.","1":"call a different friend.","2":"Go to meeting location.","3":"Call up a friend","4":"Make plans for all to meet together.","5":"NONE","6":"meet some friends"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":5.0,"2":20.0,"3":1.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: make plans to meet with friend.; step1: call a different friend.; step2: Go to meeting location.; step3: Call up a friend; step4: Make plans for all to meet together.; step5: decided to meet some friends; step6: meet some friends","flatten_input_for_script_generation":"You want to meet some friends. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: decided to meet some friends; step1: call a different friend.; step2: Call up a friend; step3: make plans to meet with friend.; step4: Go to meeting location.; step5: meet some friends; step6: Make plans for all to meet together.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->2","5->3","5->1"],"reference_code":"class MeetSomeFriends:\n\n    title = \"meet some friends\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to meet some friends\"\n\n    def step1(self):\n        return \"call a different friend.\"\n\n    def step2(self):\n        return \"Call up a friend\"\n\n    def step3(self):\n        return \"make plans to meet with friend.\"\n\n    def step4(self):\n        return \"Go to meeting location.\"\n\n    def step5(self):\n        return \"meet some friends\"\n\n    def step6(self):\n        return \"Make plans for all to meet together.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class MeetSomeFriends:\n\n    title = \"meet some friends\"\n    steps = 7\n\n","reference_graph":{"title":"meet some friends","num_steps":7,"schema":["step0: decided to meet some friends","step1: call a different friend.","step2: Call up a friend","step3: make plans to meet with friend.","step4: Go to meeting location.","step5: meet some friends","step6: Make plans for all to meet together."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"buy lunch at school","events":{"0":"pack up books","1":"wait in line","2":"put food on the tray","3":"walk to the cafeteria","4":"grab a tray","5":"check out at the end","6":"NONE","7":"buy lunch at school"},"context":"NONE","minutes":35.0,"events_minutes":{"0":2.0,"1":10.0,"2":5.0,"3":3.0,"4":0.0166666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: pack up books; step1: wait in line; step2: put food on the tray; step3: walk to the cafeteria; step4: grab a tray; step5: check out at the end; step6: decided to buy lunch at school; step7: buy lunch at school","flatten_input_for_script_generation":"You want to buy lunch at school. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to buy lunch at school; step1: pack up books; step2: walk to the cafeteria; step3: wait in line; step4: grab a tray; step5: put food on the tray; step6: check out at the end; step7: buy lunch at school; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->5","3->1","4->2","5->7","6->0"],"reference_code":"class BuyLunchAtSchool:\n\n    title = \"buy lunch at school\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to buy lunch at school\"\n\n    def step1(self):\n        return \"pack up books\"\n\n    def step2(self):\n        return \"walk to the cafeteria\"\n\n    def step3(self):\n        return \"wait in line\"\n\n    def step4(self):\n        return \"grab a tray\"\n\n    def step5(self):\n        return \"put food on the tray\"\n\n    def step6(self):\n        return \"check out at the end\"\n\n    def step7(self):\n        return \"buy lunch at school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyLunchAtSchool:\n\n    title = \"buy lunch at school\"\n    steps = 8\n\n","reference_graph":{"title":"buy lunch at school","num_steps":8,"schema":["step0: decided to buy lunch at school","step1: pack up books","step2: walk to the cafeteria","step3: wait in line","step4: grab a tray","step5: put food on the tray","step6: check out at the end","step7: buy lunch at school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"buy a new toy","events":{"0":"Go back home.","1":"Pick out a toy.","2":"Go to the counter.","3":"pay for the toy.","4":"Go to the toy store.","5":"NONE","6":"buy a new toy"},"context":"NONE","minutes":60.0,"events_minutes":{"0":60.0,"1":1.0,"2":1.0,"3":1.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Go back home.; step1: Pick out a toy.; step2: Go to the counter.; step3: pay for the toy.; step4: Go to the toy store.; step5: decided to buy a new toy; step6: buy a new toy","flatten_input_for_script_generation":"You want to buy a new toy. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to buy a new toy; step1: Go to the toy store.; step2: Pick out a toy.; step3: Go to the counter.; step4: pay for the toy.; step5: Go back home.; step6: buy a new toy; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->1","5->4"],"reference_code":"class BuyANewToy:\n\n    title = \"buy a new toy\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to buy a new toy\"\n\n    def step1(self):\n        return \"Go to the toy store.\"\n\n    def step2(self):\n        return \"Pick out a toy.\"\n\n    def step3(self):\n        return \"Go to the counter.\"\n\n    def step4(self):\n        return \"pay for the toy.\"\n\n    def step5(self):\n        return \"Go back home.\"\n\n    def step6(self):\n        return \"buy a new toy\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyANewToy:\n\n    title = \"buy a new toy\"\n    steps = 7\n\n","reference_graph":{"title":"buy a new toy","num_steps":7,"schema":["step0: decided to buy a new toy","step1: Go to the toy store.","step2: Pick out a toy.","step3: Go to the counter.","step4: pay for the toy.","step5: Go back home.","step6: buy a new toy"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of bed","events":{"0":"sit up in bed","1":"move to the edge of the bed","2":"grab phone of night stand","3":"turn off the alarm","4":"hear the alarm ring","5":"NONE","6":"get out of bed"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.3333333333,"1":0.1666666667,"2":0.1666666667,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: sit up in bed; step1: move to the edge of the bed; step2: grab phone of night stand; step3: turn off the alarm; step4: hear the alarm ring; step5: decided to get out of bed; step6: get out of bed","flatten_input_for_script_generation":"You want to get out of bed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step4 -> step0; step2 -> step3; step3 -> step6; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to get out of bed; step1: hear the alarm ring; step2: grab phone of night stand; step3: sit up in bed; step4: turn off the alarm; step5: move to the edge of the bed; step6: get out of bed; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->6","4->2","4->0","5->4"],"reference_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get out of bed\"\n\n    def step1(self):\n        return \"hear the alarm ring\"\n\n    def step2(self):\n        return \"grab phone of night stand\"\n\n    def step3(self):\n        return \"sit up in bed\"\n\n    def step4(self):\n        return \"turn off the alarm\"\n\n    def step5(self):\n        return \"move to the edge of the bed\"\n\n    def step6(self):\n        return \"get out of bed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n","reference_graph":{"title":"get out of bed","num_steps":7,"schema":["step0: decided to get out of bed","step1: hear the alarm ring","step2: grab phone of night stand","step3: sit up in bed","step4: turn off the alarm","step5: move to the edge of the bed","step6: get out of bed"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"try squid for the first time","events":{"0":"Order squid from the menu","1":"Grab a fork.","2":"Wait to be seated at a restaurant.","3":"Chew the squid.","4":"Add condiments to the squid","5":"Use the fork to stab a squid","6":"Place squid in mouth","7":"NONE","8":"try squid for the first time"},"context":"NONE","minutes":30.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":5.0,"3":0.4166666667,"4":1.0,"5":0.1666666667,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: Order squid from the menu; step1: Grab a fork.; step2: Wait to be seated at a restaurant.; step3: Chew the squid.; step4: Add condiments to the squid; step5: Use the fork to stab a squid; step6: Place squid in mouth; step7: decided to try squid for the first time; step8: try squid for the first time","flatten_input_for_script_generation":"You want to try squid for the first time. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step5; step5 -> step6; step6 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to try squid for the first time; step1: Wait to be seated at a restaurant.; step2: Order squid from the menu; step3: Add condiments to the squid; step4: Grab a fork.; step5: Use the fork to stab a squid; step6: Place squid in mouth; step7: Chew the squid.; step8: try squid for the first time; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->5","2->0","3->8","4->1","5->6","6->3","7->2"],"reference_code":"class TrySquidForTheFirstTime:\n\n    title = \"try squid for the first time\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to try squid for the first time\"\n\n    def step1(self):\n        return \"Wait to be seated at a restaurant.\"\n\n    def step2(self):\n        return \"Order squid from the menu\"\n\n    def step3(self):\n        return \"Add condiments to the squid\"\n\n    def step4(self):\n        return \"Grab a fork.\"\n\n    def step5(self):\n        return \"Use the fork to stab a squid\"\n\n    def step6(self):\n        return \"Place squid in mouth\"\n\n    def step7(self):\n        return \"Chew the squid.\"\n\n    def step8(self):\n        return \"try squid for the first time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TrySquidForTheFirstTime:\n\n    title = \"try squid for the first time\"\n    steps = 9\n\n","reference_graph":{"title":"try squid for the first time","num_steps":9,"schema":["step0: decided to try squid for the first time","step1: Wait to be seated at a restaurant.","step2: Order squid from the menu","step3: Add condiments to the squid","step4: Grab a fork.","step5: Use the fork to stab a squid","step6: Place squid in mouth","step7: Chew the squid.","step8: try squid for the first time"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"do some type of volunteer work","events":{"0":"make an appointment to meet with volunteer group","1":"research local volunteer facilities","2":"drive to volunteer group's facility","3":"contact volunteer group via phone","4":"pick favorite volunteer activity","5":"decide to do some volunteer work","6":"NONE","7":"do some type of volunteer work"},"context":"NONE","minutes":2880.0,"events_minutes":{"0":5.0,"1":60.0,"2":15.0,"3":5.0,"4":5.0,"5":0.5},"flatten_input_for_edge_prediction":"step0: make an appointment to meet with volunteer group; step1: research local volunteer facilities; step2: drive to volunteer group's facility; step3: contact volunteer group via phone; step4: pick favorite volunteer activity; step5: decide to do some volunteer work; step6: decided to do some type of volunteer work; step7: do some type of volunteer work","flatten_input_for_script_generation":"You want to do some type of volunteer work. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to do some type of volunteer work; step1: decide to do some volunteer work; step2: research local volunteer facilities; step3: pick favorite volunteer activity; step4: contact volunteer group via phone; step5: make an appointment to meet with volunteer group; step6: drive to volunteer group's facility; step7: do some type of volunteer work; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->4","2->7","3->0","4->3","5->1","6->5"],"reference_code":"class DoSomeTypeOfVolunteerWork:\n\n    title = \"do some type of volunteer work\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to do some type of volunteer work\"\n\n    def step1(self):\n        return \"decide to do some volunteer work\"\n\n    def step2(self):\n        return \"research local volunteer facilities\"\n\n    def step3(self):\n        return \"pick favorite volunteer activity\"\n\n    def step4(self):\n        return \"contact volunteer group via phone\"\n\n    def step5(self):\n        return \"make an appointment to meet with volunteer group\"\n\n    def step6(self):\n        return \"drive to volunteer group's facility\"\n\n    def step7(self):\n        return \"do some type of volunteer work\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class DoSomeTypeOfVolunteerWork:\n\n    title = \"do some type of volunteer work\"\n    steps = 8\n\n","reference_graph":{"title":"do some type of volunteer work","num_steps":8,"schema":["step0: decided to do some type of volunteer work","step1: decide to do some volunteer work","step2: research local volunteer facilities","step3: pick favorite volunteer activity","step4: contact volunteer group via phone","step5: make an appointment to meet with volunteer group","step6: drive to volunteer group's facility","step7: do some type of volunteer work"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go on the roller coaster","events":{"0":"Buckle the safety belt.","1":"Wait in line.","2":"Allow attendants to check safety belt.","3":"Wait for ride to start.","4":"Sit in desired cart.","5":"Walk to the roller coaster.","6":"NONE","7":"go on the roller coaster"},"context":"NONE","minutes":20.0,"events_minutes":{"0":1.0,"1":10.0,"2":3.0,"3":1.0,"4":1.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: Buckle the safety belt.; step1: Wait in line.; step2: Allow attendants to check safety belt.; step3: Wait for ride to start.; step4: Sit in desired cart.; step5: Walk to the roller coaster.; step6: decided to go on the roller coaster; step7: go on the roller coaster","flatten_input_for_script_generation":"You want to go on the roller coaster. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to go on the roller coaster; step1: Walk to the roller coaster.; step2: Wait in line.; step3: Sit in desired cart.; step4: Buckle the safety belt.; step5: Allow attendants to check safety belt.; step6: Wait for ride to start.; step7: go on the roller coaster; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->4","2->3","3->7","4->0","5->1","6->5"],"reference_code":"class GoOnTheRollerCoaster:\n\n    title = \"go on the roller coaster\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go on the roller coaster\"\n\n    def step1(self):\n        return \"Walk to the roller coaster.\"\n\n    def step2(self):\n        return \"Wait in line.\"\n\n    def step3(self):\n        return \"Sit in desired cart.\"\n\n    def step4(self):\n        return \"Buckle the safety belt.\"\n\n    def step5(self):\n        return \"Allow attendants to check safety belt.\"\n\n    def step6(self):\n        return \"Wait for ride to start.\"\n\n    def step7(self):\n        return \"go on the roller coaster\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoOnTheRollerCoaster:\n\n    title = \"go on the roller coaster\"\n    steps = 8\n\n","reference_graph":{"title":"go on the roller coaster","num_steps":8,"schema":["step0: decided to go on the roller coaster","step1: Walk to the roller coaster.","step2: Wait in line.","step3: Sit in desired cart.","step4: Buckle the safety belt.","step5: Allow attendants to check safety belt.","step6: Wait for ride to start.","step7: go on the roller coaster"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"eat some soup","events":{"0":"look for a bowl","1":"go to the kitchen","2":"find the bowls","3":"microwave the soup","4":"pour soup in the bowl","5":"NONE","6":"eat some soup"},"context":"NONE","minutes":15.0,"events_minutes":{"0":5.0,"1":5.0,"2":1.0,"3":5.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look for a bowl; step1: go to the kitchen; step2: find the bowls; step3: microwave the soup; step4: pour soup in the bowl; step5: decided to eat some soup; step6: eat some soup","flatten_input_for_script_generation":"You want to eat some soup. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to eat some soup; step1: go to the kitchen; step2: look for a bowl; step3: find the bowls; step4: pour soup in the bowl; step5: microwave the soup; step6: eat some soup; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class EatSomeSoup:\n\n    title = \"eat some soup\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat some soup\"\n\n    def step1(self):\n        return \"go to the kitchen\"\n\n    def step2(self):\n        return \"look for a bowl\"\n\n    def step3(self):\n        return \"find the bowls\"\n\n    def step4(self):\n        return \"pour soup in the bowl\"\n\n    def step5(self):\n        return \"microwave the soup\"\n\n    def step6(self):\n        return \"eat some soup\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatSomeSoup:\n\n    title = \"eat some soup\"\n    steps = 7\n\n","reference_graph":{"title":"eat some soup","num_steps":7,"schema":["step0: decided to eat some soup","step1: go to the kitchen","step2: look for a bowl","step3: find the bowls","step4: pour soup in the bowl","step5: microwave the soup","step6: eat some soup"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn to play the guitar to impress girls","events":{"0":"get in the car","1":"purchase a guitar","2":"go online and watch tutorial videos","3":"bring guitar back home","4":"drive to guitar store","5":"NONE","6":"learn to play the guitar to impress girls"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":45.0,"2":120.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: purchase a guitar; step2: go online and watch tutorial videos; step3: bring guitar back home; step4: drive to guitar store; step5: decided to learn to play the guitar to impress girls; step6: learn to play the guitar to impress girls","flatten_input_for_script_generation":"You want to learn to play the guitar to impress girls. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: decided to learn to play the guitar to impress girls; step1: get in the car; step2: go online and watch tutorial videos; step3: learn to play the guitar to impress girls; step4: drive to guitar store; step5: purchase a guitar; step6: bring guitar back home; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->4","1->3","2->6","3->2","4->1","5->0"],"reference_code":"class LearnToPlayTheGuitarToImpressGirls:\n\n    title = \"learn to play the guitar to impress girls\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn to play the guitar to impress girls\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"go online and watch tutorial videos\"\n\n    def step3(self):\n        return \"learn to play the guitar to impress girls\"\n\n    def step4(self):\n        return \"drive to guitar store\"\n\n    def step5(self):\n        return \"purchase a guitar\"\n\n    def step6(self):\n        return \"bring guitar back home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class LearnToPlayTheGuitarToImpressGirls:\n\n    title = \"learn to play the guitar to impress girls\"\n    steps = 7\n\n","reference_graph":{"title":"learn to play the guitar to impress girls","num_steps":7,"schema":["step0: decided to learn to play the guitar to impress girls","step1: get in the car","step2: go online and watch tutorial videos","step3: learn to play the guitar to impress girls","step4: drive to guitar store","step5: purchase a guitar","step6: bring guitar back home"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"go to a concert on Friday","events":{"0":"Prepare for the concert on Friday","1":"Pick the best one","2":"Print the receipt","3":"Purchase the ticket for the concert","4":"Check for the available concerts on Friday","5":"NONE","6":"go to a concert on Friday"},"context":"NONE","minutes":20.0,"events_minutes":{"0":10.0,"1":1.0,"2":1.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Prepare for the concert on Friday; step1: Pick the best one; step2: Print the receipt; step3: Purchase the ticket for the concert; step4: Check for the available concerts on Friday; step5: decided to go to a concert on Friday; step6: go to a concert on Friday","flatten_input_for_script_generation":"You want to go to a concert on Friday. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to a concert on Friday; step1: Check for the available concerts on Friday; step2: Pick the best one; step3: Purchase the ticket for the concert; step4: Print the receipt; step5: Prepare for the concert on Friday; step6: go to a concert on Friday; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->2","4->1","5->4"],"reference_code":"class GoToAConcertOnFriday:\n\n    title = \"go to a concert on Friday\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to a concert on Friday\"\n\n    def step1(self):\n        return \"Check for the available concerts on Friday\"\n\n    def step2(self):\n        return \"Pick the best one\"\n\n    def step3(self):\n        return \"Purchase the ticket for the concert\"\n\n    def step4(self):\n        return \"Print the receipt\"\n\n    def step5(self):\n        return \"Prepare for the concert on Friday\"\n\n    def step6(self):\n        return \"go to a concert on Friday\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToAConcertOnFriday:\n\n    title = \"go to a concert on Friday\"\n    steps = 7\n\n","reference_graph":{"title":"go to a concert on Friday","num_steps":7,"schema":["step0: decided to go to a concert on Friday","step1: Check for the available concerts on Friday","step2: Pick the best one","step3: Purchase the ticket for the concert","step4: Print the receipt","step5: Prepare for the concert on Friday","step6: go to a concert on Friday"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"see a parade","events":{"0":"dress in weather relevant clothing.","1":"find a local parade.","2":"drive to the site of the parade.","3":"read about events being held in the area.","4":"get in car.","5":"NONE","6":"see a parade"},"context":"NONE","minutes":180.0,"events_minutes":{"0":4.0,"1":5.0,"2":30.0,"3":20.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: dress in weather relevant clothing.; step1: find a local parade.; step2: drive to the site of the parade.; step3: read about events being held in the area.; step4: get in car.; step5: decided to see a parade; step6: see a parade","flatten_input_for_script_generation":"You want to see a parade. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to see a parade; step1: read about events being held in the area.; step2: find a local parade.; step3: dress in weather relevant clothing.; step4: get in car.; step5: drive to the site of the parade.; step6: see a parade; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->2","5->3"],"reference_code":"class SeeAParade:\n\n    title = \"see a parade\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to see a parade\"\n\n    def step1(self):\n        return \"read about events being held in the area.\"\n\n    def step2(self):\n        return \"find a local parade.\"\n\n    def step3(self):\n        return \"dress in weather relevant clothing.\"\n\n    def step4(self):\n        return \"get in car.\"\n\n    def step5(self):\n        return \"drive to the site of the parade.\"\n\n    def step6(self):\n        return \"see a parade\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SeeAParade:\n\n    title = \"see a parade\"\n    steps = 7\n\n","reference_graph":{"title":"see a parade","num_steps":7,"schema":["step0: decided to see a parade","step1: read about events being held in the area.","step2: find a local parade.","step3: dress in weather relevant clothing.","step4: get in car.","step5: drive to the site of the parade.","step6: see a parade"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play in the olympics","events":{"0":"enroll in a sports league","1":"compete in the sports league","2":"qualify for olympic team","3":"go to olympics","4":"apply for olympic try-outs","5":"NONE","6":"play in the olympics"},"context":"NONE","minutes":8409600.0,"events_minutes":{"0":15.0,"1":6307200.0,"2":259200.0,"3":1440.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: enroll in a sports league; step1: compete in the sports league; step2: qualify for olympic team; step3: go to olympics; step4: apply for olympic try-outs; step5: decided to play in the olympics; step6: play in the olympics","flatten_input_for_script_generation":"You want to play in the olympics. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to play in the olympics; step1: enroll in a sports league; step2: compete in the sports league; step3: apply for olympic try-outs; step4: qualify for olympic team; step5: go to olympics; step6: play in the olympics; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->6","4->2","5->0"],"reference_code":"class PlayInTheOlympics:\n\n    title = \"play in the olympics\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play in the olympics\"\n\n    def step1(self):\n        return \"enroll in a sports league\"\n\n    def step2(self):\n        return \"compete in the sports league\"\n\n    def step3(self):\n        return \"apply for olympic try-outs\"\n\n    def step4(self):\n        return \"qualify for olympic team\"\n\n    def step5(self):\n        return \"go to olympics\"\n\n    def step6(self):\n        return \"play in the olympics\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayInTheOlympics:\n\n    title = \"play in the olympics\"\n    steps = 7\n\n","reference_graph":{"title":"play in the olympics","num_steps":7,"schema":["step0: decided to play in the olympics","step1: enroll in a sports league","step2: compete in the sports league","step3: apply for olympic try-outs","step4: qualify for olympic team","step5: go to olympics","step6: play in the olympics"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"knit a blanket","events":{"0":"drive back home","1":"walk to the cashier","2":"go to the craft store","3":"pick out some crochet needles","4":"pay for the items","5":"work on the blanket every day","6":"pick out yarn","7":"NONE","8":"knit a blanket"},"context":"NONE","minutes":86400.0,"events_minutes":{"0":20.0,"1":2.0,"2":20.0,"3":10.0,"4":2.0,"5":86400.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: drive back home; step1: walk to the cashier; step2: go to the craft store; step3: pick out some crochet needles; step4: pay for the items; step5: work on the blanket every day; step6: pick out yarn; step7: decided to knit a blanket; step8: knit a blanket","flatten_input_for_script_generation":"You want to knit a blanket. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step2 -> step3; step6 -> step1; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step5; step5 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to knit a blanket; step1: go to the craft store; step2: pick out yarn; step3: pick out some crochet needles; step4: walk to the cashier; step5: pay for the items; step6: drive back home; step7: work on the blanket every day; step8: knit a blanket; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->4","2->6","2->3","3->1","4->0","5->8","6->1","7->2"],"reference_code":"class KnitABlanket:\n\n    title = \"knit a blanket\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to knit a blanket\"\n\n    def step1(self):\n        return \"go to the craft store\"\n\n    def step2(self):\n        return \"pick out yarn\"\n\n    def step3(self):\n        return \"pick out some crochet needles\"\n\n    def step4(self):\n        return \"walk to the cashier\"\n\n    def step5(self):\n        return \"pay for the items\"\n\n    def step6(self):\n        return \"drive back home\"\n\n    def step7(self):\n        return \"work on the blanket every day\"\n\n    def step8(self):\n        return \"knit a blanket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class KnitABlanket:\n\n    title = \"knit a blanket\"\n    steps = 9\n\n","reference_graph":{"title":"knit a blanket","num_steps":9,"schema":["step0: decided to knit a blanket","step1: go to the craft store","step2: pick out yarn","step3: pick out some crochet needles","step4: walk to the cashier","step5: pay for the items","step6: drive back home","step7: work on the blanket every day","step8: knit a blanket"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"find a way to stay cool","events":{"0":"Turn on the power button.","1":"Locate the power button.","2":"Go to the air conditioner.","3":"Set the controls to blow cold air.","4":"Stand in front of the cold air.","5":"NONE","6":"find a way to stay cool"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":1.0,"3":0.1666666667,"4":3.0},"flatten_input_for_edge_prediction":"step0: Turn on the power button.; step1: Locate the power button.; step2: Go to the air conditioner.; step3: Set the controls to blow cold air.; step4: Stand in front of the cold air.; step5: decided to find a way to stay cool; step6: find a way to stay cool","flatten_input_for_script_generation":"You want to find a way to stay cool. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to find a way to stay cool; step1: Go to the air conditioner.; step2: Locate the power button.; step3: Turn on the power button.; step4: Set the controls to blow cold air.; step5: Stand in front of the cold air.; step6: find a way to stay cool; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class FindAWayToStayCool:\n\n    title = \"find a way to stay cool\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to find a way to stay cool\"\n\n    def step1(self):\n        return \"Go to the air conditioner.\"\n\n    def step2(self):\n        return \"Locate the power button.\"\n\n    def step3(self):\n        return \"Turn on the power button.\"\n\n    def step4(self):\n        return \"Set the controls to blow cold air.\"\n\n    def step5(self):\n        return \"Stand in front of the cold air.\"\n\n    def step6(self):\n        return \"find a way to stay cool\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FindAWayToStayCool:\n\n    title = \"find a way to stay cool\"\n    steps = 7\n\n","reference_graph":{"title":"find a way to stay cool","num_steps":7,"schema":["step0: decided to find a way to stay cool","step1: Go to the air conditioner.","step2: Locate the power button.","step3: Turn on the power button.","step4: Set the controls to blow cold air.","step5: Stand in front of the cold air.","step6: find a way to stay cool"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the school","events":{"0":"Drive to the school","1":"Get into the car","2":"Gather belongings together","3":"Walk out the door","4":"Put on clothes","5":"NONE","6":"go to the school"},"context":"NONE","minutes":15.0,"events_minutes":{"0":15.0,"1":0.5,"2":0.5,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: Drive to the school; step1: Get into the car; step2: Gather belongings together; step3: Walk out the door; step4: Put on clothes; step5: decided to go to the school; step6: go to the school","flatten_input_for_script_generation":"You want to go to the school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to the school; step1: Put on clothes; step2: Gather belongings together; step3: Walk out the door; step4: Get into the car; step5: Drive to the school; step6: go to the school; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class GoToTheSchool:\n\n    title = \"go to the school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the school\"\n\n    def step1(self):\n        return \"Put on clothes\"\n\n    def step2(self):\n        return \"Gather belongings together\"\n\n    def step3(self):\n        return \"Walk out the door\"\n\n    def step4(self):\n        return \"Get into the car\"\n\n    def step5(self):\n        return \"Drive to the school\"\n\n    def step6(self):\n        return \"go to the school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheSchool:\n\n    title = \"go to the school\"\n    steps = 7\n\n","reference_graph":{"title":"go to the school","num_steps":7,"schema":["step0: decided to go to the school","step1: Put on clothes","step2: Gather belongings together","step3: Walk out the door","step4: Get into the car","step5: Drive to the school","step6: go to the school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the Springsteen show","events":{"0":"Purchase Springsteen tickets","1":"Log onto Ticketmaster","2":"Drive to the Springsteen show venue","3":"Search for Springsteen show tickets","4":"Walk into the show","5":"Show tickets at the door","6":"NONE","7":"go to the Springsteen show"},"context":"NONE","minutes":120.0,"events_minutes":{"0":3.0,"1":2.0,"2":45.0,"3":5.0,"4":1.0,"5":3.0},"flatten_input_for_edge_prediction":"step0: Purchase Springsteen tickets; step1: Log onto Ticketmaster; step2: Drive to the Springsteen show venue; step3: Search for Springsteen show tickets; step4: Walk into the show; step5: Show tickets at the door; step6: decided to go to the Springsteen show; step7: go to the Springsteen show","flatten_input_for_script_generation":"You want to go to the Springsteen show. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step5; step2 -> step5; step5 -> step4; step4 -> step7; step6 -> step1; step6 -> step2","flatten_output_for_script_generation":"step0: decided to go to the Springsteen show; step1: Drive to the Springsteen show venue; step2: Log onto Ticketmaster; step3: Search for Springsteen show tickets; step4: Purchase Springsteen tickets; step5: Show tickets at the door; step6: Walk into the show; step7: go to the Springsteen show; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step5; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->5","3->0","4->7","5->4","6->1","6->2"],"reference_code":"class GoToTheSpringsteenShow:\n\n    title = \"go to the Springsteen show\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to go to the Springsteen show\"\n\n    def step1(self):\n        return \"Drive to the Springsteen show venue\"\n\n    def step2(self):\n        return \"Log onto Ticketmaster\"\n\n    def step3(self):\n        return \"Search for Springsteen show tickets\"\n\n    def step4(self):\n        return \"Purchase Springsteen tickets\"\n\n    def step5(self):\n        return \"Show tickets at the door\"\n\n    def step6(self):\n        return \"Walk into the show\"\n\n    def step7(self):\n        return \"go to the Springsteen show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step5\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoToTheSpringsteenShow:\n\n    title = \"go to the Springsteen show\"\n    steps = 8\n\n","reference_graph":{"title":"go to the Springsteen show","num_steps":8,"schema":["step0: decided to go to the Springsteen show","step1: Drive to the Springsteen show venue","step2: Log onto Ticketmaster","step3: Search for Springsteen show tickets","step4: Purchase Springsteen tickets","step5: Show tickets at the door","step6: Walk into the show","step7: go to the Springsteen show"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step5","step6 -> step7"]}}
{"scenario":"run for class president","events":{"0":"make campaign posters","1":"speak to classmates about voting","2":"make speeches to the students","3":"write a platform","4":"identify issues important to the students","5":"NONE","6":"run for class president"},"context":"NONE","minutes":1080.0,"events_minutes":{"0":180.0,"1":300.0,"2":120.0,"3":180.0,"4":300.0},"flatten_input_for_edge_prediction":"step0: make campaign posters; step1: speak to classmates about voting; step2: make speeches to the students; step3: write a platform; step4: identify issues important to the students; step5: decided to run for class president; step6: run for class president","flatten_input_for_script_generation":"You want to run for class president. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step0 -> step6; step2 -> step6; step3 -> step2; step1 -> step6; step5 -> step4; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: decided to run for class president; step1: speak to classmates about voting; step2: identify issues important to the students; step3: write a platform; step4: make speeches to the students; step5: make campaign posters; step6: run for class president; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step6; step4 -> step6; step1 -> step6","gold_edges_for_prediction":["0->6","1->6","2->6","3->2","4->3","5->4","5->0","5->1"],"reference_code":"class RunForClassPresident:\n\n    title = \"run for class president\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run for class president\"\n\n    def step1(self):\n        return \"speak to classmates about voting\"\n\n    def step2(self):\n        return \"identify issues important to the students\"\n\n    def step3(self):\n        return \"write a platform\"\n\n    def step4(self):\n        return \"make speeches to the students\"\n\n    def step5(self):\n        return \"make campaign posters\"\n\n    def step6(self):\n        return \"run for class president\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step4 -> step6\",\n            \"step1 -> step6\",\n        ]\n","input_prompt_code":"class RunForClassPresident:\n\n    title = \"run for class president\"\n    steps = 7\n\n","reference_graph":{"title":"run for class president","num_steps":7,"schema":["step0: decided to run for class president","step1: speak to classmates about voting","step2: identify issues important to the students","step3: write a platform","step4: make speeches to the students","step5: make campaign posters","step6: run for class president"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step6","step4 -> step6","step1 -> step6"]}}
{"scenario":"eat at a restaurant she's never been to","events":{"0":"turn on cell phone screen","1":"open GPS on phone","2":"input new restaurant address for navigation","3":"begin driving to the restaurant","4":"enter the restaurant","5":"enter the car","6":"exit the house","7":"NONE","8":"eat at a restaurant she's never been to"},"context":"NONE","minutes":120.0,"events_minutes":{"0":0.25,"1":0.1666666667,"2":1.0,"3":10.0,"4":2.0,"5":0.5,"6":2.0},"flatten_input_for_edge_prediction":"step0: turn on cell phone screen; step1: open GPS on phone; step2: input new restaurant address for navigation; step3: begin driving to the restaurant; step4: enter the restaurant; step5: enter the car; step6: exit the house; step7: decided to eat at a restaurant she's never been to; step8: eat at a restaurant she's never been to","flatten_input_for_script_generation":"You want to eat at a restaurant she's never been to. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step5; step5 -> step3; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step8; step7 -> step6; step7 -> step0","flatten_output_for_script_generation":"step0: decided to eat at a restaurant she's never been to; step1: turn on cell phone screen; step2: exit the house; step3: enter the car; step4: begin driving to the restaurant; step5: enter the restaurant; step6: open GPS on phone; step7: input new restaurant address for navigation; step8: eat at a restaurant she's never been to; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step7; step7 -> step4; step5 -> step8","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->8","5->3","6->5","7->6","7->0"],"reference_code":"class EatAtARestaurantShesNeverBeenTo:\n\n    title = \"eat at a restaurant she's never been to\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to eat at a restaurant she's never been to\"\n\n    def step1(self):\n        return \"turn on cell phone screen\"\n\n    def step2(self):\n        return \"exit the house\"\n\n    def step3(self):\n        return \"enter the car\"\n\n    def step4(self):\n        return \"begin driving to the restaurant\"\n\n    def step5(self):\n        return \"enter the restaurant\"\n\n    def step6(self):\n        return \"open GPS on phone\"\n\n    def step7(self):\n        return \"input new restaurant address for navigation\"\n\n    def step8(self):\n        return \"eat at a restaurant she's never been to\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step4\",\n            \"step5 -> step8\",\n        ]\n","input_prompt_code":"class EatAtARestaurantShesNeverBeenTo:\n\n    title = \"eat at a restaurant she's never been to\"\n    steps = 9\n\n","reference_graph":{"title":"eat at a restaurant she's never been to","num_steps":9,"schema":["step0: decided to eat at a restaurant she's never been to","step1: turn on cell phone screen","step2: exit the house","step3: enter the car","step4: begin driving to the restaurant","step5: enter the restaurant","step6: open GPS on phone","step7: input new restaurant address for navigation","step8: eat at a restaurant she's never been to"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step7","step7 -> step4","step5 -> step8"]}}
{"scenario":"have our driveway paved","events":{"0":"look for local pavement companies","1":"discuss driveway needs","2":"set up a date","3":"wait for the pavement company to arrive","4":"negotiate a price","5":"call the pavement company","6":"choose a pavement company","7":"NONE","8":"have our driveway paved"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":5.0,"2":5.0,"3":15.0,"4":5.0,"5":5.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: look for local pavement companies; step1: discuss driveway needs; step2: set up a date; step3: wait for the pavement company to arrive; step4: negotiate a price; step5: call the pavement company; step6: choose a pavement company; step7: decided to have our driveway paved; step8: have our driveway paved","flatten_input_for_script_generation":"You want to have our driveway paved. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step6 -> step5; step5 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to have our driveway paved; step1: look for local pavement companies; step2: choose a pavement company; step3: call the pavement company; step4: discuss driveway needs; step5: negotiate a price; step6: set up a date; step7: wait for the pavement company to arrive; step8: have our driveway paved; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->3","3->8","4->2","5->1","6->5","7->0"],"reference_code":"class HaveOurDrivewayPaved:\n\n    title = \"have our driveway paved\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to have our driveway paved\"\n\n    def step1(self):\n        return \"look for local pavement companies\"\n\n    def step2(self):\n        return \"choose a pavement company\"\n\n    def step3(self):\n        return \"call the pavement company\"\n\n    def step4(self):\n        return \"discuss driveway needs\"\n\n    def step5(self):\n        return \"negotiate a price\"\n\n    def step6(self):\n        return \"set up a date\"\n\n    def step7(self):\n        return \"wait for the pavement company to arrive\"\n\n    def step8(self):\n        return \"have our driveway paved\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class HaveOurDrivewayPaved:\n\n    title = \"have our driveway paved\"\n    steps = 9\n\n","reference_graph":{"title":"have our driveway paved","num_steps":9,"schema":["step0: decided to have our driveway paved","step1: look for local pavement companies","step2: choose a pavement company","step3: call the pavement company","step4: discuss driveway needs","step5: negotiate a price","step6: set up a date","step7: wait for the pavement company to arrive","step8: have our driveway paved"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"take a family vacation","events":{"0":"Choose desired location.","1":"Drive to vacation location.","2":"Sit down at desk and plan out costs.","3":"Pack needed items for vacation.","4":"Save for vacation.","5":"Think on location to visit.","6":"Get into car with family.","7":"NONE","8":"take a family vacation"},"context":"NONE","minutes":129600.0,"events_minutes":{"0":15.0,"1":300.0,"2":30.0,"3":120.0,"4":129600.0,"5":1440.0,"6":20.0},"flatten_input_for_edge_prediction":"step0: Choose desired location.; step1: Drive to vacation location.; step2: Sit down at desk and plan out costs.; step3: Pack needed items for vacation.; step4: Save for vacation.; step5: Think on location to visit.; step6: Get into car with family.; step7: decided to take a family vacation; step8: take a family vacation","flatten_input_for_script_generation":"You want to take a family vacation. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step2; step2 -> step3; step4 -> step3; step3 -> step6; step6 -> step1; step1 -> step8; step7 -> step5; step7 -> step4","flatten_output_for_script_generation":"step0: decided to take a family vacation; step1: Save for vacation.; step2: Think on location to visit.; step3: Choose desired location.; step4: Sit down at desk and plan out costs.; step5: Pack needed items for vacation.; step6: Get into car with family.; step7: Drive to vacation location.; step8: take a family vacation; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step5; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->8","2->3","3->6","4->3","5->0","6->1","7->5","7->4"],"reference_code":"class TakeAFamilyVacation:\n\n    title = \"take a family vacation\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to take a family vacation\"\n\n    def step1(self):\n        return \"Save for vacation.\"\n\n    def step2(self):\n        return \"Think on location to visit.\"\n\n    def step3(self):\n        return \"Choose desired location.\"\n\n    def step4(self):\n        return \"Sit down at desk and plan out costs.\"\n\n    def step5(self):\n        return \"Pack needed items for vacation.\"\n\n    def step6(self):\n        return \"Get into car with family.\"\n\n    def step7(self):\n        return \"Drive to vacation location.\"\n\n    def step8(self):\n        return \"take a family vacation\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step5\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeAFamilyVacation:\n\n    title = \"take a family vacation\"\n    steps = 9\n\n","reference_graph":{"title":"take a family vacation","num_steps":9,"schema":["step0: decided to take a family vacation","step1: Save for vacation.","step2: Think on location to visit.","step3: Choose desired location.","step4: Sit down at desk and plan out costs.","step5: Pack needed items for vacation.","step6: Get into car with family.","step7: Drive to vacation location.","step8: take a family vacation"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step5","step6 -> step7","step7 -> step8"]}}
{"scenario":"visit the museum to see dragons","events":{"0":"Filter museums by ones with dragons","1":"Select the top of dragon museums","2":"Drive to the museum","3":"Narrow the choices down to the best museum","4":"Look up museums","5":"NONE","6":"visit the museum to see dragons"},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":30.0,"3":5.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: Filter museums by ones with dragons; step1: Select the top of dragon museums; step2: Drive to the museum; step3: Narrow the choices down to the best museum; step4: Look up museums; step5: decided to visit the museum to see dragons; step6: visit the museum to see dragons","flatten_input_for_script_generation":"You want to visit the museum to see dragons. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to visit the museum to see dragons; step1: Look up museums; step2: Filter museums by ones with dragons; step3: Select the top of dragon museums; step4: Narrow the choices down to the best museum; step5: Drive to the museum; step6: visit the museum to see dragons; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class VisitTheMuseumToSeeDragons:\n\n    title = \"visit the museum to see dragons\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to visit the museum to see dragons\"\n\n    def step1(self):\n        return \"Look up museums\"\n\n    def step2(self):\n        return \"Filter museums by ones with dragons\"\n\n    def step3(self):\n        return \"Select the top of dragon museums\"\n\n    def step4(self):\n        return \"Narrow the choices down to the best museum\"\n\n    def step5(self):\n        return \"Drive to the museum\"\n\n    def step6(self):\n        return \"visit the museum to see dragons\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class VisitTheMuseumToSeeDragons:\n\n    title = \"visit the museum to see dragons\"\n    steps = 7\n\n","reference_graph":{"title":"visit the museum to see dragons","num_steps":7,"schema":["step0: decided to visit the museum to see dragons","step1: Look up museums","step2: Filter museums by ones with dragons","step3: Select the top of dragon museums","step4: Narrow the choices down to the best museum","step5: Drive to the museum","step6: visit the museum to see dragons"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"explore the jungle","events":{"0":"wait for the plane","1":"book a ticket","2":"park the car","3":"walk to the desk of an airline","4":"hire someone to drive out there","5":"go to the airport","6":"go to a country with jungle","7":"NONE","8":"explore the jungle"},"context":"NONE","minutes":1440.0,"events_minutes":{"0":120.0,"1":10.0,"2":20.0,"3":10.0,"4":60.0,"5":60.0,"6":360.0},"flatten_input_for_edge_prediction":"step0: wait for the plane; step1: book a ticket; step2: park the car; step3: walk to the desk of an airline; step4: hire someone to drive out there; step5: go to the airport; step6: go to a country with jungle; step7: decided to explore the jungle; step8: explore the jungle","flatten_input_for_script_generation":"You want to explore the jungle. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step3; step3 -> step0; step1 -> step5; step0 -> step6; step6 -> step4; step4 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: decided to explore the jungle; step1: book a ticket; step2: go to the airport; step3: park the car; step4: walk to the desk of an airline; step5: wait for the plane; step6: go to a country with jungle; step7: hire someone to drive out there; step8: explore the jungle; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->5","2->3","3->0","4->8","5->2","6->4","7->1"],"reference_code":"class ExploreTheJungle:\n\n    title = \"explore the jungle\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to explore the jungle\"\n\n    def step1(self):\n        return \"book a ticket\"\n\n    def step2(self):\n        return \"go to the airport\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"walk to the desk of an airline\"\n\n    def step5(self):\n        return \"wait for the plane\"\n\n    def step6(self):\n        return \"go to a country with jungle\"\n\n    def step7(self):\n        return \"hire someone to drive out there\"\n\n    def step8(self):\n        return \"explore the jungle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ExploreTheJungle:\n\n    title = \"explore the jungle\"\n    steps = 9\n\n","reference_graph":{"title":"explore the jungle","num_steps":9,"schema":["step0: decided to explore the jungle","step1: book a ticket","step2: go to the airport","step3: park the car","step4: walk to the desk of an airline","step5: wait for the plane","step6: go to a country with jungle","step7: hire someone to drive out there","step8: explore the jungle"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2","step6 -> step7","step7 -> step8"]}}
{"scenario":"pay the rent","events":{"0":"Clicked on rental payment section.","1":"Log into website with credentials.","2":"Input rental amount owed.","3":"Sit down at computer.","4":"Click confirm to process amount from bank account.","5":"Type in apartment complex website.","6":"NONE","7":"pay the rent"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":1.0,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Clicked on rental payment section.; step1: Log into website with credentials.; step2: Input rental amount owed.; step3: Sit down at computer.; step4: Click confirm to process amount from bank account.; step5: Type in apartment complex website.; step6: decided to pay the rent; step7: pay the rent","flatten_input_for_script_generation":"You want to pay the rent. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to pay the rent; step1: Sit down at computer.; step2: Type in apartment complex website.; step3: Log into website with credentials.; step4: Clicked on rental payment section.; step5: Input rental amount owed.; step6: Click confirm to process amount from bank account.; step7: pay the rent; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->0","2->4","3->5","4->7","5->1","6->3"],"reference_code":"class PayTheRent:\n\n    title = \"pay the rent\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to pay the rent\"\n\n    def step1(self):\n        return \"Sit down at computer.\"\n\n    def step2(self):\n        return \"Type in apartment complex website.\"\n\n    def step3(self):\n        return \"Log into website with credentials.\"\n\n    def step4(self):\n        return \"Clicked on rental payment section.\"\n\n    def step5(self):\n        return \"Input rental amount owed.\"\n\n    def step6(self):\n        return \"Click confirm to process amount from bank account.\"\n\n    def step7(self):\n        return \"pay the rent\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PayTheRent:\n\n    title = \"pay the rent\"\n    steps = 8\n\n","reference_graph":{"title":"pay the rent","num_steps":8,"schema":["step0: decided to pay the rent","step1: Sit down at computer.","step2: Type in apartment complex website.","step3: Log into website with credentials.","step4: Clicked on rental payment section.","step5: Input rental amount owed.","step6: Click confirm to process amount from bank account.","step7: pay the rent"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make a difficult choice","events":{"0":"execute the decision","1":"ponder the options","2":"think of worst case","3":"think of best case","4":"make a decision","5":"NONE","6":"make a difficult choice"},"context":"NONE","minutes":10.0,"events_minutes":{"0":2.0,"1":5.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: execute the decision; step1: ponder the options; step2: think of worst case; step3: think of best case; step4: make a decision; step5: decided to make a difficult choice; step6: make a difficult choice","flatten_input_for_script_generation":"You want to make a difficult choice. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to make a difficult choice; step1: ponder the options; step2: think of best case; step3: think of worst case; step4: make a decision; step5: execute the decision; step6: make a difficult choice; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class MakeADifficultChoice:\n\n    title = \"make a difficult choice\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a difficult choice\"\n\n    def step1(self):\n        return \"ponder the options\"\n\n    def step2(self):\n        return \"think of best case\"\n\n    def step3(self):\n        return \"think of worst case\"\n\n    def step4(self):\n        return \"make a decision\"\n\n    def step5(self):\n        return \"execute the decision\"\n\n    def step6(self):\n        return \"make a difficult choice\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeADifficultChoice:\n\n    title = \"make a difficult choice\"\n    steps = 7\n\n","reference_graph":{"title":"make a difficult choice","num_steps":7,"schema":["step0: decided to make a difficult choice","step1: ponder the options","step2: think of best case","step3: think of worst case","step4: make a decision","step5: execute the decision","step6: make a difficult choice"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go to the fair","events":{"0":"explore the fairway food and games","1":"enter the fairgrounds","2":"enjoy the special attractions","3":"purchase an entry ticket","4":"travel to the fairgrounds","5":"purchase separate attraction tickets","6":"find a ticket booth","7":"NONE","8":"go to the fair"},"context":"NONE","minutes":360.0,"events_minutes":{"0":180.0,"1":1.0,"2":120.0,"3":1.0,"4":20.0,"5":2.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: explore the fairway food and games; step1: enter the fairgrounds; step2: enjoy the special attractions; step3: purchase an entry ticket; step4: travel to the fairgrounds; step5: purchase separate attraction tickets; step6: find a ticket booth; step7: decided to go to the fair; step8: go to the fair","flatten_input_for_script_generation":"You want to go to the fair. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step6 -> step3; step6 -> step5; step3 -> step1; step5 -> step1; step1 -> step0; step1 -> step2; step0 -> step8; step2 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to go to the fair; step1: travel to the fairgrounds; step2: find a ticket booth; step3: purchase an entry ticket; step4: purchase separate attraction tickets; step5: enter the fairgrounds; step6: explore the fairway food and games; step7: enjoy the special attractions; step8: go to the fair; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","1->2","2->8","3->1","4->6","5->1","6->3","6->5","7->4"],"reference_code":"class GoToTheFair:\n\n    title = \"go to the fair\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to go to the fair\"\n\n    def step1(self):\n        return \"travel to the fairgrounds\"\n\n    def step2(self):\n        return \"find a ticket booth\"\n\n    def step3(self):\n        return \"purchase an entry ticket\"\n\n    def step4(self):\n        return \"purchase separate attraction tickets\"\n\n    def step5(self):\n        return \"enter the fairgrounds\"\n\n    def step6(self):\n        return \"explore the fairway food and games\"\n\n    def step7(self):\n        return \"enjoy the special attractions\"\n\n    def step8(self):\n        return \"go to the fair\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoToTheFair:\n\n    title = \"go to the fair\"\n    steps = 9\n\n","reference_graph":{"title":"go to the fair","num_steps":9,"schema":["step0: decided to go to the fair","step1: travel to the fairgrounds","step2: find a ticket booth","step3: purchase an entry ticket","step4: purchase separate attraction tickets","step5: enter the fairgrounds","step6: explore the fairway food and games","step7: enjoy the special attractions","step8: go to the fair"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"sing in the church choir","events":{"0":"gather clothing for church","1":"drive to the church","2":"wait for the singing to begin","3":"warm up voice","4":"get ready for church","5":"sing verses of the bible","6":"NONE","7":"sing in the church choir"},"context":"NONE","minutes":180.0,"events_minutes":{"0":5.0,"1":15.0,"2":50.0,"3":15.0,"4":20.0,"5":60.0},"flatten_input_for_edge_prediction":"step0: gather clothing for church; step1: drive to the church; step2: wait for the singing to begin; step3: warm up voice; step4: get ready for church; step5: sing verses of the bible; step6: decided to sing in the church choir; step7: sing in the church choir","flatten_input_for_script_generation":"You want to sing in the church choir. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step0 -> step4; step4 -> step1; step1 -> step2; step1 -> step3; step2 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to sing in the church choir; step1: gather clothing for church; step2: warm up voice; step3: sing verses of the bible; step4: sing in the church choir; step5: get ready for church; step6: drive to the church; step7: wait for the singing to begin; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step7; step6 -> step2; step7 -> step3","gold_edges_for_prediction":["0->4","1->2","1->3","2->5","3->5","4->1","5->7","6->0"],"reference_code":"class SingInTheChurchChoir:\n\n    title = \"sing in the church choir\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to sing in the church choir\"\n\n    def step1(self):\n        return \"gather clothing for church\"\n\n    def step2(self):\n        return \"warm up voice\"\n\n    def step3(self):\n        return \"sing verses of the bible\"\n\n    def step4(self):\n        return \"sing in the church choir\"\n\n    def step5(self):\n        return \"get ready for church\"\n\n    def step6(self):\n        return \"drive to the church\"\n\n    def step7(self):\n        return \"wait for the singing to begin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step6 -> step2\",\n            \"step7 -> step3\",\n        ]\n","input_prompt_code":"class SingInTheChurchChoir:\n\n    title = \"sing in the church choir\"\n    steps = 8\n\n","reference_graph":{"title":"sing in the church choir","num_steps":8,"schema":["step0: decided to sing in the church choir","step1: gather clothing for church","step2: warm up voice","step3: sing verses of the bible","step4: sing in the church choir","step5: get ready for church","step6: drive to the church","step7: wait for the singing to begin"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step7","step6 -> step2","step7 -> step3"]}}
{"scenario":"visit a waterpark","events":{"0":"Put on swimming trunks and other clothes.","1":"Walk out of house.","2":"Park car in lot.","3":"Walk to entrance and purchase ticket.","4":"Drive to local water-park.","5":"Get inside car.","6":"NONE","7":"visit a waterpark"},"context":"NONE","minutes":60.0,"events_minutes":{"0":15.0,"1":2.0,"2":10.0,"3":20.0,"4":30.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: Put on swimming trunks and other clothes.; step1: Walk out of house.; step2: Park car in lot.; step3: Walk to entrance and purchase ticket.; step4: Drive to local water-park.; step5: Get inside car.; step6: decided to visit a waterpark; step7: visit a waterpark","flatten_input_for_script_generation":"You want to visit a waterpark. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step5; step5 -> step4; step4 -> step2; step2 -> step3; step3 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to visit a waterpark; step1: Put on swimming trunks and other clothes.; step2: Walk out of house.; step3: Get inside car.; step4: Drive to local water-park.; step5: Park car in lot.; step6: Walk to entrance and purchase ticket.; step7: visit a waterpark; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->3","3->7","4->2","5->4","6->0"],"reference_code":"class VisitAWaterpark:\n\n    title = \"visit a waterpark\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to visit a waterpark\"\n\n    def step1(self):\n        return \"Put on swimming trunks and other clothes.\"\n\n    def step2(self):\n        return \"Walk out of house.\"\n\n    def step3(self):\n        return \"Get inside car.\"\n\n    def step4(self):\n        return \"Drive to local water-park.\"\n\n    def step5(self):\n        return \"Park car in lot.\"\n\n    def step6(self):\n        return \"Walk to entrance and purchase ticket.\"\n\n    def step7(self):\n        return \"visit a waterpark\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class VisitAWaterpark:\n\n    title = \"visit a waterpark\"\n    steps = 8\n\n","reference_graph":{"title":"visit a waterpark","num_steps":8,"schema":["step0: decided to visit a waterpark","step1: Put on swimming trunks and other clothes.","step2: Walk out of house.","step3: Get inside car.","step4: Drive to local water-park.","step5: Park car in lot.","step6: Walk to entrance and purchase ticket.","step7: visit a waterpark"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make some fresh lemonade","events":{"0":"walk in the store","1":"go to produce","2":"go to the car","3":"drive back home","4":"drive to the store","5":"pay the cashier","6":"pick up some lemons","7":"NONE","8":"make some fresh lemonade"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3.0,"1":1.0,"2":5.0,"3":20.0,"4":10.0,"5":5.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: walk in the store; step1: go to produce; step2: go to the car; step3: drive back home; step4: drive to the store; step5: pay the cashier; step6: pick up some lemons; step7: decided to make some fresh lemonade; step8: make some fresh lemonade","flatten_input_for_script_generation":"You want to make some fresh lemonade. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step6 -> step5; step5 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to make some fresh lemonade; step1: go to the car; step2: drive to the store; step3: walk in the store; step4: go to produce; step5: pick up some lemons; step6: pay the cashier; step7: drive back home; step8: make some fresh lemonade; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->6","2->4","3->8","4->0","5->3","6->5","7->2"],"reference_code":"class MakeSomeFreshLemonade:\n\n    title = \"make some fresh lemonade\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make some fresh lemonade\"\n\n    def step1(self):\n        return \"go to the car\"\n\n    def step2(self):\n        return \"drive to the store\"\n\n    def step3(self):\n        return \"walk in the store\"\n\n    def step4(self):\n        return \"go to produce\"\n\n    def step5(self):\n        return \"pick up some lemons\"\n\n    def step6(self):\n        return \"pay the cashier\"\n\n    def step7(self):\n        return \"drive back home\"\n\n    def step8(self):\n        return \"make some fresh lemonade\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeSomeFreshLemonade:\n\n    title = \"make some fresh lemonade\"\n    steps = 9\n\n","reference_graph":{"title":"make some fresh lemonade","num_steps":9,"schema":["step0: decided to make some fresh lemonade","step1: go to the car","step2: drive to the store","step3: walk in the store","step4: go to produce","step5: pick up some lemons","step6: pay the cashier","step7: drive back home","step8: make some fresh lemonade"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get tickets to Wimbledon","events":{"0":"Select the right tickets","1":"Research the tickets","2":"Find a website that sells tickets","3":"Save up the money for tickets","4":"Order the tickets","5":"NONE","6":"get tickets to Wimbledon"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":30.0,"3":30.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Select the right tickets; step1: Research the tickets; step2: Find a website that sells tickets; step3: Save up the money for tickets; step4: Order the tickets; step5: decided to get tickets to Wimbledon; step6: get tickets to Wimbledon","flatten_input_for_script_generation":"You want to get tickets to Wimbledon. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step1 -> step2; step0 -> step4; step4 -> step6; step5 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get tickets to Wimbledon; step1: Save up the money for tickets; step2: Find a website that sells tickets; step3: Select the right tickets; step4: Order the tickets; step5: Research the tickets; step6: get tickets to Wimbledon; step0 -> step1; step0 -> step5; step1 -> step2; step2 -> step3; step3 -> step4; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->2","4->6","5->1","5->3"],"reference_code":"class GetTicketsToWimbledon:\n\n    title = \"get tickets to Wimbledon\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get tickets to Wimbledon\"\n\n    def step1(self):\n        return \"Save up the money for tickets\"\n\n    def step2(self):\n        return \"Find a website that sells tickets\"\n\n    def step3(self):\n        return \"Select the right tickets\"\n\n    def step4(self):\n        return \"Order the tickets\"\n\n    def step5(self):\n        return \"Research the tickets\"\n\n    def step6(self):\n        return \"get tickets to Wimbledon\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step5\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class GetTicketsToWimbledon:\n\n    title = \"get tickets to Wimbledon\"\n    steps = 7\n\n","reference_graph":{"title":"get tickets to Wimbledon","num_steps":7,"schema":["step0: decided to get tickets to Wimbledon","step1: Save up the money for tickets","step2: Find a website that sells tickets","step3: Select the right tickets","step4: Order the tickets","step5: Research the tickets","step6: get tickets to Wimbledon"],"relations":["step0 -> step1","step0 -> step5","step1 -> step2","step2 -> step3","step3 -> step4","step5 -> step2","step4 -> step6"]}}
{"scenario":"drink a soda","events":{"0":"see what's in the refrigerator","1":"open the soda","2":"pick a soda","3":"drink all of the soda","4":"walk to the refrigerator","5":"take the soda out","6":"open the refrigerator","7":"NONE","8":"drink a soda"},"context":"NONE","minutes":2.0,"events_minutes":{"0":0.5,"1":0.0166666667,"2":0.0833333333,"3":0.25,"4":0.5,"5":0.0333333333,"6":2.0},"flatten_input_for_edge_prediction":"step0: see what's in the refrigerator; step1: open the soda; step2: pick a soda; step3: drink all of the soda; step4: walk to the refrigerator; step5: take the soda out; step6: open the refrigerator; step7: decided to drink a soda; step8: drink a soda","flatten_input_for_script_generation":"You want to drink a soda. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step6 -> step0; step0 -> step2; step2 -> step5; step5 -> step1; step1 -> step3; step3 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to drink a soda; step1: walk to the refrigerator; step2: open the refrigerator; step3: see what's in the refrigerator; step4: pick a soda; step5: take the soda out; step6: open the soda; step7: drink all of the soda; step8: drink a soda; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->3","2->5","3->8","4->6","5->1","6->0","7->4"],"reference_code":"class DrinkASoda:\n\n    title = \"drink a soda\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to drink a soda\"\n\n    def step1(self):\n        return \"walk to the refrigerator\"\n\n    def step2(self):\n        return \"open the refrigerator\"\n\n    def step3(self):\n        return \"see what's in the refrigerator\"\n\n    def step4(self):\n        return \"pick a soda\"\n\n    def step5(self):\n        return \"take the soda out\"\n\n    def step6(self):\n        return \"open the soda\"\n\n    def step7(self):\n        return \"drink all of the soda\"\n\n    def step8(self):\n        return \"drink a soda\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class DrinkASoda:\n\n    title = \"drink a soda\"\n    steps = 9\n\n","reference_graph":{"title":"drink a soda","num_steps":9,"schema":["step0: decided to drink a soda","step1: walk to the refrigerator","step2: open the refrigerator","step3: see what's in the refrigerator","step4: pick a soda","step5: take the soda out","step6: open the soda","step7: drink all of the soda","step8: drink a soda"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get up early","events":{"0":"stop looking at screens 30 minutes before bed","1":"set the alarm on phone","2":"go to bed early","3":"add extra alarms every 5 minutes","4":"get ready for bed early","5":"NONE","6":"get up early"},"context":"NONE","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: stop looking at screens 30 minutes before bed; step1: set the alarm on phone; step2: go to bed early; step3: add extra alarms every 5 minutes; step4: get ready for bed early; step5: decided to get up early; step6: get up early","flatten_input_for_script_generation":"You want to get up early. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step3 -> step0; step4 -> step2; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to get up early; step1: set the alarm on phone; step2: add extra alarms every 5 minutes; step3: get ready for bed early; step4: stop looking at screens 30 minutes before bed; step5: go to bed early; step6: get up early; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->4","3->0","4->2","5->1"],"reference_code":"class GetUpEarly:\n\n    title = \"get up early\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get up early\"\n\n    def step1(self):\n        return \"set the alarm on phone\"\n\n    def step2(self):\n        return \"add extra alarms every 5 minutes\"\n\n    def step3(self):\n        return \"get ready for bed early\"\n\n    def step4(self):\n        return \"stop looking at screens 30 minutes before bed\"\n\n    def step5(self):\n        return \"go to bed early\"\n\n    def step6(self):\n        return \"get up early\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetUpEarly:\n\n    title = \"get up early\"\n    steps = 7\n\n","reference_graph":{"title":"get up early","num_steps":7,"schema":["step0: decided to get up early","step1: set the alarm on phone","step2: add extra alarms every 5 minutes","step3: get ready for bed early","step4: stop looking at screens 30 minutes before bed","step5: go to bed early","step6: get up early"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"win the sweepstakes","events":{"0":"press submit button","1":"fill out the form","2":"see online sweepstakes","3":"wait to get a call","4":"answer the phone","5":"NONE","6":"win the sweepstakes"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":0.1666666667,"1":3.0,"2":1.0,"3":43200.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: press submit button; step1: fill out the form; step2: see online sweepstakes; step3: wait to get a call; step4: answer the phone; step5: decided to win the sweepstakes; step6: win the sweepstakes","flatten_input_for_script_generation":"You want to win the sweepstakes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to win the sweepstakes; step1: see online sweepstakes; step2: fill out the form; step3: press submit button; step4: wait to get a call; step5: answer the phone; step6: win the sweepstakes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class WinTheSweepstakes:\n\n    title = \"win the sweepstakes\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to win the sweepstakes\"\n\n    def step1(self):\n        return \"see online sweepstakes\"\n\n    def step2(self):\n        return \"fill out the form\"\n\n    def step3(self):\n        return \"press submit button\"\n\n    def step4(self):\n        return \"wait to get a call\"\n\n    def step5(self):\n        return \"answer the phone\"\n\n    def step6(self):\n        return \"win the sweepstakes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WinTheSweepstakes:\n\n    title = \"win the sweepstakes\"\n    steps = 7\n\n","reference_graph":{"title":"win the sweepstakes","num_steps":7,"schema":["step0: decided to win the sweepstakes","step1: see online sweepstakes","step2: fill out the form","step3: press submit button","step4: wait to get a call","step5: answer the phone","step6: win the sweepstakes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"join the baseball team","events":{"0":"find out tryout times","1":"enter the field","2":"try out for the team","3":"look up baseball teams","4":"drive to tryout location","5":"NONE","6":"join the baseball team"},"context":"NONE","minutes":180.0,"events_minutes":{"0":20.0,"1":10.0,"2":60.0,"3":25.0,"4":25.0},"flatten_input_for_edge_prediction":"step0: find out tryout times; step1: enter the field; step2: try out for the team; step3: look up baseball teams; step4: drive to tryout location; step5: decided to join the baseball team; step6: join the baseball team","flatten_input_for_script_generation":"You want to join the baseball team. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to join the baseball team; step1: look up baseball teams; step2: find out tryout times; step3: drive to tryout location; step4: enter the field; step5: try out for the team; step6: join the baseball team; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->0","4->1","5->3"],"reference_code":"class JoinTheBaseballTeam:\n\n    title = \"join the baseball team\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to join the baseball team\"\n\n    def step1(self):\n        return \"look up baseball teams\"\n\n    def step2(self):\n        return \"find out tryout times\"\n\n    def step3(self):\n        return \"drive to tryout location\"\n\n    def step4(self):\n        return \"enter the field\"\n\n    def step5(self):\n        return \"try out for the team\"\n\n    def step6(self):\n        return \"join the baseball team\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class JoinTheBaseballTeam:\n\n    title = \"join the baseball team\"\n    steps = 7\n\n","reference_graph":{"title":"join the baseball team","num_steps":7,"schema":["step0: decided to join the baseball team","step1: look up baseball teams","step2: find out tryout times","step3: drive to tryout location","step4: enter the field","step5: try out for the team","step6: join the baseball team"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"ask this girl out on a date","events":{"0":"walk to the girl","1":"face towards girl","2":"stop in front of girl","3":"start conversation with girl","4":"find the girl","5":"NONE","6":"ask this girl out on a date"},"context":"NONE","minutes":10.0,"events_minutes":{"0":1.0,"1":0.3333333333,"2":0.3333333333,"3":10.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to the girl; step1: face towards girl; step2: stop in front of girl; step3: start conversation with girl; step4: find the girl; step5: decided to ask this girl out on a date; step6: ask this girl out on a date","flatten_input_for_script_generation":"You want to ask this girl out on a date. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to ask this girl out on a date; step1: find the girl; step2: face towards girl; step3: walk to the girl; step4: stop in front of girl; step5: start conversation with girl; step6: ask this girl out on a date; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->1","5->4"],"reference_code":"class AskThisGirlOutOnADate:\n\n    title = \"ask this girl out on a date\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ask this girl out on a date\"\n\n    def step1(self):\n        return \"find the girl\"\n\n    def step2(self):\n        return \"face towards girl\"\n\n    def step3(self):\n        return \"walk to the girl\"\n\n    def step4(self):\n        return \"stop in front of girl\"\n\n    def step5(self):\n        return \"start conversation with girl\"\n\n    def step6(self):\n        return \"ask this girl out on a date\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AskThisGirlOutOnADate:\n\n    title = \"ask this girl out on a date\"\n    steps = 7\n\n","reference_graph":{"title":"ask this girl out on a date","num_steps":7,"schema":["step0: decided to ask this girl out on a date","step1: find the girl","step2: face towards girl","step3: walk to the girl","step4: stop in front of girl","step5: start conversation with girl","step6: ask this girl out on a date"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"show off at their wedding","events":{"0":"dance at wedding","1":"plan what to do","2":"dazzle the crowd","3":"write down the steps","4":"attend the wedding","5":"NONE","6":"show off at their wedding"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":30.0,"2":30.0,"3":20.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: dance at wedding; step1: plan what to do; step2: dazzle the crowd; step3: write down the steps; step4: attend the wedding; step5: decided to show off at their wedding; step6: show off at their wedding","flatten_input_for_script_generation":"You want to show off at their wedding. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to show off at their wedding; step1: plan what to do; step2: write down the steps; step3: attend the wedding; step4: dance at wedding; step5: dazzle the crowd; step6: show off at their wedding; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->4","4->0","5->1"],"reference_code":"class ShowOffAtTheirWedding:\n\n    title = \"show off at their wedding\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to show off at their wedding\"\n\n    def step1(self):\n        return \"plan what to do\"\n\n    def step2(self):\n        return \"write down the steps\"\n\n    def step3(self):\n        return \"attend the wedding\"\n\n    def step4(self):\n        return \"dance at wedding\"\n\n    def step5(self):\n        return \"dazzle the crowd\"\n\n    def step6(self):\n        return \"show off at their wedding\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ShowOffAtTheirWedding:\n\n    title = \"show off at their wedding\"\n    steps = 7\n\n","reference_graph":{"title":"show off at their wedding","num_steps":7,"schema":["step0: decided to show off at their wedding","step1: plan what to do","step2: write down the steps","step3: attend the wedding","step4: dance at wedding","step5: dazzle the crowd","step6: show off at their wedding"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"play in the big kid area","events":{"0":"walk to the playground","1":"park the car","2":"get in the car","3":"drive to the playground","4":"get out of the car","5":"NONE","6":"play in the big kid area"},"context":"NONE","minutes":45.0,"events_minutes":{"0":10.0,"1":5.0,"2":5.0,"3":30.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: walk to the playground; step1: park the car; step2: get in the car; step3: drive to the playground; step4: get out of the car; step5: decided to play in the big kid area; step6: play in the big kid area","flatten_input_for_script_generation":"You want to play in the big kid area. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to play in the big kid area; step1: get in the car; step2: drive to the playground; step3: park the car; step4: get out of the car; step5: walk to the playground; step6: play in the big kid area; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class PlayInTheBigKidArea:\n\n    title = \"play in the big kid area\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to play in the big kid area\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the playground\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"walk to the playground\"\n\n    def step6(self):\n        return \"play in the big kid area\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayInTheBigKidArea:\n\n    title = \"play in the big kid area\"\n    steps = 7\n\n","reference_graph":{"title":"play in the big kid area","num_steps":7,"schema":["step0: decided to play in the big kid area","step1: get in the car","step2: drive to the playground","step3: park the car","step4: get out of the car","step5: walk to the playground","step6: play in the big kid area"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"ride a large roller coaster","events":{"0":"go to the amusement park","1":"buy tickets for the park","2":"find the roller coaster.","3":"get strapped into the roller coaster.","4":"wait in line for the roller coaster.","5":"NONE","6":"ride a large roller coaster"},"context":"NONE","minutes":120.0,"events_minutes":{"0":30.0,"1":10.0,"2":15.0,"3":5.0,"4":45.0},"flatten_input_for_edge_prediction":"step0: go to the amusement park; step1: buy tickets for the park; step2: find the roller coaster.; step3: get strapped into the roller coaster.; step4: wait in line for the roller coaster.; step5: decided to ride a large roller coaster; step6: ride a large roller coaster","flatten_input_for_script_generation":"You want to ride a large roller coaster. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to ride a large roller coaster; step1: go to the amusement park; step2: buy tickets for the park; step3: find the roller coaster.; step4: wait in line for the roller coaster.; step5: get strapped into the roller coaster.; step6: ride a large roller coaster; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->6","4->3","5->0"],"reference_code":"class RideALargeRollerCoaster:\n\n    title = \"ride a large roller coaster\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a large roller coaster\"\n\n    def step1(self):\n        return \"go to the amusement park\"\n\n    def step2(self):\n        return \"buy tickets for the park\"\n\n    def step3(self):\n        return \"find the roller coaster.\"\n\n    def step4(self):\n        return \"wait in line for the roller coaster.\"\n\n    def step5(self):\n        return \"get strapped into the roller coaster.\"\n\n    def step6(self):\n        return \"ride a large roller coaster\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RideALargeRollerCoaster:\n\n    title = \"ride a large roller coaster\"\n    steps = 7\n\n","reference_graph":{"title":"ride a large roller coaster","num_steps":7,"schema":["step0: decided to ride a large roller coaster","step1: go to the amusement park","step2: buy tickets for the park","step3: find the roller coaster.","step4: wait in line for the roller coaster.","step5: get strapped into the roller coaster.","step6: ride a large roller coaster"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"borrow the family car for the night","events":{"0":"open the family car door","1":"go to the garage","2":"take a shower","3":"get ready to go out","4":"take off all clothes","5":"NONE","6":"borrow the family car for the night"},"context":"NONE","minutes":45.0,"events_minutes":{"0":2.0,"1":5.0,"2":30.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: open the family car door; step1: go to the garage; step2: take a shower; step3: get ready to go out; step4: take off all clothes; step5: decided to borrow the family car for the night; step6: borrow the family car for the night","flatten_input_for_script_generation":"You want to borrow the family car for the night. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to borrow the family car for the night; step1: take off all clothes; step2: take a shower; step3: get ready to go out; step4: go to the garage; step5: open the family car door; step6: borrow the family car for the night; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class BorrowTheFamilyCarForTheNight:\n\n    title = \"borrow the family car for the night\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to borrow the family car for the night\"\n\n    def step1(self):\n        return \"take off all clothes\"\n\n    def step2(self):\n        return \"take a shower\"\n\n    def step3(self):\n        return \"get ready to go out\"\n\n    def step4(self):\n        return \"go to the garage\"\n\n    def step5(self):\n        return \"open the family car door\"\n\n    def step6(self):\n        return \"borrow the family car for the night\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BorrowTheFamilyCarForTheNight:\n\n    title = \"borrow the family car for the night\"\n    steps = 7\n\n","reference_graph":{"title":"borrow the family car for the night","num_steps":7,"schema":["step0: decided to borrow the family car for the night","step1: take off all clothes","step2: take a shower","step3: get ready to go out","step4: go to the garage","step5: open the family car door","step6: borrow the family car for the night"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make money really fast","events":{"0":"get into car","1":"enter the plasma center","2":"exchange plasma for cash","3":"drive to plasma donation center","4":"turn car on","5":"exit the vehicle","6":"lock the vehicle","7":"NONE","8":"make money really fast"},"context":"NONE","minutes":180.0,"events_minutes":{"0":2.0,"1":2.0,"2":180.0,"3":15.0,"4":1.0,"5":1.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: get into car; step1: enter the plasma center; step2: exchange plasma for cash; step3: drive to plasma donation center; step4: turn car on; step5: exit the vehicle; step6: lock the vehicle; step7: decided to make money really fast; step8: make money really fast","flatten_input_for_script_generation":"You want to make money really fast. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step5; step5 -> step6; step6 -> step1; step1 -> step2; step2 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: decided to make money really fast; step1: get into car; step2: turn car on; step3: drive to plasma donation center; step4: exit the vehicle; step5: lock the vehicle; step6: enter the plasma center; step7: exchange plasma for cash; step8: make money really fast; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->2","2->8","3->5","4->3","5->6","6->1","7->0"],"reference_code":"class MakeMoneyReallyFast:\n\n    title = \"make money really fast\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make money really fast\"\n\n    def step1(self):\n        return \"get into car\"\n\n    def step2(self):\n        return \"turn car on\"\n\n    def step3(self):\n        return \"drive to plasma donation center\"\n\n    def step4(self):\n        return \"exit the vehicle\"\n\n    def step5(self):\n        return \"lock the vehicle\"\n\n    def step6(self):\n        return \"enter the plasma center\"\n\n    def step7(self):\n        return \"exchange plasma for cash\"\n\n    def step8(self):\n        return \"make money really fast\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeMoneyReallyFast:\n\n    title = \"make money really fast\"\n    steps = 9\n\n","reference_graph":{"title":"make money really fast","num_steps":9,"schema":["step0: decided to make money really fast","step1: get into car","step2: turn car on","step3: drive to plasma donation center","step4: exit the vehicle","step5: lock the vehicle","step6: enter the plasma center","step7: exchange plasma for cash","step8: make money really fast"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"put in a new SIM card","events":{"0":"remove old SIM card","1":"get a SIM card","2":"get a screw driver","3":"unscrew back of mobile phone","4":"screw back of phone in","5":"install new SIM card","6":"remove back of mobile phone","7":"NONE","8":"put in a new SIM card"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.3333333333,"3":1.0,"4":2.0,"5":1.0,"6":0.4166666667},"flatten_input_for_edge_prediction":"step0: remove old SIM card; step1: get a SIM card; step2: get a screw driver; step3: unscrew back of mobile phone; step4: screw back of phone in; step5: install new SIM card; step6: remove back of mobile phone; step7: decided to put in a new SIM card; step8: put in a new SIM card","flatten_input_for_script_generation":"You want to put in a new SIM card. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step1 -> step5; step3 -> step6; step6 -> step0; step0 -> step5; step5 -> step4; step4 -> step8; step7 -> step2; step7 -> step1","flatten_output_for_script_generation":"step0: decided to put in a new SIM card; step1: get a SIM card; step2: get a screw driver; step3: unscrew back of mobile phone; step4: remove back of mobile phone; step5: install new SIM card; step6: screw back of phone in; step7: remove old SIM card; step8: put in a new SIM card; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step4 -> step7; step7 -> step5; step6 -> step8","gold_edges_for_prediction":["0->5","1->5","2->3","3->6","4->8","5->4","6->0","7->2","7->1"],"reference_code":"class PutInANewSimCard:\n\n    title = \"put in a new SIM card\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to put in a new SIM card\"\n\n    def step1(self):\n        return \"get a SIM card\"\n\n    def step2(self):\n        return \"get a screw driver\"\n\n    def step3(self):\n        return \"unscrew back of mobile phone\"\n\n    def step4(self):\n        return \"remove back of mobile phone\"\n\n    def step5(self):\n        return \"install new SIM card\"\n\n    def step6(self):\n        return \"screw back of phone in\"\n\n    def step7(self):\n        return \"remove old SIM card\"\n\n    def step8(self):\n        return \"put in a new SIM card\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step7\",\n            \"step7 -> step5\",\n            \"step6 -> step8\",\n        ]\n","input_prompt_code":"class PutInANewSimCard:\n\n    title = \"put in a new SIM card\"\n    steps = 9\n\n","reference_graph":{"title":"put in a new SIM card","num_steps":9,"schema":["step0: decided to put in a new SIM card","step1: get a SIM card","step2: get a screw driver","step3: unscrew back of mobile phone","step4: remove back of mobile phone","step5: install new SIM card","step6: screw back of phone in","step7: remove old SIM card","step8: put in a new SIM card"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step4 -> step7","step7 -> step5","step6 -> step8"]}}
{"scenario":"see elephants up close","events":{"0":"get in the car","1":"go inside the zoo","2":"drive to the zoo","3":"get ready to leave","4":"park the car","5":"NONE","6":"see elephants up close"},"context":"NONE","minutes":120.0,"events_minutes":{"0":5.0,"1":20.0,"2":30.0,"3":20.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: go inside the zoo; step2: drive to the zoo; step3: get ready to leave; step4: park the car; step5: decided to see elephants up close; step6: see elephants up close","flatten_input_for_script_generation":"You want to see elephants up close. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to see elephants up close; step1: get ready to leave; step2: get in the car; step3: drive to the zoo; step4: park the car; step5: go inside the zoo; step6: see elephants up close; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->0","4->1","5->3"],"reference_code":"class SeeElephantsUpClose:\n\n    title = \"see elephants up close\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to see elephants up close\"\n\n    def step1(self):\n        return \"get ready to leave\"\n\n    def step2(self):\n        return \"get in the car\"\n\n    def step3(self):\n        return \"drive to the zoo\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"go inside the zoo\"\n\n    def step6(self):\n        return \"see elephants up close\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SeeElephantsUpClose:\n\n    title = \"see elephants up close\"\n    steps = 7\n\n","reference_graph":{"title":"see elephants up close","num_steps":7,"schema":["step0: decided to see elephants up close","step1: get ready to leave","step2: get in the car","step3: drive to the zoo","step4: park the car","step5: go inside the zoo","step6: see elephants up close"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go play at the neighbor boy's house","events":{"0":"walk out the front door","1":"call out to boy","2":"walk down steps and around fence","3":"decide on a game to play","4":"walk into neighbor boy's yard","5":"NONE","6":"go play at the neighbor boy's house"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.5833333333,"1":0.5833333333,"2":1.0,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: walk out the front door; step1: call out to boy; step2: walk down steps and around fence; step3: decide on a game to play; step4: walk into neighbor boy's yard; step5: decided to go play at the neighbor boy's house; step6: go play at the neighbor boy's house","flatten_input_for_script_generation":"You want to go play at the neighbor boy's house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step1 -> step3; step4 -> step3; step3 -> step6; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: decided to go play at the neighbor boy's house; step1: call out to boy; step2: walk out the front door; step3: walk down steps and around fence; step4: walk into neighbor boy's yard; step5: decide on a game to play; step6: go play at the neighbor boy's house; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->6","4->3","5->0","5->1"],"reference_code":"class GoPlayAtTheNeighborBoysHouse:\n\n    title = \"go play at the neighbor boy's house\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go play at the neighbor boy's house\"\n\n    def step1(self):\n        return \"call out to boy\"\n\n    def step2(self):\n        return \"walk out the front door\"\n\n    def step3(self):\n        return \"walk down steps and around fence\"\n\n    def step4(self):\n        return \"walk into neighbor boy's yard\"\n\n    def step5(self):\n        return \"decide on a game to play\"\n\n    def step6(self):\n        return \"go play at the neighbor boy's house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoPlayAtTheNeighborBoysHouse:\n\n    title = \"go play at the neighbor boy's house\"\n    steps = 7\n\n","reference_graph":{"title":"go play at the neighbor boy's house","num_steps":7,"schema":["step0: decided to go play at the neighbor boy's house","step1: call out to boy","step2: walk out the front door","step3: walk down steps and around fence","step4: walk into neighbor boy's yard","step5: decide on a game to play","step6: go play at the neighbor boy's house"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step5","step5 -> step6"]}}
{"scenario":"get away from the city life","events":{"0":"Leave the apartment building","1":"Get directions to the trail","2":"Get into car","3":"Look up a trail outside of the city","4":"Follow directions to the trail","5":"Take a breath of fresh country air","6":"Walk to the car","7":"NONE","8":"get away from the city life"},"context":"NONE","minutes":180.0,"events_minutes":{"0":5.0,"1":5.0,"2":0.25,"3":20.0,"4":60.0,"5":0.5,"6":2.0},"flatten_input_for_edge_prediction":"step0: Leave the apartment building; step1: Get directions to the trail; step2: Get into car; step3: Look up a trail outside of the city; step4: Follow directions to the trail; step5: Take a breath of fresh country air; step6: Walk to the car; step7: decided to get away from the city life; step8: get away from the city life","flatten_input_for_script_generation":"You want to get away from the city life. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step6; step6 -> step2; step2 -> step4; step4 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to get away from the city life; step1: Look up a trail outside of the city; step2: Get directions to the trail; step3: Leave the apartment building; step4: Walk to the car; step5: Get into car; step6: Follow directions to the trail; step7: Take a breath of fresh country air; step8: get away from the city life; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->5","5->8","6->2","7->3"],"reference_code":"class GetAwayFromTheCityLife:\n\n    title = \"get away from the city life\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get away from the city life\"\n\n    def step1(self):\n        return \"Look up a trail outside of the city\"\n\n    def step2(self):\n        return \"Get directions to the trail\"\n\n    def step3(self):\n        return \"Leave the apartment building\"\n\n    def step4(self):\n        return \"Walk to the car\"\n\n    def step5(self):\n        return \"Get into car\"\n\n    def step6(self):\n        return \"Follow directions to the trail\"\n\n    def step7(self):\n        return \"Take a breath of fresh country air\"\n\n    def step8(self):\n        return \"get away from the city life\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetAwayFromTheCityLife:\n\n    title = \"get away from the city life\"\n    steps = 9\n\n","reference_graph":{"title":"get away from the city life","num_steps":9,"schema":["step0: decided to get away from the city life","step1: Look up a trail outside of the city","step2: Get directions to the trail","step3: Leave the apartment building","step4: Walk to the car","step5: Get into car","step6: Follow directions to the trail","step7: Take a breath of fresh country air","step8: get away from the city life"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get a cat","events":{"0":"look at different animals","1":"go inside shelter","2":"get in the car","3":"park the car","4":"drive to animal shelter","5":"NONE","6":"get a cat"},"context":"NONE","minutes":1.0,"events_minutes":{"0":30.0,"1":5.0,"2":5.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: look at different animals; step1: go inside shelter; step2: get in the car; step3: park the car; step4: drive to animal shelter; step5: decided to get a cat; step6: get a cat","flatten_input_for_script_generation":"You want to get a cat. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to get a cat; step1: get in the car; step2: drive to animal shelter; step3: park the car; step4: go inside shelter; step5: look at different animals; step6: get a cat; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->3","5->2"],"reference_code":"class GetACat:\n\n    title = \"get a cat\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a cat\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to animal shelter\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go inside shelter\"\n\n    def step5(self):\n        return \"look at different animals\"\n\n    def step6(self):\n        return \"get a cat\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetACat:\n\n    title = \"get a cat\"\n    steps = 7\n\n","reference_graph":{"title":"get a cat","num_steps":7,"schema":["step0: decided to get a cat","step1: get in the car","step2: drive to animal shelter","step3: park the car","step4: go inside shelter","step5: look at different animals","step6: get a cat"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch the big game","events":{"0":"Turn on the television.","1":"Flip to desired channel.","2":"Buy preferred snacks.","3":"Change into comfortable clothes.","4":"Put snacks in bowls.","5":"Sit on the couch.","6":"Put snack bowls on coffee table.","7":"NONE","8":"watch the big game"},"context":"NONE","minutes":240.0,"events_minutes":{"0":0.05,"1":1.0,"2":30.0,"3":2.0,"4":10.0,"5":0.0333333333,"6":1.0},"flatten_input_for_edge_prediction":"step0: Turn on the television.; step1: Flip to desired channel.; step2: Buy preferred snacks.; step3: Change into comfortable clothes.; step4: Put snacks in bowls.; step5: Sit on the couch.; step6: Put snack bowls on coffee table.; step7: decided to watch the big game; step8: watch the big game","flatten_input_for_script_generation":"You want to watch the big game. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step2 -> step4; step2 -> step3; step2 -> step0; step4 -> step6; step6 -> step5; step0 -> step1; step1 -> step8; step5 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to watch the big game; step1: Buy preferred snacks.; step2: Change into comfortable clothes.; step3: Sit on the couch.; step4: watch the big game; step5: Put snacks in bowls.; step6: Turn on the television.; step7: Put snack bowls on coffee table.; step8: Flip to desired channel.; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step1 -> step2; step1 -> step6; step5 -> step7; step6 -> step8; step7 -> step3; step8 -> step4","gold_edges_for_prediction":["0->1","1->8","2->4","2->3","2->0","3->5","4->6","5->8","6->5","7->2"],"reference_code":"class WatchTheBigGame:\n\n    title = \"watch the big game\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to watch the big game\"\n\n    def step1(self):\n        return \"Buy preferred snacks.\"\n\n    def step2(self):\n        return \"Change into comfortable clothes.\"\n\n    def step3(self):\n        return \"Sit on the couch.\"\n\n    def step4(self):\n        return \"watch the big game\"\n\n    def step5(self):\n        return \"Put snacks in bowls.\"\n\n    def step6(self):\n        return \"Turn on the television.\"\n\n    def step7(self):\n        return \"Put snack bowls on coffee table.\"\n\n    def step8(self):\n        return \"Flip to desired channel.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step1 -> step2\",\n            \"step1 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step3\",\n            \"step8 -> step4\",\n        ]\n","input_prompt_code":"class WatchTheBigGame:\n\n    title = \"watch the big game\"\n    steps = 9\n\n","reference_graph":{"title":"watch the big game","num_steps":9,"schema":["step0: decided to watch the big game","step1: Buy preferred snacks.","step2: Change into comfortable clothes.","step3: Sit on the couch.","step4: watch the big game","step5: Put snacks in bowls.","step6: Turn on the television.","step7: Put snack bowls on coffee table.","step8: Flip to desired channel."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step1 -> step2","step1 -> step6","step5 -> step7","step6 -> step8","step7 -> step3","step8 -> step4"]}}
{"scenario":"go to the neighbor's garage sale","events":{"0":"get out of car","1":"drive to sale","2":"walk up to neighbor sale","3":"get in car","4":"find neighbors having sales","5":"NONE","6":"go to the neighbor's garage sale"},"context":"NONE","minutes":60.0,"events_minutes":{"0":3.0,"1":10.0,"2":3.0,"3":5.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: get out of car; step1: drive to sale; step2: walk up to neighbor sale; step3: get in car; step4: find neighbors having sales; step5: decided to go to the neighbor's garage sale; step6: go to the neighbor's garage sale","flatten_input_for_script_generation":"You want to go to the neighbor's garage sale. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to go to the neighbor's garage sale; step1: find neighbors having sales; step2: get in car; step3: drive to sale; step4: get out of car; step5: walk up to neighbor sale; step6: go to the neighbor's garage sale; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class GoToTheNeighborsGarageSale:\n\n    title = \"go to the neighbor's garage sale\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go to the neighbor's garage sale\"\n\n    def step1(self):\n        return \"find neighbors having sales\"\n\n    def step2(self):\n        return \"get in car\"\n\n    def step3(self):\n        return \"drive to sale\"\n\n    def step4(self):\n        return \"get out of car\"\n\n    def step5(self):\n        return \"walk up to neighbor sale\"\n\n    def step6(self):\n        return \"go to the neighbor's garage sale\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoToTheNeighborsGarageSale:\n\n    title = \"go to the neighbor's garage sale\"\n    steps = 7\n\n","reference_graph":{"title":"go to the neighbor's garage sale","num_steps":7,"schema":["step0: decided to go to the neighbor's garage sale","step1: find neighbors having sales","step2: get in car","step3: drive to sale","step4: get out of car","step5: walk up to neighbor sale","step6: go to the neighbor's garage sale"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go out in the rain","events":{"0":"put on right rain boot","1":"put on left rain boot","2":"get rain coat out of the closet.","3":"Go outside in the yard.","4":"walk towards the door.","5":"NONE","6":"go out in the rain"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.5,"1":0.5,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: put on right rain boot; step1: put on left rain boot; step2: get rain coat out of the closet.; step3: Go outside in the yard.; step4: walk towards the door.; step5: decided to go out in the rain; step6: go out in the rain","flatten_input_for_script_generation":"You want to go out in the rain. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: decided to go out in the rain; step1: put on right rain boot; step2: put on left rain boot; step3: get rain coat out of the closet.; step4: walk towards the door.; step5: Go outside in the yard.; step6: go out in the rain; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->4","3->6","4->3","5->1","5->0"],"reference_code":"class GoOutInTheRain:\n\n    title = \"go out in the rain\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to go out in the rain\"\n\n    def step1(self):\n        return \"put on right rain boot\"\n\n    def step2(self):\n        return \"put on left rain boot\"\n\n    def step3(self):\n        return \"get rain coat out of the closet.\"\n\n    def step4(self):\n        return \"walk towards the door.\"\n\n    def step5(self):\n        return \"Go outside in the yard.\"\n\n    def step6(self):\n        return \"go out in the rain\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOutInTheRain:\n\n    title = \"go out in the rain\"\n    steps = 7\n\n","reference_graph":{"title":"go out in the rain","num_steps":7,"schema":["step0: decided to go out in the rain","step1: put on right rain boot","step2: put on left rain boot","step3: get rain coat out of the closet.","step4: walk towards the door.","step5: Go outside in the yard.","step6: go out in the rain"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"learn how to fly","events":{"0":"choose a flying school","1":"drive to the flying school","2":"look for a flying school online","3":"sign up for the flying school","4":"take the first lesson","5":"NONE","6":"learn how to fly"},"context":"NONE","minutes":300.0,"events_minutes":{"0":5.0,"1":35.0,"2":15.0,"3":5.0,"4":240.0},"flatten_input_for_edge_prediction":"step0: choose a flying school; step1: drive to the flying school; step2: look for a flying school online; step3: sign up for the flying school; step4: take the first lesson; step5: decided to learn how to fly; step6: learn how to fly","flatten_input_for_script_generation":"You want to learn how to fly. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to learn how to fly; step1: look for a flying school online; step2: choose a flying school; step3: sign up for the flying school; step4: drive to the flying school; step5: take the first lesson; step6: learn how to fly; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class LearnHowToFly:\n\n    title = \"learn how to fly\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to learn how to fly\"\n\n    def step1(self):\n        return \"look for a flying school online\"\n\n    def step2(self):\n        return \"choose a flying school\"\n\n    def step3(self):\n        return \"sign up for the flying school\"\n\n    def step4(self):\n        return \"drive to the flying school\"\n\n    def step5(self):\n        return \"take the first lesson\"\n\n    def step6(self):\n        return \"learn how to fly\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LearnHowToFly:\n\n    title = \"learn how to fly\"\n    steps = 7\n\n","reference_graph":{"title":"learn how to fly","num_steps":7,"schema":["step0: decided to learn how to fly","step1: look for a flying school online","step2: choose a flying school","step3: sign up for the flying school","step4: drive to the flying school","step5: take the first lesson","step6: learn how to fly"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run in a marathon","events":{"0":"Decide on marathon to run.","1":"Plan out training regiment.","2":"Travel to marathon start on date.","3":"Train until date of marathon.","4":"Search for marathons to participate in.","5":"NONE","6":"run in a marathon"},"context":"NONE","minutes":43200.0,"events_minutes":{"0":15.0,"1":30.0,"2":60.0,"3":43200.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Decide on marathon to run.; step1: Plan out training regiment.; step2: Travel to marathon start on date.; step3: Train until date of marathon.; step4: Search for marathons to participate in.; step5: decided to run in a marathon; step6: run in a marathon","flatten_input_for_script_generation":"You want to run in a marathon. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to run in a marathon; step1: Search for marathons to participate in.; step2: Decide on marathon to run.; step3: Plan out training regiment.; step4: Train until date of marathon.; step5: Travel to marathon start on date.; step6: run in a marathon; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class RunInAMarathon:\n\n    title = \"run in a marathon\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to run in a marathon\"\n\n    def step1(self):\n        return \"Search for marathons to participate in.\"\n\n    def step2(self):\n        return \"Decide on marathon to run.\"\n\n    def step3(self):\n        return \"Plan out training regiment.\"\n\n    def step4(self):\n        return \"Train until date of marathon.\"\n\n    def step5(self):\n        return \"Travel to marathon start on date.\"\n\n    def step6(self):\n        return \"run in a marathon\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RunInAMarathon:\n\n    title = \"run in a marathon\"\n    steps = 7\n\n","reference_graph":{"title":"run in a marathon","num_steps":7,"schema":["step0: decided to run in a marathon","step1: Search for marathons to participate in.","step2: Decide on marathon to run.","step3: Plan out training regiment.","step4: Train until date of marathon.","step5: Travel to marathon start on date.","step6: run in a marathon"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick apples at a farm","events":{"0":"get in the car","1":"walk on the farm","2":"park the car","3":"get out of the car","4":"drive to farm","5":"NONE","6":"pick apples at a farm"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":10.0,"2":5.0,"3":1.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: get in the car; step1: walk on the farm; step2: park the car; step3: get out of the car; step4: drive to farm; step5: decided to pick apples at a farm; step6: pick apples at a farm","flatten_input_for_script_generation":"You want to pick apples at a farm. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to pick apples at a farm; step1: get in the car; step2: drive to farm; step3: park the car; step4: get out of the car; step5: walk on the farm; step6: pick apples at a farm; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class PickApplesAtAFarm:\n\n    title = \"pick apples at a farm\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to pick apples at a farm\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to farm\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"walk on the farm\"\n\n    def step6(self):\n        return \"pick apples at a farm\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickApplesAtAFarm:\n\n    title = \"pick apples at a farm\"\n    steps = 7\n\n","reference_graph":{"title":"pick apples at a farm","num_steps":7,"schema":["step0: decided to pick apples at a farm","step1: get in the car","step2: drive to farm","step3: park the car","step4: get out of the car","step5: walk on the farm","step6: pick apples at a farm"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"attend weekly lessons","events":{"0":"attend the class","1":"get out of the house","2":"get out of the car","3":"walk to class","4":"go back home","5":"get into the car","6":"drive to class","7":"schedule lessons with teacher","8":"attend weekly lessons"},"context":"schedule lessons with teacher","minutes":3120.0,"events_minutes":{"0":60.0,"1":2.0,"2":1.0,"3":1.0,"4":15.0,"5":1.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: attend the class; step1: get out of the house; step2: get out of the car; step3: walk to class; step4: go back home; step5: get into the car; step6: drive to class; step7: schedule lessons with teacher; step8: attend weekly lessons","flatten_input_for_script_generation":"You want to attend weekly lessons. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step6; step6 -> step2; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: schedule lessons with teacher; step1: get out of the house; step2: get into the car; step3: drive to class; step4: get out of the car; step5: walk to class; step6: attend the class; step7: go back home; step8: attend weekly lessons; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->5","2->3","3->0","4->8","5->6","6->2","7->1"],"reference_code":"class AttendWeeklyLessons:\n\n    title = \"attend weekly lessons\"\n    steps = 9\n\n    def step0(self):\n        return \"schedule lessons with teacher\"\n\n    def step1(self):\n        return \"get out of the house\"\n\n    def step2(self):\n        return \"get into the car\"\n\n    def step3(self):\n        return \"drive to class\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"walk to class\"\n\n    def step6(self):\n        return \"attend the class\"\n\n    def step7(self):\n        return \"go back home\"\n\n    def step8(self):\n        return \"attend weekly lessons\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class AttendWeeklyLessons:\n\n    title = \"attend weekly lessons\"\n    steps = 9\n\n","reference_graph":{"title":"attend weekly lessons","num_steps":9,"schema":["step0: schedule lessons with teacher","step1: get out of the house","step2: get into the car","step3: drive to class","step4: get out of the car","step5: walk to class","step6: attend the class","step7: go back home","step8: attend weekly lessons"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"turn on computer","events":{"0":"decide to draw something","1":"pull out computer","2":"get up from couch","3":"notice nice drawing commercial","4":"sit and watch tv","5":"head towards desk","6":"NONE","7":"turn on computer"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.3,"1":1.0,"2":0.3166666667,"3":1.0,"4":4.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: decide to draw something; step1: pull out computer; step2: get up from couch; step3: notice nice drawing commercial; step4: sit and watch tv; step5: head towards desk; step6: decided to turn on computer; step7: turn on computer","flatten_input_for_script_generation":"You want to turn on computer. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step5; step5 -> step1; step1 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to turn on computer; step1: sit and watch tv; step2: notice nice drawing commercial; step3: decide to draw something; step4: get up from couch; step5: head towards desk; step6: pull out computer; step7: turn on computer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->7","2->5","3->0","4->3","5->1","6->4"],"reference_code":"class TurnOnComputer:\n\n    title = \"turn on computer\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to turn on computer\"\n\n    def step1(self):\n        return \"sit and watch tv\"\n\n    def step2(self):\n        return \"notice nice drawing commercial\"\n\n    def step3(self):\n        return \"decide to draw something\"\n\n    def step4(self):\n        return \"get up from couch\"\n\n    def step5(self):\n        return \"head towards desk\"\n\n    def step6(self):\n        return \"pull out computer\"\n\n    def step7(self):\n        return \"turn on computer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TurnOnComputer:\n\n    title = \"turn on computer\"\n    steps = 8\n\n","reference_graph":{"title":"turn on computer","num_steps":8,"schema":["step0: decided to turn on computer","step1: sit and watch tv","step2: notice nice drawing commercial","step3: decide to draw something","step4: get up from couch","step5: head towards desk","step6: pull out computer","step7: turn on computer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"park the car","events":{"0":"locate open parking spot","1":"find parking garage","2":"drive down aisle","3":"enter parking garage","4":"get parking booth ticket","5":"drive to the airport","6":"park the car"},"context":"drive to the airport","minutes":5.0,"events_minutes":{"0":3.0,"1":1.0,"2":3.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: locate open parking spot; step1: find parking garage; step2: drive down aisle; step3: enter parking garage; step4: get parking booth ticket; step5: drive to the airport; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: drive to the airport; step1: find parking garage; step2: get parking booth ticket; step3: enter parking garage; step4: drive down aisle; step5: locate open parking spot; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the airport\"\n\n    def step1(self):\n        return \"find parking garage\"\n\n    def step2(self):\n        return \"get parking booth ticket\"\n\n    def step3(self):\n        return \"enter parking garage\"\n\n    def step4(self):\n        return \"drive down aisle\"\n\n    def step5(self):\n        return \"locate open parking spot\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to the airport","step1: find parking garage","step2: get parking booth ticket","step3: enter parking garage","step4: drive down aisle","step5: locate open parking spot","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"get out of the car","1":"pull up the windows","2":"stop the car","3":"get to the parking spot","4":"look for a parking spot","5":"close the car doors","6":"drive to the camp","7":"park the car"},"context":"drive to the camp","minutes":5.0,"events_minutes":{"0":0.5,"1":0.5,"2":0.5,"3":0.5,"4":0.5,"5":0.5},"flatten_input_for_edge_prediction":"step0: get out of the car; step1: pull up the windows; step2: stop the car; step3: get to the parking spot; step4: look for a parking spot; step5: close the car doors; step6: drive to the camp; step7: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: drive to the camp; step1: look for a parking spot; step2: get to the parking spot; step3: stop the car; step4: pull up the windows; step5: get out of the car; step6: close the car doors; step7: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->0","2->1","3->2","4->3","5->7","6->4"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to the camp\"\n\n    def step1(self):\n        return \"look for a parking spot\"\n\n    def step2(self):\n        return \"get to the parking spot\"\n\n    def step3(self):\n        return \"stop the car\"\n\n    def step4(self):\n        return \"pull up the windows\"\n\n    def step5(self):\n        return \"get out of the car\"\n\n    def step6(self):\n        return \"close the car doors\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n","reference_graph":{"title":"park the car","num_steps":8,"schema":["step0: drive to the camp","step1: look for a parking spot","step2: get to the parking spot","step3: stop the car","step4: pull up the windows","step5: get out of the car","step6: close the car doors","step7: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Go into the locker room.","events":{"0":"walk to locker room","1":"find a parking spot","2":"show front desk gym pass","3":"walk inside gym","4":"park car in spot","5":"Go to the gym","6":"Go into the locker room."},"context":"Go to the gym","minutes":5.0,"events_minutes":{"0":2.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to locker room; step1: find a parking spot; step2: show front desk gym pass; step3: walk inside gym; step4: park car in spot; step5: Go to the gym; step6: Go into the locker room.","flatten_input_for_script_generation":"You want to Go into the locker room.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Go to the gym; step1: find a parking spot; step2: park car in spot; step3: walk inside gym; step4: show front desk gym pass; step5: walk to locker room; step6: Go into the locker room.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class GoIntoTheLockerRoom:\n\n    title = \"Go into the locker room.\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the gym\"\n\n    def step1(self):\n        return \"find a parking spot\"\n\n    def step2(self):\n        return \"park car in spot\"\n\n    def step3(self):\n        return \"walk inside gym\"\n\n    def step4(self):\n        return \"show front desk gym pass\"\n\n    def step5(self):\n        return \"walk to locker room\"\n\n    def step6(self):\n        return \"Go into the locker room.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoIntoTheLockerRoom:\n\n    title = \"Go into the locker room.\"\n    steps = 7\n\n","reference_graph":{"title":"Go into the locker room.","num_steps":7,"schema":["step0: Go to the gym","step1: find a parking spot","step2: park car in spot","step3: walk inside gym","step4: show front desk gym pass","step5: walk to locker room","step6: Go into the locker room."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Set up a table for baked goods.","events":{"0":"decide best spot for table","1":"decide to bake double the amount","2":"continue baking more","3":"load goods carefully into car","4":"start packing up baked goods","5":"take out foldable table from car","6":"check time on phone","7":"Bake sweets to sell.","8":"Set up a table for baked goods."},"context":"Bake sweets to sell.","minutes":30.0,"events_minutes":{"0":10.0,"1":0.4166666667,"2":60.0,"3":10.0,"4":15.0,"5":8.0,"6":0.25},"flatten_input_for_edge_prediction":"step0: decide best spot for table; step1: decide to bake double the amount; step2: continue baking more; step3: load goods carefully into car; step4: start packing up baked goods; step5: take out foldable table from car; step6: check time on phone; step7: Bake sweets to sell.; step8: Set up a table for baked goods.","flatten_input_for_script_generation":"You want to Set up a table for baked goods.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step1 -> step6; step2 -> step4; step6 -> step4; step4 -> step3; step3 -> step5; step3 -> step0; step5 -> step8; step0 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: Bake sweets to sell.; step1: decide to bake double the amount; step2: continue baking more; step3: check time on phone; step4: start packing up baked goods; step5: load goods carefully into car; step6: take out foldable table from car; step7: decide best spot for table; step8: Set up a table for baked goods.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->2","1->6","2->4","3->5","3->0","4->3","5->8","6->4","7->1"],"reference_code":"class SetUpATableForBakedGoods:\n\n    title = \"Set up a table for baked goods.\"\n    steps = 9\n\n    def step0(self):\n        return \"Bake sweets to sell.\"\n\n    def step1(self):\n        return \"decide to bake double the amount\"\n\n    def step2(self):\n        return \"continue baking more\"\n\n    def step3(self):\n        return \"check time on phone\"\n\n    def step4(self):\n        return \"start packing up baked goods\"\n\n    def step5(self):\n        return \"load goods carefully into car\"\n\n    def step6(self):\n        return \"take out foldable table from car\"\n\n    def step7(self):\n        return \"decide best spot for table\"\n\n    def step8(self):\n        return \"Set up a table for baked goods.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class SetUpATableForBakedGoods:\n\n    title = \"Set up a table for baked goods.\"\n    steps = 9\n\n","reference_graph":{"title":"Set up a table for baked goods.","num_steps":9,"schema":["step0: Bake sweets to sell.","step1: decide to bake double the amount","step2: continue baking more","step3: check time on phone","step4: start packing up baked goods","step5: load goods carefully into car","step6: take out foldable table from car","step7: decide best spot for table","step8: Set up a table for baked goods."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"let cool after removing","events":{"0":"put on serving plate","1":"remove from pan","2":"let baking pan rest on counter","3":"get cooling rack out of cabinet","4":"let rest on cooling rack","5":"bake in the oven as instructed","6":"let cool after removing"},"context":"bake in the oven as instructed","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":1.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: put on serving plate; step1: remove from pan; step2: let baking pan rest on counter; step3: get cooling rack out of cabinet; step4: let rest on cooling rack; step5: bake in the oven as instructed; step6: let cool after removing","flatten_input_for_script_generation":"You want to let cool after removing. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: bake in the oven as instructed; step1: get cooling rack out of cabinet; step2: let baking pan rest on counter; step3: remove from pan; step4: let rest on cooling rack; step5: put on serving plate; step6: let cool after removing; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->2","4->0","5->3"],"reference_code":"class LetCoolAfterRemoving:\n\n    title = \"let cool after removing\"\n    steps = 7\n\n    def step0(self):\n        return \"bake in the oven as instructed\"\n\n    def step1(self):\n        return \"get cooling rack out of cabinet\"\n\n    def step2(self):\n        return \"let baking pan rest on counter\"\n\n    def step3(self):\n        return \"remove from pan\"\n\n    def step4(self):\n        return \"let rest on cooling rack\"\n\n    def step5(self):\n        return \"put on serving plate\"\n\n    def step6(self):\n        return \"let cool after removing\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LetCoolAfterRemoving:\n\n    title = \"let cool after removing\"\n    steps = 7\n\n","reference_graph":{"title":"let cool after removing","num_steps":7,"schema":["step0: bake in the oven as instructed","step1: get cooling rack out of cabinet","step2: let baking pan rest on counter","step3: remove from pan","step4: let rest on cooling rack","step5: put on serving plate","step6: let cool after removing"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get dressed in work clothes.","events":{"0":"walk back to bedroom","1":"walk to the bathroom","2":"get out of bed","3":"use a towel to dry off","4":"take a shower","5":"turn off alarm","6":"Wake up on work-day.","7":"Get dressed in work clothes."},"context":"Wake up on work-day.","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":2.0,"4":10.0,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk back to bedroom; step1: walk to the bathroom; step2: get out of bed; step3: use a towel to dry off; step4: take a shower; step5: turn off alarm; step6: Wake up on work-day.; step7: Get dressed in work clothes.","flatten_input_for_script_generation":"You want to Get dressed in work clothes.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: Wake up on work-day.; step1: turn off alarm; step2: get out of bed; step3: walk to the bathroom; step4: take a shower; step5: use a towel to dry off; step6: walk back to bedroom; step7: Get dressed in work clothes.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->1","3->0","4->3","5->2","6->5"],"reference_code":"class GetDressedInWorkClothes:\n\n    title = \"Get dressed in work clothes.\"\n    steps = 8\n\n    def step0(self):\n        return \"Wake up on work-day.\"\n\n    def step1(self):\n        return \"turn off alarm\"\n\n    def step2(self):\n        return \"get out of bed\"\n\n    def step3(self):\n        return \"walk to the bathroom\"\n\n    def step4(self):\n        return \"take a shower\"\n\n    def step5(self):\n        return \"use a towel to dry off\"\n\n    def step6(self):\n        return \"walk back to bedroom\"\n\n    def step7(self):\n        return \"Get dressed in work clothes.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetDressedInWorkClothes:\n\n    title = \"Get dressed in work clothes.\"\n    steps = 8\n\n","reference_graph":{"title":"Get dressed in work clothes.","num_steps":8,"schema":["step0: Wake up on work-day.","step1: turn off alarm","step2: get out of bed","step3: walk to the bathroom","step4: take a shower","step5: use a towel to dry off","step6: walk back to bedroom","step7: Get dressed in work clothes."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"stand in line at the cash register","events":{"0":"Look for the open cash register","1":"Walk to the cash register","2":"Check the price of the book","3":"Check for any damage","4":"Go to the open cash register","5":"make a final pick","6":"stand in line at the cash register"},"context":"make a final pick","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.1666666667,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Look for the open cash register; step1: Walk to the cash register; step2: Check the price of the book; step3: Check for any damage; step4: Go to the open cash register; step5: make a final pick; step6: stand in line at the cash register","flatten_input_for_script_generation":"You want to stand in line at the cash register. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step0; step1 -> step4; step0 -> step1; step4 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: make a final pick; step1: Check for any damage; step2: Look for the open cash register; step3: Walk to the cash register; step4: Check the price of the book; step5: Go to the open cash register; step6: stand in line at the cash register; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step2; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->0","4->6","5->2","5->3"],"reference_code":"class StandInLineAtTheCashRegister:\n\n    title = \"stand in line at the cash register\"\n    steps = 7\n\n    def step0(self):\n        return \"make a final pick\"\n\n    def step1(self):\n        return \"Check for any damage\"\n\n    def step2(self):\n        return \"Look for the open cash register\"\n\n    def step3(self):\n        return \"Walk to the cash register\"\n\n    def step4(self):\n        return \"Check the price of the book\"\n\n    def step5(self):\n        return \"Go to the open cash register\"\n\n    def step6(self):\n        return \"stand in line at the cash register\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step2\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StandInLineAtTheCashRegister:\n\n    title = \"stand in line at the cash register\"\n    steps = 7\n\n","reference_graph":{"title":"stand in line at the cash register","num_steps":7,"schema":["step0: make a final pick","step1: Check for any damage","step2: Look for the open cash register","step3: Walk to the cash register","step4: Check the price of the book","step5: Go to the open cash register","step6: stand in line at the cash register"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step2","step3 -> step5","step5 -> step6"]}}
{"scenario":"Butcher the chicken up","events":{"0":"Take the chicken out of the packaging.","1":"Cut the chicken into various pieces as desired.","2":"Carry the chicken into the kitchen.","3":"Take out a sharp knife.","4":"Place the chicken on a cutting board.","5":"Ride back home","6":"Butcher the chicken up"},"context":"Ride back home","minutes":15.0,"events_minutes":{"0":0.25,"1":15.0,"2":0.3333333333,"3":0.1666666667,"4":0.25},"flatten_input_for_edge_prediction":"step0: Take the chicken out of the packaging.; step1: Cut the chicken into various pieces as desired.; step2: Carry the chicken into the kitchen.; step3: Take out a sharp knife.; step4: Place the chicken on a cutting board.; step5: Ride back home; step6: Butcher the chicken up","flatten_input_for_script_generation":"You want to Butcher the chicken up. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step0 -> step3; step4 -> step1; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Ride back home; step1: Carry the chicken into the kitchen.; step2: Take the chicken out of the packaging.; step3: Place the chicken on a cutting board.; step4: Take out a sharp knife.; step5: Cut the chicken into various pieces as desired.; step6: Butcher the chicken up; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","0->3","1->6","2->0","3->1","4->1","5->2"],"reference_code":"class ButcherTheChickenUp:\n\n    title = \"Butcher the chicken up\"\n    steps = 7\n\n    def step0(self):\n        return \"Ride back home\"\n\n    def step1(self):\n        return \"Carry the chicken into the kitchen.\"\n\n    def step2(self):\n        return \"Take the chicken out of the packaging.\"\n\n    def step3(self):\n        return \"Place the chicken on a cutting board.\"\n\n    def step4(self):\n        return \"Take out a sharp knife.\"\n\n    def step5(self):\n        return \"Cut the chicken into various pieces as desired.\"\n\n    def step6(self):\n        return \"Butcher the chicken up\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ButcherTheChickenUp:\n\n    title = \"Butcher the chicken up\"\n    steps = 7\n\n","reference_graph":{"title":"Butcher the chicken up","num_steps":7,"schema":["step0: Ride back home","step1: Carry the chicken into the kitchen.","step2: Take the chicken out of the packaging.","step3: Place the chicken on a cutting board.","step4: Take out a sharp knife.","step5: Cut the chicken into various pieces as desired.","step6: Butcher the chicken up"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"sign up for classes","events":{"0":"Choose a class that fits both criteria.","1":"Finalize and confirm the enrollment in the class.","2":"Identify classes that match interests.","3":"Fill out personal information on sign up sheet.","4":"Fill out payment method on sign up sheet.","5":"Identify classes that match schedule availability.","6":"search for cooking classes","7":"sign up for classes"},"context":"search for cooking classes","minutes":5.0,"events_minutes":{"0":3.0,"1":0.1666666667,"2":5.0,"3":0.5,"4":0.3333333333,"5":5.0},"flatten_input_for_edge_prediction":"step0: Choose a class that fits both criteria.; step1: Finalize and confirm the enrollment in the class.; step2: Identify classes that match interests.; step3: Fill out personal information on sign up sheet.; step4: Fill out payment method on sign up sheet.; step5: Identify classes that match schedule availability.; step6: search for cooking classes; step7: sign up for classes","flatten_input_for_script_generation":"You want to sign up for classes. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step5 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step7; step6 -> step2; step6 -> step5","flatten_output_for_script_generation":"step0: search for cooking classes; step1: Identify classes that match schedule availability.; step2: Identify classes that match interests.; step3: Choose a class that fits both criteria.; step4: Fill out personal information on sign up sheet.; step5: Fill out payment method on sign up sheet.; step6: Finalize and confirm the enrollment in the class.; step7: sign up for classes; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->0","3->4","4->1","5->0","6->2","6->5"],"reference_code":"class SignUpForClasses:\n\n    title = \"sign up for classes\"\n    steps = 8\n\n    def step0(self):\n        return \"search for cooking classes\"\n\n    def step1(self):\n        return \"Identify classes that match schedule availability.\"\n\n    def step2(self):\n        return \"Identify classes that match interests.\"\n\n    def step3(self):\n        return \"Choose a class that fits both criteria.\"\n\n    def step4(self):\n        return \"Fill out personal information on sign up sheet.\"\n\n    def step5(self):\n        return \"Fill out payment method on sign up sheet.\"\n\n    def step6(self):\n        return \"Finalize and confirm the enrollment in the class.\"\n\n    def step7(self):\n        return \"sign up for classes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SignUpForClasses:\n\n    title = \"sign up for classes\"\n    steps = 8\n\n","reference_graph":{"title":"sign up for classes","num_steps":8,"schema":["step0: search for cooking classes","step1: Identify classes that match schedule availability.","step2: Identify classes that match interests.","step3: Choose a class that fits both criteria.","step4: Fill out personal information on sign up sheet.","step5: Fill out payment method on sign up sheet.","step6: Finalize and confirm the enrollment in the class.","step7: sign up for classes"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"load bags into car","events":{"0":"drop bags on ground near car","1":"take bags outside","2":"start putting bags ion car","3":"pick up bags","4":"unlock the car","5":"pack some bags","6":"load bags into car"},"context":"pack some bags","minutes":45.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: drop bags on ground near car; step1: take bags outside; step2: start putting bags ion car; step3: pick up bags; step4: unlock the car; step5: pack some bags; step6: load bags into car","flatten_input_for_script_generation":"You want to load bags into car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step2; step3 -> step1; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: pack some bags; step1: pick up bags; step2: take bags outside; step3: drop bags on ground near car; step4: unlock the car; step5: start putting bags ion car; step6: load bags into car; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->2","5->3"],"reference_code":"class LoadBagsIntoCar:\n\n    title = \"load bags into car\"\n    steps = 7\n\n    def step0(self):\n        return \"pack some bags\"\n\n    def step1(self):\n        return \"pick up bags\"\n\n    def step2(self):\n        return \"take bags outside\"\n\n    def step3(self):\n        return \"drop bags on ground near car\"\n\n    def step4(self):\n        return \"unlock the car\"\n\n    def step5(self):\n        return \"start putting bags ion car\"\n\n    def step6(self):\n        return \"load bags into car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class LoadBagsIntoCar:\n\n    title = \"load bags into car\"\n    steps = 7\n\n","reference_graph":{"title":"load bags into car","num_steps":7,"schema":["step0: pack some bags","step1: pick up bags","step2: take bags outside","step3: drop bags on ground near car","step4: unlock the car","step5: start putting bags ion car","step6: load bags into car"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"Purchase the most likable ground roast coffee","events":{"0":"Bring cart to checkout counter.","1":"Scan the shelves for ground coffee.","2":"Walk up to the store entrance.","3":"Pick out a ground coffee.","4":"Grab a shopping cart","5":"Go to food section.","6":"Go to the supermarket to purchase the coffee maker","7":"Purchase the most likable ground roast coffee"},"context":"Go to the supermarket to purchase the coffee maker","minutes":5.0,"events_minutes":{"0":5.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: Bring cart to checkout counter.; step1: Scan the shelves for ground coffee.; step2: Walk up to the store entrance.; step3: Pick out a ground coffee.; step4: Grab a shopping cart; step5: Go to food section.; step6: Go to the supermarket to purchase the coffee maker; step7: Purchase the most likable ground roast coffee","flatten_input_for_script_generation":"You want to Purchase the most likable ground roast coffee. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step5; step5 -> step1; step1 -> step3; step3 -> step0; step0 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: Go to the supermarket to purchase the coffee maker; step1: Walk up to the store entrance.; step2: Grab a shopping cart; step3: Go to food section.; step4: Scan the shelves for ground coffee.; step5: Pick out a ground coffee.; step6: Bring cart to checkout counter.; step7: Purchase the most likable ground roast coffee; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->4","3->0","4->5","5->1","6->2"],"reference_code":"class PurchaseTheMostLikableGroundRoastCoffee:\n\n    title = \"Purchase the most likable ground roast coffee\"\n    steps = 8\n\n    def step0(self):\n        return \"Go to the supermarket to purchase the coffee maker\"\n\n    def step1(self):\n        return \"Walk up to the store entrance.\"\n\n    def step2(self):\n        return \"Grab a shopping cart\"\n\n    def step3(self):\n        return \"Go to food section.\"\n\n    def step4(self):\n        return \"Scan the shelves for ground coffee.\"\n\n    def step5(self):\n        return \"Pick out a ground coffee.\"\n\n    def step6(self):\n        return \"Bring cart to checkout counter.\"\n\n    def step7(self):\n        return \"Purchase the most likable ground roast coffee\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PurchaseTheMostLikableGroundRoastCoffee:\n\n    title = \"Purchase the most likable ground roast coffee\"\n    steps = 8\n\n","reference_graph":{"title":"Purchase the most likable ground roast coffee","num_steps":8,"schema":["step0: Go to the supermarket to purchase the coffee maker","step1: Walk up to the store entrance.","step2: Grab a shopping cart","step3: Go to food section.","step4: Scan the shelves for ground coffee.","step5: Pick out a ground coffee.","step6: Bring cart to checkout counter.","step7: Purchase the most likable ground roast coffee"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Ride back home","events":{"0":"put groceries in the car.","1":"walk towards the door of the store.","2":"walk towards the car.","3":"exit the store.","4":"pick up the grocery bag with the chicken.","5":"get in the car.","6":"Buy the uncooked chicken","7":"Ride back home"},"context":"Buy the uncooked chicken","minutes":30.0,"events_minutes":{"0":0.1666666667,"1":0.5,"2":1.0,"3":0.1666666667,"4":0.1666666667,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: put groceries in the car.; step1: walk towards the door of the store.; step2: walk towards the car.; step3: exit the store.; step4: pick up the grocery bag with the chicken.; step5: get in the car.; step6: Buy the uncooked chicken; step7: Ride back home","flatten_input_for_script_generation":"You want to Ride back home. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: Buy the uncooked chicken; step1: pick up the grocery bag with the chicken.; step2: walk towards the door of the store.; step3: exit the store.; step4: walk towards the car.; step5: put groceries in the car.; step6: get in the car.; step7: Ride back home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->0","3->2","4->1","5->7","6->4"],"reference_code":"class RideBackHome:\n\n    title = \"Ride back home\"\n    steps = 8\n\n    def step0(self):\n        return \"Buy the uncooked chicken\"\n\n    def step1(self):\n        return \"pick up the grocery bag with the chicken.\"\n\n    def step2(self):\n        return \"walk towards the door of the store.\"\n\n    def step3(self):\n        return \"exit the store.\"\n\n    def step4(self):\n        return \"walk towards the car.\"\n\n    def step5(self):\n        return \"put groceries in the car.\"\n\n    def step6(self):\n        return \"get in the car.\"\n\n    def step7(self):\n        return \"Ride back home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class RideBackHome:\n\n    title = \"Ride back home\"\n    steps = 8\n\n","reference_graph":{"title":"Ride back home","num_steps":8,"schema":["step0: Buy the uncooked chicken","step1: pick up the grocery bag with the chicken.","step2: walk towards the door of the store.","step3: exit the store.","step4: walk towards the car.","step5: put groceries in the car.","step6: get in the car.","step7: Ride back home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get in the car","events":{"0":"find the car keys","1":"walk out the front door","2":"get dressed to leave","3":"make the decision to get a new pet","4":"walk to the car","5":"NONE","6":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.6666666667,"1":0.1666666667,"2":1.0,"3":0.5,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: find the car keys; step1: walk out the front door; step2: get dressed to leave; step3: make the decision to get a new pet; step4: walk to the car; step5: decided to get in the car; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get in the car; step1: make the decision to get a new pet; step2: get dressed to leave; step3: find the car keys; step4: walk out the front door; step5: walk to the car; step6: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"make the decision to get a new pet\"\n\n    def step2(self):\n        return \"get dressed to leave\"\n\n    def step3(self):\n        return \"find the car keys\"\n\n    def step4(self):\n        return \"walk out the front door\"\n\n    def step5(self):\n        return \"walk to the car\"\n\n    def step6(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: decided to get in the car","step1: make the decision to get a new pet","step2: get dressed to leave","step3: find the car keys","step4: walk out the front door","step5: walk to the car","step6: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Wake up on work-day.","events":{"0":"Decide on an alarm time.","1":"Sleep in bed.","2":"Put on pajamas.","3":"Get in bed.","4":"Hear alarm go off.","5":"Set the alarm.","6":"NONE","7":"Wake up on work-day."},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":480.0,"2":0.5833333333,"3":0.3333333333,"4":0.1666666667,"5":0.5},"flatten_input_for_edge_prediction":"step0: Decide on an alarm time.; step1: Sleep in bed.; step2: Put on pajamas.; step3: Get in bed.; step4: Hear alarm go off.; step5: Set the alarm.; step6: decided to Wake up on work-day.; step7: Wake up on work-day.","flatten_input_for_script_generation":"You want to Wake up on work-day.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step3; step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step7; step6 -> step0; step6 -> step2","flatten_output_for_script_generation":"step0: decided to Wake up on work-day.; step1: Put on pajamas.; step2: Decide on an alarm time.; step3: Set the alarm.; step4: Get in bed.; step5: Sleep in bed.; step6: Hear alarm go off.; step7: Wake up on work-day.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step4; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->3","3->1","4->7","5->3","6->0","6->2"],"reference_code":"class WakeUpOnWorkday:\n\n    title = \"Wake up on work-day.\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Wake up on work-day.\"\n\n    def step1(self):\n        return \"Put on pajamas.\"\n\n    def step2(self):\n        return \"Decide on an alarm time.\"\n\n    def step3(self):\n        return \"Set the alarm.\"\n\n    def step4(self):\n        return \"Get in bed.\"\n\n    def step5(self):\n        return \"Sleep in bed.\"\n\n    def step6(self):\n        return \"Hear alarm go off.\"\n\n    def step7(self):\n        return \"Wake up on work-day.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WakeUpOnWorkday:\n\n    title = \"Wake up on work-day.\"\n    steps = 8\n\n","reference_graph":{"title":"Wake up on work-day.","num_steps":8,"schema":["step0: decided to Wake up on work-day.","step1: Put on pajamas.","step2: Decide on an alarm time.","step3: Set the alarm.","step4: Get in bed.","step5: Sleep in bed.","step6: Hear alarm go off.","step7: Wake up on work-day."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step4","step5 -> step6","step6 -> step7"]}}
{"scenario":"pick up the baking stuff","events":{"0":"compare the different prices","1":"compare the different brands","2":"get a grip on the desired product","3":"reach out to desired product","4":"push the cart to the right part of the aisle","5":"go to the baking aisle","6":"pick up the baking stuff"},"context":"go to the baking aisle","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: compare the different prices; step1: compare the different brands; step2: get a grip on the desired product; step3: reach out to desired product; step4: push the cart to the right part of the aisle; step5: go to the baking aisle; step6: pick up the baking stuff","flatten_input_for_script_generation":"You want to pick up the baking stuff. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step1; step0 -> step3; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: go to the baking aisle; step1: push the cart to the right part of the aisle; step2: compare the different prices; step3: compare the different brands; step4: reach out to desired product; step5: get a grip on the desired product; step6: pick up the baking stuff; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->3","2->6","3->2","4->0","4->1","5->4"],"reference_code":"class PickUpTheBakingStuff:\n\n    title = \"pick up the baking stuff\"\n    steps = 7\n\n    def step0(self):\n        return \"go to the baking aisle\"\n\n    def step1(self):\n        return \"push the cart to the right part of the aisle\"\n\n    def step2(self):\n        return \"compare the different prices\"\n\n    def step3(self):\n        return \"compare the different brands\"\n\n    def step4(self):\n        return \"reach out to desired product\"\n\n    def step5(self):\n        return \"get a grip on the desired product\"\n\n    def step6(self):\n        return \"pick up the baking stuff\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickUpTheBakingStuff:\n\n    title = \"pick up the baking stuff\"\n    steps = 7\n\n","reference_graph":{"title":"pick up the baking stuff","num_steps":7,"schema":["step0: go to the baking aisle","step1: push the cart to the right part of the aisle","step2: compare the different prices","step3: compare the different brands","step4: reach out to desired product","step5: get a grip on the desired product","step6: pick up the baking stuff"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put together a work station","events":{"0":"put a table in chosen space","1":"put supplies on table","2":"open the package of supplies","3":"find area with enough space to do hobby","4":"take out supplies","5":"receive the supplies","6":"put together a work station"},"context":"receive the supplies","minutes":180.0,"events_minutes":{"0":3.0,"1":1.0,"2":0.1666666667,"3":1.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: put a table in chosen space; step1: put supplies on table; step2: open the package of supplies; step3: find area with enough space to do hobby; step4: take out supplies; step5: receive the supplies; step6: put together a work station","flatten_input_for_script_generation":"You want to put together a work station. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step4 -> step2; step3 -> step0; step0 -> step4; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: receive the supplies; step1: find area with enough space to do hobby; step2: open the package of supplies; step3: put supplies on table; step4: put together a work station; step5: take out supplies; step6: put a table in chosen space; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step2; step1 -> step6; step6 -> step5","gold_edges_for_prediction":["0->4","1->6","2->1","3->0","4->2","5->3"],"reference_code":"class PutTogetherAWorkStation:\n\n    title = \"put together a work station\"\n    steps = 7\n\n    def step0(self):\n        return \"receive the supplies\"\n\n    def step1(self):\n        return \"find area with enough space to do hobby\"\n\n    def step2(self):\n        return \"open the package of supplies\"\n\n    def step3(self):\n        return \"put supplies on table\"\n\n    def step4(self):\n        return \"put together a work station\"\n\n    def step5(self):\n        return \"take out supplies\"\n\n    def step6(self):\n        return \"put a table in chosen space\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class PutTogetherAWorkStation:\n\n    title = \"put together a work station\"\n    steps = 7\n\n","reference_graph":{"title":"put together a work station","num_steps":7,"schema":["step0: receive the supplies","step1: find area with enough space to do hobby","step2: open the package of supplies","step3: put supplies on table","step4: put together a work station","step5: take out supplies","step6: put a table in chosen space"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step2","step1 -> step6","step6 -> step5"]}}
{"scenario":"click on page for polls","events":{"0":"type in what the search is for","1":"look for polls information","2":"choose the best choice","3":"glance through results","4":"go to a search engine","5":"search current election polls","6":"click on page for polls"},"context":"search current election polls","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: type in what the search is for; step1: look for polls information; step2: choose the best choice; step3: glance through results; step4: go to a search engine; step5: search current election polls; step6: click on page for polls","flatten_input_for_script_generation":"You want to click on page for polls. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step3 -> step2; step2 -> step6; step1 -> step3; step5 -> step4","flatten_output_for_script_generation":"step0: search current election polls; step1: go to a search engine; step2: type in what the search is for; step3: look for polls information; step4: glance through results; step5: choose the best choice; step6: click on page for polls; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class ClickOnPageForPolls:\n\n    title = \"click on page for polls\"\n    steps = 7\n\n    def step0(self):\n        return \"search current election polls\"\n\n    def step1(self):\n        return \"go to a search engine\"\n\n    def step2(self):\n        return \"type in what the search is for\"\n\n    def step3(self):\n        return \"look for polls information\"\n\n    def step4(self):\n        return \"glance through results\"\n\n    def step5(self):\n        return \"choose the best choice\"\n\n    def step6(self):\n        return \"click on page for polls\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ClickOnPageForPolls:\n\n    title = \"click on page for polls\"\n    steps = 7\n\n","reference_graph":{"title":"click on page for polls","num_steps":7,"schema":["step0: search current election polls","step1: go to a search engine","step2: type in what the search is for","step3: look for polls information","step4: glance through results","step5: choose the best choice","step6: click on page for polls"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"contact each party","events":{"0":"ask if first person is attending","1":"call the second person on the list","2":"begin by calling first person on list","3":"no answer, call the third person","4":"receive yes, hang up","5":"make a list","6":"contact each party"},"context":"make a list","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: ask if first person is attending; step1: call the second person on the list; step2: begin by calling first person on list; step3: no answer, call the third person; step4: receive yes, hang up; step5: make a list; step6: contact each party","flatten_input_for_script_generation":"You want to contact each party. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: make a list; step1: begin by calling first person on list; step2: ask if first person is attending; step3: receive yes, hang up; step4: call the second person on the list; step5: no answer, call the third person; step6: contact each party; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class ContactEachParty:\n\n    title = \"contact each party\"\n    steps = 7\n\n    def step0(self):\n        return \"make a list\"\n\n    def step1(self):\n        return \"begin by calling first person on list\"\n\n    def step2(self):\n        return \"ask if first person is attending\"\n\n    def step3(self):\n        return \"receive yes, hang up\"\n\n    def step4(self):\n        return \"call the second person on the list\"\n\n    def step5(self):\n        return \"no answer, call the third person\"\n\n    def step6(self):\n        return \"contact each party\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ContactEachParty:\n\n    title = \"contact each party\"\n    steps = 7\n\n","reference_graph":{"title":"contact each party","num_steps":7,"schema":["step0: make a list","step1: begin by calling first person on list","step2: ask if first person is attending","step3: receive yes, hang up","step4: call the second person on the list","step5: no answer, call the third person","step6: contact each party"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make updates to  resume","events":{"0":"open saved resume","1":"list any updated information","2":"save the new version","3":"close the document","4":"look over edited version","5":"NONE","6":"make updates to  resume"},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":10.0,"2":0.5,"3":0.1666666667,"4":5.0},"flatten_input_for_edge_prediction":"step0: open saved resume; step1: list any updated information; step2: save the new version; step3: close the document; step4: look over edited version; step5: decided to make updates to  resume; step6: make updates to  resume","flatten_input_for_script_generation":"You want to make updates to  resume. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to make updates to  resume; step1: open saved resume; step2: list any updated information; step3: look over edited version; step4: save the new version; step5: close the document; step6: make updates to  resume; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->6","4->2","5->0"],"reference_code":"class MakeUpdatesToResume:\n\n    title = \"make updates to  resume\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make updates to  resume\"\n\n    def step1(self):\n        return \"open saved resume\"\n\n    def step2(self):\n        return \"list any updated information\"\n\n    def step3(self):\n        return \"look over edited version\"\n\n    def step4(self):\n        return \"save the new version\"\n\n    def step5(self):\n        return \"close the document\"\n\n    def step6(self):\n        return \"make updates to  resume\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeUpdatesToResume:\n\n    title = \"make updates to  resume\"\n    steps = 7\n\n","reference_graph":{"title":"make updates to  resume","num_steps":7,"schema":["step0: decided to make updates to  resume","step1: open saved resume","step2: list any updated information","step3: look over edited version","step4: save the new version","step5: close the document","step6: make updates to  resume"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk inside the store","events":{"0":"close the car door","1":"turn towards the store","2":"get out of the car","3":"walk to front entrance","4":"lock the car door","5":"go to the store","6":"walk inside the store"},"context":"go to the store","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.3333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: close the car door; step1: turn towards the store; step2: get out of the car; step3: walk to front entrance; step4: lock the car door; step5: go to the store; step6: walk inside the store","flatten_input_for_script_generation":"You want to walk inside the store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go to the store; step1: get out of the car; step2: close the car door; step3: lock the car door; step4: turn towards the store; step5: walk to front entrance; step6: walk inside the store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class WalkInsideTheStore:\n\n    title = \"walk inside the store\"\n    steps = 7\n\n    def step0(self):\n        return \"go to the store\"\n\n    def step1(self):\n        return \"get out of the car\"\n\n    def step2(self):\n        return \"close the car door\"\n\n    def step3(self):\n        return \"lock the car door\"\n\n    def step4(self):\n        return \"turn towards the store\"\n\n    def step5(self):\n        return \"walk to front entrance\"\n\n    def step6(self):\n        return \"walk inside the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkInsideTheStore:\n\n    title = \"walk inside the store\"\n    steps = 7\n\n","reference_graph":{"title":"walk inside the store","num_steps":7,"schema":["step0: go to the store","step1: get out of the car","step2: close the car door","step3: lock the car door","step4: turn towards the store","step5: walk to front entrance","step6: walk inside the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"gather capturing equipment","events":{"0":"find capturing equipment in the garage","1":"go to the front door","2":"walk outside of the door","3":"look around the house for the equipment","4":"open the garage up","5":"NONE","6":"gather capturing equipment"},"context":"NONE","minutes":15.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: find capturing equipment in the garage; step1: go to the front door; step2: walk outside of the door; step3: look around the house for the equipment; step4: open the garage up; step5: decided to gather capturing equipment; step6: gather capturing equipment","flatten_input_for_script_generation":"You want to gather capturing equipment. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to gather capturing equipment; step1: look around the house for the equipment; step2: go to the front door; step3: walk outside of the door; step4: open the garage up; step5: find capturing equipment in the garage; step6: gather capturing equipment; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->1","4->0","5->3"],"reference_code":"class GatherCapturingEquipment:\n\n    title = \"gather capturing equipment\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to gather capturing equipment\"\n\n    def step1(self):\n        return \"look around the house for the equipment\"\n\n    def step2(self):\n        return \"go to the front door\"\n\n    def step3(self):\n        return \"walk outside of the door\"\n\n    def step4(self):\n        return \"open the garage up\"\n\n    def step5(self):\n        return \"find capturing equipment in the garage\"\n\n    def step6(self):\n        return \"gather capturing equipment\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherCapturingEquipment:\n\n    title = \"gather capturing equipment\"\n    steps = 7\n\n","reference_graph":{"title":"gather capturing equipment","num_steps":7,"schema":["step0: decided to gather capturing equipment","step1: look around the house for the equipment","step2: go to the front door","step3: walk outside of the door","step4: open the garage up","step5: find capturing equipment in the garage","step6: gather capturing equipment"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Enter the building.","events":{"0":"get stuck in traffic","1":"pull into parking lot","2":"exit car making sure doors are locked","3":"find open parking space","4":"walk to building","5":"park car in spot","6":"Drive to the dance studio.","7":"Enter the building."},"context":"Drive to the dance studio.","minutes":1.0,"events_minutes":{"0":15.0,"1":4.0,"2":2.0,"3":3.0,"4":2.0,"5":3.0},"flatten_input_for_edge_prediction":"step0: get stuck in traffic; step1: pull into parking lot; step2: exit car making sure doors are locked; step3: find open parking space; step4: walk to building; step5: park car in spot; step6: Drive to the dance studio.; step7: Enter the building.","flatten_input_for_script_generation":"You want to Enter the building.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step5; step5 -> step2; step2 -> step4; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Drive to the dance studio.; step1: get stuck in traffic; step2: pull into parking lot; step3: find open parking space; step4: park car in spot; step5: exit car making sure doors are locked; step6: walk to building; step7: Enter the building.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->4","3->5","4->7","5->2","6->0"],"reference_code":"class EnterTheBuilding:\n\n    title = \"Enter the building.\"\n    steps = 8\n\n    def step0(self):\n        return \"Drive to the dance studio.\"\n\n    def step1(self):\n        return \"get stuck in traffic\"\n\n    def step2(self):\n        return \"pull into parking lot\"\n\n    def step3(self):\n        return \"find open parking space\"\n\n    def step4(self):\n        return \"park car in spot\"\n\n    def step5(self):\n        return \"exit car making sure doors are locked\"\n\n    def step6(self):\n        return \"walk to building\"\n\n    def step7(self):\n        return \"Enter the building.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EnterTheBuilding:\n\n    title = \"Enter the building.\"\n    steps = 8\n\n","reference_graph":{"title":"Enter the building.","num_steps":8,"schema":["step0: Drive to the dance studio.","step1: get stuck in traffic","step2: pull into parking lot","step3: find open parking space","step4: park car in spot","step5: exit car making sure doors are locked","step6: walk to building","step7: Enter the building."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get undressed fully","events":{"0":"walk to closet","1":"pick out clothing to wear","2":"decide to try on clothing","3":"open closet door","4":"put away laptop","5":"get tickets to the festival","6":"get undressed fully"},"context":"get tickets to the festival","minutes":10.0,"events_minutes":{"0":1.0,"1":5.0,"2":0.3166666667,"3":0.1666666667,"4":2.0},"flatten_input_for_edge_prediction":"step0: walk to closet; step1: pick out clothing to wear; step2: decide to try on clothing; step3: open closet door; step4: put away laptop; step5: get tickets to the festival; step6: get undressed fully","flatten_input_for_script_generation":"You want to get undressed fully. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step1; step3 -> step2; step1 -> step6; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get tickets to the festival; step1: put away laptop; step2: walk to closet; step3: open closet door; step4: pick out clothing to wear; step5: decide to try on clothing; step6: get undressed fully; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->6","3->1","3->2","4->0","5->4"],"reference_code":"class GetUndressedFully:\n\n    title = \"get undressed fully\"\n    steps = 7\n\n    def step0(self):\n        return \"get tickets to the festival\"\n\n    def step1(self):\n        return \"put away laptop\"\n\n    def step2(self):\n        return \"walk to closet\"\n\n    def step3(self):\n        return \"open closet door\"\n\n    def step4(self):\n        return \"pick out clothing to wear\"\n\n    def step5(self):\n        return \"decide to try on clothing\"\n\n    def step6(self):\n        return \"get undressed fully\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetUndressedFully:\n\n    title = \"get undressed fully\"\n    steps = 7\n\n","reference_graph":{"title":"get undressed fully","num_steps":7,"schema":["step0: get tickets to the festival","step1: put away laptop","step2: walk to closet","step3: open closet door","step4: pick out clothing to wear","step5: decide to try on clothing","step6: get undressed fully"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"write a first blog post","events":{"0":"do research on the topic","1":"fix grammatical errors","2":"take notes about the subject","3":"write a first draft","4":"think of a topic to write about","5":"fix spelling errors","6":"log into the website","7":"set up a website","8":"write a first blog post"},"context":"set up a website","minutes":45.0,"events_minutes":{"0":60.0,"1":15.0,"2":30.0,"3":30.0,"4":10.0,"5":15.0,"6":0.1666666667},"flatten_input_for_edge_prediction":"step0: do research on the topic; step1: fix grammatical errors; step2: take notes about the subject; step3: write a first draft; step4: think of a topic to write about; step5: fix spelling errors; step6: log into the website; step7: set up a website; step8: write a first blog post","flatten_input_for_script_generation":"You want to write a first blog post. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step5; step3 -> step1; step5 -> step8; step1 -> step8; step7 -> step6","flatten_output_for_script_generation":"step0: set up a website; step1: log into the website; step2: think of a topic to write about; step3: do research on the topic; step4: take notes about the subject; step5: write a first draft; step6: fix spelling errors; step7: fix grammatical errors; step8: write a first blog post; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->2","1->8","2->3","3->5","3->1","4->0","5->8","6->4","7->6"],"reference_code":"class WriteAFirstBlogPost:\n\n    title = \"write a first blog post\"\n    steps = 9\n\n    def step0(self):\n        return \"set up a website\"\n\n    def step1(self):\n        return \"log into the website\"\n\n    def step2(self):\n        return \"think of a topic to write about\"\n\n    def step3(self):\n        return \"do research on the topic\"\n\n    def step4(self):\n        return \"take notes about the subject\"\n\n    def step5(self):\n        return \"write a first draft\"\n\n    def step6(self):\n        return \"fix spelling errors\"\n\n    def step7(self):\n        return \"fix grammatical errors\"\n\n    def step8(self):\n        return \"write a first blog post\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WriteAFirstBlogPost:\n\n    title = \"write a first blog post\"\n    steps = 9\n\n","reference_graph":{"title":"write a first blog post","num_steps":9,"schema":["step0: set up a website","step1: log into the website","step2: think of a topic to write about","step3: do research on the topic","step4: take notes about the subject","step5: write a first draft","step6: fix spelling errors","step7: fix grammatical errors","step8: write a first blog post"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"Build Time traveling machine","events":{"0":"look at various devices for inspiration","1":"check out other concepts","2":"make a preliminary design","3":"look up more information","4":"assemble materials and tools needed","5":"Search internet for time traveling machines","6":"Build Time traveling machine"},"context":"Search internet for time traveling machines","minutes":259200.0,"events_minutes":{"0":7200.0,"1":2880.0,"2":2880.0,"3":180.0,"4":2880.0},"flatten_input_for_edge_prediction":"step0: look at various devices for inspiration; step1: check out other concepts; step2: make a preliminary design; step3: look up more information; step4: assemble materials and tools needed; step5: Search internet for time traveling machines; step6: Build Time traveling machine","flatten_input_for_script_generation":"You want to Build Time traveling machine. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step3; step1 -> step2; step2 -> step4; step4 -> step6; step3 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: Search internet for time traveling machines; step1: look at various devices for inspiration; step2: check out other concepts; step3: look up more information; step4: make a preliminary design; step5: assemble materials and tools needed; step6: Build Time traveling machine; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->3","1->2","2->4","3->2","4->6","5->0"],"reference_code":"class BuildTimeTravelingMachine:\n\n    title = \"Build Time traveling machine\"\n    steps = 7\n\n    def step0(self):\n        return \"Search internet for time traveling machines\"\n\n    def step1(self):\n        return \"look at various devices for inspiration\"\n\n    def step2(self):\n        return \"check out other concepts\"\n\n    def step3(self):\n        return \"look up more information\"\n\n    def step4(self):\n        return \"make a preliminary design\"\n\n    def step5(self):\n        return \"assemble materials and tools needed\"\n\n    def step6(self):\n        return \"Build Time traveling machine\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuildTimeTravelingMachine:\n\n    title = \"Build Time traveling machine\"\n    steps = 7\n\n","reference_graph":{"title":"Build Time traveling machine","num_steps":7,"schema":["step0: Search internet for time traveling machines","step1: look at various devices for inspiration","step2: check out other concepts","step3: look up more information","step4: make a preliminary design","step5: assemble materials and tools needed","step6: Build Time traveling machine"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"apply for a job","events":{"0":"create a resume and cover letter","1":"decide where to apply","2":"read descriptions and mark possibilities","3":"type in location and search","4":"find job search engines online","5":"NONE","6":"apply for a job"},"context":"NONE","minutes":30.0,"events_minutes":{"0":1440.0,"1":2.0,"2":60.0,"3":1.0,"4":120.0},"flatten_input_for_edge_prediction":"step0: create a resume and cover letter; step1: decide where to apply; step2: read descriptions and mark possibilities; step3: type in location and search; step4: find job search engines online; step5: decided to apply for a job; step6: apply for a job","flatten_input_for_script_generation":"You want to apply for a job. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step5 -> step4","flatten_output_for_script_generation":"step0: decided to apply for a job; step1: find job search engines online; step2: create a resume and cover letter; step3: apply for a job; step4: type in location and search; step5: read descriptions and mark possibilities; step6: decide where to apply; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","4->3","5->4"],"reference_code":"class ApplyForAJob:\n\n    title = \"apply for a job\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to apply for a job\"\n\n    def step1(self):\n        return \"find job search engines online\"\n\n    def step2(self):\n        return \"create a resume and cover letter\"\n\n    def step3(self):\n        return \"apply for a job\"\n\n    def step4(self):\n        return \"type in location and search\"\n\n    def step5(self):\n        return \"read descriptions and mark possibilities\"\n\n    def step6(self):\n        return \"decide where to apply\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ApplyForAJob:\n\n    title = \"apply for a job\"\n    steps = 7\n\n","reference_graph":{"title":"apply for a job","num_steps":7,"schema":["step0: decided to apply for a job","step1: find job search engines online","step2: create a resume and cover letter","step3: apply for a job","step4: type in location and search","step5: read descriptions and mark possibilities","step6: decide where to apply"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"pull up files","events":{"0":"Repeat steps 4 and 5 for other files","1":"Click on the file folder on the home screen","2":"Look for the files","3":"Select a file","4":"Click the file to open","5":"Wait for a few seconds for the computer to boot","6":"turn on the computer","7":"pull up files"},"context":"turn on the computer","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0166666667,"2":0.1666666667,"3":0.0333333333,"4":0.0333333333,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: Repeat steps 4 and 5 for other files; step1: Click on the file folder on the home screen; step2: Look for the files; step3: Select a file; step4: Click the file to open; step5: Wait for a few seconds for the computer to boot; step6: turn on the computer; step7: pull up files","flatten_input_for_script_generation":"You want to pull up files. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: turn on the computer; step1: Wait for a few seconds for the computer to boot; step2: Click on the file folder on the home screen; step3: Look for the files; step4: Select a file; step5: Click the file to open; step6: Repeat steps 4 and 5 for other files; step7: pull up files; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->2","2->3","3->4","4->0","5->1","6->5"],"reference_code":"class PullUpFiles:\n\n    title = \"pull up files\"\n    steps = 8\n\n    def step0(self):\n        return \"turn on the computer\"\n\n    def step1(self):\n        return \"Wait for a few seconds for the computer to boot\"\n\n    def step2(self):\n        return \"Click on the file folder on the home screen\"\n\n    def step3(self):\n        return \"Look for the files\"\n\n    def step4(self):\n        return \"Select a file\"\n\n    def step5(self):\n        return \"Click the file to open\"\n\n    def step6(self):\n        return \"Repeat steps 4 and 5 for other files\"\n\n    def step7(self):\n        return \"pull up files\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PullUpFiles:\n\n    title = \"pull up files\"\n    steps = 8\n\n","reference_graph":{"title":"pull up files","num_steps":8,"schema":["step0: turn on the computer","step1: Wait for a few seconds for the computer to boot","step2: Click on the file folder on the home screen","step3: Look for the files","step4: Select a file","step5: Click the file to open","step6: Repeat steps 4 and 5 for other files","step7: pull up files"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Take Xbox home","events":{"0":"Take xbox out of the car","1":"carry xbox to the car","2":"Pay for Xbox","3":"get to the garage.","4":"drive xbox home","5":"Pick up Xbox from counter","6":"Take Xbox home"},"context":"Pick up Xbox from counter","minutes":20.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":1.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: Take xbox out of the car; step1: carry xbox to the car; step2: Pay for Xbox; step3: get to the garage.; step4: drive xbox home; step5: Pick up Xbox from counter; step6: Take Xbox home","flatten_input_for_script_generation":"You want to Take Xbox home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Pick up Xbox from counter; step1: Pay for Xbox; step2: carry xbox to the car; step3: drive xbox home; step4: get to the garage.; step5: Take xbox out of the car; step6: Take Xbox home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->0","4->3","5->2"],"reference_code":"class TakeXboxHome:\n\n    title = \"Take Xbox home\"\n    steps = 7\n\n    def step0(self):\n        return \"Pick up Xbox from counter\"\n\n    def step1(self):\n        return \"Pay for Xbox\"\n\n    def step2(self):\n        return \"carry xbox to the car\"\n\n    def step3(self):\n        return \"drive xbox home\"\n\n    def step4(self):\n        return \"get to the garage.\"\n\n    def step5(self):\n        return \"Take xbox out of the car\"\n\n    def step6(self):\n        return \"Take Xbox home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeXboxHome:\n\n    title = \"Take Xbox home\"\n    steps = 7\n\n","reference_graph":{"title":"Take Xbox home","num_steps":7,"schema":["step0: Pick up Xbox from counter","step1: Pay for Xbox","step2: carry xbox to the car","step3: drive xbox home","step4: get to the garage.","step5: Take xbox out of the car","step6: Take Xbox home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"book a ticket","events":{"0":"Fill out the necessary billing information","1":"Input travel date","2":"Access a travel website","3":"Input travel destination","4":"Input departure location","5":"Finalize and confirm the purchase of the ticket","6":"Select the desired ticket option","7":"NONE","8":"book a ticket"},"context":"NONE","minutes":10.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":0.1666666667,"3":10.0,"4":0.1666666667,"5":2.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Fill out the necessary billing information; step1: Input travel date; step2: Access a travel website; step3: Input travel destination; step4: Input departure location; step5: Finalize and confirm the purchase of the ticket; step6: Select the desired ticket option; step7: decided to book a ticket; step8: book a ticket","flatten_input_for_script_generation":"You want to book a ticket. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step2 -> step3; step2 -> step1; step4 -> step6; step3 -> step6; step1 -> step6; step6 -> step0; step0 -> step5; step5 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to book a ticket; step1: Access a travel website; step2: Input departure location; step3: Input travel destination; step4: Input travel date; step5: Select the desired ticket option; step6: Fill out the necessary billing information; step7: Finalize and confirm the purchase of the ticket; step8: book a ticket; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->6","2->4","2->3","2->1","3->6","4->6","5->8","6->0","7->2"],"reference_code":"class BookATicket:\n\n    title = \"book a ticket\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to book a ticket\"\n\n    def step1(self):\n        return \"Access a travel website\"\n\n    def step2(self):\n        return \"Input departure location\"\n\n    def step3(self):\n        return \"Input travel destination\"\n\n    def step4(self):\n        return \"Input travel date\"\n\n    def step5(self):\n        return \"Select the desired ticket option\"\n\n    def step6(self):\n        return \"Fill out the necessary billing information\"\n\n    def step7(self):\n        return \"Finalize and confirm the purchase of the ticket\"\n\n    def step8(self):\n        return \"book a ticket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BookATicket:\n\n    title = \"book a ticket\"\n    steps = 9\n\n","reference_graph":{"title":"book a ticket","num_steps":9,"schema":["step0: decided to book a ticket","step1: Access a travel website","step2: Input departure location","step3: Input travel destination","step4: Input travel date","step5: Select the desired ticket option","step6: Fill out the necessary billing information","step7: Finalize and confirm the purchase of the ticket","step8: book a ticket"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"BUY ITEMS NEED FOR THE RECIPE","events":{"0":"Drive to the grocery store.","1":"Grab keys and wallet.","2":"Make a list of ingredients.","3":"Walk into the grocery store.","4":"Get in car.","5":"Get out of car.","6":"FIND A NEW RECIEPE","7":"BUY ITEMS NEED FOR THE RECIPE"},"context":"FIND A NEW RECIEPE","minutes":30.0,"events_minutes":{"0":20.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Drive to the grocery store.; step1: Grab keys and wallet.; step2: Make a list of ingredients.; step3: Walk into the grocery store.; step4: Get in car.; step5: Get out of car.; step6: FIND A NEW RECIEPE; step7: BUY ITEMS NEED FOR THE RECIPE","flatten_input_for_script_generation":"You want to BUY ITEMS NEED FOR THE RECIPE. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step5; step5 -> step3; step3 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: FIND A NEW RECIEPE; step1: Make a list of ingredients.; step2: Grab keys and wallet.; step3: Get in car.; step4: Drive to the grocery store.; step5: Get out of car.; step6: Walk into the grocery store.; step7: BUY ITEMS NEED FOR THE RECIPE; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->1","3->7","4->0","5->3","6->2"],"reference_code":"class BuyItemsNeedForTheRecipe:\n\n    title = \"BUY ITEMS NEED FOR THE RECIPE\"\n    steps = 8\n\n    def step0(self):\n        return \"FIND A NEW RECIEPE\"\n\n    def step1(self):\n        return \"Make a list of ingredients.\"\n\n    def step2(self):\n        return \"Grab keys and wallet.\"\n\n    def step3(self):\n        return \"Get in car.\"\n\n    def step4(self):\n        return \"Drive to the grocery store.\"\n\n    def step5(self):\n        return \"Get out of car.\"\n\n    def step6(self):\n        return \"Walk into the grocery store.\"\n\n    def step7(self):\n        return \"BUY ITEMS NEED FOR THE RECIPE\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuyItemsNeedForTheRecipe:\n\n    title = \"BUY ITEMS NEED FOR THE RECIPE\"\n    steps = 8\n\n","reference_graph":{"title":"BUY ITEMS NEED FOR THE RECIPE","num_steps":8,"schema":["step0: FIND A NEW RECIEPE","step1: Make a list of ingredients.","step2: Grab keys and wallet.","step3: Get in car.","step4: Drive to the grocery store.","step5: Get out of car.","step6: Walk into the grocery store.","step7: BUY ITEMS NEED FOR THE RECIPE"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"pick one to participate in","events":{"0":"navigate to other websites","1":"compare the races","2":"make final decision","3":"read through descriptions","4":"narrow down choices","5":"look up races online","6":"pick one to participate in"},"context":"look up races online","minutes":30.0,"events_minutes":{"0":0.3333333333,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: navigate to other websites; step1: compare the races; step2: make final decision; step3: read through descriptions; step4: narrow down choices; step5: look up races online; step6: pick one to participate in","flatten_input_for_script_generation":"You want to pick one to participate in. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step0 -> step3; step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: look up races online; step1: navigate to other websites; step2: read through descriptions; step3: narrow down choices; step4: make final decision; step5: compare the races; step6: pick one to participate in; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->3","0->1","1->4","2->6","3->4","4->2","5->0"],"reference_code":"class PickOneToParticipateIn:\n\n    title = \"pick one to participate in\"\n    steps = 7\n\n    def step0(self):\n        return \"look up races online\"\n\n    def step1(self):\n        return \"navigate to other websites\"\n\n    def step2(self):\n        return \"read through descriptions\"\n\n    def step3(self):\n        return \"narrow down choices\"\n\n    def step4(self):\n        return \"make final decision\"\n\n    def step5(self):\n        return \"compare the races\"\n\n    def step6(self):\n        return \"pick one to participate in\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PickOneToParticipateIn:\n\n    title = \"pick one to participate in\"\n    steps = 7\n\n","reference_graph":{"title":"pick one to participate in","num_steps":7,"schema":["step0: look up races online","step1: navigate to other websites","step2: read through descriptions","step3: narrow down choices","step4: make final decision","step5: compare the races","step6: pick one to participate in"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"get into car","events":{"0":"watch news channel","1":"jot down directions to donation center","2":"research donation center","3":"lock all doors","4":"walk out of house","5":"notice blood drive in area","6":"NONE","7":"get into car"},"context":"NONE","minutes":2.0,"events_minutes":{"0":10.0,"1":2.0,"2":17.0,"3":1.0,"4":2.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: watch news channel; step1: jot down directions to donation center; step2: research donation center; step3: lock all doors; step4: walk out of house; step5: notice blood drive in area; step6: decided to get into car; step7: get into car","flatten_input_for_script_generation":"You want to get into car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step2; step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to get into car; step1: watch news channel; step2: notice blood drive in area; step3: research donation center; step4: jot down directions to donation center; step5: walk out of house; step6: lock all doors; step7: get into car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->1","3->7","4->3","5->2","6->0"],"reference_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get into car\"\n\n    def step1(self):\n        return \"watch news channel\"\n\n    def step2(self):\n        return \"notice blood drive in area\"\n\n    def step3(self):\n        return \"research donation center\"\n\n    def step4(self):\n        return \"jot down directions to donation center\"\n\n    def step5(self):\n        return \"walk out of house\"\n\n    def step6(self):\n        return \"lock all doors\"\n\n    def step7(self):\n        return \"get into car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 8\n\n","reference_graph":{"title":"get into car","num_steps":8,"schema":["step0: decided to get into car","step1: watch news channel","step2: notice blood drive in area","step3: research donation center","step4: jot down directions to donation center","step5: walk out of house","step6: lock all doors","step7: get into car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"practice until day of race","events":{"0":"learn stretching techniques","1":"start practicing on track","2":"get racing gear","3":"find a practice track","4":"look up best advice for racing","5":"sign up for the race","6":"practice until day of race"},"context":"sign up for the race","minutes":20160.0,"events_minutes":{"0":60.0,"1":5760.0,"2":60.0,"3":180.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: learn stretching techniques; step1: start practicing on track; step2: get racing gear; step3: find a practice track; step4: look up best advice for racing; step5: sign up for the race; step6: practice until day of race","flatten_input_for_script_generation":"You want to practice until day of race. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: sign up for the race; step1: get racing gear; step2: look up best advice for racing; step3: learn stretching techniques; step4: find a practice track; step5: start practicing on track; step6: practice until day of race; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class PracticeUntilDayOfRace:\n\n    title = \"practice until day of race\"\n    steps = 7\n\n    def step0(self):\n        return \"sign up for the race\"\n\n    def step1(self):\n        return \"get racing gear\"\n\n    def step2(self):\n        return \"look up best advice for racing\"\n\n    def step3(self):\n        return \"learn stretching techniques\"\n\n    def step4(self):\n        return \"find a practice track\"\n\n    def step5(self):\n        return \"start practicing on track\"\n\n    def step6(self):\n        return \"practice until day of race\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PracticeUntilDayOfRace:\n\n    title = \"practice until day of race\"\n    steps = 7\n\n","reference_graph":{"title":"practice until day of race","num_steps":7,"schema":["step0: sign up for the race","step1: get racing gear","step2: look up best advice for racing","step3: learn stretching techniques","step4: find a practice track","step5: start practicing on track","step6: practice until day of race"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy tickets for movie online.","events":{"0":"put in payment information","1":"click on link to buy tickets","2":"find a time that is most fitting","3":"click to confirm the purchase","4":"click on the chosen time","5":"Look up show times.","6":"buy tickets for movie online."},"context":"Look up show times.","minutes":2.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: put in payment information; step1: click on link to buy tickets; step2: find a time that is most fitting; step3: click to confirm the purchase; step4: click on the chosen time; step5: Look up show times.; step6: buy tickets for movie online.","flatten_input_for_script_generation":"You want to buy tickets for movie online.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Look up show times.; step1: find a time that is most fitting; step2: click on the chosen time; step3: click on link to buy tickets; step4: put in payment information; step5: click to confirm the purchase; step6: buy tickets for movie online.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->6","4->1","5->2"],"reference_code":"class BuyTicketsForMovieOnline:\n\n    title = \"buy tickets for movie online.\"\n    steps = 7\n\n    def step0(self):\n        return \"Look up show times.\"\n\n    def step1(self):\n        return \"find a time that is most fitting\"\n\n    def step2(self):\n        return \"click on the chosen time\"\n\n    def step3(self):\n        return \"click on link to buy tickets\"\n\n    def step4(self):\n        return \"put in payment information\"\n\n    def step5(self):\n        return \"click to confirm the purchase\"\n\n    def step6(self):\n        return \"buy tickets for movie online.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyTicketsForMovieOnline:\n\n    title = \"buy tickets for movie online.\"\n    steps = 7\n\n","reference_graph":{"title":"buy tickets for movie online.","num_steps":7,"schema":["step0: Look up show times.","step1: find a time that is most fitting","step2: click on the chosen time","step3: click on link to buy tickets","step4: put in payment information","step5: click to confirm the purchase","step6: buy tickets for movie online."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a to-do list","events":{"0":"get a pen and paper","1":"write down activity 2","2":"decide the activity","3":"write down activity one","4":"write the last activity","5":"NONE","6":"make a to-do list"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":0.5,"2":1.0,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: get a pen and paper; step1: write down activity 2; step2: decide the activity; step3: write down activity one; step4: write the last activity; step5: decided to make a to-do list; step6: make a to-do list","flatten_input_for_script_generation":"You want to make a to-do list. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to make a to-do list; step1: decide the activity; step2: get a pen and paper; step3: write down activity one; step4: write down activity 2; step5: write the last activity; step6: make a to-do list; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class MakeATodoList:\n\n    title = \"make a to-do list\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make a to-do list\"\n\n    def step1(self):\n        return \"decide the activity\"\n\n    def step2(self):\n        return \"get a pen and paper\"\n\n    def step3(self):\n        return \"write down activity one\"\n\n    def step4(self):\n        return \"write down activity 2\"\n\n    def step5(self):\n        return \"write the last activity\"\n\n    def step6(self):\n        return \"make a to-do list\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeATodoList:\n\n    title = \"make a to-do list\"\n    steps = 7\n\n","reference_graph":{"title":"make a to-do list","num_steps":7,"schema":["step0: decided to make a to-do list","step1: decide the activity","step2: get a pen and paper","step3: write down activity one","step4: write down activity 2","step5: write the last activity","step6: make a to-do list"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"invite friends to lunch","events":{"0":"Pick up phone.","1":"Preheat the oven.","2":"Make some drinks.","3":"Make the food.","4":"Set the table.","5":"decide what to eat","6":"invite friends to lunch"},"context":"decide what to eat","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":10.0,"3":30.0,"4":300.0},"flatten_input_for_edge_prediction":"step0: Pick up phone.; step1: Preheat the oven.; step2: Make some drinks.; step3: Make the food.; step4: Set the table.; step5: decide what to eat; step6: invite friends to lunch","flatten_input_for_script_generation":"You want to invite friends to lunch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step1 -> step4; step1 -> step2; step3 -> step0; step4 -> step0; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decide what to eat; step1: Preheat the oven.; step2: Make the food.; step3: Set the table.; step4: Make some drinks.; step5: Pick up phone.; step6: invite friends to lunch; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","1->4","1->2","2->0","3->0","4->0","5->1"],"reference_code":"class InviteFriendsToLunch:\n\n    title = \"invite friends to lunch\"\n    steps = 7\n\n    def step0(self):\n        return \"decide what to eat\"\n\n    def step1(self):\n        return \"Preheat the oven.\"\n\n    def step2(self):\n        return \"Make the food.\"\n\n    def step3(self):\n        return \"Set the table.\"\n\n    def step4(self):\n        return \"Make some drinks.\"\n\n    def step5(self):\n        return \"Pick up phone.\"\n\n    def step6(self):\n        return \"invite friends to lunch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class InviteFriendsToLunch:\n\n    title = \"invite friends to lunch\"\n    steps = 7\n\n","reference_graph":{"title":"invite friends to lunch","num_steps":7,"schema":["step0: decide what to eat","step1: Preheat the oven.","step2: Make the food.","step3: Set the table.","step4: Make some drinks.","step5: Pick up phone.","step6: invite friends to lunch"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"plot a story","events":{"0":"decide on a movie genre","1":"consider a movie genre","2":"brainstorm ideas for movie","3":"decide to write a movie","4":"grab a notebook","5":"NONE","6":"plot a story"},"context":"NONE","minutes":20160.0,"events_minutes":{"0":60.0,"1":60.0,"2":60.0,"3":60.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: decide on a movie genre; step1: consider a movie genre; step2: brainstorm ideas for movie; step3: decide to write a movie; step4: grab a notebook; step5: decided to plot a story; step6: plot a story","flatten_input_for_script_generation":"You want to plot a story. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step3 -> step1; step2 -> step6; step1 -> step0; step0 -> step2; step4 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: decided to plot a story; step1: decide to write a movie; step2: grab a notebook; step3: consider a movie genre; step4: brainstorm ideas for movie; step5: decide on a movie genre; step6: plot a story; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step4","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","3->1","4->2","5->3"],"reference_code":"class PlotAStory:\n\n    title = \"plot a story\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to plot a story\"\n\n    def step1(self):\n        return \"decide to write a movie\"\n\n    def step2(self):\n        return \"grab a notebook\"\n\n    def step3(self):\n        return \"consider a movie genre\"\n\n    def step4(self):\n        return \"brainstorm ideas for movie\"\n\n    def step5(self):\n        return \"decide on a movie genre\"\n\n    def step6(self):\n        return \"plot a story\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step4\",\n        ]\n","input_prompt_code":"class PlotAStory:\n\n    title = \"plot a story\"\n    steps = 7\n\n","reference_graph":{"title":"plot a story","num_steps":7,"schema":["step0: decided to plot a story","step1: decide to write a movie","step2: grab a notebook","step3: consider a movie genre","step4: brainstorm ideas for movie","step5: decide on a movie genre","step6: plot a story"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step4"]}}
{"scenario":"fill out the marriage form","events":{"0":"Consult spouse midway through to make sure everything is correct","1":"Do not skip any lines","2":"Begin filling out information at top","3":"Request information from new spouse","4":"Sign the form at the end","5":"pick up a pen","6":"fill out the marriage form"},"context":"pick up a pen","minutes":15.0,"events_minutes":{"0":3.0,"1":2.0,"2":2.0,"3":3.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Consult spouse midway through to make sure everything is correct; step1: Do not skip any lines; step2: Begin filling out information at top; step3: Request information from new spouse; step4: Sign the form at the end; step5: pick up a pen; step6: fill out the marriage form","flatten_input_for_script_generation":"You want to fill out the marriage form. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step2 -> step1; step0 -> step4; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: pick up a pen; step1: Request information from new spouse; step2: Begin filling out information at top; step3: Consult spouse midway through to make sure everything is correct; step4: Do not skip any lines; step5: Sign the form at the end; step6: fill out the marriage form; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->4","2->0","2->1","3->2","4->6","5->3"],"reference_code":"class FillOutTheMarriageForm:\n\n    title = \"fill out the marriage form\"\n    steps = 7\n\n    def step0(self):\n        return \"pick up a pen\"\n\n    def step1(self):\n        return \"Request information from new spouse\"\n\n    def step2(self):\n        return \"Begin filling out information at top\"\n\n    def step3(self):\n        return \"Consult spouse midway through to make sure everything is correct\"\n\n    def step4(self):\n        return \"Do not skip any lines\"\n\n    def step5(self):\n        return \"Sign the form at the end\"\n\n    def step6(self):\n        return \"fill out the marriage form\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutTheMarriageForm:\n\n    title = \"fill out the marriage form\"\n    steps = 7\n\n","reference_graph":{"title":"fill out the marriage form","num_steps":7,"schema":["step0: pick up a pen","step1: Request information from new spouse","step2: Begin filling out information at top","step3: Consult spouse midway through to make sure everything is correct","step4: Do not skip any lines","step5: Sign the form at the end","step6: fill out the marriage form"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Purchase Springsteen tickets","events":{"0":"enter address into form","1":"enter credit card info into form","2":"click on checkout","3":"confirm information on form","4":"add tickets to cart","5":"Search for Springsteen show tickets","6":"Purchase Springsteen tickets"},"context":"Search for Springsteen show tickets","minutes":3.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.0833333333,"3":0.25,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: enter address into form; step1: enter credit card info into form; step2: click on checkout; step3: confirm information on form; step4: add tickets to cart; step5: Search for Springsteen show tickets; step6: Purchase Springsteen tickets","flatten_input_for_script_generation":"You want to Purchase Springsteen tickets. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Search for Springsteen show tickets; step1: add tickets to cart; step2: click on checkout; step3: enter address into form; step4: enter credit card info into form; step5: confirm information on form; step6: Purchase Springsteen tickets; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->6","4->2","5->4"],"reference_code":"class PurchaseSpringsteenTickets:\n\n    title = \"Purchase Springsteen tickets\"\n    steps = 7\n\n    def step0(self):\n        return \"Search for Springsteen show tickets\"\n\n    def step1(self):\n        return \"add tickets to cart\"\n\n    def step2(self):\n        return \"click on checkout\"\n\n    def step3(self):\n        return \"enter address into form\"\n\n    def step4(self):\n        return \"enter credit card info into form\"\n\n    def step5(self):\n        return \"confirm information on form\"\n\n    def step6(self):\n        return \"Purchase Springsteen tickets\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseSpringsteenTickets:\n\n    title = \"Purchase Springsteen tickets\"\n    steps = 7\n\n","reference_graph":{"title":"Purchase Springsteen tickets","num_steps":7,"schema":["step0: Search for Springsteen show tickets","step1: add tickets to cart","step2: click on checkout","step3: enter address into form","step4: enter credit card info into form","step5: confirm information on form","step6: Purchase Springsteen tickets"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get into car","events":{"0":"grab purse and keys","1":"put on shoes and coat","2":"lock house door and close screen door","3":"check out look in mirror","4":"walk towards car","5":"dress for the dinner","6":"get into car"},"context":"dress for the dinner","minutes":0.5,"events_minutes":{"0":1.0,"1":5.0,"2":1.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: grab purse and keys; step1: put on shoes and coat; step2: lock house door and close screen door; step3: check out look in mirror; step4: walk towards car; step5: dress for the dinner; step6: get into car","flatten_input_for_script_generation":"You want to get into car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: dress for the dinner; step1: check out look in mirror; step2: put on shoes and coat; step3: grab purse and keys; step4: lock house door and close screen door; step5: walk towards car; step6: get into car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 7\n\n    def step0(self):\n        return \"dress for the dinner\"\n\n    def step1(self):\n        return \"check out look in mirror\"\n\n    def step2(self):\n        return \"put on shoes and coat\"\n\n    def step3(self):\n        return \"grab purse and keys\"\n\n    def step4(self):\n        return \"lock house door and close screen door\"\n\n    def step5(self):\n        return \"walk towards car\"\n\n    def step6(self):\n        return \"get into car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 7\n\n","reference_graph":{"title":"get into car","num_steps":7,"schema":["step0: dress for the dinner","step1: check out look in mirror","step2: put on shoes and coat","step3: grab purse and keys","step4: lock house door and close screen door","step5: walk towards car","step6: get into car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter the restaurant","events":{"0":"get out of the car","1":"park in empty spot","2":"shut and lock the car door","3":"grab wallet or purse","4":"find an empty parking spot","5":"drive to seafood restaurant","6":"enter the restaurant"},"context":"drive to seafood restaurant","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.3333333333,"2":0.0833333333,"3":0.1666666667,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: get out of the car; step1: park in empty spot; step2: shut and lock the car door; step3: grab wallet or purse; step4: find an empty parking spot; step5: drive to seafood restaurant; step6: enter the restaurant","flatten_input_for_script_generation":"You want to enter the restaurant. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: drive to seafood restaurant; step1: find an empty parking spot; step2: park in empty spot; step3: grab wallet or purse; step4: get out of the car; step5: shut and lock the car door; step6: enter the restaurant; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->0","4->1","5->4"],"reference_code":"class EnterTheRestaurant:\n\n    title = \"enter the restaurant\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to seafood restaurant\"\n\n    def step1(self):\n        return \"find an empty parking spot\"\n\n    def step2(self):\n        return \"park in empty spot\"\n\n    def step3(self):\n        return \"grab wallet or purse\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"shut and lock the car door\"\n\n    def step6(self):\n        return \"enter the restaurant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheRestaurant:\n\n    title = \"enter the restaurant\"\n    steps = 7\n\n","reference_graph":{"title":"enter the restaurant","num_steps":7,"schema":["step0: drive to seafood restaurant","step1: find an empty parking spot","step2: park in empty spot","step3: grab wallet or purse","step4: get out of the car","step5: shut and lock the car door","step6: enter the restaurant"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"choose a camping spot","events":{"0":"search for camping options","1":"decide the fun activity","2":"select a desirable option","3":"book the camping site","4":"decide on camping","5":"look online for a camping spot","6":"choose a camping spot"},"context":"look online for a camping spot","minutes":5.0,"events_minutes":{"0":10.0,"1":5.0,"2":2.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: search for camping options; step1: decide the fun activity; step2: select a desirable option; step3: book the camping site; step4: decide on camping; step5: look online for a camping spot; step6: choose a camping spot","flatten_input_for_script_generation":"You want to choose a camping spot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: look online for a camping spot; step1: decide the fun activity; step2: decide on camping; step3: search for camping options; step4: select a desirable option; step5: book the camping site; step6: choose a camping spot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class ChooseACampingSpot:\n\n    title = \"choose a camping spot\"\n    steps = 7\n\n    def step0(self):\n        return \"look online for a camping spot\"\n\n    def step1(self):\n        return \"decide the fun activity\"\n\n    def step2(self):\n        return \"decide on camping\"\n\n    def step3(self):\n        return \"search for camping options\"\n\n    def step4(self):\n        return \"select a desirable option\"\n\n    def step5(self):\n        return \"book the camping site\"\n\n    def step6(self):\n        return \"choose a camping spot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseACampingSpot:\n\n    title = \"choose a camping spot\"\n    steps = 7\n\n","reference_graph":{"title":"choose a camping spot","num_steps":7,"schema":["step0: look online for a camping spot","step1: decide the fun activity","step2: decide on camping","step3: search for camping options","step4: select a desirable option","step5: book the camping site","step6: choose a camping spot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pick out cat food.","events":{"0":"Browse for food aisle.","1":"Grab a shopping cart.","2":"Look at what's on sale.","3":"Walk into pet store.","4":"Decide on brand.","5":"Go to a pet store.","6":"Pick out cat food."},"context":"Go to a pet store.","minutes":5.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":0.3333333333,"4":3.0},"flatten_input_for_edge_prediction":"step0: Browse for food aisle.; step1: Grab a shopping cart.; step2: Look at what's on sale.; step3: Walk into pet store.; step4: Decide on brand.; step5: Go to a pet store.; step6: Pick out cat food.","flatten_input_for_script_generation":"You want to Pick out cat food.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Go to a pet store.; step1: Walk into pet store.; step2: Grab a shopping cart.; step3: Browse for food aisle.; step4: Look at what's on sale.; step5: Decide on brand.; step6: Pick out cat food.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class PickOutCatFood:\n\n    title = \"Pick out cat food.\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to a pet store.\"\n\n    def step1(self):\n        return \"Walk into pet store.\"\n\n    def step2(self):\n        return \"Grab a shopping cart.\"\n\n    def step3(self):\n        return \"Browse for food aisle.\"\n\n    def step4(self):\n        return \"Look at what's on sale.\"\n\n    def step5(self):\n        return \"Decide on brand.\"\n\n    def step6(self):\n        return \"Pick out cat food.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickOutCatFood:\n\n    title = \"Pick out cat food.\"\n    steps = 7\n\n","reference_graph":{"title":"Pick out cat food.","num_steps":7,"schema":["step0: Go to a pet store.","step1: Walk into pet store.","step2: Grab a shopping cart.","step3: Browse for food aisle.","step4: Look at what's on sale.","step5: Decide on brand.","step6: Pick out cat food."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Begin taking lessons","events":{"0":"Discuss schedule availability with instructor.","1":"Get out of vehicle and go to the instructor's room.","2":"Get into vehicle on day of the lesson.","3":"Book lessons with the instructor.","4":"Pay for the lessons upfront.","5":"Drive to the instructor's facility.","6":"Find an instructor to teach","7":"Begin taking lessons"},"context":"Find an instructor to teach","minutes":11520.0,"events_minutes":{"0":15.0,"1":5.0,"2":0.5,"3":10.0,"4":5.0,"5":25.0},"flatten_input_for_edge_prediction":"step0: Discuss schedule availability with instructor.; step1: Get out of vehicle and go to the instructor's room.; step2: Get into vehicle on day of the lesson.; step3: Book lessons with the instructor.; step4: Pay for the lessons upfront.; step5: Drive to the instructor's facility.; step6: Find an instructor to teach; step7: Begin taking lessons","flatten_input_for_script_generation":"You want to Begin taking lessons. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step5; step5 -> step1; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Find an instructor to teach; step1: Discuss schedule availability with instructor.; step2: Book lessons with the instructor.; step3: Pay for the lessons upfront.; step4: Get into vehicle on day of the lesson.; step5: Drive to the instructor's facility.; step6: Get out of vehicle and go to the instructor's room.; step7: Begin taking lessons; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->5","3->4","4->2","5->1","6->0"],"reference_code":"class BeginTakingLessons:\n\n    title = \"Begin taking lessons\"\n    steps = 8\n\n    def step0(self):\n        return \"Find an instructor to teach\"\n\n    def step1(self):\n        return \"Discuss schedule availability with instructor.\"\n\n    def step2(self):\n        return \"Book lessons with the instructor.\"\n\n    def step3(self):\n        return \"Pay for the lessons upfront.\"\n\n    def step4(self):\n        return \"Get into vehicle on day of the lesson.\"\n\n    def step5(self):\n        return \"Drive to the instructor's facility.\"\n\n    def step6(self):\n        return \"Get out of vehicle and go to the instructor's room.\"\n\n    def step7(self):\n        return \"Begin taking lessons\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BeginTakingLessons:\n\n    title = \"Begin taking lessons\"\n    steps = 8\n\n","reference_graph":{"title":"Begin taking lessons","num_steps":8,"schema":["step0: Find an instructor to teach","step1: Discuss schedule availability with instructor.","step2: Book lessons with the instructor.","step3: Pay for the lessons upfront.","step4: Get into vehicle on day of the lesson.","step5: Drive to the instructor's facility.","step6: Get out of vehicle and go to the instructor's room.","step7: Begin taking lessons"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"combine the wet and dry ingredients.","events":{"0":"add the wet  ingredients","1":"get measuring cup","2":"get spoons for mixing","3":"measure the wet ingredients","4":"mix up dry and wet ingredients","5":"mix the dry ingredients","6":"combine the wet and dry ingredients."},"context":"mix the dry ingredients","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: add the wet  ingredients; step1: get measuring cup; step2: get spoons for mixing; step3: measure the wet ingredients; step4: mix up dry and wet ingredients; step5: mix the dry ingredients; step6: combine the wet and dry ingredients.","flatten_input_for_script_generation":"You want to combine the wet and dry ingredients.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step2 -> step4; step0 -> step2; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: mix the dry ingredients; step1: get measuring cup; step2: measure the wet ingredients; step3: add the wet  ingredients; step4: get spoons for mixing; step5: mix up dry and wet ingredients; step6: combine the wet and dry ingredients.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->0","4->6","5->1"],"reference_code":"class CombineTheWetAndDryIngredients:\n\n    title = \"combine the wet and dry ingredients.\"\n    steps = 7\n\n    def step0(self):\n        return \"mix the dry ingredients\"\n\n    def step1(self):\n        return \"get measuring cup\"\n\n    def step2(self):\n        return \"measure the wet ingredients\"\n\n    def step3(self):\n        return \"add the wet  ingredients\"\n\n    def step4(self):\n        return \"get spoons for mixing\"\n\n    def step5(self):\n        return \"mix up dry and wet ingredients\"\n\n    def step6(self):\n        return \"combine the wet and dry ingredients.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CombineTheWetAndDryIngredients:\n\n    title = \"combine the wet and dry ingredients.\"\n    steps = 7\n\n","reference_graph":{"title":"combine the wet and dry ingredients.","num_steps":7,"schema":["step0: mix the dry ingredients","step1: get measuring cup","step2: measure the wet ingredients","step3: add the wet  ingredients","step4: get spoons for mixing","step5: mix up dry and wet ingredients","step6: combine the wet and dry ingredients."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"run every day","events":{"0":"walk to front door","1":"put on left shoe","2":"put on right shoe","3":"put on training gear","4":"walk out front door","5":"determine training routine","6":"run every day"},"context":"determine training routine","minutes":216000.0,"events_minutes":{"0":0.0833333333,"1":0.3333333333,"2":0.3333333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk to front door; step1: put on left shoe; step2: put on right shoe; step3: put on training gear; step4: walk out front door; step5: determine training routine; step6: run every day","flatten_input_for_script_generation":"You want to run every day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step0; step3 -> step1; step3 -> step2; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: determine training routine; step1: put on training gear; step2: put on left shoe; step3: walk to front door; step4: walk out front door; step5: put on right shoe; step6: run every day; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step2; step1 -> step5; step4 -> step6","gold_edges_for_prediction":["0->4","1->0","2->0","3->1","3->2","4->6","5->3"],"reference_code":"class RunEveryDay:\n\n    title = \"run every day\"\n    steps = 7\n\n    def step0(self):\n        return \"determine training routine\"\n\n    def step1(self):\n        return \"put on training gear\"\n\n    def step2(self):\n        return \"put on left shoe\"\n\n    def step3(self):\n        return \"walk to front door\"\n\n    def step4(self):\n        return \"walk out front door\"\n\n    def step5(self):\n        return \"put on right shoe\"\n\n    def step6(self):\n        return \"run every day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class RunEveryDay:\n\n    title = \"run every day\"\n    steps = 7\n\n","reference_graph":{"title":"run every day","num_steps":7,"schema":["step0: determine training routine","step1: put on training gear","step2: put on left shoe","step3: walk to front door","step4: walk out front door","step5: put on right shoe","step6: run every day"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step2","step1 -> step5","step4 -> step6"]}}
{"scenario":"get everything on the list","events":{"0":"Start to shop.","1":"Walk to the store.","2":"Get out of car.","3":"Lock the car.","4":"Grab a cart.","5":"drive to the grocery store","6":"get everything on the list"},"context":"drive to the grocery store","minutes":35.0,"events_minutes":{"0":25.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Start to shop.; step1: Walk to the store.; step2: Get out of car.; step3: Lock the car.; step4: Grab a cart.; step5: drive to the grocery store; step6: get everything on the list","flatten_input_for_script_generation":"You want to get everything on the list. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the grocery store; step1: Get out of car.; step2: Lock the car.; step3: Walk to the store.; step4: Grab a cart.; step5: Start to shop.; step6: get everything on the list; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class GetEverythingOnTheList:\n\n    title = \"get everything on the list\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the grocery store\"\n\n    def step1(self):\n        return \"Get out of car.\"\n\n    def step2(self):\n        return \"Lock the car.\"\n\n    def step3(self):\n        return \"Walk to the store.\"\n\n    def step4(self):\n        return \"Grab a cart.\"\n\n    def step5(self):\n        return \"Start to shop.\"\n\n    def step6(self):\n        return \"get everything on the list\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetEverythingOnTheList:\n\n    title = \"get everything on the list\"\n    steps = 7\n\n","reference_graph":{"title":"get everything on the list","num_steps":7,"schema":["step0: drive to the grocery store","step1: Get out of car.","step2: Lock the car.","step3: Walk to the store.","step4: Grab a cart.","step5: Start to shop.","step6: get everything on the list"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go inside the park","events":{"0":"close the car door","1":"open the car door","2":"get out of the car","3":"take keys out of the ignition","4":"walk to the park entrance","5":"turn the car off","6":"park the car","7":"go inside the park"},"context":"park the car","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.1666666667,"3":0.0833333333,"4":2.0,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: close the car door; step1: open the car door; step2: get out of the car; step3: take keys out of the ignition; step4: walk to the park entrance; step5: turn the car off; step6: park the car; step7: go inside the park","flatten_input_for_script_generation":"You want to go inside the park. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: park the car; step1: turn the car off; step2: take keys out of the ignition; step3: open the car door; step4: get out of the car; step5: close the car door; step6: walk to the park entrance; step7: go inside the park; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->7","5->3","6->5"],"reference_code":"class GoInsideThePark:\n\n    title = \"go inside the park\"\n    steps = 8\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"turn the car off\"\n\n    def step2(self):\n        return \"take keys out of the ignition\"\n\n    def step3(self):\n        return \"open the car door\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"close the car door\"\n\n    def step6(self):\n        return \"walk to the park entrance\"\n\n    def step7(self):\n        return \"go inside the park\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoInsideThePark:\n\n    title = \"go inside the park\"\n    steps = 8\n\n","reference_graph":{"title":"go inside the park","num_steps":8,"schema":["step0: park the car","step1: turn the car off","step2: take keys out of the ignition","step3: open the car door","step4: get out of the car","step5: close the car door","step6: walk to the park entrance","step7: go inside the park"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"place wood in the hole","events":{"0":"pick up wood","1":"check for dryness of the wood","2":"carry wood to the hole","3":"walk around the area","4":"look for wood","5":"line the hole with rocks","6":"place wood in the hole"},"context":"line the hole with rocks","minutes":20.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: pick up wood; step1: check for dryness of the wood; step2: carry wood to the hole; step3: walk around the area; step4: look for wood; step5: line the hole with rocks; step6: place wood in the hole","flatten_input_for_script_generation":"You want to place wood in the hole. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step4 -> step1; step0 -> step2; step2 -> step6; step1 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: line the hole with rocks; step1: walk around the area; step2: look for wood; step3: pick up wood; step4: check for dryness of the wood; step5: carry wood to the hole; step6: place wood in the hole; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->4","4->0","4->1","5->3"],"reference_code":"class PlaceWoodInTheHole:\n\n    title = \"place wood in the hole\"\n    steps = 7\n\n    def step0(self):\n        return \"line the hole with rocks\"\n\n    def step1(self):\n        return \"walk around the area\"\n\n    def step2(self):\n        return \"look for wood\"\n\n    def step3(self):\n        return \"pick up wood\"\n\n    def step4(self):\n        return \"check for dryness of the wood\"\n\n    def step5(self):\n        return \"carry wood to the hole\"\n\n    def step6(self):\n        return \"place wood in the hole\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceWoodInTheHole:\n\n    title = \"place wood in the hole\"\n    steps = 7\n\n","reference_graph":{"title":"place wood in the hole","num_steps":7,"schema":["step0: line the hole with rocks","step1: walk around the area","step2: look for wood","step3: pick up wood","step4: check for dryness of the wood","step5: carry wood to the hole","step6: place wood in the hole"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Confirm entry submission.","events":{"0":"Scroll to bottom of page.","1":"Click second submit confirmation.","2":"Move mouse pointer to submit button.","3":"Double check entered information.","4":"Click submit button.","5":"Enter in personal information into registration.","6":"Confirm entry submission."},"context":"Enter in personal information into registration.","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.3333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Scroll to bottom of page.; step1: Click second submit confirmation.; step2: Move mouse pointer to submit button.; step3: Double check entered information.; step4: Click submit button.; step5: Enter in personal information into registration.; step6: Confirm entry submission.","flatten_input_for_script_generation":"You want to Confirm entry submission.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Enter in personal information into registration.; step1: Double check entered information.; step2: Scroll to bottom of page.; step3: Move mouse pointer to submit button.; step4: Click submit button.; step5: Click second submit confirmation.; step6: Confirm entry submission.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->0","4->1","5->3"],"reference_code":"class ConfirmEntrySubmission:\n\n    title = \"Confirm entry submission.\"\n    steps = 7\n\n    def step0(self):\n        return \"Enter in personal information into registration.\"\n\n    def step1(self):\n        return \"Double check entered information.\"\n\n    def step2(self):\n        return \"Scroll to bottom of page.\"\n\n    def step3(self):\n        return \"Move mouse pointer to submit button.\"\n\n    def step4(self):\n        return \"Click submit button.\"\n\n    def step5(self):\n        return \"Click second submit confirmation.\"\n\n    def step6(self):\n        return \"Confirm entry submission.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ConfirmEntrySubmission:\n\n    title = \"Confirm entry submission.\"\n    steps = 7\n\n","reference_graph":{"title":"Confirm entry submission.","num_steps":7,"schema":["step0: Enter in personal information into registration.","step1: Double check entered information.","step2: Scroll to bottom of page.","step3: Move mouse pointer to submit button.","step4: Click submit button.","step5: Click second submit confirmation.","step6: Confirm entry submission."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Log into Netflix","events":{"0":"load the page open","1":"sign into the netflix","2":"wait for the page to load","3":"find passwords to start","4":"type in the passwords","5":"Open up computer","6":"Log into Netflix"},"context":"Open up computer","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: load the page open; step1: sign into the netflix; step2: wait for the page to load; step3: find passwords to start; step4: type in the passwords; step5: Open up computer; step6: Log into Netflix","flatten_input_for_script_generation":"You want to Log into Netflix. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Open up computer; step1: find passwords to start; step2: type in the passwords; step3: wait for the page to load; step4: load the page open; step5: sign into the netflix; step6: Log into Netflix; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class LogIntoNetflix:\n\n    title = \"Log into Netflix\"\n    steps = 7\n\n    def step0(self):\n        return \"Open up computer\"\n\n    def step1(self):\n        return \"find passwords to start\"\n\n    def step2(self):\n        return \"type in the passwords\"\n\n    def step3(self):\n        return \"wait for the page to load\"\n\n    def step4(self):\n        return \"load the page open\"\n\n    def step5(self):\n        return \"sign into the netflix\"\n\n    def step6(self):\n        return \"Log into Netflix\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LogIntoNetflix:\n\n    title = \"Log into Netflix\"\n    steps = 7\n\n","reference_graph":{"title":"Log into Netflix","num_steps":7,"schema":["step0: Open up computer","step1: find passwords to start","step2: type in the passwords","step3: wait for the page to load","step4: load the page open","step5: sign into the netflix","step6: Log into Netflix"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"apply for colleges","events":{"0":"research different class availability for each","1":"open up browser","2":"set laptop on desk","3":"pull out laptop","4":"search for different schools in area","5":"look up reviews for each school","6":"NONE","7":"apply for colleges"},"context":"NONE","minutes":10080.0,"events_minutes":{"0":60.0,"1":1.0,"2":1.0,"3":0.1666666667,"4":30.0,"5":14.0},"flatten_input_for_edge_prediction":"step0: research different class availability for each; step1: open up browser; step2: set laptop on desk; step3: pull out laptop; step4: search for different schools in area; step5: look up reviews for each school; step6: decided to apply for colleges; step7: apply for colleges","flatten_input_for_script_generation":"You want to apply for colleges. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step5; step5 -> step0; step0 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to apply for colleges; step1: pull out laptop; step2: set laptop on desk; step3: open up browser; step4: search for different schools in area; step5: look up reviews for each school; step6: research different class availability for each; step7: apply for colleges; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->1","3->2","4->5","5->0","6->3"],"reference_code":"class ApplyForColleges:\n\n    title = \"apply for colleges\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to apply for colleges\"\n\n    def step1(self):\n        return \"pull out laptop\"\n\n    def step2(self):\n        return \"set laptop on desk\"\n\n    def step3(self):\n        return \"open up browser\"\n\n    def step4(self):\n        return \"search for different schools in area\"\n\n    def step5(self):\n        return \"look up reviews for each school\"\n\n    def step6(self):\n        return \"research different class availability for each\"\n\n    def step7(self):\n        return \"apply for colleges\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ApplyForColleges:\n\n    title = \"apply for colleges\"\n    steps = 8\n\n","reference_graph":{"title":"apply for colleges","num_steps":8,"schema":["step0: decided to apply for colleges","step1: pull out laptop","step2: set laptop on desk","step3: open up browser","step4: search for different schools in area","step5: look up reviews for each school","step6: research different class availability for each","step7: apply for colleges"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Enjoy the movie.","events":{"0":"wait for the movie to start","1":"hold onto snacks","2":"get in a comfortable position","3":"hold onto drink","4":"look toward the screen","5":"Find a place to sit.","6":"Enjoy the movie."},"context":"Find a place to sit.","minutes":120.0,"events_minutes":{"0":10.0,"1":0.0833333333,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: wait for the movie to start; step1: hold onto snacks; step2: get in a comfortable position; step3: hold onto drink; step4: look toward the screen; step5: Find a place to sit.; step6: Enjoy the movie.","flatten_input_for_script_generation":"You want to Enjoy the movie.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step2 -> step3; step1 -> step4; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Find a place to sit.; step1: get in a comfortable position; step2: hold onto snacks; step3: hold onto drink; step4: look toward the screen; step5: wait for the movie to start; step6: Enjoy the movie.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","2->3","3->4","4->0","5->2"],"reference_code":"class EnjoyTheMovie:\n\n    title = \"Enjoy the movie.\"\n    steps = 7\n\n    def step0(self):\n        return \"Find a place to sit.\"\n\n    def step1(self):\n        return \"get in a comfortable position\"\n\n    def step2(self):\n        return \"hold onto snacks\"\n\n    def step3(self):\n        return \"hold onto drink\"\n\n    def step4(self):\n        return \"look toward the screen\"\n\n    def step5(self):\n        return \"wait for the movie to start\"\n\n    def step6(self):\n        return \"Enjoy the movie.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnjoyTheMovie:\n\n    title = \"Enjoy the movie.\"\n    steps = 7\n\n","reference_graph":{"title":"Enjoy the movie.","num_steps":7,"schema":["step0: Find a place to sit.","step1: get in a comfortable position","step2: hold onto snacks","step3: hold onto drink","step4: look toward the screen","step5: wait for the movie to start","step6: Enjoy the movie."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"plug in speakers","events":{"0":"reach out hand","1":"locate speaker port","2":"grab the cord","3":"plug speaker into port","4":"move towards port","5":"enter credit card information","6":"plug in speakers"},"context":"enter credit card information","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: reach out hand; step1: locate speaker port; step2: grab the cord; step3: plug speaker into port; step4: move towards port; step5: enter credit card information; step6: plug in speakers","flatten_input_for_script_generation":"You want to plug in speakers. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: enter credit card information; step1: locate speaker port; step2: reach out hand; step3: grab the cord; step4: move towards port; step5: plug speaker into port; step6: plug in speakers; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class PlugInSpeakers:\n\n    title = \"plug in speakers\"\n    steps = 7\n\n    def step0(self):\n        return \"enter credit card information\"\n\n    def step1(self):\n        return \"locate speaker port\"\n\n    def step2(self):\n        return \"reach out hand\"\n\n    def step3(self):\n        return \"grab the cord\"\n\n    def step4(self):\n        return \"move towards port\"\n\n    def step5(self):\n        return \"plug speaker into port\"\n\n    def step6(self):\n        return \"plug in speakers\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlugInSpeakers:\n\n    title = \"plug in speakers\"\n    steps = 7\n\n","reference_graph":{"title":"plug in speakers","num_steps":7,"schema":["step0: enter credit card information","step1: locate speaker port","step2: reach out hand","step3: grab the cord","step4: move towards port","step5: plug speaker into port","step6: plug in speakers"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk to car.","events":{"0":"locate the car","1":"start walking to car","2":"grab car keys","3":"turn off lights lock house","4":"lock up animals","5":"Search for local shelter address.","6":"Walk to car."},"context":"Search for local shelter address.","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: locate the car; step1: start walking to car; step2: grab car keys; step3: turn off lights lock house; step4: lock up animals; step5: Search for local shelter address.; step6: Walk to car.","flatten_input_for_script_generation":"You want to Walk to car.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step4 -> step2; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Search for local shelter address.; step1: lock up animals; step2: grab car keys; step3: turn off lights lock house; step4: locate the car; step5: start walking to car; step6: Walk to car.; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->0","4->2","5->4"],"reference_code":"class WalkToCar:\n\n    title = \"Walk to car.\"\n    steps = 7\n\n    def step0(self):\n        return \"Search for local shelter address.\"\n\n    def step1(self):\n        return \"lock up animals\"\n\n    def step2(self):\n        return \"grab car keys\"\n\n    def step3(self):\n        return \"turn off lights lock house\"\n\n    def step4(self):\n        return \"locate the car\"\n\n    def step5(self):\n        return \"start walking to car\"\n\n    def step6(self):\n        return \"Walk to car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToCar:\n\n    title = \"Walk to car.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk to car.","num_steps":7,"schema":["step0: Search for local shelter address.","step1: lock up animals","step2: grab car keys","step3: turn off lights lock house","step4: locate the car","step5: start walking to car","step6: Walk to car."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"open the back of the car","events":{"0":"grab back door handle","1":"take keys out of pocket","2":"move finger towards the unlock button","3":"walk towards the car","4":"move towards the back door","5":"lock the front door","6":"open the back of the car"},"context":"lock the front door","minutes":0.5666666667,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab back door handle; step1: take keys out of pocket; step2: move finger towards the unlock button; step3: walk towards the car; step4: move towards the back door; step5: lock the front door; step6: open the back of the car","flatten_input_for_script_generation":"You want to open the back of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: lock the front door; step1: walk towards the car; step2: take keys out of pocket; step3: move finger towards the unlock button; step4: move towards the back door; step5: grab back door handle; step6: open the back of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->1","4->0","5->3"],"reference_code":"class OpenTheBackOfTheCar:\n\n    title = \"open the back of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"lock the front door\"\n\n    def step1(self):\n        return \"walk towards the car\"\n\n    def step2(self):\n        return \"take keys out of pocket\"\n\n    def step3(self):\n        return \"move finger towards the unlock button\"\n\n    def step4(self):\n        return \"move towards the back door\"\n\n    def step5(self):\n        return \"grab back door handle\"\n\n    def step6(self):\n        return \"open the back of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheBackOfTheCar:\n\n    title = \"open the back of the car\"\n    steps = 7\n\n","reference_graph":{"title":"open the back of the car","num_steps":7,"schema":["step0: lock the front door","step1: walk towards the car","step2: take keys out of pocket","step3: move finger towards the unlock button","step4: move towards the back door","step5: grab back door handle","step6: open the back of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get rain coat out of the closet.","events":{"0":"Grab onto rain coat in closet.","1":"Reach hand toward door knob of closet.","2":"Grip door knob tightly.","3":"Pull on door knob to open closet.","4":"Walk to the closet.","5":"Pull rain coat out of closet.","6":"put on left rain boot","7":"get rain coat out of the closet."},"context":"put on left rain boot","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.1666666667,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: Grab onto rain coat in closet.; step1: Reach hand toward door knob of closet.; step2: Grip door knob tightly.; step3: Pull on door knob to open closet.; step4: Walk to the closet.; step5: Pull rain coat out of closet.; step6: put on left rain boot; step7: get rain coat out of the closet.","flatten_input_for_script_generation":"You want to get rain coat out of the closet.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: put on left rain boot; step1: Walk to the closet.; step2: Reach hand toward door knob of closet.; step3: Grip door knob tightly.; step4: Pull on door knob to open closet.; step5: Grab onto rain coat in closet.; step6: Pull rain coat out of closet.; step7: get rain coat out of the closet.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->2","2->3","3->0","4->1","5->7","6->4"],"reference_code":"class GetRainCoatOutOfTheCloset:\n\n    title = \"get rain coat out of the closet.\"\n    steps = 8\n\n    def step0(self):\n        return \"put on left rain boot\"\n\n    def step1(self):\n        return \"Walk to the closet.\"\n\n    def step2(self):\n        return \"Reach hand toward door knob of closet.\"\n\n    def step3(self):\n        return \"Grip door knob tightly.\"\n\n    def step4(self):\n        return \"Pull on door knob to open closet.\"\n\n    def step5(self):\n        return \"Grab onto rain coat in closet.\"\n\n    def step6(self):\n        return \"Pull rain coat out of closet.\"\n\n    def step7(self):\n        return \"get rain coat out of the closet.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetRainCoatOutOfTheCloset:\n\n    title = \"get rain coat out of the closet.\"\n    steps = 8\n\n","reference_graph":{"title":"get rain coat out of the closet.","num_steps":8,"schema":["step0: put on left rain boot","step1: Walk to the closet.","step2: Reach hand toward door knob of closet.","step3: Grip door knob tightly.","step4: Pull on door knob to open closet.","step5: Grab onto rain coat in closet.","step6: Pull rain coat out of closet.","step7: get rain coat out of the closet."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"park the car","events":{"0":"locate a parking space","1":"put the car in park, turn off","2":"line up car in space","3":"move car into parking space","4":"turn into the shelter's parking lot","5":"drive to the animal shelter","6":"park the car"},"context":"drive to the animal shelter","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: locate a parking space; step1: put the car in park, turn off; step2: line up car in space; step3: move car into parking space; step4: turn into the shelter's parking lot; step5: drive to the animal shelter; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: drive to the animal shelter; step1: turn into the shelter's parking lot; step2: locate a parking space; step3: move car into parking space; step4: line up car in space; step5: put the car in park, turn off; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the animal shelter\"\n\n    def step1(self):\n        return \"turn into the shelter's parking lot\"\n\n    def step2(self):\n        return \"locate a parking space\"\n\n    def step3(self):\n        return \"move car into parking space\"\n\n    def step4(self):\n        return \"line up car in space\"\n\n    def step5(self):\n        return \"put the car in park, turn off\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to the animal shelter","step1: turn into the shelter's parking lot","step2: locate a parking space","step3: move car into parking space","step4: line up car in space","step5: put the car in park, turn off","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Confirm date of concert.","events":{"0":"read what friends wrote","1":"close the emails from friends","2":"write the date in mass email to friends to confirm","3":"look up the concert date again","4":"open emails from friends to see responses","5":"Wait for friend responses.","6":"Confirm date of concert."},"context":"Wait for friend responses.","minutes":5.0,"events_minutes":{"0":5.0,"1":0.0833333333,"2":2.0,"3":1.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: read what friends wrote; step1: close the emails from friends; step2: write the date in mass email to friends to confirm; step3: look up the concert date again; step4: open emails from friends to see responses; step5: Wait for friend responses.; step6: Confirm date of concert.","flatten_input_for_script_generation":"You want to Confirm date of concert.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step6; step3 -> step2; step2 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: Wait for friend responses.; step1: look up the concert date again; step2: open emails from friends to see responses; step3: read what friends wrote; step4: close the emails from friends; step5: Confirm date of concert.; step6: write the date in mass email to friends to confirm; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step2","gold_edges_for_prediction":["0->1","1->6","2->4","3->2","4->0","5->3"],"reference_code":"class ConfirmDateOfConcert:\n\n    title = \"Confirm date of concert.\"\n    steps = 7\n\n    def step0(self):\n        return \"Wait for friend responses.\"\n\n    def step1(self):\n        return \"look up the concert date again\"\n\n    def step2(self):\n        return \"open emails from friends to see responses\"\n\n    def step3(self):\n        return \"read what friends wrote\"\n\n    def step4(self):\n        return \"close the emails from friends\"\n\n    def step5(self):\n        return \"Confirm date of concert.\"\n\n    def step6(self):\n        return \"write the date in mass email to friends to confirm\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ConfirmDateOfConcert:\n\n    title = \"Confirm date of concert.\"\n    steps = 7\n\n","reference_graph":{"title":"Confirm date of concert.","num_steps":7,"schema":["step0: Wait for friend responses.","step1: look up the concert date again","step2: open emails from friends to see responses","step3: read what friends wrote","step4: close the emails from friends","step5: Confirm date of concert.","step6: write the date in mass email to friends to confirm"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step2"]}}
{"scenario":"Take out necessary ingredients from the cupboard.","events":{"0":"read the recipe","1":"look in the cupboard for ingredients on list","2":"open the cupboard","3":"reach hand into cupboard","4":"look at the ingredient list on recipe","5":"Find the recipe for best pie.","6":"Take out necessary ingredients from the cupboard."},"context":"Find the recipe for best pie.","minutes":5.0,"events_minutes":{"0":5.0,"1":1.0,"2":0.1666666667,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: read the recipe; step1: look in the cupboard for ingredients on list; step2: open the cupboard; step3: reach hand into cupboard; step4: look at the ingredient list on recipe; step5: Find the recipe for best pie.; step6: Take out necessary ingredients from the cupboard.","flatten_input_for_script_generation":"You want to Take out necessary ingredients from the cupboard.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Find the recipe for best pie.; step1: read the recipe; step2: look at the ingredient list on recipe; step3: open the cupboard; step4: look in the cupboard for ingredients on list; step5: reach hand into cupboard; step6: Take out necessary ingredients from the cupboard.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->6","4->2","5->0"],"reference_code":"class TakeOutNecessaryIngredientsFromTheCupboard:\n\n    title = \"Take out necessary ingredients from the cupboard.\"\n    steps = 7\n\n    def step0(self):\n        return \"Find the recipe for best pie.\"\n\n    def step1(self):\n        return \"read the recipe\"\n\n    def step2(self):\n        return \"look at the ingredient list on recipe\"\n\n    def step3(self):\n        return \"open the cupboard\"\n\n    def step4(self):\n        return \"look in the cupboard for ingredients on list\"\n\n    def step5(self):\n        return \"reach hand into cupboard\"\n\n    def step6(self):\n        return \"Take out necessary ingredients from the cupboard.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeOutNecessaryIngredientsFromTheCupboard:\n\n    title = \"Take out necessary ingredients from the cupboard.\"\n    steps = 7\n\n","reference_graph":{"title":"Take out necessary ingredients from the cupboard.","num_steps":7,"schema":["step0: Find the recipe for best pie.","step1: read the recipe","step2: look at the ingredient list on recipe","step3: open the cupboard","step4: look in the cupboard for ingredients on list","step5: reach hand into cupboard","step6: Take out necessary ingredients from the cupboard."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take the first lesson","events":{"0":"grab gear from the car","1":"get out of the car","2":"pay the fee","3":"walk to the door","4":"find a parking space","5":"sign in at entrance","6":"build up courage","7":"drive to the flying school","8":"take the first lesson"},"context":"drive to the flying school","minutes":240.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":2.0,"4":2.0,"5":1.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: grab gear from the car; step1: get out of the car; step2: pay the fee; step3: walk to the door; step4: find a parking space; step5: sign in at entrance; step6: build up courage; step7: drive to the flying school; step8: take the first lesson","flatten_input_for_script_generation":"You want to take the first lesson. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step4 -> step1; step6 -> step0; step1 -> step0; step0 -> step3; step3 -> step5; step5 -> step2; step2 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: drive to the flying school; step1: find a parking space; step2: build up courage; step3: get out of the car; step4: grab gear from the car; step5: walk to the door; step6: sign in at entrance; step7: pay the fee; step8: take the first lesson; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->0","2->8","3->5","4->6","4->1","5->2","6->0","7->4"],"reference_code":"class TakeTheFirstLesson:\n\n    title = \"take the first lesson\"\n    steps = 9\n\n    def step0(self):\n        return \"drive to the flying school\"\n\n    def step1(self):\n        return \"find a parking space\"\n\n    def step2(self):\n        return \"build up courage\"\n\n    def step3(self):\n        return \"get out of the car\"\n\n    def step4(self):\n        return \"grab gear from the car\"\n\n    def step5(self):\n        return \"walk to the door\"\n\n    def step6(self):\n        return \"sign in at entrance\"\n\n    def step7(self):\n        return \"pay the fee\"\n\n    def step8(self):\n        return \"take the first lesson\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TakeTheFirstLesson:\n\n    title = \"take the first lesson\"\n    steps = 9\n\n","reference_graph":{"title":"take the first lesson","num_steps":9,"schema":["step0: drive to the flying school","step1: find a parking space","step2: build up courage","step3: get out of the car","step4: grab gear from the car","step5: walk to the door","step6: sign in at entrance","step7: pay the fee","step8: take the first lesson"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"accept the job","events":{"0":"Receive the final contract from the interviewer.","1":"Sign the final contract.","2":"Negotiate the contract with the interviewer.","3":"Provide impressive answers during the interview.","4":"Receive the job offer from the interviewer.","5":"be at the interview","6":"accept the job"},"context":"be at the interview","minutes":1.0,"events_minutes":{"0":5.0,"1":0.5,"2":20.0,"3":30.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Receive the final contract from the interviewer.; step1: Sign the final contract.; step2: Negotiate the contract with the interviewer.; step3: Provide impressive answers during the interview.; step4: Receive the job offer from the interviewer.; step5: be at the interview; step6: accept the job","flatten_input_for_script_generation":"You want to accept the job. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: be at the interview; step1: Provide impressive answers during the interview.; step2: Receive the job offer from the interviewer.; step3: Negotiate the contract with the interviewer.; step4: Receive the final contract from the interviewer.; step5: Sign the final contract.; step6: accept the job; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class AcceptTheJob:\n\n    title = \"accept the job\"\n    steps = 7\n\n    def step0(self):\n        return \"be at the interview\"\n\n    def step1(self):\n        return \"Provide impressive answers during the interview.\"\n\n    def step2(self):\n        return \"Receive the job offer from the interviewer.\"\n\n    def step3(self):\n        return \"Negotiate the contract with the interviewer.\"\n\n    def step4(self):\n        return \"Receive the final contract from the interviewer.\"\n\n    def step5(self):\n        return \"Sign the final contract.\"\n\n    def step6(self):\n        return \"accept the job\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AcceptTheJob:\n\n    title = \"accept the job\"\n    steps = 7\n\n","reference_graph":{"title":"accept the job","num_steps":7,"schema":["step0: be at the interview","step1: Provide impressive answers during the interview.","step2: Receive the job offer from the interviewer.","step3: Negotiate the contract with the interviewer.","step4: Receive the final contract from the interviewer.","step5: Sign the final contract.","step6: accept the job"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pay to enter show.","events":{"0":"walk across parking lot to gun show","1":"turn off car","2":"get out of car","3":"close car door","4":"park car in parking lot of gun show","5":"open car door","6":"Drive to a gun show.","7":"Pay to enter show."},"context":"Drive to a gun show.","minutes":5.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":0.5,"3":0.0833333333,"4":1.0,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk across parking lot to gun show; step1: turn off car; step2: get out of car; step3: close car door; step4: park car in parking lot of gun show; step5: open car door; step6: Drive to a gun show.; step7: Pay to enter show.","flatten_input_for_script_generation":"You want to Pay to enter show.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step5; step5 -> step2; step2 -> step3; step3 -> step0; step0 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: Drive to a gun show.; step1: park car in parking lot of gun show; step2: turn off car; step3: open car door; step4: get out of car; step5: close car door; step6: walk across parking lot to gun show; step7: Pay to enter show.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->5","2->3","3->0","4->1","5->2","6->4"],"reference_code":"class PayToEnterShow:\n\n    title = \"Pay to enter show.\"\n    steps = 8\n\n    def step0(self):\n        return \"Drive to a gun show.\"\n\n    def step1(self):\n        return \"park car in parking lot of gun show\"\n\n    def step2(self):\n        return \"turn off car\"\n\n    def step3(self):\n        return \"open car door\"\n\n    def step4(self):\n        return \"get out of car\"\n\n    def step5(self):\n        return \"close car door\"\n\n    def step6(self):\n        return \"walk across parking lot to gun show\"\n\n    def step7(self):\n        return \"Pay to enter show.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PayToEnterShow:\n\n    title = \"Pay to enter show.\"\n    steps = 8\n\n","reference_graph":{"title":"Pay to enter show.","num_steps":8,"schema":["step0: Drive to a gun show.","step1: park car in parking lot of gun show","step2: turn off car","step3: open car door","step4: get out of car","step5: close car door","step6: walk across parking lot to gun show","step7: Pay to enter show."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Type in apartment complex website.","events":{"0":"press enter to login to the computer.","1":"open a new browser window.","2":"press the power button.","3":"type in password for computer.","4":"open the laptop.","5":"Sit down at computer.","6":"Type in apartment complex website."},"context":"Sit down at computer.","minutes":1.0,"events_minutes":{"0":0.05,"1":0.05,"2":0.05,"3":0.0833333333,"4":0.0666666667},"flatten_input_for_edge_prediction":"step0: press enter to login to the computer.; step1: open a new browser window.; step2: press the power button.; step3: type in password for computer.; step4: open the laptop.; step5: Sit down at computer.; step6: Type in apartment complex website.","flatten_input_for_script_generation":"You want to Type in apartment complex website.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Sit down at computer.; step1: open the laptop.; step2: press the power button.; step3: type in password for computer.; step4: press enter to login to the computer.; step5: open a new browser window.; step6: Type in apartment complex website.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->0","4->2","5->4"],"reference_code":"class TypeInApartmentComplexWebsite:\n\n    title = \"Type in apartment complex website.\"\n    steps = 7\n\n    def step0(self):\n        return \"Sit down at computer.\"\n\n    def step1(self):\n        return \"open the laptop.\"\n\n    def step2(self):\n        return \"press the power button.\"\n\n    def step3(self):\n        return \"type in password for computer.\"\n\n    def step4(self):\n        return \"press enter to login to the computer.\"\n\n    def step5(self):\n        return \"open a new browser window.\"\n\n    def step6(self):\n        return \"Type in apartment complex website.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TypeInApartmentComplexWebsite:\n\n    title = \"Type in apartment complex website.\"\n    steps = 7\n\n","reference_graph":{"title":"Type in apartment complex website.","num_steps":7,"schema":["step0: Sit down at computer.","step1: open the laptop.","step2: press the power button.","step3: type in password for computer.","step4: press enter to login to the computer.","step5: open a new browser window.","step6: Type in apartment complex website."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"bring guitar back home","events":{"0":"put the guitar in the car","1":"walk to the car","2":"walk to the store exit","3":"take the guitar from the salesperson","4":"leave the store","5":"take the receipt from the salesperson","6":"drive home with the guitar","7":"purchase a guitar","8":"bring guitar back home"},"context":"purchase a guitar","minutes":30.0,"events_minutes":{"0":3.0,"1":3.0,"2":1.0,"3":0.25,"4":1.0,"5":0.1666666667,"6":10.0},"flatten_input_for_edge_prediction":"step0: put the guitar in the car; step1: walk to the car; step2: walk to the store exit; step3: take the guitar from the salesperson; step4: leave the store; step5: take the receipt from the salesperson; step6: drive home with the guitar; step7: purchase a guitar; step8: bring guitar back home","flatten_input_for_script_generation":"You want to bring guitar back home. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step6 -> step8; step7 -> step5; step7 -> step3","flatten_output_for_script_generation":"step0: purchase a guitar; step1: take the guitar from the salesperson; step2: take the receipt from the salesperson; step3: walk to the store exit; step4: leave the store; step5: walk to the car; step6: put the guitar in the car; step7: drive home with the guitar; step8: bring guitar back home; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->2","6->8","7->5","7->3"],"reference_code":"class BringGuitarBackHome:\n\n    title = \"bring guitar back home\"\n    steps = 9\n\n    def step0(self):\n        return \"purchase a guitar\"\n\n    def step1(self):\n        return \"take the guitar from the salesperson\"\n\n    def step2(self):\n        return \"take the receipt from the salesperson\"\n\n    def step3(self):\n        return \"walk to the store exit\"\n\n    def step4(self):\n        return \"leave the store\"\n\n    def step5(self):\n        return \"walk to the car\"\n\n    def step6(self):\n        return \"put the guitar in the car\"\n\n    def step7(self):\n        return \"drive home with the guitar\"\n\n    def step8(self):\n        return \"bring guitar back home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BringGuitarBackHome:\n\n    title = \"bring guitar back home\"\n    steps = 9\n\n","reference_graph":{"title":"bring guitar back home","num_steps":9,"schema":["step0: purchase a guitar","step1: take the guitar from the salesperson","step2: take the receipt from the salesperson","step3: walk to the store exit","step4: leave the store","step5: walk to the car","step6: put the guitar in the car","step7: drive home with the guitar","step8: bring guitar back home"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Perform well in pre-season game","events":{"0":"practice every day","1":"invite friends over to practice","2":"ask friends if skills are improving","3":"practice with friends","4":"get friends encouragement","5":"Show improved skills at training camp","6":"Perform well in pre-season game"},"context":"Show improved skills at training camp","minutes":180.0,"events_minutes":{"0":43200.0,"1":2.0,"2":2.0,"3":21600.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: practice every day; step1: invite friends over to practice; step2: ask friends if skills are improving; step3: practice with friends; step4: get friends encouragement; step5: Show improved skills at training camp; step6: Perform well in pre-season game","flatten_input_for_script_generation":"You want to Perform well in pre-season game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step3; step1 -> step2; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Show improved skills at training camp; step1: practice every day; step2: invite friends over to practice; step3: practice with friends; step4: ask friends if skills are improving; step5: get friends encouragement; step6: Perform well in pre-season game; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->3","1->2","2->4","3->2","4->6","5->0"],"reference_code":"class PerformWellInPreseasonGame:\n\n    title = \"Perform well in pre-season game\"\n    steps = 7\n\n    def step0(self):\n        return \"Show improved skills at training camp\"\n\n    def step1(self):\n        return \"practice every day\"\n\n    def step2(self):\n        return \"invite friends over to practice\"\n\n    def step3(self):\n        return \"practice with friends\"\n\n    def step4(self):\n        return \"ask friends if skills are improving\"\n\n    def step5(self):\n        return \"get friends encouragement\"\n\n    def step6(self):\n        return \"Perform well in pre-season game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PerformWellInPreseasonGame:\n\n    title = \"Perform well in pre-season game\"\n    steps = 7\n\n","reference_graph":{"title":"Perform well in pre-season game","num_steps":7,"schema":["step0: Show improved skills at training camp","step1: practice every day","step2: invite friends over to practice","step3: practice with friends","step4: ask friends if skills are improving","step5: get friends encouragement","step6: Perform well in pre-season game"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk out the front door","events":{"0":"check hair and makeup","1":"grab keysfrom table","2":"walk over to mirror","3":"grab purse from table","4":"apply lipstick in mirror","5":"get dressed to go out","6":"walk out the front door"},"context":"get dressed to go out","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: check hair and makeup; step1: grab keysfrom table; step2: walk over to mirror; step3: grab purse from table; step4: apply lipstick in mirror; step5: get dressed to go out; step6: walk out the front door","flatten_input_for_script_generation":"You want to walk out the front door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step0 -> step3; step0 -> step1; step4 -> step0; step3 -> step6; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: get dressed to go out; step1: walk over to mirror; step2: apply lipstick in mirror; step3: check hair and makeup; step4: grab purse from table; step5: grab keysfrom table; step6: walk out the front door; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","0->1","1->6","2->4","3->6","4->0","5->2"],"reference_code":"class WalkOutTheFrontDoor:\n\n    title = \"walk out the front door\"\n    steps = 7\n\n    def step0(self):\n        return \"get dressed to go out\"\n\n    def step1(self):\n        return \"walk over to mirror\"\n\n    def step2(self):\n        return \"apply lipstick in mirror\"\n\n    def step3(self):\n        return \"check hair and makeup\"\n\n    def step4(self):\n        return \"grab purse from table\"\n\n    def step5(self):\n        return \"grab keysfrom table\"\n\n    def step6(self):\n        return \"walk out the front door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkOutTheFrontDoor:\n\n    title = \"walk out the front door\"\n    steps = 7\n\n","reference_graph":{"title":"walk out the front door","num_steps":7,"schema":["step0: get dressed to go out","step1: walk over to mirror","step2: apply lipstick in mirror","step3: check hair and makeup","step4: grab purse from table","step5: grab keysfrom table","step6: walk out the front door"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"apply for financial aid","events":{"0":"submit the application","1":"fax any needed documents","2":"gather needed documents","3":"fill out the application","4":"go to the computer","5":"login into financial aid website","6":"research what documents are needed","7":"NONE","8":"apply for financial aid"},"context":"NONE","minutes":15.0,"events_minutes":{"0":1.0,"1":10.0,"2":10.0,"3":60.0,"4":2.0,"5":1.0,"6":30.0},"flatten_input_for_edge_prediction":"step0: submit the application; step1: fax any needed documents; step2: gather needed documents; step3: fill out the application; step4: go to the computer; step5: login into financial aid website; step6: research what documents are needed; step7: decided to apply for financial aid; step8: apply for financial aid","flatten_input_for_script_generation":"You want to apply for financial aid. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step2; step2 -> step3; step4 -> step6; step4 -> step5; step5 -> step3; step3 -> step1; step1 -> step0; step0 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to apply for financial aid; step1: go to the computer; step2: research what documents are needed; step3: gather needed documents; step4: fill out the application; step5: fax any needed documents; step6: login into financial aid website; step7: submit the application; step8: apply for financial aid; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step1 -> step6; step6 -> step4; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","2->3","3->1","4->6","4->5","5->3","6->2","7->4"],"reference_code":"class ApplyForFinancialAid:\n\n    title = \"apply for financial aid\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to apply for financial aid\"\n\n    def step1(self):\n        return \"go to the computer\"\n\n    def step2(self):\n        return \"research what documents are needed\"\n\n    def step3(self):\n        return \"gather needed documents\"\n\n    def step4(self):\n        return \"fill out the application\"\n\n    def step5(self):\n        return \"fax any needed documents\"\n\n    def step6(self):\n        return \"login into financial aid website\"\n\n    def step7(self):\n        return \"submit the application\"\n\n    def step8(self):\n        return \"apply for financial aid\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ApplyForFinancialAid:\n\n    title = \"apply for financial aid\"\n    steps = 9\n\n","reference_graph":{"title":"apply for financial aid","num_steps":9,"schema":["step0: decided to apply for financial aid","step1: go to the computer","step2: research what documents are needed","step3: gather needed documents","step4: fill out the application","step5: fax any needed documents","step6: login into financial aid website","step7: submit the application","step8: apply for financial aid"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step1 -> step6","step6 -> step4","step5 -> step7","step7 -> step8"]}}
{"scenario":"Mix the ingredients.","events":{"0":"Close utensil drawer.","1":"Find a mixing spoon.","2":"Pick up mixing spoon.","3":"Open utensil drawer.","4":"Place mixing spoon in bowl.","5":"Add ingredients to a bowl.","6":"Mix the ingredients."},"context":"Add ingredients to a bowl.","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.3333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Close utensil drawer.; step1: Find a mixing spoon.; step2: Pick up mixing spoon.; step3: Open utensil drawer.; step4: Place mixing spoon in bowl.; step5: Add ingredients to a bowl.; step6: Mix the ingredients.","flatten_input_for_script_generation":"You want to Mix the ingredients.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Add ingredients to a bowl.; step1: Open utensil drawer.; step2: Find a mixing spoon.; step3: Pick up mixing spoon.; step4: Close utensil drawer.; step5: Place mixing spoon in bowl.; step6: Mix the ingredients.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->6","5->3"],"reference_code":"class MixTheIngredients:\n\n    title = \"Mix the ingredients.\"\n    steps = 7\n\n    def step0(self):\n        return \"Add ingredients to a bowl.\"\n\n    def step1(self):\n        return \"Open utensil drawer.\"\n\n    def step2(self):\n        return \"Find a mixing spoon.\"\n\n    def step3(self):\n        return \"Pick up mixing spoon.\"\n\n    def step4(self):\n        return \"Close utensil drawer.\"\n\n    def step5(self):\n        return \"Place mixing spoon in bowl.\"\n\n    def step6(self):\n        return \"Mix the ingredients.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MixTheIngredients:\n\n    title = \"Mix the ingredients.\"\n    steps = 7\n\n","reference_graph":{"title":"Mix the ingredients.","num_steps":7,"schema":["step0: Add ingredients to a bowl.","step1: Open utensil drawer.","step2: Find a mixing spoon.","step3: Pick up mixing spoon.","step4: Close utensil drawer.","step5: Place mixing spoon in bowl.","step6: Mix the ingredients."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy ingredients for cookies","events":{"0":"grab car keys","1":"get into car","2":"check kitchen for needed ingredients","3":"walk around finding needed ingredients","4":"drive to store","5":"jot down recipe on paper","6":"notice kitchen doesn't have  required ingredients","7":"find a recipe for cookies","8":"buy ingredients for cookies"},"context":"find a recipe for cookies","minutes":30.0,"events_minutes":{"0":0.2833333333,"1":2.0,"2":8.0,"3":30.0,"4":18.0,"5":6.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: grab car keys; step1: get into car; step2: check kitchen for needed ingredients; step3: walk around finding needed ingredients; step4: drive to store; step5: jot down recipe on paper; step6: notice kitchen doesn't have  required ingredients; step7: find a recipe for cookies; step8: buy ingredients for cookies","flatten_input_for_script_generation":"You want to buy ingredients for cookies. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step6; step2 -> step6; step6 -> step0; step0 -> step1; step1 -> step4; step4 -> step3; step3 -> step8; step7 -> step5; step7 -> step2","flatten_output_for_script_generation":"step0: find a recipe for cookies; step1: check kitchen for needed ingredients; step2: jot down recipe on paper; step3: notice kitchen doesn't have  required ingredients; step4: grab car keys; step5: get into car; step6: drive to store; step7: walk around finding needed ingredients; step8: buy ingredients for cookies; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->4","2->6","3->8","4->3","5->6","6->0","7->5","7->2"],"reference_code":"class BuyIngredientsForCookies:\n\n    title = \"buy ingredients for cookies\"\n    steps = 9\n\n    def step0(self):\n        return \"find a recipe for cookies\"\n\n    def step1(self):\n        return \"check kitchen for needed ingredients\"\n\n    def step2(self):\n        return \"jot down recipe on paper\"\n\n    def step3(self):\n        return \"notice kitchen doesn't have  required ingredients\"\n\n    def step4(self):\n        return \"grab car keys\"\n\n    def step5(self):\n        return \"get into car\"\n\n    def step6(self):\n        return \"drive to store\"\n\n    def step7(self):\n        return \"walk around finding needed ingredients\"\n\n    def step8(self):\n        return \"buy ingredients for cookies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuyIngredientsForCookies:\n\n    title = \"buy ingredients for cookies\"\n    steps = 9\n\n","reference_graph":{"title":"buy ingredients for cookies","num_steps":9,"schema":["step0: find a recipe for cookies","step1: check kitchen for needed ingredients","step2: jot down recipe on paper","step3: notice kitchen doesn't have  required ingredients","step4: grab car keys","step5: get into car","step6: drive to store","step7: walk around finding needed ingredients","step8: buy ingredients for cookies"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"open up package","events":{"0":"Set package on sturdy surface","1":"Grab right box flap and pull outward","2":"Remove item from packaging","3":"Bring the package indoors","4":"Grab left box flap and pull outward","5":"wait for delivery","6":"open up package"},"context":"wait for delivery","minutes":5.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.05,"3":0.25,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: Set package on sturdy surface; step1: Grab right box flap and pull outward; step2: Remove item from packaging; step3: Bring the package indoors; step4: Grab left box flap and pull outward; step5: wait for delivery; step6: open up package","flatten_input_for_script_generation":"You want to open up package. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step0 -> step4; step1 -> step2; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: wait for delivery; step1: Bring the package indoors; step2: Set package on sturdy surface; step3: Grab right box flap and pull outward; step4: Grab left box flap and pull outward; step5: Remove item from packaging; step6: open up package; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->4","1->2","2->6","3->0","4->2","5->3"],"reference_code":"class OpenUpPackage:\n\n    title = \"open up package\"\n    steps = 7\n\n    def step0(self):\n        return \"wait for delivery\"\n\n    def step1(self):\n        return \"Bring the package indoors\"\n\n    def step2(self):\n        return \"Set package on sturdy surface\"\n\n    def step3(self):\n        return \"Grab right box flap and pull outward\"\n\n    def step4(self):\n        return \"Grab left box flap and pull outward\"\n\n    def step5(self):\n        return \"Remove item from packaging\"\n\n    def step6(self):\n        return \"open up package\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenUpPackage:\n\n    title = \"open up package\"\n    steps = 7\n\n","reference_graph":{"title":"open up package","num_steps":7,"schema":["step0: wait for delivery","step1: Bring the package indoors","step2: Set package on sturdy surface","step3: Grab right box flap and pull outward","step4: Grab left box flap and pull outward","step5: Remove item from packaging","step6: open up package"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Open the tax return program","events":{"0":"find installed program","1":"download the program","2":"locate downloaded file","3":"install the program","4":"double click file","5":"Purchase an affordable e-file program","6":"Open the tax return program"},"context":"Purchase an affordable e-file program","minutes":5.0,"events_minutes":{"0":1.0,"1":5.0,"2":0.0833333333,"3":5.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: find installed program; step1: download the program; step2: locate downloaded file; step3: install the program; step4: double click file; step5: Purchase an affordable e-file program; step6: Open the tax return program","flatten_input_for_script_generation":"You want to Open the tax return program. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Purchase an affordable e-file program; step1: download the program; step2: locate downloaded file; step3: double click file; step4: install the program; step5: find installed program; step6: Open the tax return program; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->3","5->1"],"reference_code":"class OpenTheTaxReturnProgram:\n\n    title = \"Open the tax return program\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase an affordable e-file program\"\n\n    def step1(self):\n        return \"download the program\"\n\n    def step2(self):\n        return \"locate downloaded file\"\n\n    def step3(self):\n        return \"double click file\"\n\n    def step4(self):\n        return \"install the program\"\n\n    def step5(self):\n        return \"find installed program\"\n\n    def step6(self):\n        return \"Open the tax return program\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheTaxReturnProgram:\n\n    title = \"Open the tax return program\"\n    steps = 7\n\n","reference_graph":{"title":"Open the tax return program","num_steps":7,"schema":["step0: Purchase an affordable e-file program","step1: download the program","step2: locate downloaded file","step3: double click file","step4: install the program","step5: find installed program","step6: Open the tax return program"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sign up for air balooning","events":{"0":"enter details on sheet","1":"wait in the line","2":"get sign up sheet","3":"ask about balloon lessons","4":"once at front greet attendant","5":"go to front desk","6":"sign up for air balooning"},"context":"go to front desk","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: enter details on sheet; step1: wait in the line; step2: get sign up sheet; step3: ask about balloon lessons; step4: once at front greet attendant; step5: go to front desk; step6: sign up for air balooning","flatten_input_for_script_generation":"You want to sign up for air balooning. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go to front desk; step1: wait in the line; step2: once at front greet attendant; step3: ask about balloon lessons; step4: get sign up sheet; step5: enter details on sheet; step6: sign up for air balooning; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class SignUpForAirBalooning:\n\n    title = \"sign up for air balooning\"\n    steps = 7\n\n    def step0(self):\n        return \"go to front desk\"\n\n    def step1(self):\n        return \"wait in the line\"\n\n    def step2(self):\n        return \"once at front greet attendant\"\n\n    def step3(self):\n        return \"ask about balloon lessons\"\n\n    def step4(self):\n        return \"get sign up sheet\"\n\n    def step5(self):\n        return \"enter details on sheet\"\n\n    def step6(self):\n        return \"sign up for air balooning\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SignUpForAirBalooning:\n\n    title = \"sign up for air balooning\"\n    steps = 7\n\n","reference_graph":{"title":"sign up for air balooning","num_steps":7,"schema":["step0: go to front desk","step1: wait in the line","step2: once at front greet attendant","step3: ask about balloon lessons","step4: get sign up sheet","step5: enter details on sheet","step6: sign up for air balooning"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Purchase the ticket for the movie","events":{"0":"get out of the car, lock the doors","1":"begin walking towards entrance","2":"park the car in the parking lot","3":"enter the building","4":"get inline at the ticket sales desk","5":"Go to the theater","6":"Purchase the ticket for the movie"},"context":"Go to the theater","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: get out of the car, lock the doors; step1: begin walking towards entrance; step2: park the car in the parking lot; step3: enter the building; step4: get inline at the ticket sales desk; step5: Go to the theater; step6: Purchase the ticket for the movie","flatten_input_for_script_generation":"You want to Purchase the ticket for the movie. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Go to the theater; step1: park the car in the parking lot; step2: get out of the car, lock the doors; step3: begin walking towards entrance; step4: enter the building; step5: get inline at the ticket sales desk; step6: Purchase the ticket for the movie; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->6","5->2"],"reference_code":"class PurchaseTheTicketForTheMovie:\n\n    title = \"Purchase the ticket for the movie\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the theater\"\n\n    def step1(self):\n        return \"park the car in the parking lot\"\n\n    def step2(self):\n        return \"get out of the car, lock the doors\"\n\n    def step3(self):\n        return \"begin walking towards entrance\"\n\n    def step4(self):\n        return \"enter the building\"\n\n    def step5(self):\n        return \"get inline at the ticket sales desk\"\n\n    def step6(self):\n        return \"Purchase the ticket for the movie\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseTheTicketForTheMovie:\n\n    title = \"Purchase the ticket for the movie\"\n    steps = 7\n\n","reference_graph":{"title":"Purchase the ticket for the movie","num_steps":7,"schema":["step0: Go to the theater","step1: park the car in the parking lot","step2: get out of the car, lock the doors","step3: begin walking towards entrance","step4: enter the building","step5: get inline at the ticket sales desk","step6: Purchase the ticket for the movie"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put snack bowls on coffee table.","events":{"0":"determine a good place for the bowl.","1":"put hands on bowls","2":"grip the bowl.","3":"stand at the table","4":"walk toward the table","5":"Put snacks in bowls.","6":"Put snack bowls on coffee table."},"context":"Put snacks in bowls.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.0166666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: determine a good place for the bowl.; step1: put hands on bowls; step2: grip the bowl.; step3: stand at the table; step4: walk toward the table; step5: Put snacks in bowls.; step6: Put snack bowls on coffee table.","flatten_input_for_script_generation":"You want to Put snack bowls on coffee table.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step4 -> step0; step3 -> step6; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Put snacks in bowls.; step1: put hands on bowls; step2: grip the bowl.; step3: walk toward the table; step4: stand at the table; step5: determine a good place for the bowl.; step6: Put snack bowls on coffee table.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->6","4->3","4->0","5->1"],"reference_code":"class PutSnackBowlsOnCoffeeTable:\n\n    title = \"Put snack bowls on coffee table.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put snacks in bowls.\"\n\n    def step1(self):\n        return \"put hands on bowls\"\n\n    def step2(self):\n        return \"grip the bowl.\"\n\n    def step3(self):\n        return \"walk toward the table\"\n\n    def step4(self):\n        return \"stand at the table\"\n\n    def step5(self):\n        return \"determine a good place for the bowl.\"\n\n    def step6(self):\n        return \"Put snack bowls on coffee table.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutSnackBowlsOnCoffeeTable:\n\n    title = \"Put snack bowls on coffee table.\"\n    steps = 7\n\n","reference_graph":{"title":"Put snack bowls on coffee table.","num_steps":7,"schema":["step0: Put snacks in bowls.","step1: put hands on bowls","step2: grip the bowl.","step3: walk toward the table","step4: stand at the table","step5: determine a good place for the bowl.","step6: Put snack bowls on coffee table."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"Walk outside towards bus stop.","events":{"0":"open house door","1":"exit the home","2":"grab the wallet","3":"close the house door","4":"check wallet for money","5":"Put on shoes.","6":"Walk outside towards bus stop."},"context":"Put on shoes.","minutes":10.0,"events_minutes":{"0":0.25,"1":0.25,"2":0.25,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: open house door; step1: exit the home; step2: grab the wallet; step3: close the house door; step4: check wallet for money; step5: Put on shoes.; step6: Walk outside towards bus stop.","flatten_input_for_script_generation":"You want to Walk outside towards bus stop.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Put on shoes.; step1: grab the wallet; step2: check wallet for money; step3: open house door; step4: exit the home; step5: close the house door; step6: Walk outside towards bus stop.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->4","3->6","4->0","5->2"],"reference_code":"class WalkOutsideTowardsBusStop:\n\n    title = \"Walk outside towards bus stop.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put on shoes.\"\n\n    def step1(self):\n        return \"grab the wallet\"\n\n    def step2(self):\n        return \"check wallet for money\"\n\n    def step3(self):\n        return \"open house door\"\n\n    def step4(self):\n        return \"exit the home\"\n\n    def step5(self):\n        return \"close the house door\"\n\n    def step6(self):\n        return \"Walk outside towards bus stop.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkOutsideTowardsBusStop:\n\n    title = \"Walk outside towards bus stop.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk outside towards bus stop.","num_steps":7,"schema":["step0: Put on shoes.","step1: grab the wallet","step2: check wallet for money","step3: open house door","step4: exit the home","step5: close the house door","step6: Walk outside towards bus stop."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Head to the bench press machine.","events":{"0":"move towards bench press","1":"lock locker door","2":"close locker door","3":"locate the bench press","4":"head towards locker room exit","5":"Put on workout attire.","6":"Head to the bench press machine."},"context":"Put on workout attire.","minutes":5.0,"events_minutes":{"0":0.3333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: move towards bench press; step1: lock locker door; step2: close locker door; step3: locate the bench press; step4: head towards locker room exit; step5: Put on workout attire.; step6: Head to the bench press machine.","flatten_input_for_script_generation":"You want to Head to the bench press machine.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Put on workout attire.; step1: close locker door; step2: lock locker door; step3: head towards locker room exit; step4: locate the bench press; step5: move towards bench press; step6: Head to the bench press machine.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->0","4->3","5->2"],"reference_code":"class HeadToTheBenchPressMachine:\n\n    title = \"Head to the bench press machine.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put on workout attire.\"\n\n    def step1(self):\n        return \"close locker door\"\n\n    def step2(self):\n        return \"lock locker door\"\n\n    def step3(self):\n        return \"head towards locker room exit\"\n\n    def step4(self):\n        return \"locate the bench press\"\n\n    def step5(self):\n        return \"move towards bench press\"\n\n    def step6(self):\n        return \"Head to the bench press machine.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HeadToTheBenchPressMachine:\n\n    title = \"Head to the bench press machine.\"\n    steps = 7\n\n","reference_graph":{"title":"Head to the bench press machine.","num_steps":7,"schema":["step0: Put on workout attire.","step1: close locker door","step2: lock locker door","step3: head towards locker room exit","step4: locate the bench press","step5: move towards bench press","step6: Head to the bench press machine."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in the car","events":{"0":"reach towards door handle","1":"open car door","2":"click on car alarm remote","3":"open hand up","4":"grab door handle","5":"go out to the car","6":"get in the car"},"context":"go out to the car","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: reach towards door handle; step1: open car door; step2: click on car alarm remote; step3: open hand up; step4: grab door handle; step5: go out to the car; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go out to the car; step1: click on car alarm remote; step2: open hand up; step3: reach towards door handle; step4: grab door handle; step5: open car door; step6: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"go out to the car\"\n\n    def step1(self):\n        return \"click on car alarm remote\"\n\n    def step2(self):\n        return \"open hand up\"\n\n    def step3(self):\n        return \"reach towards door handle\"\n\n    def step4(self):\n        return \"grab door handle\"\n\n    def step5(self):\n        return \"open car door\"\n\n    def step6(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: go out to the car","step1: click on car alarm remote","step2: open hand up","step3: reach towards door handle","step4: grab door handle","step5: open car door","step6: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Practice running every week","events":{"0":"Make a plan to run.","1":"Purchase running shoes.","2":"Stick to the new running schedule.","3":"Purchase running clothes.","4":"Set aside time to run for the week.","5":"Sign up for race","6":"Practice running every week"},"context":"Sign up for race","minutes":43200.0,"events_minutes":{"0":15.0,"1":30.0,"2":10080.0,"3":30.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: Make a plan to run.; step1: Purchase running shoes.; step2: Stick to the new running schedule.; step3: Purchase running clothes.; step4: Set aside time to run for the week.; step5: Sign up for race; step6: Practice running every week","flatten_input_for_script_generation":"You want to Practice running every week. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step1 -> step4; step3 -> step4; step2 -> step6; step5 -> step3; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: Sign up for race; step1: Purchase running shoes.; step2: Make a plan to run.; step3: Set aside time to run for the week.; step4: Stick to the new running schedule.; step5: Practice running every week; step6: Purchase running clothes.; step0 -> step1; step0 -> step6; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step6 -> step3","gold_edges_for_prediction":["0->4","1->4","2->6","3->4","4->2","5->3","5->0","5->1"],"reference_code":"class PracticeRunningEveryWeek:\n\n    title = \"Practice running every week\"\n    steps = 7\n\n    def step0(self):\n        return \"Sign up for race\"\n\n    def step1(self):\n        return \"Purchase running shoes.\"\n\n    def step2(self):\n        return \"Make a plan to run.\"\n\n    def step3(self):\n        return \"Set aside time to run for the week.\"\n\n    def step4(self):\n        return \"Stick to the new running schedule.\"\n\n    def step5(self):\n        return \"Practice running every week\"\n\n    def step6(self):\n        return \"Purchase running clothes.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class PracticeRunningEveryWeek:\n\n    title = \"Practice running every week\"\n    steps = 7\n\n","reference_graph":{"title":"Practice running every week","num_steps":7,"schema":["step0: Sign up for race","step1: Purchase running shoes.","step2: Make a plan to run.","step3: Set aside time to run for the week.","step4: Stick to the new running schedule.","step5: Practice running every week","step6: Purchase running clothes."],"relations":["step0 -> step1","step0 -> step6","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step6 -> step3"]}}
{"scenario":"Place the game on the counter.","events":{"0":"move right foot forward","1":"repeat the right foot left foot forward to reach cashier","2":"begin to walk down the aisle","3":"move left foot forward","4":"lift hand holding game to counter height","5":"Take the game to the cashier.","6":"Place the game on the counter."},"context":"Take the game to the cashier.","minutes":0.5,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: move right foot forward; step1: repeat the right foot left foot forward to reach cashier; step2: begin to walk down the aisle; step3: move left foot forward; step4: lift hand holding game to counter height; step5: Take the game to the cashier.; step6: Place the game on the counter.","flatten_input_for_script_generation":"You want to Place the game on the counter.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step3 -> step1; step2 -> step0; step2 -> step3; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Take the game to the cashier.; step1: begin to walk down the aisle; step2: move right foot forward; step3: repeat the right foot left foot forward to reach cashier; step4: lift hand holding game to counter height; step5: Place the game on the counter.; step6: move left foot forward; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step3; step1 -> step2; step1 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","2->3","3->1","4->6","5->2"],"reference_code":"class PlaceTheGameOnTheCounter:\n\n    title = \"Place the game on the counter.\"\n    steps = 7\n\n    def step0(self):\n        return \"Take the game to the cashier.\"\n\n    def step1(self):\n        return \"begin to walk down the aisle\"\n\n    def step2(self):\n        return \"move right foot forward\"\n\n    def step3(self):\n        return \"repeat the right foot left foot forward to reach cashier\"\n\n    def step4(self):\n        return \"lift hand holding game to counter height\"\n\n    def step5(self):\n        return \"Place the game on the counter.\"\n\n    def step6(self):\n        return \"move left foot forward\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step3\",\n            \"step1 -> step2\",\n            \"step1 -> step6\",\n        ]\n","input_prompt_code":"class PlaceTheGameOnTheCounter:\n\n    title = \"Place the game on the counter.\"\n    steps = 7\n\n","reference_graph":{"title":"Place the game on the counter.","num_steps":7,"schema":["step0: Take the game to the cashier.","step1: begin to walk down the aisle","step2: move right foot forward","step3: repeat the right foot left foot forward to reach cashier","step4: lift hand holding game to counter height","step5: Place the game on the counter.","step6: move left foot forward"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step3","step1 -> step2","step1 -> step6"]}}
{"scenario":"Receive varsity spot from coach","events":{"0":"coach hands paperwork over","1":"fill out paperwork","2":"hand paperwork back to coach","3":"tell coach about practicing hard","4":"wait for coach to respond","5":"Confess commitment to coach","6":"Receive varsity spot from coach"},"context":"Confess commitment to coach","minutes":60.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: coach hands paperwork over; step1: fill out paperwork; step2: hand paperwork back to coach; step3: tell coach about practicing hard; step4: wait for coach to respond; step5: Confess commitment to coach; step6: Receive varsity spot from coach","flatten_input_for_script_generation":"You want to Receive varsity spot from coach. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Confess commitment to coach; step1: tell coach about practicing hard; step2: wait for coach to respond; step3: coach hands paperwork over; step4: fill out paperwork; step5: hand paperwork back to coach; step6: Receive varsity spot from coach; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->4","4->0","5->3"],"reference_code":"class ReceiveVarsitySpotFromCoach:\n\n    title = \"Receive varsity spot from coach\"\n    steps = 7\n\n    def step0(self):\n        return \"Confess commitment to coach\"\n\n    def step1(self):\n        return \"tell coach about practicing hard\"\n\n    def step2(self):\n        return \"wait for coach to respond\"\n\n    def step3(self):\n        return \"coach hands paperwork over\"\n\n    def step4(self):\n        return \"fill out paperwork\"\n\n    def step5(self):\n        return \"hand paperwork back to coach\"\n\n    def step6(self):\n        return \"Receive varsity spot from coach\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReceiveVarsitySpotFromCoach:\n\n    title = \"Receive varsity spot from coach\"\n    steps = 7\n\n","reference_graph":{"title":"Receive varsity spot from coach","num_steps":7,"schema":["step0: Confess commitment to coach","step1: tell coach about practicing hard","step2: wait for coach to respond","step3: coach hands paperwork over","step4: fill out paperwork","step5: hand paperwork back to coach","step6: Receive varsity spot from coach"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"Align the car with the parking spot.","1":"Look for an empty parking spot.","2":"Shift the gear into park.","3":"Turn off the vehicle.","4":"Slowly pull into the parking spot.","5":"Place foot on the brake.","6":"drive to pier","7":"park the car"},"context":"drive to pier","minutes":3.0,"events_minutes":{"0":0.1666666667,"1":4.0,"2":0.0333333333,"3":0.0833333333,"4":0.25,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: Align the car with the parking spot.; step1: Look for an empty parking spot.; step2: Shift the gear into park.; step3: Turn off the vehicle.; step4: Slowly pull into the parking spot.; step5: Place foot on the brake.; step6: drive to pier; step7: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step5; step5 -> step2; step2 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: drive to pier; step1: Look for an empty parking spot.; step2: Align the car with the parking spot.; step3: Slowly pull into the parking spot.; step4: Place foot on the brake.; step5: Shift the gear into park.; step6: Turn off the vehicle.; step7: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->0","2->3","3->7","4->5","5->2","6->1"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to pier\"\n\n    def step1(self):\n        return \"Look for an empty parking spot.\"\n\n    def step2(self):\n        return \"Align the car with the parking spot.\"\n\n    def step3(self):\n        return \"Slowly pull into the parking spot.\"\n\n    def step4(self):\n        return \"Place foot on the brake.\"\n\n    def step5(self):\n        return \"Shift the gear into park.\"\n\n    def step6(self):\n        return \"Turn off the vehicle.\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n","reference_graph":{"title":"park the car","num_steps":8,"schema":["step0: drive to pier","step1: Look for an empty parking spot.","step2: Align the car with the parking spot.","step3: Slowly pull into the parking spot.","step4: Place foot on the brake.","step5: Shift the gear into park.","step6: Turn off the vehicle.","step7: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"contact the race organizers","events":{"0":"find the number for the race organizers","1":"grab the phone","2":"locate the phone","3":"unlock the phone","4":"call the number","5":"make sure scheduled day is free","6":"contact the race organizers"},"context":"make sure scheduled day is free","minutes":30.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: find the number for the race organizers; step1: grab the phone; step2: locate the phone; step3: unlock the phone; step4: call the number; step5: make sure scheduled day is free; step6: contact the race organizers","flatten_input_for_script_generation":"You want to contact the race organizers. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step0 -> step4; step3 -> step0; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: make sure scheduled day is free; step1: locate the phone; step2: grab the phone; step3: unlock the phone; step4: find the number for the race organizers; step5: call the number; step6: contact the race organizers; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->0","4->6","5->2"],"reference_code":"class ContactTheRaceOrganizers:\n\n    title = \"contact the race organizers\"\n    steps = 7\n\n    def step0(self):\n        return \"make sure scheduled day is free\"\n\n    def step1(self):\n        return \"locate the phone\"\n\n    def step2(self):\n        return \"grab the phone\"\n\n    def step3(self):\n        return \"unlock the phone\"\n\n    def step4(self):\n        return \"find the number for the race organizers\"\n\n    def step5(self):\n        return \"call the number\"\n\n    def step6(self):\n        return \"contact the race organizers\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ContactTheRaceOrganizers:\n\n    title = \"contact the race organizers\"\n    steps = 7\n\n","reference_graph":{"title":"contact the race organizers","num_steps":7,"schema":["step0: make sure scheduled day is free","step1: locate the phone","step2: grab the phone","step3: unlock the phone","step4: find the number for the race organizers","step5: call the number","step6: contact the race organizers"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Train until date of marathon.","events":{"0":"Increase the training time gradually next time","1":"Put on the running gear","2":"Practice running for 20 minutes","3":"Repeat steps 2, 3, and 4 for next 28 days","4":"Freshen up after the practice run","5":"Plan out training regiment.","6":"Train until date of marathon."},"context":"Plan out training regiment.","minutes":43200.0,"events_minutes":{"0":30.0,"1":5.0,"2":20.0,"3":40320.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Increase the training time gradually next time; step1: Put on the running gear; step2: Practice running for 20 minutes; step3: Repeat steps 2, 3, and 4 for next 28 days; step4: Freshen up after the practice run; step5: Plan out training regiment.; step6: Train until date of marathon.","flatten_input_for_script_generation":"You want to Train until date of marathon.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Plan out training regiment.; step1: Put on the running gear; step2: Practice running for 20 minutes; step3: Freshen up after the practice run; step4: Increase the training time gradually next time; step5: Repeat steps 2, 3, and 4 for next 28 days; step6: Train until date of marathon.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->6","4->0","5->1"],"reference_code":"class TrainUntilDateOfMarathon:\n\n    title = \"Train until date of marathon.\"\n    steps = 7\n\n    def step0(self):\n        return \"Plan out training regiment.\"\n\n    def step1(self):\n        return \"Put on the running gear\"\n\n    def step2(self):\n        return \"Practice running for 20 minutes\"\n\n    def step3(self):\n        return \"Freshen up after the practice run\"\n\n    def step4(self):\n        return \"Increase the training time gradually next time\"\n\n    def step5(self):\n        return \"Repeat steps 2, 3, and 4 for next 28 days\"\n\n    def step6(self):\n        return \"Train until date of marathon.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TrainUntilDateOfMarathon:\n\n    title = \"Train until date of marathon.\"\n    steps = 7\n\n","reference_graph":{"title":"Train until date of marathon.","num_steps":7,"schema":["step0: Plan out training regiment.","step1: Put on the running gear","step2: Practice running for 20 minutes","step3: Freshen up after the practice run","step4: Increase the training time gradually next time","step5: Repeat steps 2, 3, and 4 for next 28 days","step6: Train until date of marathon."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"type the message","events":{"0":"choose contact to compose message","1":"sign in to message application","2":"click on the contact name","3":"click on compose message","4":"scroll through list of contacts","5":"open the message application","6":"type the message"},"context":"open the message application","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":5.0,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: choose contact to compose message; step1: sign in to message application; step2: click on the contact name; step3: click on compose message; step4: scroll through list of contacts; step5: open the message application; step6: type the message","flatten_input_for_script_generation":"You want to type the message. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: open the message application; step1: sign in to message application; step2: scroll through list of contacts; step3: choose contact to compose message; step4: click on the contact name; step5: click on compose message; step6: type the message; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class TypeTheMessage:\n\n    title = \"type the message\"\n    steps = 7\n\n    def step0(self):\n        return \"open the message application\"\n\n    def step1(self):\n        return \"sign in to message application\"\n\n    def step2(self):\n        return \"scroll through list of contacts\"\n\n    def step3(self):\n        return \"choose contact to compose message\"\n\n    def step4(self):\n        return \"click on the contact name\"\n\n    def step5(self):\n        return \"click on compose message\"\n\n    def step6(self):\n        return \"type the message\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TypeTheMessage:\n\n    title = \"type the message\"\n    steps = 7\n\n","reference_graph":{"title":"type the message","num_steps":7,"schema":["step0: open the message application","step1: sign in to message application","step2: scroll through list of contacts","step3: choose contact to compose message","step4: click on the contact name","step5: click on compose message","step6: type the message"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Plan a routine.","events":{"0":"grab a pen","1":"get on the internet","2":"decide to get more organized with stretching","3":"choose a series of stretches that look good","4":"look up different types of stretches","5":"open a computer","6":"grab a piece of paper","7":"Exercise by stretching.","8":"Plan a routine."},"context":"Exercise by stretching.","minutes":1440.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.0833333333,"3":20.0,"4":10.0,"5":0.0833333333,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab a pen; step1: get on the internet; step2: decide to get more organized with stretching; step3: choose a series of stretches that look good; step4: look up different types of stretches; step5: open a computer; step6: grab a piece of paper; step7: Exercise by stretching.; step8: Plan a routine.","flatten_input_for_script_generation":"You want to Plan a routine.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step3 -> step6; step0 -> step8; step6 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: Exercise by stretching.; step1: decide to get more organized with stretching; step2: open a computer; step3: get on the internet; step4: look up different types of stretches; step5: choose a series of stretches that look good; step6: grab a pen; step7: grab a piece of paper; step8: Plan a routine.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->4","2->5","3->0","3->6","4->3","5->1","6->8","7->2"],"reference_code":"class PlanARoutine:\n\n    title = \"Plan a routine.\"\n    steps = 9\n\n    def step0(self):\n        return \"Exercise by stretching.\"\n\n    def step1(self):\n        return \"decide to get more organized with stretching\"\n\n    def step2(self):\n        return \"open a computer\"\n\n    def step3(self):\n        return \"get on the internet\"\n\n    def step4(self):\n        return \"look up different types of stretches\"\n\n    def step5(self):\n        return \"choose a series of stretches that look good\"\n\n    def step6(self):\n        return \"grab a pen\"\n\n    def step7(self):\n        return \"grab a piece of paper\"\n\n    def step8(self):\n        return \"Plan a routine.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PlanARoutine:\n\n    title = \"Plan a routine.\"\n    steps = 9\n\n","reference_graph":{"title":"Plan a routine.","num_steps":9,"schema":["step0: Exercise by stretching.","step1: decide to get more organized with stretching","step2: open a computer","step3: get on the internet","step4: look up different types of stretches","step5: choose a series of stretches that look good","step6: grab a pen","step7: grab a piece of paper","step8: Plan a routine."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"get ready to leave","events":{"0":"decide what to wear","1":"apply makeup and style hair","2":"grab purse and jacket","3":"take a shower and do grooming","4":"get dressed, choose shoes","5":"NONE","6":"get ready to leave"},"context":"NONE","minutes":20.0,"events_minutes":{"0":15.0,"1":30.0,"2":5.0,"3":60.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: decide what to wear; step1: apply makeup and style hair; step2: grab purse and jacket; step3: take a shower and do grooming; step4: get dressed, choose shoes; step5: decided to get ready to leave; step6: get ready to leave","flatten_input_for_script_generation":"You want to get ready to leave. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step1 -> step2; step0 -> step4; step4 -> step1; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get ready to leave; step1: take a shower and do grooming; step2: decide what to wear; step3: get dressed, choose shoes; step4: apply makeup and style hair; step5: grab purse and jacket; step6: get ready to leave; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step5 -> step6; step3 -> step4","gold_edges_for_prediction":["0->4","1->2","2->6","3->0","4->1","5->3"],"reference_code":"class GetReadyToLeave:\n\n    title = \"get ready to leave\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get ready to leave\"\n\n    def step1(self):\n        return \"take a shower and do grooming\"\n\n    def step2(self):\n        return \"decide what to wear\"\n\n    def step3(self):\n        return \"get dressed, choose shoes\"\n\n    def step4(self):\n        return \"apply makeup and style hair\"\n\n    def step5(self):\n        return \"grab purse and jacket\"\n\n    def step6(self):\n        return \"get ready to leave\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step3 -> step4\",\n        ]\n","input_prompt_code":"class GetReadyToLeave:\n\n    title = \"get ready to leave\"\n    steps = 7\n\n","reference_graph":{"title":"get ready to leave","num_steps":7,"schema":["step0: decided to get ready to leave","step1: take a shower and do grooming","step2: decide what to wear","step3: get dressed, choose shoes","step4: apply makeup and style hair","step5: grab purse and jacket","step6: get ready to leave"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step5 -> step6","step3 -> step4"]}}
{"scenario":"place the mix in the oven","events":{"0":"mix with the mixer","1":"put mix in the bowl","2":"put water in a bowl","3":"pour mix into pan","4":"grease the pan","5":"preheat the oven","6":"place the mix in the oven"},"context":"preheat the oven","minutes":0.5,"events_minutes":{"0":5.0,"1":0.0333333333,"2":0.0333333333,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: mix with the mixer; step1: put mix in the bowl; step2: put water in a bowl; step3: pour mix into pan; step4: grease the pan; step5: preheat the oven; step6: place the mix in the oven","flatten_input_for_script_generation":"You want to place the mix in the oven. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: preheat the oven; step1: put water in a bowl; step2: put mix in the bowl; step3: mix with the mixer; step4: grease the pan; step5: pour mix into pan; step6: place the mix in the oven; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->0","3->6","4->3","5->1","5->2"],"reference_code":"class PlaceTheMixInTheOven:\n\n    title = \"place the mix in the oven\"\n    steps = 7\n\n    def step0(self):\n        return \"preheat the oven\"\n\n    def step1(self):\n        return \"put water in a bowl\"\n\n    def step2(self):\n        return \"put mix in the bowl\"\n\n    def step3(self):\n        return \"mix with the mixer\"\n\n    def step4(self):\n        return \"grease the pan\"\n\n    def step5(self):\n        return \"pour mix into pan\"\n\n    def step6(self):\n        return \"place the mix in the oven\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceTheMixInTheOven:\n\n    title = \"place the mix in the oven\"\n    steps = 7\n\n","reference_graph":{"title":"place the mix in the oven","num_steps":7,"schema":["step0: preheat the oven","step1: put water in a bowl","step2: put mix in the bowl","step3: mix with the mixer","step4: grease the pan","step5: pour mix into pan","step6: place the mix in the oven"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Gather friends together.","events":{"0":"write out text","1":"start a group text thread","2":"discuss when to meet up","3":"add each friend to text thread","4":"determine which friends to invite","5":"NONE","6":"Gather friends together."},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: write out text; step1: start a group text thread; step2: discuss when to meet up; step3: add each friend to text thread; step4: determine which friends to invite; step5: decided to Gather friends together.; step6: Gather friends together.","flatten_input_for_script_generation":"You want to Gather friends together.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1; step5 -> step4","flatten_output_for_script_generation":"step0: decided to Gather friends together.; step1: determine which friends to invite; step2: start a group text thread; step3: add each friend to text thread; step4: write out text; step5: discuss when to meet up; step6: Gather friends together.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->0","4->3","5->1","5->4"],"reference_code":"class GatherFriendsTogether:\n\n    title = \"Gather friends together.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Gather friends together.\"\n\n    def step1(self):\n        return \"determine which friends to invite\"\n\n    def step2(self):\n        return \"start a group text thread\"\n\n    def step3(self):\n        return \"add each friend to text thread\"\n\n    def step4(self):\n        return \"write out text\"\n\n    def step5(self):\n        return \"discuss when to meet up\"\n\n    def step6(self):\n        return \"Gather friends together.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherFriendsTogether:\n\n    title = \"Gather friends together.\"\n    steps = 7\n\n","reference_graph":{"title":"Gather friends together.","num_steps":7,"schema":["step0: decided to Gather friends together.","step1: determine which friends to invite","step2: start a group text thread","step3: add each friend to text thread","step4: write out text","step5: discuss when to meet up","step6: Gather friends together."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a bus ticket","events":{"0":"Wait for bus to arrive","1":"Walk down sidewalk toward bus station","2":"Buy a ticket from the conductor","3":"Walk out the front door","4":"Locate the nearest bus station","5":"Sit on the bench","6":"receive acceptance letter","7":"get a bus ticket"},"context":"receive acceptance letter","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: Wait for bus to arrive; step1: Walk down sidewalk toward bus station; step2: Buy a ticket from the conductor; step3: Walk out the front door; step4: Locate the nearest bus station; step5: Sit on the bench; step6: receive acceptance letter; step7: get a bus ticket","flatten_input_for_script_generation":"You want to get a bus ticket. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step1 -> step5; step0 -> step2; step5 -> step2; step2 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: receive acceptance letter; step1: Locate the nearest bus station; step2: Walk out the front door; step3: Walk down sidewalk toward bus station; step4: Wait for bus to arrive; step5: Sit on the bench; step6: Buy a ticket from the conductor; step7: get a bus ticket; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->0","1->5","2->7","3->1","4->3","5->2","6->4"],"reference_code":"class GetABusTicket:\n\n    title = \"get a bus ticket\"\n    steps = 8\n\n    def step0(self):\n        return \"receive acceptance letter\"\n\n    def step1(self):\n        return \"Locate the nearest bus station\"\n\n    def step2(self):\n        return \"Walk out the front door\"\n\n    def step3(self):\n        return \"Walk down sidewalk toward bus station\"\n\n    def step4(self):\n        return \"Wait for bus to arrive\"\n\n    def step5(self):\n        return \"Sit on the bench\"\n\n    def step6(self):\n        return \"Buy a ticket from the conductor\"\n\n    def step7(self):\n        return \"get a bus ticket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetABusTicket:\n\n    title = \"get a bus ticket\"\n    steps = 8\n\n","reference_graph":{"title":"get a bus ticket","num_steps":8,"schema":["step0: receive acceptance letter","step1: Locate the nearest bus station","step2: Walk out the front door","step3: Walk down sidewalk toward bus station","step4: Wait for bus to arrive","step5: Sit on the bench","step6: Buy a ticket from the conductor","step7: get a bus ticket"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"park the car","events":{"0":"pull into the parking spot","1":"look for a spot","2":"Pull into the entrance for school","3":"look both ways for other cars","4":"find the right parking lot","5":"drive to school","6":"park the car"},"context":"drive to school","minutes":10.0,"events_minutes":{"0":1.0,"1":2.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: pull into the parking spot; step1: look for a spot; step2: Pull into the entrance for school; step3: look both ways for other cars; step4: find the right parking lot; step5: drive to school; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to school; step1: Pull into the entrance for school; step2: find the right parking lot; step3: look for a spot; step4: look both ways for other cars; step5: pull into the parking spot; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to school\"\n\n    def step1(self):\n        return \"Pull into the entrance for school\"\n\n    def step2(self):\n        return \"find the right parking lot\"\n\n    def step3(self):\n        return \"look for a spot\"\n\n    def step4(self):\n        return \"look both ways for other cars\"\n\n    def step5(self):\n        return \"pull into the parking spot\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to school","step1: Pull into the entrance for school","step2: find the right parking lot","step3: look for a spot","step4: look both ways for other cars","step5: pull into the parking spot","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pay for the cooking class","events":{"0":"sign up for the class","1":"ask for the classes","2":"pay for the classes","3":"get the syllabus and schedule","4":"decide on what class to take","5":"Visit the school","6":"Pay for the cooking class"},"context":"Visit the school","minutes":15.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: sign up for the class; step1: ask for the classes; step2: pay for the classes; step3: get the syllabus and schedule; step4: decide on what class to take; step5: Visit the school; step6: Pay for the cooking class","flatten_input_for_script_generation":"You want to Pay for the cooking class. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Visit the school; step1: ask for the classes; step2: decide on what class to take; step3: sign up for the class; step4: pay for the classes; step5: get the syllabus and schedule; step6: Pay for the cooking class; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class PayForTheCookingClass:\n\n    title = \"Pay for the cooking class\"\n    steps = 7\n\n    def step0(self):\n        return \"Visit the school\"\n\n    def step1(self):\n        return \"ask for the classes\"\n\n    def step2(self):\n        return \"decide on what class to take\"\n\n    def step3(self):\n        return \"sign up for the class\"\n\n    def step4(self):\n        return \"pay for the classes\"\n\n    def step5(self):\n        return \"get the syllabus and schedule\"\n\n    def step6(self):\n        return \"Pay for the cooking class\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PayForTheCookingClass:\n\n    title = \"Pay for the cooking class\"\n    steps = 7\n\n","reference_graph":{"title":"Pay for the cooking class","num_steps":7,"schema":["step0: Visit the school","step1: ask for the classes","step2: decide on what class to take","step3: sign up for the class","step4: pay for the classes","step5: get the syllabus and schedule","step6: Pay for the cooking class"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to beach","events":{"0":"walk toward beach entrance","1":"look for beach entrance","2":"lock car doors","3":"note where car is parked","4":"close car doors","5":"get out of car","6":"walk to beach"},"context":"get out of car","minutes":5.0,"events_minutes":{"0":1.0,"1":0.5,"2":0.1666666667,"3":0.0333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: walk toward beach entrance; step1: look for beach entrance; step2: lock car doors; step3: note where car is parked; step4: close car doors; step5: get out of car; step6: walk to beach","flatten_input_for_script_generation":"You want to walk to beach. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get out of car; step1: close car doors; step2: lock car doors; step3: note where car is parked; step4: look for beach entrance; step5: walk toward beach entrance; step6: walk to beach; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class WalkToBeach:\n\n    title = \"walk to beach\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of car\"\n\n    def step1(self):\n        return \"close car doors\"\n\n    def step2(self):\n        return \"lock car doors\"\n\n    def step3(self):\n        return \"note where car is parked\"\n\n    def step4(self):\n        return \"look for beach entrance\"\n\n    def step5(self):\n        return \"walk toward beach entrance\"\n\n    def step6(self):\n        return \"walk to beach\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToBeach:\n\n    title = \"walk to beach\"\n    steps = 7\n\n","reference_graph":{"title":"walk to beach","num_steps":7,"schema":["step0: get out of car","step1: close car doors","step2: lock car doors","step3: note where car is parked","step4: look for beach entrance","step5: walk toward beach entrance","step6: walk to beach"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"browse the selection","events":{"0":"locate the sunscreen section of the store","1":"walk to the sunscreen section of the store","2":"locate the shelves that have sunscreen","3":"face the shelves that have sunscreen","4":"pick up different brands to read the labels","5":"go inside the store","6":"browse the selection"},"context":"go inside the store","minutes":10.0,"events_minutes":{"0":2.0,"1":1.0,"2":1.0,"3":0.1666666667,"4":5.0},"flatten_input_for_edge_prediction":"step0: locate the sunscreen section of the store; step1: walk to the sunscreen section of the store; step2: locate the shelves that have sunscreen; step3: face the shelves that have sunscreen; step4: pick up different brands to read the labels; step5: go inside the store; step6: browse the selection","flatten_input_for_script_generation":"You want to browse the selection. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: go inside the store; step1: locate the sunscreen section of the store; step2: walk to the sunscreen section of the store; step3: locate the shelves that have sunscreen; step4: face the shelves that have sunscreen; step5: pick up different brands to read the labels; step6: browse the selection; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->6","5->0"],"reference_code":"class BrowseTheSelection:\n\n    title = \"browse the selection\"\n    steps = 7\n\n    def step0(self):\n        return \"go inside the store\"\n\n    def step1(self):\n        return \"locate the sunscreen section of the store\"\n\n    def step2(self):\n        return \"walk to the sunscreen section of the store\"\n\n    def step3(self):\n        return \"locate the shelves that have sunscreen\"\n\n    def step4(self):\n        return \"face the shelves that have sunscreen\"\n\n    def step5(self):\n        return \"pick up different brands to read the labels\"\n\n    def step6(self):\n        return \"browse the selection\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BrowseTheSelection:\n\n    title = \"browse the selection\"\n    steps = 7\n\n","reference_graph":{"title":"browse the selection","num_steps":7,"schema":["step0: go inside the store","step1: locate the sunscreen section of the store","step2: walk to the sunscreen section of the store","step3: locate the shelves that have sunscreen","step4: face the shelves that have sunscreen","step5: pick up different brands to read the labels","step6: browse the selection"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Buy the uncooked chicken","events":{"0":"park the car","1":"walk into the supermarket","2":"browse the meat section","3":"look for the best deal","4":"leave the store","5":"find the meat section","6":"take the chicken to the cashier","7":"Ride to the supermarket","8":"Buy the uncooked chicken"},"context":"Ride to the supermarket","minutes":15.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0,"5":1.0,"6":1.0},"flatten_input_for_edge_prediction":"step0: park the car; step1: walk into the supermarket; step2: browse the meat section; step3: look for the best deal; step4: leave the store; step5: find the meat section; step6: take the chicken to the cashier; step7: Ride to the supermarket; step8: Buy the uncooked chicken","flatten_input_for_script_generation":"You want to Buy the uncooked chicken. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step5; step5 -> step2; step2 -> step3; step3 -> step6; step6 -> step4; step4 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: Ride to the supermarket; step1: park the car; step2: walk into the supermarket; step3: find the meat section; step4: browse the meat section; step5: look for the best deal; step6: take the chicken to the cashier; step7: leave the store; step8: Buy the uncooked chicken; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->5","2->3","3->6","4->8","5->2","6->4","7->0"],"reference_code":"class BuyTheUncookedChicken:\n\n    title = \"Buy the uncooked chicken\"\n    steps = 9\n\n    def step0(self):\n        return \"Ride to the supermarket\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"walk into the supermarket\"\n\n    def step3(self):\n        return \"find the meat section\"\n\n    def step4(self):\n        return \"browse the meat section\"\n\n    def step5(self):\n        return \"look for the best deal\"\n\n    def step6(self):\n        return \"take the chicken to the cashier\"\n\n    def step7(self):\n        return \"leave the store\"\n\n    def step8(self):\n        return \"Buy the uncooked chicken\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuyTheUncookedChicken:\n\n    title = \"Buy the uncooked chicken\"\n    steps = 9\n\n","reference_graph":{"title":"Buy the uncooked chicken","num_steps":9,"schema":["step0: Ride to the supermarket","step1: park the car","step2: walk into the supermarket","step3: find the meat section","step4: browse the meat section","step5: look for the best deal","step6: take the chicken to the cashier","step7: leave the store","step8: Buy the uncooked chicken"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"read a flyer for a dance club","events":{"0":"pick up flyer for dance club","1":"walk to mailbox","2":"set mail on table","3":"notice flyer for dance club in mail","4":"walk back inside house","5":"grab mail out of mailbox","6":"NONE","7":"read a flyer for a dance club"},"context":"NONE","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.0833333333,"3":0.0833333333,"4":0.5,"5":0.25},"flatten_input_for_edge_prediction":"step0: pick up flyer for dance club; step1: walk to mailbox; step2: set mail on table; step3: notice flyer for dance club in mail; step4: walk back inside house; step5: grab mail out of mailbox; step6: decided to read a flyer for a dance club; step7: read a flyer for a dance club","flatten_input_for_script_generation":"You want to read a flyer for a dance club. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step4; step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to read a flyer for a dance club; step1: walk to mailbox; step2: grab mail out of mailbox; step3: walk back inside house; step4: set mail on table; step5: notice flyer for dance club in mail; step6: pick up flyer for dance club; step7: read a flyer for a dance club; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->5","2->3","3->0","4->2","5->4","6->1"],"reference_code":"class ReadAFlyerForADanceClub:\n\n    title = \"read a flyer for a dance club\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to read a flyer for a dance club\"\n\n    def step1(self):\n        return \"walk to mailbox\"\n\n    def step2(self):\n        return \"grab mail out of mailbox\"\n\n    def step3(self):\n        return \"walk back inside house\"\n\n    def step4(self):\n        return \"set mail on table\"\n\n    def step5(self):\n        return \"notice flyer for dance club in mail\"\n\n    def step6(self):\n        return \"pick up flyer for dance club\"\n\n    def step7(self):\n        return \"read a flyer for a dance club\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ReadAFlyerForADanceClub:\n\n    title = \"read a flyer for a dance club\"\n    steps = 8\n\n","reference_graph":{"title":"read a flyer for a dance club","num_steps":8,"schema":["step0: decided to read a flyer for a dance club","step1: walk to mailbox","step2: grab mail out of mailbox","step3: walk back inside house","step4: set mail on table","step5: notice flyer for dance club in mail","step6: pick up flyer for dance club","step7: read a flyer for a dance club"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Put snacks in bowls.","events":{"0":"open snack bags","1":"decide how to split snacks","2":"walk to kitchen","3":"place bowl on counter or table","4":"get a bowl","5":"get back home","6":"Buy preferred snacks.","7":"Put snacks in bowls."},"context":"Buy preferred snacks.","minutes":10.0,"events_minutes":{"0":0.5,"1":1.0,"2":1.0,"3":0.25,"4":0.25,"5":10.0},"flatten_input_for_edge_prediction":"step0: open snack bags; step1: decide how to split snacks; step2: walk to kitchen; step3: place bowl on counter or table; step4: get a bowl; step5: get back home; step6: Buy preferred snacks.; step7: Put snacks in bowls.","flatten_input_for_script_generation":"You want to Put snacks in bowls.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step2 -> step0; step4 -> step3; step0 -> step3; step1 -> step7; step3 -> step1; step5 -> step2; step6 -> step5","flatten_output_for_script_generation":"step0: Buy preferred snacks.; step1: get back home; step2: walk to kitchen; step3: get a bowl; step4: open snack bags; step5: place bowl on counter or table; step6: decide how to split snacks; step7: Put snacks in bowls.; step0 -> step1; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step1 -> step2","gold_edges_for_prediction":["0->3","1->7","2->4","2->0","3->1","4->3","5->2","6->5"],"reference_code":"class PutSnacksInBowls:\n\n    title = \"Put snacks in bowls.\"\n    steps = 8\n\n    def step0(self):\n        return \"Buy preferred snacks.\"\n\n    def step1(self):\n        return \"get back home\"\n\n    def step2(self):\n        return \"walk to kitchen\"\n\n    def step3(self):\n        return \"get a bowl\"\n\n    def step4(self):\n        return \"open snack bags\"\n\n    def step5(self):\n        return \"place bowl on counter or table\"\n\n    def step6(self):\n        return \"decide how to split snacks\"\n\n    def step7(self):\n        return \"Put snacks in bowls.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class PutSnacksInBowls:\n\n    title = \"Put snacks in bowls.\"\n    steps = 8\n\n","reference_graph":{"title":"Put snacks in bowls.","num_steps":8,"schema":["step0: Buy preferred snacks.","step1: get back home","step2: walk to kitchen","step3: get a bowl","step4: open snack bags","step5: place bowl on counter or table","step6: decide how to split snacks","step7: Put snacks in bowls."],"relations":["step0 -> step1","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step1 -> step2"]}}
{"scenario":"walk to the car","events":{"0":"walk towards the door to the outside.","1":"bag the groceries up.","2":"put groceries in a cart.","3":"exit the store.","4":"get handed a receipt.","5":"pay for everything","6":"walk to the car"},"context":"pay for everything","minutes":5.0,"events_minutes":{"0":0.5,"1":1.0,"2":0.5,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: walk towards the door to the outside.; step1: bag the groceries up.; step2: put groceries in a cart.; step3: exit the store.; step4: get handed a receipt.; step5: pay for everything; step6: walk to the car","flatten_input_for_script_generation":"You want to walk to the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step6; step4 -> step2; step1 -> step2; step5 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: pay for everything; step1: bag the groceries up.; step2: put groceries in a cart.; step3: walk towards the door to the outside.; step4: exit the store.; step5: walk to the car; step6: get handed a receipt.; step0 -> step1; step0 -> step6; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step2; step1 -> step2","gold_edges_for_prediction":["0->3","1->2","2->0","3->6","4->2","5->4","5->1"],"reference_code":"class WalkToTheCar:\n\n    title = \"walk to the car\"\n    steps = 7\n\n    def step0(self):\n        return \"pay for everything\"\n\n    def step1(self):\n        return \"bag the groceries up.\"\n\n    def step2(self):\n        return \"put groceries in a cart.\"\n\n    def step3(self):\n        return \"walk towards the door to the outside.\"\n\n    def step4(self):\n        return \"exit the store.\"\n\n    def step5(self):\n        return \"walk to the car\"\n\n    def step6(self):\n        return \"get handed a receipt.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class WalkToTheCar:\n\n    title = \"walk to the car\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the car","num_steps":7,"schema":["step0: pay for everything","step1: bag the groceries up.","step2: put groceries in a cart.","step3: walk towards the door to the outside.","step4: exit the store.","step5: walk to the car","step6: get handed a receipt."],"relations":["step0 -> step1","step0 -> step6","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step2","step1 -> step2"]}}
{"scenario":"get ready for school","events":{"0":"brush and floss teeth","1":"grab the back pack","2":"take a shower","3":"get dressed in the outfit","4":"pick out an outfit","5":"NONE","6":"get ready for school"},"context":"NONE","minutes":20.0,"events_minutes":{"0":5.0,"1":1.0,"2":10.0,"3":2.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: brush and floss teeth; step1: grab the back pack; step2: take a shower; step3: get dressed in the outfit; step4: pick out an outfit; step5: decided to get ready for school; step6: get ready for school","flatten_input_for_script_generation":"You want to get ready for school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: decided to get ready for school; step1: brush and floss teeth; step2: take a shower; step3: pick out an outfit; step4: get dressed in the outfit; step5: grab the back pack; step6: get ready for school; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->4","3->1","4->3","5->2","5->0"],"reference_code":"class GetReadyForSchool:\n\n    title = \"get ready for school\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get ready for school\"\n\n    def step1(self):\n        return \"brush and floss teeth\"\n\n    def step2(self):\n        return \"take a shower\"\n\n    def step3(self):\n        return \"pick out an outfit\"\n\n    def step4(self):\n        return \"get dressed in the outfit\"\n\n    def step5(self):\n        return \"grab the back pack\"\n\n    def step6(self):\n        return \"get ready for school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetReadyForSchool:\n\n    title = \"get ready for school\"\n    steps = 7\n\n","reference_graph":{"title":"get ready for school","num_steps":7,"schema":["step0: decided to get ready for school","step1: brush and floss teeth","step2: take a shower","step3: pick out an outfit","step4: get dressed in the outfit","step5: grab the back pack","step6: get ready for school"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk to the front ticket counter of the zoo.","events":{"0":"put keys somewhere safe","1":"walk toward the ticket booth","2":"locate the ticket booth","3":"wait behind others","4":"determine the best route to the ticket booth","5":"Lock the car doors.","6":"Walk to the front ticket counter of the zoo."},"context":"Lock the car doors.","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":2.0,"2":2.0,"3":5.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: put keys somewhere safe; step1: walk toward the ticket booth; step2: locate the ticket booth; step3: wait behind others; step4: determine the best route to the ticket booth; step5: Lock the car doors.; step6: Walk to the front ticket counter of the zoo.","flatten_input_for_script_generation":"You want to Walk to the front ticket counter of the zoo.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: Lock the car doors.; step1: locate the ticket booth; step2: put keys somewhere safe; step3: determine the best route to the ticket booth; step4: walk toward the ticket booth; step5: wait behind others; step6: Walk to the front ticket counter of the zoo.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->4","3->6","4->1","5->0","5->2"],"reference_code":"class WalkToTheFrontTicketCounterOfTheZoo:\n\n    title = \"Walk to the front ticket counter of the zoo.\"\n    steps = 7\n\n    def step0(self):\n        return \"Lock the car doors.\"\n\n    def step1(self):\n        return \"locate the ticket booth\"\n\n    def step2(self):\n        return \"put keys somewhere safe\"\n\n    def step3(self):\n        return \"determine the best route to the ticket booth\"\n\n    def step4(self):\n        return \"walk toward the ticket booth\"\n\n    def step5(self):\n        return \"wait behind others\"\n\n    def step6(self):\n        return \"Walk to the front ticket counter of the zoo.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheFrontTicketCounterOfTheZoo:\n\n    title = \"Walk to the front ticket counter of the zoo.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk to the front ticket counter of the zoo.","num_steps":7,"schema":["step0: Lock the car doors.","step1: locate the ticket booth","step2: put keys somewhere safe","step3: determine the best route to the ticket booth","step4: walk toward the ticket booth","step5: wait behind others","step6: Walk to the front ticket counter of the zoo."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make the track team.","events":{"0":"look around for track tryout info","1":"tryout for track","2":"head to tryouts","3":"sign up for tryout","4":"decide to join track","5":"NONE","6":"Make the track team."},"context":"NONE","minutes":120.0,"events_minutes":{"0":60.0,"1":180.0,"2":10.0,"3":10.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look around for track tryout info; step1: tryout for track; step2: head to tryouts; step3: sign up for tryout; step4: decide to join track; step5: decided to Make the track team.; step6: Make the track team.","flatten_input_for_script_generation":"You want to Make the track team.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step2 -> step1; step3 -> step2; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to Make the track team.; step1: decide to join track; step2: look around for track tryout info; step3: sign up for tryout; step4: head to tryouts; step5: tryout for track; step6: Make the track team.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class MakeTheTrackTeam:\n\n    title = \"Make the track team.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Make the track team.\"\n\n    def step1(self):\n        return \"decide to join track\"\n\n    def step2(self):\n        return \"look around for track tryout info\"\n\n    def step3(self):\n        return \"sign up for tryout\"\n\n    def step4(self):\n        return \"head to tryouts\"\n\n    def step5(self):\n        return \"tryout for track\"\n\n    def step6(self):\n        return \"Make the track team.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeTheTrackTeam:\n\n    title = \"Make the track team.\"\n    steps = 7\n\n","reference_graph":{"title":"Make the track team.","num_steps":7,"schema":["step0: decided to Make the track team.","step1: decide to join track","step2: look around for track tryout info","step3: sign up for tryout","step4: head to tryouts","step5: tryout for track","step6: Make the track team."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick the top rated one","events":{"0":"Read reviews from each site.","1":"Open up several different training sites.","2":"Open up several new tabs on the browser.","3":"Take notes on the best qualities of each one.","4":"Compare ratings from different sites.","5":"look online for horse riding training","6":"pick the top rated one"},"context":"look online for horse riding training","minutes":10.0,"events_minutes":{"0":30.0,"1":1.0,"2":1.0,"3":15.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Read reviews from each site.; step1: Open up several different training sites.; step2: Open up several new tabs on the browser.; step3: Take notes on the best qualities of each one.; step4: Compare ratings from different sites.; step5: look online for horse riding training; step6: pick the top rated one","flatten_input_for_script_generation":"You want to pick the top rated one. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step1 -> step4; step0 -> step3; step4 -> step3; step3 -> step6; step2 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: look online for horse riding training; step1: Open up several new tabs on the browser.; step2: Open up several different training sites.; step3: Read reviews from each site.; step4: Compare ratings from different sites.; step5: Take notes on the best qualities of each one.; step6: pick the top rated one; step0 -> step1; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->3","1->0","1->4","2->1","3->6","4->3","5->2"],"reference_code":"class PickTheTopRatedOne:\n\n    title = \"pick the top rated one\"\n    steps = 7\n\n    def step0(self):\n        return \"look online for horse riding training\"\n\n    def step1(self):\n        return \"Open up several new tabs on the browser.\"\n\n    def step2(self):\n        return \"Open up several different training sites.\"\n\n    def step3(self):\n        return \"Read reviews from each site.\"\n\n    def step4(self):\n        return \"Compare ratings from different sites.\"\n\n    def step5(self):\n        return \"Take notes on the best qualities of each one.\"\n\n    def step6(self):\n        return \"pick the top rated one\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class PickTheTopRatedOne:\n\n    title = \"pick the top rated one\"\n    steps = 7\n\n","reference_graph":{"title":"pick the top rated one","num_steps":7,"schema":["step0: look online for horse riding training","step1: Open up several new tabs on the browser.","step2: Open up several different training sites.","step3: Read reviews from each site.","step4: Compare ratings from different sites.","step5: Take notes on the best qualities of each one.","step6: pick the top rated one"],"relations":["step0 -> step1","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"Apply for jobs online","events":{"0":"click on first job search website","1":"create a resume to use","2":"go online to a search engine","3":"scroll through results displayed","4":"type employment in the search box","5":"NONE","6":"Apply for jobs online"},"context":"NONE","minutes":120.0,"events_minutes":{"0":1.0,"1":60.0,"2":1.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: click on first job search website; step1: create a resume to use; step2: go online to a search engine; step3: scroll through results displayed; step4: type employment in the search box; step5: decided to Apply for jobs online; step6: Apply for jobs online","flatten_input_for_script_generation":"You want to Apply for jobs online. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to Apply for jobs online; step1: create a resume to use; step2: go online to a search engine; step3: type employment in the search box; step4: scroll through results displayed; step5: click on first job search website; step6: Apply for jobs online; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->3","5->1"],"reference_code":"class ApplyForJobsOnline:\n\n    title = \"Apply for jobs online\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Apply for jobs online\"\n\n    def step1(self):\n        return \"create a resume to use\"\n\n    def step2(self):\n        return \"go online to a search engine\"\n\n    def step3(self):\n        return \"type employment in the search box\"\n\n    def step4(self):\n        return \"scroll through results displayed\"\n\n    def step5(self):\n        return \"click on first job search website\"\n\n    def step6(self):\n        return \"Apply for jobs online\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ApplyForJobsOnline:\n\n    title = \"Apply for jobs online\"\n    steps = 7\n\n","reference_graph":{"title":"Apply for jobs online","num_steps":7,"schema":["step0: decided to Apply for jobs online","step1: create a resume to use","step2: go online to a search engine","step3: type employment in the search box","step4: scroll through results displayed","step5: click on first job search website","step6: Apply for jobs online"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"shop for a party costume","events":{"0":"think of what costume to wear","1":"find nearby store that has desired costumes","2":"head to party store","3":"search online to find chosen costume ideas","4":"pick up wallet","5":"be invited by a friend to a party","6":"shop for a party costume"},"context":"be invited by a friend to a party","minutes":120.0,"events_minutes":{"0":3.0,"1":5.0,"2":10.0,"3":15.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: think of what costume to wear; step1: find nearby store that has desired costumes; step2: head to party store; step3: search online to find chosen costume ideas; step4: pick up wallet; step5: be invited by a friend to a party; step6: shop for a party costume","flatten_input_for_script_generation":"You want to shop for a party costume. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step2 -> step6; step4 -> step2; step3 -> step1; step1 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: be invited by a friend to a party; step1: think of what costume to wear; step2: search online to find chosen costume ideas; step3: find nearby store that has desired costumes; step4: head to party store; step5: shop for a party costume; step6: pick up wallet; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step6 -> step4; step3 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->1","4->2","5->0"],"reference_code":"class ShopForAPartyCostume:\n\n    title = \"shop for a party costume\"\n    steps = 7\n\n    def step0(self):\n        return \"be invited by a friend to a party\"\n\n    def step1(self):\n        return \"think of what costume to wear\"\n\n    def step2(self):\n        return \"search online to find chosen costume ideas\"\n\n    def step3(self):\n        return \"find nearby store that has desired costumes\"\n\n    def step4(self):\n        return \"head to party store\"\n\n    def step5(self):\n        return \"shop for a party costume\"\n\n    def step6(self):\n        return \"pick up wallet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step6 -> step4\",\n            \"step3 -> step6\",\n        ]\n","input_prompt_code":"class ShopForAPartyCostume:\n\n    title = \"shop for a party costume\"\n    steps = 7\n\n","reference_graph":{"title":"shop for a party costume","num_steps":7,"schema":["step0: be invited by a friend to a party","step1: think of what costume to wear","step2: search online to find chosen costume ideas","step3: find nearby store that has desired costumes","step4: head to party store","step5: shop for a party costume","step6: pick up wallet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step6 -> step4","step3 -> step6"]}}
{"scenario":"Play the video","events":{"0":"save the list and prepare to start","1":"create a list for the videos","2":"decide on several to watch","3":"read about the content in each","4":"look through the choices","5":"Look up yoga tutorials online","6":"Play the video"},"context":"Look up yoga tutorials online","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: save the list and prepare to start; step1: create a list for the videos; step2: decide on several to watch; step3: read about the content in each; step4: look through the choices; step5: Look up yoga tutorials online; step6: Play the video","flatten_input_for_script_generation":"You want to Play the video. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Look up yoga tutorials online; step1: look through the choices; step2: read about the content in each; step3: decide on several to watch; step4: create a list for the videos; step5: save the list and prepare to start; step6: Play the video; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","4->3","5->4"],"reference_code":"class PlayTheVideo:\n\n    title = \"Play the video\"\n    steps = 7\n\n    def step0(self):\n        return \"Look up yoga tutorials online\"\n\n    def step1(self):\n        return \"look through the choices\"\n\n    def step2(self):\n        return \"read about the content in each\"\n\n    def step3(self):\n        return \"decide on several to watch\"\n\n    def step4(self):\n        return \"create a list for the videos\"\n\n    def step5(self):\n        return \"save the list and prepare to start\"\n\n    def step6(self):\n        return \"Play the video\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlayTheVideo:\n\n    title = \"Play the video\"\n    steps = 7\n\n","reference_graph":{"title":"Play the video","num_steps":7,"schema":["step0: Look up yoga tutorials online","step1: look through the choices","step2: read about the content in each","step3: decide on several to watch","step4: create a list for the videos","step5: save the list and prepare to start","step6: Play the video"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick up a pen","events":{"0":"close hand around the pen","1":"open palm of hand","2":"put hand over the pen","3":"locate the pen","4":"extend arm out to pen","5":"enter the office","6":"pick up a pen"},"context":"enter the office","minutes":0.5833333333,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: close hand around the pen; step1: open palm of hand; step2: put hand over the pen; step3: locate the pen; step4: extend arm out to pen; step5: enter the office; step6: pick up a pen","flatten_input_for_script_generation":"You want to pick up a pen. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: enter the office; step1: locate the pen; step2: extend arm out to pen; step3: put hand over the pen; step4: open palm of hand; step5: close hand around the pen; step6: pick up a pen; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->4","4->2","5->3"],"reference_code":"class PickUpAPen:\n\n    title = \"pick up a pen\"\n    steps = 7\n\n    def step0(self):\n        return \"enter the office\"\n\n    def step1(self):\n        return \"locate the pen\"\n\n    def step2(self):\n        return \"extend arm out to pen\"\n\n    def step3(self):\n        return \"put hand over the pen\"\n\n    def step4(self):\n        return \"open palm of hand\"\n\n    def step5(self):\n        return \"close hand around the pen\"\n\n    def step6(self):\n        return \"pick up a pen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickUpAPen:\n\n    title = \"pick up a pen\"\n    steps = 7\n\n","reference_graph":{"title":"pick up a pen","num_steps":7,"schema":["step0: enter the office","step1: locate the pen","step2: extend arm out to pen","step3: put hand over the pen","step4: open palm of hand","step5: close hand around the pen","step6: pick up a pen"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"dress in work attire.","events":{"0":"dry off body","1":"take a shower","2":"brush teeth in bathroom","3":"figure out clothes to wear","4":"go to closet","5":"plan the walk with enough time.","6":"dress in work attire."},"context":"plan the walk with enough time.","minutes":1.0,"events_minutes":{"0":1.0,"1":5.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: dry off body; step1: take a shower; step2: brush teeth in bathroom; step3: figure out clothes to wear; step4: go to closet; step5: plan the walk with enough time.; step6: dress in work attire.","flatten_input_for_script_generation":"You want to dress in work attire.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step6; step0 -> step2; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: plan the walk with enough time.; step1: take a shower; step2: dry off body; step3: brush teeth in bathroom; step4: go to closet; step5: dress in work attire.; step6: figure out clothes to wear; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5","gold_edges_for_prediction":["0->2","0->4","1->0","2->6","3->6","4->3","5->1"],"reference_code":"class DressInWorkAttire:\n\n    title = \"dress in work attire.\"\n    steps = 7\n\n    def step0(self):\n        return \"plan the walk with enough time.\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"dry off body\"\n\n    def step3(self):\n        return \"brush teeth in bathroom\"\n\n    def step4(self):\n        return \"go to closet\"\n\n    def step5(self):\n        return \"dress in work attire.\"\n\n    def step6(self):\n        return \"figure out clothes to wear\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class DressInWorkAttire:\n\n    title = \"dress in work attire.\"\n    steps = 7\n\n","reference_graph":{"title":"dress in work attire.","num_steps":7,"schema":["step0: plan the walk with enough time.","step1: take a shower","step2: dry off body","step3: brush teeth in bathroom","step4: go to closet","step5: dress in work attire.","step6: figure out clothes to wear"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5"]}}
{"scenario":"Watch out window for rain to stop.","events":{"0":"wonder if rain has stopped","1":"grab window blinds","2":"walk to window","3":"get up from seat","4":"open window blinds","5":"NONE","6":"Watch out window for rain to stop."},"context":"NONE","minutes":30.0,"events_minutes":{"0":0.25,"1":0.25,"2":0.25,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: wonder if rain has stopped; step1: grab window blinds; step2: walk to window; step3: get up from seat; step4: open window blinds; step5: decided to Watch out window for rain to stop.; step6: Watch out window for rain to stop.","flatten_input_for_script_generation":"You want to Watch out window for rain to stop.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to Watch out window for rain to stop.; step1: wonder if rain has stopped; step2: get up from seat; step3: walk to window; step4: grab window blinds; step5: open window blinds; step6: Watch out window for rain to stop.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->2","4->6","5->0"],"reference_code":"class WatchOutWindowForRainToStop:\n\n    title = \"Watch out window for rain to stop.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Watch out window for rain to stop.\"\n\n    def step1(self):\n        return \"wonder if rain has stopped\"\n\n    def step2(self):\n        return \"get up from seat\"\n\n    def step3(self):\n        return \"walk to window\"\n\n    def step4(self):\n        return \"grab window blinds\"\n\n    def step5(self):\n        return \"open window blinds\"\n\n    def step6(self):\n        return \"Watch out window for rain to stop.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WatchOutWindowForRainToStop:\n\n    title = \"Watch out window for rain to stop.\"\n    steps = 7\n\n","reference_graph":{"title":"Watch out window for rain to stop.","num_steps":7,"schema":["step0: decided to Watch out window for rain to stop.","step1: wonder if rain has stopped","step2: get up from seat","step3: walk to window","step4: grab window blinds","step5: open window blinds","step6: Watch out window for rain to stop."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"carry plate with asparagus out to grill","events":{"0":"walk to the grill","1":"grip the plate","2":"lift the plate of asparagus","3":"place hand on plate","4":"walk through the door","5":"open the door","6":"walk to the door","7":"sprinkle asparagus with salt","8":"carry plate with asparagus out to grill"},"context":"sprinkle asparagus with salt","minutes":2.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":0.0166666667,"4":0.0833333333,"5":0.1666666667,"6":0.5},"flatten_input_for_edge_prediction":"step0: walk to the grill; step1: grip the plate; step2: lift the plate of asparagus; step3: place hand on plate; step4: walk through the door; step5: open the door; step6: walk to the door; step7: sprinkle asparagus with salt; step8: carry plate with asparagus out to grill","flatten_input_for_script_generation":"You want to carry plate with asparagus out to grill. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step6; step6 -> step5; step5 -> step4; step4 -> step0; step0 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: sprinkle asparagus with salt; step1: place hand on plate; step2: grip the plate; step3: lift the plate of asparagus; step4: walk to the door; step5: open the door; step6: walk through the door; step7: walk to the grill; step8: carry plate with asparagus out to grill; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->2","2->6","3->1","4->0","5->4","6->5","7->3"],"reference_code":"class CarryPlateWithAsparagusOutToGrill:\n\n    title = \"carry plate with asparagus out to grill\"\n    steps = 9\n\n    def step0(self):\n        return \"sprinkle asparagus with salt\"\n\n    def step1(self):\n        return \"place hand on plate\"\n\n    def step2(self):\n        return \"grip the plate\"\n\n    def step3(self):\n        return \"lift the plate of asparagus\"\n\n    def step4(self):\n        return \"walk to the door\"\n\n    def step5(self):\n        return \"open the door\"\n\n    def step6(self):\n        return \"walk through the door\"\n\n    def step7(self):\n        return \"walk to the grill\"\n\n    def step8(self):\n        return \"carry plate with asparagus out to grill\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class CarryPlateWithAsparagusOutToGrill:\n\n    title = \"carry plate with asparagus out to grill\"\n    steps = 9\n\n","reference_graph":{"title":"carry plate with asparagus out to grill","num_steps":9,"schema":["step0: sprinkle asparagus with salt","step1: place hand on plate","step2: grip the plate","step3: lift the plate of asparagus","step4: walk to the door","step5: open the door","step6: walk through the door","step7: walk to the grill","step8: carry plate with asparagus out to grill"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"edit the draft","events":{"0":"read the draft","1":"find needed changes","2":"make needed changes","3":"read the revised draft","4":"decide if draft is OK","5":"write a rough draft","6":"edit the draft"},"context":"write a rough draft","minutes":8640.0,"events_minutes":{"0":10.0,"1":15.0,"2":15.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: read the draft; step1: find needed changes; step2: make needed changes; step3: read the revised draft; step4: decide if draft is OK; step5: write a rough draft; step6: edit the draft","flatten_input_for_script_generation":"You want to edit the draft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: write a rough draft; step1: read the draft; step2: find needed changes; step3: make needed changes; step4: read the revised draft; step5: decide if draft is OK; step6: edit the draft; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->6","5->0"],"reference_code":"class EditTheDraft:\n\n    title = \"edit the draft\"\n    steps = 7\n\n    def step0(self):\n        return \"write a rough draft\"\n\n    def step1(self):\n        return \"read the draft\"\n\n    def step2(self):\n        return \"find needed changes\"\n\n    def step3(self):\n        return \"make needed changes\"\n\n    def step4(self):\n        return \"read the revised draft\"\n\n    def step5(self):\n        return \"decide if draft is OK\"\n\n    def step6(self):\n        return \"edit the draft\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EditTheDraft:\n\n    title = \"edit the draft\"\n    steps = 7\n\n","reference_graph":{"title":"edit the draft","num_steps":7,"schema":["step0: write a rough draft","step1: read the draft","step2: find needed changes","step3: make needed changes","step4: read the revised draft","step5: decide if draft is OK","step6: edit the draft"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pick out pants","events":{"0":"pull the closet doors apart","1":"unlock the closet doors","2":"push aside the shirts","3":"decide on specific pair of pants","4":"decide on pants color","5":"Go to the closet","6":"Pick out pants"},"context":"Go to the closet","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: pull the closet doors apart; step1: unlock the closet doors; step2: push aside the shirts; step3: decide on specific pair of pants; step4: decide on pants color; step5: Go to the closet; step6: Pick out pants","flatten_input_for_script_generation":"You want to Pick out pants. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Go to the closet; step1: unlock the closet doors; step2: pull the closet doors apart; step3: push aside the shirts; step4: decide on pants color; step5: decide on specific pair of pants; step6: Pick out pants; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class PickOutPants:\n\n    title = \"Pick out pants\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the closet\"\n\n    def step1(self):\n        return \"unlock the closet doors\"\n\n    def step2(self):\n        return \"pull the closet doors apart\"\n\n    def step3(self):\n        return \"push aside the shirts\"\n\n    def step4(self):\n        return \"decide on pants color\"\n\n    def step5(self):\n        return \"decide on specific pair of pants\"\n\n    def step6(self):\n        return \"Pick out pants\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickOutPants:\n\n    title = \"Pick out pants\"\n    steps = 7\n\n","reference_graph":{"title":"Pick out pants","num_steps":7,"schema":["step0: Go to the closet","step1: unlock the closet doors","step2: pull the closet doors apart","step3: push aside the shirts","step4: decide on pants color","step5: decide on specific pair of pants","step6: Pick out pants"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"schedule a meeting","events":{"0":"Ask the breeder about availability for a meeting.","1":"Agree to the meeting with the breeder.","2":"Identify which time works best given prior commitments.","3":"Introduce oneself to the breeder.","4":"Explain the purpose of the call.","5":"call the breeder","6":"schedule a meeting"},"context":"call the breeder","minutes":5.0,"events_minutes":{"0":0.25,"1":0.1666666667,"2":0.5,"3":0.3333333333,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: Ask the breeder about availability for a meeting.; step1: Agree to the meeting with the breeder.; step2: Identify which time works best given prior commitments.; step3: Introduce oneself to the breeder.; step4: Explain the purpose of the call.; step5: call the breeder; step6: schedule a meeting","flatten_input_for_script_generation":"You want to schedule a meeting. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: call the breeder; step1: Introduce oneself to the breeder.; step2: Explain the purpose of the call.; step3: Ask the breeder about availability for a meeting.; step4: Identify which time works best given prior commitments.; step5: Agree to the meeting with the breeder.; step6: schedule a meeting; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->4","4->0","5->3"],"reference_code":"class ScheduleAMeeting:\n\n    title = \"schedule a meeting\"\n    steps = 7\n\n    def step0(self):\n        return \"call the breeder\"\n\n    def step1(self):\n        return \"Introduce oneself to the breeder.\"\n\n    def step2(self):\n        return \"Explain the purpose of the call.\"\n\n    def step3(self):\n        return \"Ask the breeder about availability for a meeting.\"\n\n    def step4(self):\n        return \"Identify which time works best given prior commitments.\"\n\n    def step5(self):\n        return \"Agree to the meeting with the breeder.\"\n\n    def step6(self):\n        return \"schedule a meeting\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ScheduleAMeeting:\n\n    title = \"schedule a meeting\"\n    steps = 7\n\n","reference_graph":{"title":"schedule a meeting","num_steps":7,"schema":["step0: call the breeder","step1: Introduce oneself to the breeder.","step2: Explain the purpose of the call.","step3: Ask the breeder about availability for a meeting.","step4: Identify which time works best given prior commitments.","step5: Agree to the meeting with the breeder.","step6: schedule a meeting"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"set the alarm on phone","events":{"0":"Set the time for the alarm","1":"Pick up the phone","2":"Press OK to finalize alarm.","3":"Open alarm app","4":"Unlock the phone","5":"NONE","6":"set the alarm on phone"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.05,"3":0.0833333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: Set the time for the alarm; step1: Pick up the phone; step2: Press OK to finalize alarm.; step3: Open alarm app; step4: Unlock the phone; step5: decided to set the alarm on phone; step6: set the alarm on phone","flatten_input_for_script_generation":"You want to set the alarm on phone. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to set the alarm on phone; step1: Pick up the phone; step2: Unlock the phone; step3: Open alarm app; step4: Set the time for the alarm; step5: Press OK to finalize alarm.; step6: set the alarm on phone; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class SetTheAlarmOnPhone:\n\n    title = \"set the alarm on phone\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to set the alarm on phone\"\n\n    def step1(self):\n        return \"Pick up the phone\"\n\n    def step2(self):\n        return \"Unlock the phone\"\n\n    def step3(self):\n        return \"Open alarm app\"\n\n    def step4(self):\n        return \"Set the time for the alarm\"\n\n    def step5(self):\n        return \"Press OK to finalize alarm.\"\n\n    def step6(self):\n        return \"set the alarm on phone\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SetTheAlarmOnPhone:\n\n    title = \"set the alarm on phone\"\n    steps = 7\n\n","reference_graph":{"title":"set the alarm on phone","num_steps":7,"schema":["step0: decided to set the alarm on phone","step1: Pick up the phone","step2: Unlock the phone","step3: Open alarm app","step4: Set the time for the alarm","step5: Press OK to finalize alarm.","step6: set the alarm on phone"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take out a bag of dark roast coffee","events":{"0":"walk into the kitchen","1":"open cupboard door","2":"reach into cupboard","3":"look inside cupboard for bag of dark roast coffee","4":"walk over to the cupboard","5":"NONE","6":"take out a bag of dark roast coffee"},"context":"NONE","minutes":0.5833333333,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.0833333333,"3":0.25,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk into the kitchen; step1: open cupboard door; step2: reach into cupboard; step3: look inside cupboard for bag of dark roast coffee; step4: walk over to the cupboard; step5: decided to take out a bag of dark roast coffee; step6: take out a bag of dark roast coffee","flatten_input_for_script_generation":"You want to take out a bag of dark roast coffee. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to take out a bag of dark roast coffee; step1: walk into the kitchen; step2: walk over to the cupboard; step3: open cupboard door; step4: look inside cupboard for bag of dark roast coffee; step5: reach into cupboard; step6: take out a bag of dark roast coffee; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->6","3->2","4->1","5->0"],"reference_code":"class TakeOutABagOfDarkRoastCoffee:\n\n    title = \"take out a bag of dark roast coffee\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to take out a bag of dark roast coffee\"\n\n    def step1(self):\n        return \"walk into the kitchen\"\n\n    def step2(self):\n        return \"walk over to the cupboard\"\n\n    def step3(self):\n        return \"open cupboard door\"\n\n    def step4(self):\n        return \"look inside cupboard for bag of dark roast coffee\"\n\n    def step5(self):\n        return \"reach into cupboard\"\n\n    def step6(self):\n        return \"take out a bag of dark roast coffee\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeOutABagOfDarkRoastCoffee:\n\n    title = \"take out a bag of dark roast coffee\"\n    steps = 7\n\n","reference_graph":{"title":"take out a bag of dark roast coffee","num_steps":7,"schema":["step0: decided to take out a bag of dark roast coffee","step1: walk into the kitchen","step2: walk over to the cupboard","step3: open cupboard door","step4: look inside cupboard for bag of dark roast coffee","step5: reach into cupboard","step6: take out a bag of dark roast coffee"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get back to home","events":{"0":"walk to the car","1":"put coffee in car","2":"turn the car on","3":"get in the car","4":"leave the store","5":"Purchase the most likable ground roast coffee","6":"Get back to home"},"context":"Purchase the most likable ground roast coffee","minutes":15.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to the car; step1: put coffee in car; step2: turn the car on; step3: get in the car; step4: leave the store; step5: Purchase the most likable ground roast coffee; step6: Get back to home","flatten_input_for_script_generation":"You want to Get back to home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Purchase the most likable ground roast coffee; step1: leave the store; step2: walk to the car; step3: put coffee in car; step4: get in the car; step5: turn the car on; step6: Get back to home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class GetBackToHome:\n\n    title = \"Get back to home\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase the most likable ground roast coffee\"\n\n    def step1(self):\n        return \"leave the store\"\n\n    def step2(self):\n        return \"walk to the car\"\n\n    def step3(self):\n        return \"put coffee in car\"\n\n    def step4(self):\n        return \"get in the car\"\n\n    def step5(self):\n        return \"turn the car on\"\n\n    def step6(self):\n        return \"Get back to home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetBackToHome:\n\n    title = \"Get back to home\"\n    steps = 7\n\n","reference_graph":{"title":"Get back to home","num_steps":7,"schema":["step0: Purchase the most likable ground roast coffee","step1: leave the store","step2: walk to the car","step3: put coffee in car","step4: get in the car","step5: turn the car on","step6: Get back to home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in car","events":{"0":"thank police for information","1":"find address of morgue","2":"be informed of death","3":"hang up phone","4":"get call from police","5":"NONE","6":"get in car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.25,"1":5.0,"2":0.25,"3":0.0833333333,"4":0.25},"flatten_input_for_edge_prediction":"step0: thank police for information; step1: find address of morgue; step2: be informed of death; step3: hang up phone; step4: get call from police; step5: decided to get in car; step6: get in car","flatten_input_for_script_generation":"You want to get in car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to get in car; step1: get call from police; step2: be informed of death; step3: thank police for information; step4: hang up phone; step5: find address of morgue; step6: get in car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->2","5->4"],"reference_code":"class GetInCar:\n\n    title = \"get in car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get in car\"\n\n    def step1(self):\n        return \"get call from police\"\n\n    def step2(self):\n        return \"be informed of death\"\n\n    def step3(self):\n        return \"thank police for information\"\n\n    def step4(self):\n        return \"hang up phone\"\n\n    def step5(self):\n        return \"find address of morgue\"\n\n    def step6(self):\n        return \"get in car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInCar:\n\n    title = \"get in car\"\n    steps = 7\n\n","reference_graph":{"title":"get in car","num_steps":7,"schema":["step0: decided to get in car","step1: get call from police","step2: be informed of death","step3: thank police for information","step4: hang up phone","step5: find address of morgue","step6: get in car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Open closet door.","events":{"0":"decide to clean room first","1":"dust everything off","2":"notice room is messy","3":"start cleaning up room","4":"head back to closet","5":"throw out trash","6":"Walk to closet on day of dance.","7":"Open closet door."},"context":"Walk to closet on day of dance.","minutes":1.0,"events_minutes":{"0":0.3166666667,"1":10.0,"2":0.3,"3":17.0,"4":2.0,"5":18.0},"flatten_input_for_edge_prediction":"step0: decide to clean room first; step1: dust everything off; step2: notice room is messy; step3: start cleaning up room; step4: head back to closet; step5: throw out trash; step6: Walk to closet on day of dance.; step7: Open closet door.","flatten_input_for_script_generation":"You want to Open closet door.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step5 -> step4; step1 -> step5; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: Walk to closet on day of dance.; step1: notice room is messy; step2: decide to clean room first; step3: start cleaning up room; step4: dust everything off; step5: throw out trash; step6: head back to closet; step7: Open closet door.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->5","2->0","3->1","4->7","5->4","6->2"],"reference_code":"class OpenClosetDoor:\n\n    title = \"Open closet door.\"\n    steps = 8\n\n    def step0(self):\n        return \"Walk to closet on day of dance.\"\n\n    def step1(self):\n        return \"notice room is messy\"\n\n    def step2(self):\n        return \"decide to clean room first\"\n\n    def step3(self):\n        return \"start cleaning up room\"\n\n    def step4(self):\n        return \"dust everything off\"\n\n    def step5(self):\n        return \"throw out trash\"\n\n    def step6(self):\n        return \"head back to closet\"\n\n    def step7(self):\n        return \"Open closet door.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class OpenClosetDoor:\n\n    title = \"Open closet door.\"\n    steps = 8\n\n","reference_graph":{"title":"Open closet door.","num_steps":8,"schema":["step0: Walk to closet on day of dance.","step1: notice room is messy","step2: decide to clean room first","step3: start cleaning up room","step4: dust everything off","step5: throw out trash","step6: head back to closet","step7: Open closet door."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"choose a particular lipstick","events":{"0":"read through reviews","1":"navigate to other lipsticks","2":"compare lipstick choices","3":"determine if the lipstick is of quality","4":"narrow down choice","5":"look up lipstick reviews online","6":"choose a particular lipstick"},"context":"look up lipstick reviews online","minutes":5.0,"events_minutes":{"0":10.0,"1":0.0833333333,"2":2.0,"3":3.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: read through reviews; step1: navigate to other lipsticks; step2: compare lipstick choices; step3: determine if the lipstick is of quality; step4: narrow down choice; step5: look up lipstick reviews online; step6: choose a particular lipstick","flatten_input_for_script_generation":"You want to choose a particular lipstick. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step2; step3 -> step6; step2 -> step4; step1 -> step4; step4 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: look up lipstick reviews online; step1: read through reviews; step2: navigate to other lipsticks; step3: compare lipstick choices; step4: narrow down choice; step5: determine if the lipstick is of quality; step6: choose a particular lipstick; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->1","0->2","1->4","2->4","3->6","4->3","5->0"],"reference_code":"class ChooseAParticularLipstick:\n\n    title = \"choose a particular lipstick\"\n    steps = 7\n\n    def step0(self):\n        return \"look up lipstick reviews online\"\n\n    def step1(self):\n        return \"read through reviews\"\n\n    def step2(self):\n        return \"navigate to other lipsticks\"\n\n    def step3(self):\n        return \"compare lipstick choices\"\n\n    def step4(self):\n        return \"narrow down choice\"\n\n    def step5(self):\n        return \"determine if the lipstick is of quality\"\n\n    def step6(self):\n        return \"choose a particular lipstick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class ChooseAParticularLipstick:\n\n    title = \"choose a particular lipstick\"\n    steps = 7\n\n","reference_graph":{"title":"choose a particular lipstick","num_steps":7,"schema":["step0: look up lipstick reviews online","step1: read through reviews","step2: navigate to other lipsticks","step3: compare lipstick choices","step4: narrow down choice","step5: determine if the lipstick is of quality","step6: choose a particular lipstick"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step5 -> step6","step4 -> step5"]}}
{"scenario":"enter building through door","events":{"0":"look through door to see inside","1":"peer through opening","2":"use shoulder to push door open","3":"take step inside building","4":"reach out with hand to try opening door","5":"locate an unlocked door","6":"walk to hospital door","7":"enter building through door"},"context":"walk to hospital door","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.1666666667,"3":0.0833333333,"4":0.1666666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: look through door to see inside; step1: peer through opening; step2: use shoulder to push door open; step3: take step inside building; step4: reach out with hand to try opening door; step5: locate an unlocked door; step6: walk to hospital door; step7: enter building through door","flatten_input_for_script_generation":"You want to enter building through door. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step5 -> step0; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step7; step0 -> step2; step6 -> step5","flatten_output_for_script_generation":"step0: walk to hospital door; step1: locate an unlocked door; step2: reach out with hand to try opening door; step3: look through door to see inside; step4: use shoulder to push door open; step5: peer through opening; step6: take step inside building; step7: enter building through door; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->3","2->1","3->7","4->2","5->4","5->0","6->5"],"reference_code":"class EnterBuildingThroughDoor:\n\n    title = \"enter building through door\"\n    steps = 8\n\n    def step0(self):\n        return \"walk to hospital door\"\n\n    def step1(self):\n        return \"locate an unlocked door\"\n\n    def step2(self):\n        return \"reach out with hand to try opening door\"\n\n    def step3(self):\n        return \"look through door to see inside\"\n\n    def step4(self):\n        return \"use shoulder to push door open\"\n\n    def step5(self):\n        return \"peer through opening\"\n\n    def step6(self):\n        return \"take step inside building\"\n\n    def step7(self):\n        return \"enter building through door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class EnterBuildingThroughDoor:\n\n    title = \"enter building through door\"\n    steps = 8\n\n","reference_graph":{"title":"enter building through door","num_steps":8,"schema":["step0: walk to hospital door","step1: locate an unlocked door","step2: reach out with hand to try opening door","step3: look through door to see inside","step4: use shoulder to push door open","step5: peer through opening","step6: take step inside building","step7: enter building through door"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Go into stores and apply there","events":{"0":"walk into grocery store","1":"ask the manager if any jobs are available","2":"get out of the car","3":"request an application to fill out","4":"look for the manager","5":"NONE","6":"Go into stores and apply there"},"context":"NONE","minutes":180.0,"events_minutes":{"0":2.0,"1":1.0,"2":1.0,"3":5.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: walk into grocery store; step1: ask the manager if any jobs are available; step2: get out of the car; step3: request an application to fill out; step4: look for the manager; step5: decided to Go into stores and apply there; step6: Go into stores and apply there","flatten_input_for_script_generation":"You want to Go into stores and apply there. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step3; step3 -> step6; step4 -> step1; step2 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: decided to Go into stores and apply there; step1: get out of the car; step2: walk into grocery store; step3: look for the manager; step4: ask the manager if any jobs are available; step5: request an application to fill out; step6: Go into stores and apply there; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class GoIntoStoresAndApplyThere:\n\n    title = \"Go into stores and apply there\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Go into stores and apply there\"\n\n    def step1(self):\n        return \"get out of the car\"\n\n    def step2(self):\n        return \"walk into grocery store\"\n\n    def step3(self):\n        return \"look for the manager\"\n\n    def step4(self):\n        return \"ask the manager if any jobs are available\"\n\n    def step5(self):\n        return \"request an application to fill out\"\n\n    def step6(self):\n        return \"Go into stores and apply there\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class GoIntoStoresAndApplyThere:\n\n    title = \"Go into stores and apply there\"\n    steps = 7\n\n","reference_graph":{"title":"Go into stores and apply there","num_steps":7,"schema":["step0: decided to Go into stores and apply there","step1: get out of the car","step2: walk into grocery store","step3: look for the manager","step4: ask the manager if any jobs are available","step5: request an application to fill out","step6: Go into stores and apply there"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"place a classified ad","events":{"0":"decide on the length of time ad will run","1":"review to make sure the information is correct","2":"fill out ad form online","3":"press submit to have ad printed","4":"write an ad to attract applicants","5":"NONE","6":"place a classified ad"},"context":"NONE","minutes":10.0,"events_minutes":{"0":5.0,"1":5.0,"2":10.0,"3":0.0166666667,"4":15.0},"flatten_input_for_edge_prediction":"step0: decide on the length of time ad will run; step1: review to make sure the information is correct; step2: fill out ad form online; step3: press submit to have ad printed; step4: write an ad to attract applicants; step5: decided to place a classified ad; step6: place a classified ad","flatten_input_for_script_generation":"You want to place a classified ad. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to place a classified ad; step1: write an ad to attract applicants; step2: fill out ad form online; step3: review to make sure the information is correct; step4: decide on the length of time ad will run; step5: press submit to have ad printed; step6: place a classified ad; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->6","4->2","5->4"],"reference_code":"class PlaceAClassifiedAd:\n\n    title = \"place a classified ad\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to place a classified ad\"\n\n    def step1(self):\n        return \"write an ad to attract applicants\"\n\n    def step2(self):\n        return \"fill out ad form online\"\n\n    def step3(self):\n        return \"review to make sure the information is correct\"\n\n    def step4(self):\n        return \"decide on the length of time ad will run\"\n\n    def step5(self):\n        return \"press submit to have ad printed\"\n\n    def step6(self):\n        return \"place a classified ad\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceAClassifiedAd:\n\n    title = \"place a classified ad\"\n    steps = 7\n\n","reference_graph":{"title":"place a classified ad","num_steps":7,"schema":["step0: decided to place a classified ad","step1: write an ad to attract applicants","step2: fill out ad form online","step3: review to make sure the information is correct","step4: decide on the length of time ad will run","step5: press submit to have ad printed","step6: place a classified ad"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Renovate building suitable for serving alcohol","events":{"0":"Tell the crew what needs to be done","1":"Watch as the crew makes renovations","2":"Help the crew lay out a plan","3":"Hire a construction crew","4":"Give clear and concise instructions","5":"Buy a building property","6":"Renovate building suitable for serving alcohol"},"context":"Buy a building property","minutes":86400.0,"events_minutes":{"0":60.0,"1":43200.0,"2":1440.0,"3":1440.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: Tell the crew what needs to be done; step1: Watch as the crew makes renovations; step2: Help the crew lay out a plan; step3: Hire a construction crew; step4: Give clear and concise instructions; step5: Buy a building property; step6: Renovate building suitable for serving alcohol","flatten_input_for_script_generation":"You want to Renovate building suitable for serving alcohol. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step2 -> step4; step0 -> step1; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Buy a building property; step1: Hire a construction crew; step2: Help the crew lay out a plan; step3: Tell the crew what needs to be done; step4: Give clear and concise instructions; step5: Watch as the crew makes renovations; step6: Renovate building suitable for serving alcohol; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","2->4","3->2","4->1","5->3"],"reference_code":"class RenovateBuildingSuitableForServingAlcohol:\n\n    title = \"Renovate building suitable for serving alcohol\"\n    steps = 7\n\n    def step0(self):\n        return \"Buy a building property\"\n\n    def step1(self):\n        return \"Hire a construction crew\"\n\n    def step2(self):\n        return \"Help the crew lay out a plan\"\n\n    def step3(self):\n        return \"Tell the crew what needs to be done\"\n\n    def step4(self):\n        return \"Give clear and concise instructions\"\n\n    def step5(self):\n        return \"Watch as the crew makes renovations\"\n\n    def step6(self):\n        return \"Renovate building suitable for serving alcohol\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RenovateBuildingSuitableForServingAlcohol:\n\n    title = \"Renovate building suitable for serving alcohol\"\n    steps = 7\n\n","reference_graph":{"title":"Renovate building suitable for serving alcohol","num_steps":7,"schema":["step0: Buy a building property","step1: Hire a construction crew","step2: Help the crew lay out a plan","step3: Tell the crew what needs to be done","step4: Give clear and concise instructions","step5: Watch as the crew makes renovations","step6: Renovate building suitable for serving alcohol"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"look around for open spots","1":"turn off car when set.","2":"pull into parking liot","3":"move car between the lines","4":"start driving to open spot","5":"drive to the barber shop","6":"park the car"},"context":"drive to the barber shop","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look around for open spots; step1: turn off car when set.; step2: pull into parking liot; step3: move car between the lines; step4: start driving to open spot; step5: drive to the barber shop; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the barber shop; step1: pull into parking liot; step2: look around for open spots; step3: start driving to open spot; step4: move car between the lines; step5: turn off car when set.; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->1","4->3","5->2"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the barber shop\"\n\n    def step1(self):\n        return \"pull into parking liot\"\n\n    def step2(self):\n        return \"look around for open spots\"\n\n    def step3(self):\n        return \"start driving to open spot\"\n\n    def step4(self):\n        return \"move car between the lines\"\n\n    def step5(self):\n        return \"turn off car when set.\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to the barber shop","step1: pull into parking liot","step2: look around for open spots","step3: start driving to open spot","step4: move car between the lines","step5: turn off car when set.","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get dressed in nice clothes","events":{"0":"lay out pants on the bed.","1":"walk to the bedroom.","2":"dry off with a towel.","3":"lay out a formal shirt on the bed.","4":"step out of the shower.","5":"take a shower","6":"get dressed in nice clothes"},"context":"take a shower","minutes":30.0,"events_minutes":{"0":0.3333333333,"1":0.5,"2":2.0,"3":0.3333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: lay out pants on the bed.; step1: walk to the bedroom.; step2: dry off with a towel.; step3: lay out a formal shirt on the bed.; step4: step out of the shower.; step5: take a shower; step6: get dressed in nice clothes","flatten_input_for_script_generation":"You want to get dressed in nice clothes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step0; step1 -> step3; step0 -> step6; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: take a shower; step1: step out of the shower.; step2: dry off with a towel.; step3: walk to the bedroom.; step4: lay out pants on the bed.; step5: lay out a formal shirt on the bed.; step6: get dressed in nice clothes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","1->3","2->1","3->6","4->2","5->4"],"reference_code":"class GetDressedInNiceClothes:\n\n    title = \"get dressed in nice clothes\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"step out of the shower.\"\n\n    def step2(self):\n        return \"dry off with a towel.\"\n\n    def step3(self):\n        return \"walk to the bedroom.\"\n\n    def step4(self):\n        return \"lay out pants on the bed.\"\n\n    def step5(self):\n        return \"lay out a formal shirt on the bed.\"\n\n    def step6(self):\n        return \"get dressed in nice clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetDressedInNiceClothes:\n\n    title = \"get dressed in nice clothes\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed in nice clothes","num_steps":7,"schema":["step0: take a shower","step1: step out of the shower.","step2: dry off with a towel.","step3: walk to the bedroom.","step4: lay out pants on the bed.","step5: lay out a formal shirt on the bed.","step6: get dressed in nice clothes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"notice available parking space","1":"pull into available parking space","2":"pull into animal shelter's parking lot","3":"drive to available parking space","4":"stop the car","5":"look for available parking space","6":"drive to animal shelter","7":"park the car"},"context":"drive to animal shelter","minutes":5.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.3333333333,"3":0.1666666667,"4":0.0166666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: notice available parking space; step1: pull into available parking space; step2: pull into animal shelter's parking lot; step3: drive to available parking space; step4: stop the car; step5: look for available parking space; step6: drive to animal shelter; step7: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: drive to animal shelter; step1: pull into animal shelter's parking lot; step2: look for available parking space; step3: notice available parking space; step4: drive to available parking space; step5: pull into available parking space; step6: stop the car; step7: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->5","3->1","4->7","5->0","6->2"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to animal shelter\"\n\n    def step1(self):\n        return \"pull into animal shelter's parking lot\"\n\n    def step2(self):\n        return \"look for available parking space\"\n\n    def step3(self):\n        return \"notice available parking space\"\n\n    def step4(self):\n        return \"drive to available parking space\"\n\n    def step5(self):\n        return \"pull into available parking space\"\n\n    def step6(self):\n        return \"stop the car\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n","reference_graph":{"title":"park the car","num_steps":8,"schema":["step0: drive to animal shelter","step1: pull into animal shelter's parking lot","step2: look for available parking space","step3: notice available parking space","step4: drive to available parking space","step5: pull into available parking space","step6: stop the car","step7: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"meet with instructor","events":{"0":"close the door","1":"determine where instructor will be","2":"turn around from door","3":"walk towards instructor","4":"greet the instructor","5":"enter the building","6":"meet with instructor"},"context":"enter the building","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: close the door; step1: determine where instructor will be; step2: turn around from door; step3: walk towards instructor; step4: greet the instructor; step5: enter the building; step6: meet with instructor","flatten_input_for_script_generation":"You want to meet with instructor. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: enter the building; step1: close the door; step2: turn around from door; step3: determine where instructor will be; step4: walk towards instructor; step5: greet the instructor; step6: meet with instructor; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->4","4->6","5->0"],"reference_code":"class MeetWithInstructor:\n\n    title = \"meet with instructor\"\n    steps = 7\n\n    def step0(self):\n        return \"enter the building\"\n\n    def step1(self):\n        return \"close the door\"\n\n    def step2(self):\n        return \"turn around from door\"\n\n    def step3(self):\n        return \"determine where instructor will be\"\n\n    def step4(self):\n        return \"walk towards instructor\"\n\n    def step5(self):\n        return \"greet the instructor\"\n\n    def step6(self):\n        return \"meet with instructor\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MeetWithInstructor:\n\n    title = \"meet with instructor\"\n    steps = 7\n\n","reference_graph":{"title":"meet with instructor","num_steps":7,"schema":["step0: enter the building","step1: close the door","step2: turn around from door","step3: determine where instructor will be","step4: walk towards instructor","step5: greet the instructor","step6: meet with instructor"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"apply online for the competitions","events":{"0":"click on application page","1":"click on competition eligibility page","2":"review eligibility requirements","3":"determine if eligible","4":"click on competition site","5":"look up local competitions","6":"apply online for the competitions"},"context":"look up local competitions","minutes":30.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":5.0,"3":0.25,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: click on application page; step1: click on competition eligibility page; step2: review eligibility requirements; step3: determine if eligible; step4: click on competition site; step5: look up local competitions; step6: apply online for the competitions","flatten_input_for_script_generation":"You want to apply online for the competitions. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: look up local competitions; step1: click on competition site; step2: click on competition eligibility page; step3: review eligibility requirements; step4: determine if eligible; step5: click on application page; step6: apply online for the competitions; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->1","5->4"],"reference_code":"class ApplyOnlineForTheCompetitions:\n\n    title = \"apply online for the competitions\"\n    steps = 7\n\n    def step0(self):\n        return \"look up local competitions\"\n\n    def step1(self):\n        return \"click on competition site\"\n\n    def step2(self):\n        return \"click on competition eligibility page\"\n\n    def step3(self):\n        return \"review eligibility requirements\"\n\n    def step4(self):\n        return \"determine if eligible\"\n\n    def step5(self):\n        return \"click on application page\"\n\n    def step6(self):\n        return \"apply online for the competitions\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ApplyOnlineForTheCompetitions:\n\n    title = \"apply online for the competitions\"\n    steps = 7\n\n","reference_graph":{"title":"apply online for the competitions","num_steps":7,"schema":["step0: look up local competitions","step1: click on competition site","step2: click on competition eligibility page","step3: review eligibility requirements","step4: determine if eligible","step5: click on application page","step6: apply online for the competitions"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"add party decorations to cart","events":{"0":"get out of the car","1":"Close the doors","2":"switch off the engine.","3":"enter the store.","4":"Get a parking lot.","5":"drive to the store","6":"add party decorations to cart"},"context":"drive to the store","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: get out of the car; step1: Close the doors; step2: switch off the engine.; step3: enter the store.; step4: Get a parking lot.; step5: drive to the store; step6: add party decorations to cart","flatten_input_for_script_generation":"You want to add party decorations to cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: drive to the store; step1: Get a parking lot.; step2: switch off the engine.; step3: get out of the car; step4: Close the doors; step5: enter the store.; step6: add party decorations to cart; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->6","4->2","5->4"],"reference_code":"class AddPartyDecorationsToCart:\n\n    title = \"add party decorations to cart\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"Get a parking lot.\"\n\n    def step2(self):\n        return \"switch off the engine.\"\n\n    def step3(self):\n        return \"get out of the car\"\n\n    def step4(self):\n        return \"Close the doors\"\n\n    def step5(self):\n        return \"enter the store.\"\n\n    def step6(self):\n        return \"add party decorations to cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AddPartyDecorationsToCart:\n\n    title = \"add party decorations to cart\"\n    steps = 7\n\n","reference_graph":{"title":"add party decorations to cart","num_steps":7,"schema":["step0: drive to the store","step1: Get a parking lot.","step2: switch off the engine.","step3: get out of the car","step4: Close the doors","step5: enter the store.","step6: add party decorations to cart"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"begin driving to the restaurant","events":{"0":"put on seatbelt","1":"adjust car mirrors","2":"check behind for oncoming cars and pedestrians","3":"insert car key","4":"shift car into drive","5":"turn on car engine","6":"enter the car","7":"begin driving to the restaurant"},"context":"enter the car","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.25,"3":0.0833333333,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: put on seatbelt; step1: adjust car mirrors; step2: check behind for oncoming cars and pedestrians; step3: insert car key; step4: shift car into drive; step5: turn on car engine; step6: enter the car; step7: begin driving to the restaurant","flatten_input_for_script_generation":"You want to begin driving to the restaurant. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step4; step0 -> step1; step4 -> step2; step1 -> step3; step2 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: enter the car; step1: put on seatbelt; step2: insert car key; step3: turn on car engine; step4: shift car into drive; step5: check behind for oncoming cars and pedestrians; step6: adjust car mirrors; step7: begin driving to the restaurant; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step2; step5 -> step7","gold_edges_for_prediction":["0->1","1->3","2->7","3->5","4->2","5->4","6->0"],"reference_code":"class BeginDrivingToTheRestaurant:\n\n    title = \"begin driving to the restaurant\"\n    steps = 8\n\n    def step0(self):\n        return \"enter the car\"\n\n    def step1(self):\n        return \"put on seatbelt\"\n\n    def step2(self):\n        return \"insert car key\"\n\n    def step3(self):\n        return \"turn on car engine\"\n\n    def step4(self):\n        return \"shift car into drive\"\n\n    def step5(self):\n        return \"check behind for oncoming cars and pedestrians\"\n\n    def step6(self):\n        return \"adjust car mirrors\"\n\n    def step7(self):\n        return \"begin driving to the restaurant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step2\",\n            \"step5 -> step7\",\n        ]\n","input_prompt_code":"class BeginDrivingToTheRestaurant:\n\n    title = \"begin driving to the restaurant\"\n    steps = 8\n\n","reference_graph":{"title":"begin driving to the restaurant","num_steps":8,"schema":["step0: enter the car","step1: put on seatbelt","step2: insert car key","step3: turn on car engine","step4: shift car into drive","step5: check behind for oncoming cars and pedestrians","step6: adjust car mirrors","step7: begin driving to the restaurant"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step2","step5 -> step7"]}}
{"scenario":"Sign up for roller blade lessons","events":{"0":"open the door to the skating rink.","1":"enter the roller skating rink.","2":"exit the bus.","3":"wait in line at the main desk in the rink.","4":"walk across the roller skating rink's parking lot.","5":"Take bus to roller skating rink","6":"Sign up for roller blade lessons"},"context":"Take bus to roller skating rink","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":1.0,"3":3.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: open the door to the skating rink.; step1: enter the roller skating rink.; step2: exit the bus.; step3: wait in line at the main desk in the rink.; step4: walk across the roller skating rink's parking lot.; step5: Take bus to roller skating rink; step6: Sign up for roller blade lessons","flatten_input_for_script_generation":"You want to Sign up for roller blade lessons. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Take bus to roller skating rink; step1: exit the bus.; step2: walk across the roller skating rink's parking lot.; step3: open the door to the skating rink.; step4: enter the roller skating rink.; step5: wait in line at the main desk in the rink.; step6: Sign up for roller blade lessons; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->4","3->6","4->0","5->2"],"reference_code":"class SignUpForRollerBladeLessons:\n\n    title = \"Sign up for roller blade lessons\"\n    steps = 7\n\n    def step0(self):\n        return \"Take bus to roller skating rink\"\n\n    def step1(self):\n        return \"exit the bus.\"\n\n    def step2(self):\n        return \"walk across the roller skating rink's parking lot.\"\n\n    def step3(self):\n        return \"open the door to the skating rink.\"\n\n    def step4(self):\n        return \"enter the roller skating rink.\"\n\n    def step5(self):\n        return \"wait in line at the main desk in the rink.\"\n\n    def step6(self):\n        return \"Sign up for roller blade lessons\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SignUpForRollerBladeLessons:\n\n    title = \"Sign up for roller blade lessons\"\n    steps = 7\n\n","reference_graph":{"title":"Sign up for roller blade lessons","num_steps":7,"schema":["step0: Take bus to roller skating rink","step1: exit the bus.","step2: walk across the roller skating rink's parking lot.","step3: open the door to the skating rink.","step4: enter the roller skating rink.","step5: wait in line at the main desk in the rink.","step6: Sign up for roller blade lessons"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get ready at home","events":{"0":"use toothpaste and toothbrush to clean teeth","1":"pick out an outfit","2":"do hair and makeup","3":"take a shower","4":"look in mirror to make sure appearance looks great","5":"put on outfit","6":"NONE","7":"get ready at home"},"context":"NONE","minutes":10.0,"events_minutes":{"0":3.0,"1":0.0833333333,"2":20.0,"3":15.0,"4":5.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: use toothpaste and toothbrush to clean teeth; step1: pick out an outfit; step2: do hair and makeup; step3: take a shower; step4: look in mirror to make sure appearance looks great; step5: put on outfit; step6: decided to get ready at home; step7: get ready at home","flatten_input_for_script_generation":"You want to get ready at home. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step5; step5 -> step2; step2 -> step4; step4 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: decided to get ready at home; step1: take a shower; step2: use toothpaste and toothbrush to clean teeth; step3: pick out an outfit; step4: put on outfit; step5: do hair and makeup; step6: look in mirror to make sure appearance looks great; step7: get ready at home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->4","3->0","4->7","5->2","6->3"],"reference_code":"class GetReadyAtHome:\n\n    title = \"get ready at home\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get ready at home\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"use toothpaste and toothbrush to clean teeth\"\n\n    def step3(self):\n        return \"pick out an outfit\"\n\n    def step4(self):\n        return \"put on outfit\"\n\n    def step5(self):\n        return \"do hair and makeup\"\n\n    def step6(self):\n        return \"look in mirror to make sure appearance looks great\"\n\n    def step7(self):\n        return \"get ready at home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetReadyAtHome:\n\n    title = \"get ready at home\"\n    steps = 8\n\n","reference_graph":{"title":"get ready at home","num_steps":8,"schema":["step0: decided to get ready at home","step1: take a shower","step2: use toothpaste and toothbrush to clean teeth","step3: pick out an outfit","step4: put on outfit","step5: do hair and makeup","step6: look in mirror to make sure appearance looks great","step7: get ready at home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Save for vacation.","events":{"0":"work more hours at the office.","1":"not spend as much on groceries.","2":"come up with a strict budget.","3":"stop spending so much on alcohol.","4":"stop eating out as much","5":"NONE","6":"Save for vacation."},"context":"NONE","minutes":129600.0,"events_minutes":{"0":86400.0,"1":86400.0,"2":60.0,"3":86400.0,"4":86400.0},"flatten_input_for_edge_prediction":"step0: work more hours at the office.; step1: not spend as much on groceries.; step2: come up with a strict budget.; step3: stop spending so much on alcohol.; step4: stop eating out as much; step5: decided to Save for vacation.; step6: Save for vacation.","flatten_input_for_script_generation":"You want to Save for vacation.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step1; step2 -> step3; step2 -> step4; step1 -> step6; step0 -> step6; step4 -> step6; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to Save for vacation.; step1: come up with a strict budget.; step2: work more hours at the office.; step3: not spend as much on groceries.; step4: stop spending so much on alcohol.; step5: stop eating out as much; step6: Save for vacation.; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step1 -> step5; step2 -> step6; step3 -> step6; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->6","2->0","2->1","2->3","2->4","3->6","4->6","5->2"],"reference_code":"class SaveForVacation:\n\n    title = \"Save for vacation.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Save for vacation.\"\n\n    def step1(self):\n        return \"come up with a strict budget.\"\n\n    def step2(self):\n        return \"work more hours at the office.\"\n\n    def step3(self):\n        return \"not spend as much on groceries.\"\n\n    def step4(self):\n        return \"stop spending so much on alcohol.\"\n\n    def step5(self):\n        return \"stop eating out as much\"\n\n    def step6(self):\n        return \"Save for vacation.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n            \"step2 -> step6\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SaveForVacation:\n\n    title = \"Save for vacation.\"\n    steps = 7\n\n","reference_graph":{"title":"Save for vacation.","num_steps":7,"schema":["step0: decided to Save for vacation.","step1: come up with a strict budget.","step2: work more hours at the office.","step3: not spend as much on groceries.","step4: stop spending so much on alcohol.","step5: stop eating out as much","step6: Save for vacation."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step1 -> step5","step2 -> step6","step3 -> step6","step4 -> step6","step5 -> step6"]}}
{"scenario":"go inside the shelter","events":{"0":"put keys into jacket.","1":"open the car door.","2":"turn off the car.","3":"remove keys from ignition.","4":"step out of the car.","5":"park the car","6":"go inside the shelter"},"context":"park the car","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":0.05,"2":0.05,"3":0.05,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: put keys into jacket.; step1: open the car door.; step2: turn off the car.; step3: remove keys from ignition.; step4: step out of the car.; step5: park the car; step6: go inside the shelter","flatten_input_for_script_generation":"You want to go inside the shelter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step3 -> step1; step0 -> step4; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: park the car; step1: turn off the car.; step2: remove keys from ignition.; step3: put keys into jacket.; step4: open the car door.; step5: step out of the car.; step6: go inside the shelter; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->4","2->3","3->0","3->1","4->6","5->2"],"reference_code":"class GoInsideTheShelter:\n\n    title = \"go inside the shelter\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"turn off the car.\"\n\n    def step2(self):\n        return \"remove keys from ignition.\"\n\n    def step3(self):\n        return \"put keys into jacket.\"\n\n    def step4(self):\n        return \"open the car door.\"\n\n    def step5(self):\n        return \"step out of the car.\"\n\n    def step6(self):\n        return \"go inside the shelter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoInsideTheShelter:\n\n    title = \"go inside the shelter\"\n    steps = 7\n\n","reference_graph":{"title":"go inside the shelter","num_steps":7,"schema":["step0: park the car","step1: turn off the car.","step2: remove keys from ignition.","step3: put keys into jacket.","step4: open the car door.","step5: step out of the car.","step6: go inside the shelter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pass Grade School level","events":{"0":"enter grade school","1":"pass the second grade","2":"pass the third grade","3":"pass the first grade","4":"pass the fifth grade","5":"pass the fourth grade","6":"Pass kindergarten level","7":"Pass Grade School level"},"context":"Pass kindergarten level","minutes":3679200.0,"events_minutes":{"0":43200.0,"1":525600.0,"2":525600.0,"3":525600.0,"4":525600.0,"5":525600.0},"flatten_input_for_edge_prediction":"step0: enter grade school; step1: pass the second grade; step2: pass the third grade; step3: pass the first grade; step4: pass the fifth grade; step5: pass the fourth grade; step6: Pass kindergarten level; step7: Pass Grade School level","flatten_input_for_script_generation":"You want to Pass Grade School level. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step5; step5 -> step4; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Pass kindergarten level; step1: enter grade school; step2: pass the first grade; step3: pass the second grade; step4: pass the third grade; step5: pass the fourth grade; step6: pass the fifth grade; step7: Pass Grade School level; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->2","2->5","3->1","4->7","5->4","6->0"],"reference_code":"class PassGradeSchoolLevel:\n\n    title = \"Pass Grade School level\"\n    steps = 8\n\n    def step0(self):\n        return \"Pass kindergarten level\"\n\n    def step1(self):\n        return \"enter grade school\"\n\n    def step2(self):\n        return \"pass the first grade\"\n\n    def step3(self):\n        return \"pass the second grade\"\n\n    def step4(self):\n        return \"pass the third grade\"\n\n    def step5(self):\n        return \"pass the fourth grade\"\n\n    def step6(self):\n        return \"pass the fifth grade\"\n\n    def step7(self):\n        return \"Pass Grade School level\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PassGradeSchoolLevel:\n\n    title = \"Pass Grade School level\"\n    steps = 8\n\n","reference_graph":{"title":"Pass Grade School level","num_steps":8,"schema":["step0: Pass kindergarten level","step1: enter grade school","step2: pass the first grade","step3: pass the second grade","step4: pass the third grade","step5: pass the fourth grade","step6: pass the fifth grade","step7: Pass Grade School level"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"walk into the kitchen","events":{"0":"Stand up from seating position","1":"Walk toward the kitchen","2":"Turn toward the kitchen","3":"Exit the room","4":"Enter the kitchen","5":"Walk through the room","6":"NONE","7":"walk into the kitchen"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: Stand up from seating position; step1: Walk toward the kitchen; step2: Turn toward the kitchen; step3: Exit the room; step4: Enter the kitchen; step5: Walk through the room; step6: decided to walk into the kitchen; step7: walk into the kitchen","flatten_input_for_script_generation":"You want to walk into the kitchen. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step3; step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: decided to walk into the kitchen; step1: Stand up from seating position; step2: Walk through the room; step3: Exit the room; step4: Turn toward the kitchen; step5: Walk toward the kitchen; step6: Enter the kitchen; step7: walk into the kitchen; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->1","3->2","4->7","5->3","6->0"],"reference_code":"class WalkIntoTheKitchen:\n\n    title = \"walk into the kitchen\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to walk into the kitchen\"\n\n    def step1(self):\n        return \"Stand up from seating position\"\n\n    def step2(self):\n        return \"Walk through the room\"\n\n    def step3(self):\n        return \"Exit the room\"\n\n    def step4(self):\n        return \"Turn toward the kitchen\"\n\n    def step5(self):\n        return \"Walk toward the kitchen\"\n\n    def step6(self):\n        return \"Enter the kitchen\"\n\n    def step7(self):\n        return \"walk into the kitchen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkIntoTheKitchen:\n\n    title = \"walk into the kitchen\"\n    steps = 8\n\n","reference_graph":{"title":"walk into the kitchen","num_steps":8,"schema":["step0: decided to walk into the kitchen","step1: Stand up from seating position","step2: Walk through the room","step3: Exit the room","step4: Turn toward the kitchen","step5: Walk toward the kitchen","step6: Enter the kitchen","step7: walk into the kitchen"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"add plain bracelets to cart","events":{"0":"make final decision","1":"navigate to search bar","2":"search for bracelets","3":"compare search results","4":"click through search results","5":"go to amazon.com","6":"add plain bracelets to cart"},"context":"go to amazon.com","minutes":5.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":0.1666666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: make final decision; step1: navigate to search bar; step2: search for bracelets; step3: compare search results; step4: click through search results; step5: go to amazon.com; step6: add plain bracelets to cart","flatten_input_for_script_generation":"You want to add plain bracelets to cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go to amazon.com; step1: navigate to search bar; step2: search for bracelets; step3: click through search results; step4: compare search results; step5: make final decision; step6: add plain bracelets to cart; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->3","5->1"],"reference_code":"class AddPlainBraceletsToCart:\n\n    title = \"add plain bracelets to cart\"\n    steps = 7\n\n    def step0(self):\n        return \"go to amazon.com\"\n\n    def step1(self):\n        return \"navigate to search bar\"\n\n    def step2(self):\n        return \"search for bracelets\"\n\n    def step3(self):\n        return \"click through search results\"\n\n    def step4(self):\n        return \"compare search results\"\n\n    def step5(self):\n        return \"make final decision\"\n\n    def step6(self):\n        return \"add plain bracelets to cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AddPlainBraceletsToCart:\n\n    title = \"add plain bracelets to cart\"\n    steps = 7\n\n","reference_graph":{"title":"add plain bracelets to cart","num_steps":7,"schema":["step0: go to amazon.com","step1: navigate to search bar","step2: search for bracelets","step3: click through search results","step4: compare search results","step5: make final decision","step6: add plain bracelets to cart"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Park car and get out.","events":{"0":"place foot on brake.","1":"turn key to off position and remove.","2":"look around for free parking spot.","3":"open door and step out of car.","4":"drive to parking spot and stop car.","5":"place car into park gear.","6":"reach hand to key.","7":"Start car and drive to Publix.","8":"Park car and get out."},"context":"Start car and drive to Publix.","minutes":5.0,"events_minutes":{"0":0.5,"1":0.6666666667,"2":1.0,"3":1.0,"4":0.5,"5":0.5,"6":0.1666666667},"flatten_input_for_edge_prediction":"step0: place foot on brake.; step1: turn key to off position and remove.; step2: look around for free parking spot.; step3: open door and step out of car.; step4: drive to parking spot and stop car.; step5: place car into park gear.; step6: reach hand to key.; step7: Start car and drive to Publix.; step8: Park car and get out.","flatten_input_for_script_generation":"You want to Park car and get out.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step5; step5 -> step6; step6 -> step1; step1 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: Start car and drive to Publix.; step1: look around for free parking spot.; step2: drive to parking spot and stop car.; step3: place foot on brake.; step4: place car into park gear.; step5: reach hand to key.; step6: turn key to off position and remove.; step7: open door and step out of car.; step8: Park car and get out.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->3","2->4","3->8","4->0","5->6","6->1","7->2"],"reference_code":"class ParkCarAndGetOut:\n\n    title = \"Park car and get out.\"\n    steps = 9\n\n    def step0(self):\n        return \"Start car and drive to Publix.\"\n\n    def step1(self):\n        return \"look around for free parking spot.\"\n\n    def step2(self):\n        return \"drive to parking spot and stop car.\"\n\n    def step3(self):\n        return \"place foot on brake.\"\n\n    def step4(self):\n        return \"place car into park gear.\"\n\n    def step5(self):\n        return \"reach hand to key.\"\n\n    def step6(self):\n        return \"turn key to off position and remove.\"\n\n    def step7(self):\n        return \"open door and step out of car.\"\n\n    def step8(self):\n        return \"Park car and get out.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ParkCarAndGetOut:\n\n    title = \"Park car and get out.\"\n    steps = 9\n\n","reference_graph":{"title":"Park car and get out.","num_steps":9,"schema":["step0: Start car and drive to Publix.","step1: look around for free parking spot.","step2: drive to parking spot and stop car.","step3: place foot on brake.","step4: place car into park gear.","step5: reach hand to key.","step6: turn key to off position and remove.","step7: open door and step out of car.","step8: Park car and get out."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Save up money to buy the Xbox","events":{"0":"apply for jobs","1":"get a job","2":"put money in bank account","3":"get paid from job","4":"work at job","5":"NONE","6":"Save up money to buy the Xbox"},"context":"NONE","minutes":216000.0,"events_minutes":{"0":4320.0,"1":1440.0,"2":60.0,"3":10080.0,"4":43200.0},"flatten_input_for_edge_prediction":"step0: apply for jobs; step1: get a job; step2: put money in bank account; step3: get paid from job; step4: work at job; step5: decided to Save up money to buy the Xbox; step6: Save up money to buy the Xbox","flatten_input_for_script_generation":"You want to Save up money to buy the Xbox. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step6; step0 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: decided to Save up money to buy the Xbox; step1: apply for jobs; step2: get a job; step3: work at job; step4: get paid from job; step5: put money in bank account; step6: Save up money to buy the Xbox; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->1","1->4","2->6","3->2","4->3","5->0"],"reference_code":"class SaveUpMoneyToBuyTheXbox:\n\n    title = \"Save up money to buy the Xbox\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Save up money to buy the Xbox\"\n\n    def step1(self):\n        return \"apply for jobs\"\n\n    def step2(self):\n        return \"get a job\"\n\n    def step3(self):\n        return \"work at job\"\n\n    def step4(self):\n        return \"get paid from job\"\n\n    def step5(self):\n        return \"put money in bank account\"\n\n    def step6(self):\n        return \"Save up money to buy the Xbox\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class SaveUpMoneyToBuyTheXbox:\n\n    title = \"Save up money to buy the Xbox\"\n    steps = 7\n\n","reference_graph":{"title":"Save up money to buy the Xbox","num_steps":7,"schema":["step0: decided to Save up money to buy the Xbox","step1: apply for jobs","step2: get a job","step3: work at job","step4: get paid from job","step5: put money in bank account","step6: Save up money to buy the Xbox"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"add party food to cart","events":{"0":"get out of car","1":"grab grocery list","2":"look for somewhere to park","3":"pull into parking spot","4":"walk towards the store","5":"drive to the store","6":"add party food to cart"},"context":"drive to the store","minutes":30.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.3333333333,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: get out of car; step1: grab grocery list; step2: look for somewhere to park; step3: pull into parking spot; step4: walk towards the store; step5: drive to the store; step6: add party food to cart","flatten_input_for_script_generation":"You want to add party food to cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the store; step1: look for somewhere to park; step2: pull into parking spot; step3: grab grocery list; step4: get out of car; step5: walk towards the store; step6: add party food to cart; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class AddPartyFoodToCart:\n\n    title = \"add party food to cart\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"look for somewhere to park\"\n\n    def step2(self):\n        return \"pull into parking spot\"\n\n    def step3(self):\n        return \"grab grocery list\"\n\n    def step4(self):\n        return \"get out of car\"\n\n    def step5(self):\n        return \"walk towards the store\"\n\n    def step6(self):\n        return \"add party food to cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AddPartyFoodToCart:\n\n    title = \"add party food to cart\"\n    steps = 7\n\n","reference_graph":{"title":"add party food to cart","num_steps":7,"schema":["step0: drive to the store","step1: look for somewhere to park","step2: pull into parking spot","step3: grab grocery list","step4: get out of car","step5: walk towards the store","step6: add party food to cart"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put pie in the oven.","events":{"0":"stir the bowl","1":"pour the ingredients onto the crust","2":"mix the ingredients in the bowl","3":"take spoon out of the bowl","4":"carry pie to oven","5":"Follow the recipe to add ingredients together.","6":"Put pie in the oven."},"context":"Follow the recipe to add ingredients together.","minutes":30.0,"events_minutes":{"0":3.0,"1":0.25,"2":1.0,"3":0.0833333333,"4":0.25},"flatten_input_for_edge_prediction":"step0: stir the bowl; step1: pour the ingredients onto the crust; step2: mix the ingredients in the bowl; step3: take spoon out of the bowl; step4: carry pie to oven; step5: Follow the recipe to add ingredients together.; step6: Put pie in the oven.","flatten_input_for_script_generation":"You want to Put pie in the oven.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Follow the recipe to add ingredients together.; step1: mix the ingredients in the bowl; step2: stir the bowl; step3: take spoon out of the bowl; step4: pour the ingredients onto the crust; step5: carry pie to oven; step6: Put pie in the oven.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class PutPieInTheOven:\n\n    title = \"Put pie in the oven.\"\n    steps = 7\n\n    def step0(self):\n        return \"Follow the recipe to add ingredients together.\"\n\n    def step1(self):\n        return \"mix the ingredients in the bowl\"\n\n    def step2(self):\n        return \"stir the bowl\"\n\n    def step3(self):\n        return \"take spoon out of the bowl\"\n\n    def step4(self):\n        return \"pour the ingredients onto the crust\"\n\n    def step5(self):\n        return \"carry pie to oven\"\n\n    def step6(self):\n        return \"Put pie in the oven.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutPieInTheOven:\n\n    title = \"Put pie in the oven.\"\n    steps = 7\n\n","reference_graph":{"title":"Put pie in the oven.","num_steps":7,"schema":["step0: Follow the recipe to add ingredients together.","step1: mix the ingredients in the bowl","step2: stir the bowl","step3: take spoon out of the bowl","step4: pour the ingredients onto the crust","step5: carry pie to oven","step6: Put pie in the oven."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Cut eye holes in box.","events":{"0":"decide to cut eyes in box","1":"move box cutter to the box","2":"determine where eyes would go","3":"grab the box cutter","4":"locate box cutter","5":"Paint box black.","6":"Cut eye holes in box."},"context":"Paint box black.","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: decide to cut eyes in box; step1: move box cutter to the box; step2: determine where eyes would go; step3: grab the box cutter; step4: locate box cutter; step5: Paint box black.; step6: Cut eye holes in box.","flatten_input_for_script_generation":"You want to Cut eye holes in box.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Paint box black.; step1: decide to cut eyes in box; step2: determine where eyes would go; step3: locate box cutter; step4: grab the box cutter; step5: move box cutter to the box; step6: Cut eye holes in box.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->1","4->3","5->0"],"reference_code":"class CutEyeHolesInBox:\n\n    title = \"Cut eye holes in box.\"\n    steps = 7\n\n    def step0(self):\n        return \"Paint box black.\"\n\n    def step1(self):\n        return \"decide to cut eyes in box\"\n\n    def step2(self):\n        return \"determine where eyes would go\"\n\n    def step3(self):\n        return \"locate box cutter\"\n\n    def step4(self):\n        return \"grab the box cutter\"\n\n    def step5(self):\n        return \"move box cutter to the box\"\n\n    def step6(self):\n        return \"Cut eye holes in box.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CutEyeHolesInBox:\n\n    title = \"Cut eye holes in box.\"\n    steps = 7\n\n","reference_graph":{"title":"Cut eye holes in box.","num_steps":7,"schema":["step0: Paint box black.","step1: decide to cut eyes in box","step2: determine where eyes would go","step3: locate box cutter","step4: grab the box cutter","step5: move box cutter to the box","step6: Cut eye holes in box."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read flyer for tryouts","events":{"0":"walk into school's locker room","1":"look up at flyer for tryouts","2":"notice flyer for tryouts up on locker room bulletin board","3":"walk over to locker room bulletin board","4":"look over at locker room bulletin board","5":"NONE","6":"read flyer for tryouts"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.6666666667,"1":0.0333333333,"2":0.0333333333,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk into school's locker room; step1: look up at flyer for tryouts; step2: notice flyer for tryouts up on locker room bulletin board; step3: walk over to locker room bulletin board; step4: look over at locker room bulletin board; step5: decided to read flyer for tryouts; step6: read flyer for tryouts","flatten_input_for_script_generation":"You want to read flyer for tryouts. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to read flyer for tryouts; step1: walk into school's locker room; step2: look over at locker room bulletin board; step3: notice flyer for tryouts up on locker room bulletin board; step4: walk over to locker room bulletin board; step5: look up at flyer for tryouts; step6: read flyer for tryouts; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class ReadFlyerForTryouts:\n\n    title = \"read flyer for tryouts\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to read flyer for tryouts\"\n\n    def step1(self):\n        return \"walk into school's locker room\"\n\n    def step2(self):\n        return \"look over at locker room bulletin board\"\n\n    def step3(self):\n        return \"notice flyer for tryouts up on locker room bulletin board\"\n\n    def step4(self):\n        return \"walk over to locker room bulletin board\"\n\n    def step5(self):\n        return \"look up at flyer for tryouts\"\n\n    def step6(self):\n        return \"read flyer for tryouts\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadFlyerForTryouts:\n\n    title = \"read flyer for tryouts\"\n    steps = 7\n\n","reference_graph":{"title":"read flyer for tryouts","num_steps":7,"schema":["step0: decided to read flyer for tryouts","step1: walk into school's locker room","step2: look over at locker room bulletin board","step3: notice flyer for tryouts up on locker room bulletin board","step4: walk over to locker room bulletin board","step5: look up at flyer for tryouts","step6: read flyer for tryouts"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Read the list of people who made the team.","events":{"0":"wait for the announcement that results are posted","1":"change into appropriate clothing","2":"walk to the list location","3":"watch others tryout","4":"go to the gym","5":"try out for the spot","6":"Stay after school to try out for the team.","7":"Read the list of people who made the team."},"context":"Stay after school to try out for the team.","minutes":2.0,"events_minutes":{"0":30.0,"1":5.0,"2":5.0,"3":45.0,"4":2.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: wait for the announcement that results are posted; step1: change into appropriate clothing; step2: walk to the list location; step3: watch others tryout; step4: go to the gym; step5: try out for the spot; step6: Stay after school to try out for the team.; step7: Read the list of people who made the team.","flatten_input_for_script_generation":"You want to Read the list of people who made the team.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step4 -> step3; step1 -> step5; step5 -> step0; step3 -> step0; step0 -> step2; step2 -> step7; step6 -> step4; step6 -> step1","flatten_output_for_script_generation":"step0: Stay after school to try out for the team.; step1: change into appropriate clothing; step2: go to the gym; step3: try out for the spot; step4: watch others tryout; step5: wait for the announcement that results are posted; step6: walk to the list location; step7: Read the list of people who made the team.; step0 -> step1; step0 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step1 -> step3; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->5","2->7","3->0","4->5","4->3","5->0","6->4","6->1"],"reference_code":"class ReadTheListOfPeopleWhoMadeTheTeam:\n\n    title = \"Read the list of people who made the team.\"\n    steps = 8\n\n    def step0(self):\n        return \"Stay after school to try out for the team.\"\n\n    def step1(self):\n        return \"change into appropriate clothing\"\n\n    def step2(self):\n        return \"go to the gym\"\n\n    def step3(self):\n        return \"try out for the spot\"\n\n    def step4(self):\n        return \"watch others tryout\"\n\n    def step5(self):\n        return \"wait for the announcement that results are posted\"\n\n    def step6(self):\n        return \"walk to the list location\"\n\n    def step7(self):\n        return \"Read the list of people who made the team.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ReadTheListOfPeopleWhoMadeTheTeam:\n\n    title = \"Read the list of people who made the team.\"\n    steps = 8\n\n","reference_graph":{"title":"Read the list of people who made the team.","num_steps":8,"schema":["step0: Stay after school to try out for the team.","step1: change into appropriate clothing","step2: go to the gym","step3: try out for the spot","step4: watch others tryout","step5: wait for the announcement that results are posted","step6: walk to the list location","step7: Read the list of people who made the team."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step1 -> step3","step5 -> step6","step6 -> step7"]}}
{"scenario":"walk to the washing machine","events":{"0":"get bleach to use","1":"Put dark colors separate.","2":"sort the clothes","3":"bring soap to use","4":"put whites separate.","5":"grab the bag of dirty clothes","6":"walk to the washing machine"},"context":"grab the bag of dirty clothes","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: get bleach to use; step1: Put dark colors separate.; step2: sort the clothes; step3: bring soap to use; step4: put whites separate.; step5: grab the bag of dirty clothes; step6: walk to the washing machine","flatten_input_for_script_generation":"You want to walk to the washing machine. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step2 -> step1; step4 -> step6; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: grab the bag of dirty clothes; step1: sort the clothes; step2: put whites separate.; step3: Put dark colors separate.; step4: walk to the washing machine; step5: bring soap to use; step6: get bleach to use; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step5 -> step6; step6 -> step4","gold_edges_for_prediction":["0->6","1->3","2->4","2->1","3->0","4->6","5->2"],"reference_code":"class WalkToTheWashingMachine:\n\n    title = \"walk to the washing machine\"\n    steps = 7\n\n    def step0(self):\n        return \"grab the bag of dirty clothes\"\n\n    def step1(self):\n        return \"sort the clothes\"\n\n    def step2(self):\n        return \"put whites separate.\"\n\n    def step3(self):\n        return \"Put dark colors separate.\"\n\n    def step4(self):\n        return \"walk to the washing machine\"\n\n    def step5(self):\n        return \"bring soap to use\"\n\n    def step6(self):\n        return \"get bleach to use\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class WalkToTheWashingMachine:\n\n    title = \"walk to the washing machine\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the washing machine","num_steps":7,"schema":["step0: grab the bag of dirty clothes","step1: sort the clothes","step2: put whites separate.","step3: Put dark colors separate.","step4: walk to the washing machine","step5: bring soap to use","step6: get bleach to use"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step5 -> step6","step6 -> step4"]}}
{"scenario":"go back home","events":{"0":"get in the car.","1":"walk to the car.","2":"leave the store with the equipment.","3":"start the car.","4":"load the equipment in the car.","5":"buy rafting equipment","6":"go back home"},"context":"buy rafting equipment","minutes":30.0,"events_minutes":{"0":0.3333333333,"1":1.0,"2":1.0,"3":0.1666666667,"4":3.0},"flatten_input_for_edge_prediction":"step0: get in the car.; step1: walk to the car.; step2: leave the store with the equipment.; step3: start the car.; step4: load the equipment in the car.; step5: buy rafting equipment; step6: go back home","flatten_input_for_script_generation":"You want to go back home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: buy rafting equipment; step1: leave the store with the equipment.; step2: walk to the car.; step3: load the equipment in the car.; step4: get in the car.; step5: start the car.; step6: go back home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->6","4->0","5->2"],"reference_code":"class GoBackHome:\n\n    title = \"go back home\"\n    steps = 7\n\n    def step0(self):\n        return \"buy rafting equipment\"\n\n    def step1(self):\n        return \"leave the store with the equipment.\"\n\n    def step2(self):\n        return \"walk to the car.\"\n\n    def step3(self):\n        return \"load the equipment in the car.\"\n\n    def step4(self):\n        return \"get in the car.\"\n\n    def step5(self):\n        return \"start the car.\"\n\n    def step6(self):\n        return \"go back home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoBackHome:\n\n    title = \"go back home\"\n    steps = 7\n\n","reference_graph":{"title":"go back home","num_steps":7,"schema":["step0: buy rafting equipment","step1: leave the store with the equipment.","step2: walk to the car.","step3: load the equipment in the car.","step4: get in the car.","step5: start the car.","step6: go back home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a SIM card","events":{"0":"turn the computer on","1":"wait for SIM card to arrive","2":"purchase new SIM card","3":"go to the computer","4":"go on the internet","5":"NONE","6":"get a SIM card"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":2880.0,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: turn the computer on; step1: wait for SIM card to arrive; step2: purchase new SIM card; step3: go to the computer; step4: go on the internet; step5: decided to get a SIM card; step6: get a SIM card","flatten_input_for_script_generation":"You want to get a SIM card. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get a SIM card; step1: go to the computer; step2: turn the computer on; step3: go on the internet; step4: purchase new SIM card; step5: wait for SIM card to arrive; step6: get a SIM card; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->0","4->2","5->3"],"reference_code":"class GetASimCard:\n\n    title = \"get a SIM card\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get a SIM card\"\n\n    def step1(self):\n        return \"go to the computer\"\n\n    def step2(self):\n        return \"turn the computer on\"\n\n    def step3(self):\n        return \"go on the internet\"\n\n    def step4(self):\n        return \"purchase new SIM card\"\n\n    def step5(self):\n        return \"wait for SIM card to arrive\"\n\n    def step6(self):\n        return \"get a SIM card\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetASimCard:\n\n    title = \"get a SIM card\"\n    steps = 7\n\n","reference_graph":{"title":"get a SIM card","num_steps":7,"schema":["step0: decided to get a SIM card","step1: go to the computer","step2: turn the computer on","step3: go on the internet","step4: purchase new SIM card","step5: wait for SIM card to arrive","step6: get a SIM card"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sit down at desk and plan out costs.","events":{"0":"decide on length of vacation","1":"determine attraction prices","2":"find out hotel price","3":"look up hotel locations","4":"look up attractions","5":"calculate total hotel costs","6":"Choose desired location.","7":"Sit down at desk and plan out costs."},"context":"Choose desired location.","minutes":30.0,"events_minutes":{"0":15.0,"1":15.0,"2":5.0,"3":15.0,"4":15.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: decide on length of vacation; step1: determine attraction prices; step2: find out hotel price; step3: look up hotel locations; step4: look up attractions; step5: calculate total hotel costs; step6: Choose desired location.; step7: Sit down at desk and plan out costs.","flatten_input_for_script_generation":"You want to Sit down at desk and plan out costs.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step0 -> step4; step3 -> step2; step2 -> step5; step5 -> step7; step4 -> step1; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Choose desired location.; step1: decide on length of vacation; step2: look up hotel locations; step3: look up attractions; step4: find out hotel price; step5: determine attraction prices; step6: calculate total hotel costs; step7: Sit down at desk and plan out costs.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step5 -> step7","gold_edges_for_prediction":["0->3","0->4","1->7","2->5","3->2","4->1","5->7","6->0"],"reference_code":"class SitDownAtDeskAndPlanOutCosts:\n\n    title = \"Sit down at desk and plan out costs.\"\n    steps = 8\n\n    def step0(self):\n        return \"Choose desired location.\"\n\n    def step1(self):\n        return \"decide on length of vacation\"\n\n    def step2(self):\n        return \"look up hotel locations\"\n\n    def step3(self):\n        return \"look up attractions\"\n\n    def step4(self):\n        return \"find out hotel price\"\n\n    def step5(self):\n        return \"determine attraction prices\"\n\n    def step6(self):\n        return \"calculate total hotel costs\"\n\n    def step7(self):\n        return \"Sit down at desk and plan out costs.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step5 -> step7\",\n        ]\n","input_prompt_code":"class SitDownAtDeskAndPlanOutCosts:\n\n    title = \"Sit down at desk and plan out costs.\"\n    steps = 8\n\n","reference_graph":{"title":"Sit down at desk and plan out costs.","num_steps":8,"schema":["step0: Choose desired location.","step1: decide on length of vacation","step2: look up hotel locations","step3: look up attractions","step4: find out hotel price","step5: determine attraction prices","step6: calculate total hotel costs","step7: Sit down at desk and plan out costs."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step5 -> step7"]}}
{"scenario":"purchase some cake","events":{"0":"go to the checkout","1":"pull out money","2":"walk down the asiles","3":"grab a basket","4":"grab the cake mix","5":"go in the store","6":"purchase some cake"},"context":"go in the store","minutes":10.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: go to the checkout; step1: pull out money; step2: walk down the asiles; step3: grab a basket; step4: grab the cake mix; step5: go in the store; step6: purchase some cake","flatten_input_for_script_generation":"You want to purchase some cake. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step1 -> step6; step2 -> step4; step4 -> step0; step0 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: go in the store; step1: grab a basket; step2: walk down the asiles; step3: grab the cake mix; step4: pull out money; step5: purchase some cake; step6: go to the checkout; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step3 -> step6; step6 -> step4","gold_edges_for_prediction":["0->1","1->6","2->4","3->2","4->0","5->3"],"reference_code":"class PurchaseSomeCake:\n\n    title = \"purchase some cake\"\n    steps = 7\n\n    def step0(self):\n        return \"go in the store\"\n\n    def step1(self):\n        return \"grab a basket\"\n\n    def step2(self):\n        return \"walk down the asiles\"\n\n    def step3(self):\n        return \"grab the cake mix\"\n\n    def step4(self):\n        return \"pull out money\"\n\n    def step5(self):\n        return \"purchase some cake\"\n\n    def step6(self):\n        return \"go to the checkout\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step3 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class PurchaseSomeCake:\n\n    title = \"purchase some cake\"\n    steps = 7\n\n","reference_graph":{"title":"purchase some cake","num_steps":7,"schema":["step0: go in the store","step1: grab a basket","step2: walk down the asiles","step3: grab the cake mix","step4: pull out money","step5: purchase some cake","step6: go to the checkout"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step3 -> step6","step6 -> step4"]}}
{"scenario":"develop a roster","events":{"0":"Confer with colleagues.","1":"Pick the top candidates.","2":"Spend time with each interviewee","3":"Ask quality questions.","4":"Start to make offer calls.","5":"begin doing interviews","6":"develop a roster"},"context":"begin doing interviews","minutes":60.0,"events_minutes":{"0":60.0,"1":60.0,"2":180.0,"3":10.0,"4":120.0},"flatten_input_for_edge_prediction":"step0: Confer with colleagues.; step1: Pick the top candidates.; step2: Spend time with each interviewee; step3: Ask quality questions.; step4: Start to make offer calls.; step5: begin doing interviews; step6: develop a roster","flatten_input_for_script_generation":"You want to develop a roster. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: begin doing interviews; step1: Spend time with each interviewee; step2: Ask quality questions.; step3: Confer with colleagues.; step4: Pick the top candidates.; step5: Start to make offer calls.; step6: develop a roster; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->0","4->6","5->3","5->2"],"reference_code":"class DevelopARoster:\n\n    title = \"develop a roster\"\n    steps = 7\n\n    def step0(self):\n        return \"begin doing interviews\"\n\n    def step1(self):\n        return \"Spend time with each interviewee\"\n\n    def step2(self):\n        return \"Ask quality questions.\"\n\n    def step3(self):\n        return \"Confer with colleagues.\"\n\n    def step4(self):\n        return \"Pick the top candidates.\"\n\n    def step5(self):\n        return \"Start to make offer calls.\"\n\n    def step6(self):\n        return \"develop a roster\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DevelopARoster:\n\n    title = \"develop a roster\"\n    steps = 7\n\n","reference_graph":{"title":"develop a roster","num_steps":7,"schema":["step0: begin doing interviews","step1: Spend time with each interviewee","step2: Ask quality questions.","step3: Confer with colleagues.","step4: Pick the top candidates.","step5: Start to make offer calls.","step6: develop a roster"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy some juggling balls","events":{"0":"read reviews for best balls","1":"decide on best pair of fat balls","2":"go to checkout enter details","3":"locate juggling ball section","4":"look around website","5":"go to amazon.com","6":"buy some juggling balls"},"context":"go to amazon.com","minutes":5.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: read reviews for best balls; step1: decide on best pair of fat balls; step2: go to checkout enter details; step3: locate juggling ball section; step4: look around website; step5: go to amazon.com; step6: buy some juggling balls","flatten_input_for_script_generation":"You want to buy some juggling balls. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: go to amazon.com; step1: look around website; step2: locate juggling ball section; step3: read reviews for best balls; step4: decide on best pair of fat balls; step5: go to checkout enter details; step6: buy some juggling balls; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->0","4->3","5->4"],"reference_code":"class BuySomeJugglingBalls:\n\n    title = \"buy some juggling balls\"\n    steps = 7\n\n    def step0(self):\n        return \"go to amazon.com\"\n\n    def step1(self):\n        return \"look around website\"\n\n    def step2(self):\n        return \"locate juggling ball section\"\n\n    def step3(self):\n        return \"read reviews for best balls\"\n\n    def step4(self):\n        return \"decide on best pair of fat balls\"\n\n    def step5(self):\n        return \"go to checkout enter details\"\n\n    def step6(self):\n        return \"buy some juggling balls\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuySomeJugglingBalls:\n\n    title = \"buy some juggling balls\"\n    steps = 7\n\n","reference_graph":{"title":"buy some juggling balls","num_steps":7,"schema":["step0: go to amazon.com","step1: look around website","step2: locate juggling ball section","step3: read reviews for best balls","step4: decide on best pair of fat balls","step5: go to checkout enter details","step6: buy some juggling balls"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in car","events":{"0":"sit in the seat","1":"unlock the car","2":"open the door","3":"close the dooor","4":"lock the car","5":"look up local beaches","6":"get in car"},"context":"look up local beaches","minutes":3.0,"events_minutes":{"0":0.1666666667,"1":0.5,"2":0.1666666667,"3":0.1666666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: sit in the seat; step1: unlock the car; step2: open the door; step3: close the dooor; step4: lock the car; step5: look up local beaches; step6: get in car","flatten_input_for_script_generation":"You want to get in car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: look up local beaches; step1: unlock the car; step2: open the door; step3: sit in the seat; step4: close the dooor; step5: lock the car; step6: get in car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->4","4->6","5->1"],"reference_code":"class GetInCar:\n\n    title = \"get in car\"\n    steps = 7\n\n    def step0(self):\n        return \"look up local beaches\"\n\n    def step1(self):\n        return \"unlock the car\"\n\n    def step2(self):\n        return \"open the door\"\n\n    def step3(self):\n        return \"sit in the seat\"\n\n    def step4(self):\n        return \"close the dooor\"\n\n    def step5(self):\n        return \"lock the car\"\n\n    def step6(self):\n        return \"get in car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInCar:\n\n    title = \"get in car\"\n    steps = 7\n\n","reference_graph":{"title":"get in car","num_steps":7,"schema":["step0: look up local beaches","step1: unlock the car","step2: open the door","step3: sit in the seat","step4: close the dooor","step5: lock the car","step6: get in car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk toward the building","events":{"0":"Put left foot forward.","1":"Turn toward building.","2":"Put right foot forward.","3":"Continue to alternate between feet.","4":"Decide on direction.","5":"NONE","6":"walk toward the building"},"context":"NONE","minutes":3.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Put left foot forward.; step1: Turn toward building.; step2: Put right foot forward.; step3: Continue to alternate between feet.; step4: Decide on direction.; step5: decided to walk toward the building; step6: walk toward the building","flatten_input_for_script_generation":"You want to walk toward the building. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step1 -> step2; step4 -> step1; step0 -> step3; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to walk toward the building; step1: Decide on direction.; step2: Turn toward building.; step3: Put left foot forward.; step4: Put right foot forward.; step5: Continue to alternate between feet.; step6: walk toward the building; step0 -> step1; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step1 -> step2; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","1->2","2->3","3->6","4->1","5->4"],"reference_code":"class WalkTowardTheBuilding:\n\n    title = \"walk toward the building\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to walk toward the building\"\n\n    def step1(self):\n        return \"Decide on direction.\"\n\n    def step2(self):\n        return \"Turn toward building.\"\n\n    def step3(self):\n        return \"Put left foot forward.\"\n\n    def step4(self):\n        return \"Put right foot forward.\"\n\n    def step5(self):\n        return \"Continue to alternate between feet.\"\n\n    def step6(self):\n        return \"walk toward the building\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkTowardTheBuilding:\n\n    title = \"walk toward the building\"\n    steps = 7\n\n","reference_graph":{"title":"walk toward the building","num_steps":7,"schema":["step0: decided to walk toward the building","step1: Decide on direction.","step2: Turn toward building.","step3: Put left foot forward.","step4: Put right foot forward.","step5: Continue to alternate between feet.","step6: walk toward the building"],"relations":["step0 -> step1","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step1 -> step2","step5 -> step6"]}}
{"scenario":"Make sure to have supplies","events":{"0":"receive list of necessary supplies","1":"make shopping list for needed items","2":"cross off items already in possession","3":"leave for the art supplies store","4":"go home to check inventory","5":"Find the classes and pay money","6":"Make sure to have supplies"},"context":"Find the classes and pay money","minutes":30.0,"events_minutes":{"0":1.0,"1":5.0,"2":2.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: receive list of necessary supplies; step1: make shopping list for needed items; step2: cross off items already in possession; step3: leave for the art supplies store; step4: go home to check inventory; step5: Find the classes and pay money; step6: Make sure to have supplies","flatten_input_for_script_generation":"You want to Make sure to have supplies. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Find the classes and pay money; step1: receive list of necessary supplies; step2: go home to check inventory; step3: cross off items already in possession; step4: make shopping list for needed items; step5: leave for the art supplies store; step6: Make sure to have supplies; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->6","4->2","5->0"],"reference_code":"class MakeSureToHaveSupplies:\n\n    title = \"Make sure to have supplies\"\n    steps = 7\n\n    def step0(self):\n        return \"Find the classes and pay money\"\n\n    def step1(self):\n        return \"receive list of necessary supplies\"\n\n    def step2(self):\n        return \"go home to check inventory\"\n\n    def step3(self):\n        return \"cross off items already in possession\"\n\n    def step4(self):\n        return \"make shopping list for needed items\"\n\n    def step5(self):\n        return \"leave for the art supplies store\"\n\n    def step6(self):\n        return \"Make sure to have supplies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeSureToHaveSupplies:\n\n    title = \"Make sure to have supplies\"\n    steps = 7\n\n","reference_graph":{"title":"Make sure to have supplies","num_steps":7,"schema":["step0: Find the classes and pay money","step1: receive list of necessary supplies","step2: go home to check inventory","step3: cross off items already in possession","step4: make shopping list for needed items","step5: leave for the art supplies store","step6: Make sure to have supplies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to the kitchen","events":{"0":"Find kitchen entrance.","1":"Walk to nearest hallway lights.","2":"Switch lights to on position.","3":"Decide to go to kitchen.","4":"Walk down hallway","5":"leave the bedroom","6":"walk to the kitchen"},"context":"leave the bedroom","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.1666666667,"2":0.0166666667,"3":0.0333333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: Find kitchen entrance.; step1: Walk to nearest hallway lights.; step2: Switch lights to on position.; step3: Decide to go to kitchen.; step4: Walk down hallway; step5: leave the bedroom; step6: walk to the kitchen","flatten_input_for_script_generation":"You want to walk to the kitchen. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: leave the bedroom; step1: Decide to go to kitchen.; step2: Walk to nearest hallway lights.; step3: Switch lights to on position.; step4: Walk down hallway; step5: Find kitchen entrance.; step6: walk to the kitchen; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->1","4->0","5->3"],"reference_code":"class WalkToTheKitchen:\n\n    title = \"walk to the kitchen\"\n    steps = 7\n\n    def step0(self):\n        return \"leave the bedroom\"\n\n    def step1(self):\n        return \"Decide to go to kitchen.\"\n\n    def step2(self):\n        return \"Walk to nearest hallway lights.\"\n\n    def step3(self):\n        return \"Switch lights to on position.\"\n\n    def step4(self):\n        return \"Walk down hallway\"\n\n    def step5(self):\n        return \"Find kitchen entrance.\"\n\n    def step6(self):\n        return \"walk to the kitchen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheKitchen:\n\n    title = \"walk to the kitchen\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the kitchen","num_steps":7,"schema":["step0: leave the bedroom","step1: Decide to go to kitchen.","step2: Walk to nearest hallway lights.","step3: Switch lights to on position.","step4: Walk down hallway","step5: Find kitchen entrance.","step6: walk to the kitchen"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get inside car","events":{"0":"Pull on the handle.","1":"Unlock the car.","2":"Grasp the handle.","3":"Continue to pull and open the car door.","4":"Reach for the door handle.","5":"NONE","6":"get inside car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":10.0,"1":0.3333333333,"2":0.1666666667,"3":10.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Pull on the handle.; step1: Unlock the car.; step2: Grasp the handle.; step3: Continue to pull and open the car door.; step4: Reach for the door handle.; step5: decided to get inside car; step6: get inside car","flatten_input_for_script_generation":"You want to get inside car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to get inside car; step1: Unlock the car.; step2: Reach for the door handle.; step3: Grasp the handle.; step4: Pull on the handle.; step5: Continue to pull and open the car door.; step6: get inside car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class GetInsideCar:\n\n    title = \"get inside car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get inside car\"\n\n    def step1(self):\n        return \"Unlock the car.\"\n\n    def step2(self):\n        return \"Reach for the door handle.\"\n\n    def step3(self):\n        return \"Grasp the handle.\"\n\n    def step4(self):\n        return \"Pull on the handle.\"\n\n    def step5(self):\n        return \"Continue to pull and open the car door.\"\n\n    def step6(self):\n        return \"get inside car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInsideCar:\n\n    title = \"get inside car\"\n    steps = 7\n\n","reference_graph":{"title":"get inside car","num_steps":7,"schema":["step0: decided to get inside car","step1: Unlock the car.","step2: Reach for the door handle.","step3: Grasp the handle.","step4: Pull on the handle.","step5: Continue to pull and open the car door.","step6: get inside car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"book a flight","events":{"0":"book the flight","1":"talk to the person","2":"dial the phone","3":"ask price of flight","4":"make payment for the tockets","5":"search for flights to an exotic country","6":"book a flight"},"context":"search for flights to an exotic country","minutes":20.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":0.5,"4":1.0},"flatten_input_for_edge_prediction":"step0: book the flight; step1: talk to the person; step2: dial the phone; step3: ask price of flight; step4: make payment for the tockets; step5: search for flights to an exotic country; step6: book a flight","flatten_input_for_script_generation":"You want to book a flight. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: search for flights to an exotic country; step1: dial the phone; step2: talk to the person; step3: ask price of flight; step4: make payment for the tockets; step5: book the flight; step6: book a flight; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->4","4->0","5->2"],"reference_code":"class BookAFlight:\n\n    title = \"book a flight\"\n    steps = 7\n\n    def step0(self):\n        return \"search for flights to an exotic country\"\n\n    def step1(self):\n        return \"dial the phone\"\n\n    def step2(self):\n        return \"talk to the person\"\n\n    def step3(self):\n        return \"ask price of flight\"\n\n    def step4(self):\n        return \"make payment for the tockets\"\n\n    def step5(self):\n        return \"book the flight\"\n\n    def step6(self):\n        return \"book a flight\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BookAFlight:\n\n    title = \"book a flight\"\n    steps = 7\n\n","reference_graph":{"title":"book a flight","num_steps":7,"schema":["step0: search for flights to an exotic country","step1: dial the phone","step2: talk to the person","step3: ask price of flight","step4: make payment for the tockets","step5: book the flight","step6: book a flight"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter the store","events":{"0":"find a parking spot","1":"walk to the front entrance","2":"turn off the car","3":"exit the car","4":"enter the parking lot","5":"drive to store","6":"enter the store"},"context":"drive to store","minutes":3.0,"events_minutes":{"0":1.0,"1":0.25,"2":0.25,"3":0.25,"4":1.0},"flatten_input_for_edge_prediction":"step0: find a parking spot; step1: walk to the front entrance; step2: turn off the car; step3: exit the car; step4: enter the parking lot; step5: drive to store; step6: enter the store","flatten_input_for_script_generation":"You want to enter the store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: drive to store; step1: enter the parking lot; step2: find a parking spot; step3: turn off the car; step4: exit the car; step5: walk to the front entrance; step6: enter the store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->1","4->0","5->4"],"reference_code":"class EnterTheStore:\n\n    title = \"enter the store\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to store\"\n\n    def step1(self):\n        return \"enter the parking lot\"\n\n    def step2(self):\n        return \"find a parking spot\"\n\n    def step3(self):\n        return \"turn off the car\"\n\n    def step4(self):\n        return \"exit the car\"\n\n    def step5(self):\n        return \"walk to the front entrance\"\n\n    def step6(self):\n        return \"enter the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheStore:\n\n    title = \"enter the store\"\n    steps = 7\n\n","reference_graph":{"title":"enter the store","num_steps":7,"schema":["step0: drive to store","step1: enter the parking lot","step2: find a parking spot","step3: turn off the car","step4: exit the car","step5: walk to the front entrance","step6: enter the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make final choice from options","events":{"0":"Check for any damages on the final pick","1":"Pick the most appealing one","2":"Try another ring with a different color","3":"Try another ring with a different shape","4":"Repeat steps 1 and 2","5":"try on for size and adjust accordingly","6":"make final choice from options"},"context":"try on for size and adjust accordingly","minutes":5.0,"events_minutes":{"0":0.5,"1":0.5,"2":1.0,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Check for any damages on the final pick; step1: Pick the most appealing one; step2: Try another ring with a different color; step3: Try another ring with a different shape; step4: Repeat steps 1 and 2; step5: try on for size and adjust accordingly; step6: make final choice from options","flatten_input_for_script_generation":"You want to make final choice from options. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: try on for size and adjust accordingly; step1: Try another ring with a different color; step2: Try another ring with a different shape; step3: Repeat steps 1 and 2; step4: Pick the most appealing one; step5: Check for any damages on the final pick; step6: make final choice from options; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->4","4->1","5->2"],"reference_code":"class MakeFinalChoiceFromOptions:\n\n    title = \"make final choice from options\"\n    steps = 7\n\n    def step0(self):\n        return \"try on for size and adjust accordingly\"\n\n    def step1(self):\n        return \"Try another ring with a different color\"\n\n    def step2(self):\n        return \"Try another ring with a different shape\"\n\n    def step3(self):\n        return \"Repeat steps 1 and 2\"\n\n    def step4(self):\n        return \"Pick the most appealing one\"\n\n    def step5(self):\n        return \"Check for any damages on the final pick\"\n\n    def step6(self):\n        return \"make final choice from options\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeFinalChoiceFromOptions:\n\n    title = \"make final choice from options\"\n    steps = 7\n\n","reference_graph":{"title":"make final choice from options","num_steps":7,"schema":["step0: try on for size and adjust accordingly","step1: Try another ring with a different color","step2: Try another ring with a different shape","step3: Repeat steps 1 and 2","step4: Pick the most appealing one","step5: Check for any damages on the final pick","step6: make final choice from options"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"fill coffee pot with water","events":{"0":"grab the coffee pot","1":"make sure no coffee grounds are stuck to the pot","2":"turn on the water","3":"rinse the coffee pot","4":"walk to the sink","5":"NONE","6":"fill coffee pot with water"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab the coffee pot; step1: make sure no coffee grounds are stuck to the pot; step2: turn on the water; step3: rinse the coffee pot; step4: walk to the sink; step5: decided to fill coffee pot with water; step6: fill coffee pot with water","flatten_input_for_script_generation":"You want to fill coffee pot with water. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step2 -> step1; step3 -> step6; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to fill coffee pot with water; step1: grab the coffee pot; step2: walk to the sink; step3: turn on the water; step4: rinse the coffee pot; step5: make sure no coffee grounds are stuck to the pot; step6: fill coffee pot with water; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","2->1","3->6","4->2","5->0"],"reference_code":"class FillCoffeePotWithWater:\n\n    title = \"fill coffee pot with water\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to fill coffee pot with water\"\n\n    def step1(self):\n        return \"grab the coffee pot\"\n\n    def step2(self):\n        return \"walk to the sink\"\n\n    def step3(self):\n        return \"turn on the water\"\n\n    def step4(self):\n        return \"rinse the coffee pot\"\n\n    def step5(self):\n        return \"make sure no coffee grounds are stuck to the pot\"\n\n    def step6(self):\n        return \"fill coffee pot with water\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillCoffeePotWithWater:\n\n    title = \"fill coffee pot with water\"\n    steps = 7\n\n","reference_graph":{"title":"fill coffee pot with water","num_steps":7,"schema":["step0: decided to fill coffee pot with water","step1: grab the coffee pot","step2: walk to the sink","step3: turn on the water","step4: rinse the coffee pot","step5: make sure no coffee grounds are stuck to the pot","step6: fill coffee pot with water"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"pull into available parking spot","1":"look for available parking spot","2":"drive over to available parking spot","3":"pull into baseball park's parking lot","4":"notice available parking spot","5":"stop the car","6":"drive to the baseball game","7":"park the car"},"context":"drive to the baseball game","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":1.0,"2":0.1666666667,"3":0.3333333333,"4":0.0333333333,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: pull into available parking spot; step1: look for available parking spot; step2: drive over to available parking spot; step3: pull into baseball park's parking lot; step4: notice available parking spot; step5: stop the car; step6: drive to the baseball game; step7: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step5; step5 -> step7; step6 -> step3","flatten_output_for_script_generation":"step0: drive to the baseball game; step1: pull into baseball park's parking lot; step2: look for available parking spot; step3: notice available parking spot; step4: drive over to available parking spot; step5: pull into available parking spot; step6: stop the car; step7: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->0","3->1","4->2","5->7","6->3"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to the baseball game\"\n\n    def step1(self):\n        return \"pull into baseball park's parking lot\"\n\n    def step2(self):\n        return \"look for available parking spot\"\n\n    def step3(self):\n        return \"notice available parking spot\"\n\n    def step4(self):\n        return \"drive over to available parking spot\"\n\n    def step5(self):\n        return \"pull into available parking spot\"\n\n    def step6(self):\n        return \"stop the car\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n","reference_graph":{"title":"park the car","num_steps":8,"schema":["step0: drive to the baseball game","step1: pull into baseball park's parking lot","step2: look for available parking spot","step3: notice available parking spot","step4: drive over to available parking spot","step5: pull into available parking spot","step6: stop the car","step7: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Put ingredients on kitchen counter","events":{"0":"get out of the car","1":"switch off the engine","2":"Drive to the parking lot.","3":"park the car","4":"walk to the house.","5":"carry the grocery","6":"Drive back home","7":"Put ingredients on kitchen counter"},"context":"Drive back home","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: get out of the car; step1: switch off the engine; step2: Drive to the parking lot.; step3: park the car; step4: walk to the house.; step5: carry the grocery; step6: Drive back home; step7: Put ingredients on kitchen counter","flatten_input_for_script_generation":"You want to Put ingredients on kitchen counter. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step5; step5 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: Drive back home; step1: Drive to the parking lot.; step2: park the car; step3: switch off the engine; step4: get out of the car; step5: carry the grocery; step6: walk to the house.; step7: Put ingredients on kitchen counter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->0","2->3","3->1","4->7","5->4","6->2"],"reference_code":"class PutIngredientsOnKitchenCounter:\n\n    title = \"Put ingredients on kitchen counter\"\n    steps = 8\n\n    def step0(self):\n        return \"Drive back home\"\n\n    def step1(self):\n        return \"Drive to the parking lot.\"\n\n    def step2(self):\n        return \"park the car\"\n\n    def step3(self):\n        return \"switch off the engine\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"carry the grocery\"\n\n    def step6(self):\n        return \"walk to the house.\"\n\n    def step7(self):\n        return \"Put ingredients on kitchen counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PutIngredientsOnKitchenCounter:\n\n    title = \"Put ingredients on kitchen counter\"\n    steps = 8\n\n","reference_graph":{"title":"Put ingredients on kitchen counter","num_steps":8,"schema":["step0: Drive back home","step1: Drive to the parking lot.","step2: park the car","step3: switch off the engine","step4: get out of the car","step5: carry the grocery","step6: walk to the house.","step7: Put ingredients on kitchen counter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get in the car","events":{"0":"pull the handle forward to open the door","1":"close car door","2":"approach the car","3":"unlock the car door","4":"take out the key to the car","5":"bend down to sit in vehicle's seat","6":"grab onto the car door handle","7":"NONE","8":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.0333333333,"1":0.0666666667,"2":0.1666666667,"3":0.0166666667,"4":0.0166666667,"5":0.0666666667,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: pull the handle forward to open the door; step1: close car door; step2: approach the car; step3: unlock the car door; step4: take out the key to the car; step5: bend down to sit in vehicle's seat; step6: grab onto the car door handle; step7: decided to get in the car; step8: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step6; step6 -> step0; step0 -> step5; step5 -> step1; step1 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: decided to get in the car; step1: approach the car; step2: take out the key to the car; step3: unlock the car door; step4: grab onto the car door handle; step5: pull the handle forward to open the door; step6: bend down to sit in vehicle's seat; step7: close car door; step8: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->8","2->4","3->6","4->3","5->1","6->0","7->2"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"approach the car\"\n\n    def step2(self):\n        return \"take out the key to the car\"\n\n    def step3(self):\n        return \"unlock the car door\"\n\n    def step4(self):\n        return \"grab onto the car door handle\"\n\n    def step5(self):\n        return \"pull the handle forward to open the door\"\n\n    def step6(self):\n        return \"bend down to sit in vehicle's seat\"\n\n    def step7(self):\n        return \"close car door\"\n\n    def step8(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 9\n\n","reference_graph":{"title":"get in the car","num_steps":9,"schema":["step0: decided to get in the car","step1: approach the car","step2: take out the key to the car","step3: unlock the car door","step4: grab onto the car door handle","step5: pull the handle forward to open the door","step6: bend down to sit in vehicle's seat","step7: close car door","step8: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"enter the building","events":{"0":"Park the car in a parking spot.","1":"Look for parking lot.","2":"Find the building.","3":"Walk to building entrance.","4":"Get out of car.","5":"drive to lessons","6":"enter the building"},"context":"drive to lessons","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":3.0,"3":1.0,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: Park the car in a parking spot.; step1: Look for parking lot.; step2: Find the building.; step3: Walk to building entrance.; step4: Get out of car.; step5: drive to lessons; step6: enter the building","flatten_input_for_script_generation":"You want to enter the building. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to lessons; step1: Find the building.; step2: Look for parking lot.; step3: Park the car in a parking spot.; step4: Get out of car.; step5: Walk to building entrance.; step6: enter the building; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->6","4->3","5->2"],"reference_code":"class EnterTheBuilding:\n\n    title = \"enter the building\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to lessons\"\n\n    def step1(self):\n        return \"Find the building.\"\n\n    def step2(self):\n        return \"Look for parking lot.\"\n\n    def step3(self):\n        return \"Park the car in a parking spot.\"\n\n    def step4(self):\n        return \"Get out of car.\"\n\n    def step5(self):\n        return \"Walk to building entrance.\"\n\n    def step6(self):\n        return \"enter the building\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheBuilding:\n\n    title = \"enter the building\"\n    steps = 7\n\n","reference_graph":{"title":"enter the building","num_steps":7,"schema":["step0: drive to lessons","step1: Find the building.","step2: Look for parking lot.","step3: Park the car in a parking spot.","step4: Get out of car.","step5: Walk to building entrance.","step6: enter the building"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"mix the dry ingredients","events":{"0":"put the spoon or whisk into the bowl.","1":"take out a bowl.","2":"pour the dry ingredients into the bowl.","3":"go to the cabinet.","4":"go to the drawer.","5":"take out a wooden spoon or whisk.","6":"measure out the ingredients.","7":"mix the dry ingredients"},"context":"measure out the ingredients.","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: put the spoon or whisk into the bowl.; step1: take out a bowl.; step2: pour the dry ingredients into the bowl.; step3: go to the cabinet.; step4: go to the drawer.; step5: take out a wooden spoon or whisk.; step6: measure out the ingredients.; step7: mix the dry ingredients","flatten_input_for_script_generation":"You want to mix the dry ingredients. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step5 -> step2; step4 -> step5; step3 -> step1; step2 -> step0; step0 -> step7; step6 -> step4; step6 -> step3","flatten_output_for_script_generation":"step0: measure out the ingredients.; step1: go to the cabinet.; step2: take out a bowl.; step3: pour the dry ingredients into the bowl.; step4: put the spoon or whisk into the bowl.; step5: take out a wooden spoon or whisk.; step6: go to the drawer.; step7: mix the dry ingredients; step0 -> step1; step0 -> step6; step2 -> step3; step3 -> step4; step5 -> step3; step6 -> step5; step1 -> step2; step4 -> step7","gold_edges_for_prediction":["0->7","1->2","2->0","3->1","4->5","5->2","6->4","6->3"],"reference_code":"class MixTheDryIngredients:\n\n    title = \"mix the dry ingredients\"\n    steps = 8\n\n    def step0(self):\n        return \"measure out the ingredients.\"\n\n    def step1(self):\n        return \"go to the cabinet.\"\n\n    def step2(self):\n        return \"take out a bowl.\"\n\n    def step3(self):\n        return \"pour the dry ingredients into the bowl.\"\n\n    def step4(self):\n        return \"put the spoon or whisk into the bowl.\"\n\n    def step5(self):\n        return \"take out a wooden spoon or whisk.\"\n\n    def step6(self):\n        return \"go to the drawer.\"\n\n    def step7(self):\n        return \"mix the dry ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step6 -> step5\",\n            \"step1 -> step2\",\n            \"step4 -> step7\",\n        ]\n","input_prompt_code":"class MixTheDryIngredients:\n\n    title = \"mix the dry ingredients\"\n    steps = 8\n\n","reference_graph":{"title":"mix the dry ingredients","num_steps":8,"schema":["step0: measure out the ingredients.","step1: go to the cabinet.","step2: take out a bowl.","step3: pour the dry ingredients into the bowl.","step4: put the spoon or whisk into the bowl.","step5: take out a wooden spoon or whisk.","step6: go to the drawer.","step7: mix the dry ingredients"],"relations":["step0 -> step1","step0 -> step6","step2 -> step3","step3 -> step4","step5 -> step3","step6 -> step5","step1 -> step2","step4 -> step7"]}}
{"scenario":"Make list of guests","events":{"0":"discuss who to invite","1":"determine capacity of venue","2":"meet up with partner","3":"agree on who to invite","4":"have discussion with partner","5":"Book venue for shower","6":"Make list of guests"},"context":"Book venue for shower","minutes":15.0,"events_minutes":{"0":5.0,"1":1.0,"2":1.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: discuss who to invite; step1: determine capacity of venue; step2: meet up with partner; step3: agree on who to invite; step4: have discussion with partner; step5: Book venue for shower; step6: Make list of guests","flatten_input_for_script_generation":"You want to Make list of guests. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Book venue for shower; step1: determine capacity of venue; step2: meet up with partner; step3: have discussion with partner; step4: discuss who to invite; step5: agree on who to invite; step6: Make list of guests; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->6","4->0","5->1"],"reference_code":"class MakeListOfGuests:\n\n    title = \"Make list of guests\"\n    steps = 7\n\n    def step0(self):\n        return \"Book venue for shower\"\n\n    def step1(self):\n        return \"determine capacity of venue\"\n\n    def step2(self):\n        return \"meet up with partner\"\n\n    def step3(self):\n        return \"have discussion with partner\"\n\n    def step4(self):\n        return \"discuss who to invite\"\n\n    def step5(self):\n        return \"agree on who to invite\"\n\n    def step6(self):\n        return \"Make list of guests\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeListOfGuests:\n\n    title = \"Make list of guests\"\n    steps = 7\n\n","reference_graph":{"title":"Make list of guests","num_steps":7,"schema":["step0: Book venue for shower","step1: determine capacity of venue","step2: meet up with partner","step3: have discussion with partner","step4: discuss who to invite","step5: agree on who to invite","step6: Make list of guests"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"fill up gas tank","events":{"0":"park next to the gas pump","1":"open up the gas tank","2":"get out of the car","3":"drive to the gas station","4":"select fuel type","5":"get family in car","6":"fill up gas tank"},"context":"get family in car","minutes":20.0,"events_minutes":{"0":0.3333333333,"1":0.25,"2":0.1666666667,"3":9.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: park next to the gas pump; step1: open up the gas tank; step2: get out of the car; step3: drive to the gas station; step4: select fuel type; step5: get family in car; step6: fill up gas tank","flatten_input_for_script_generation":"You want to fill up gas tank. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step2 -> step4; step1 -> step6; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: get family in car; step1: drive to the gas station; step2: park next to the gas pump; step3: get out of the car; step4: open up the gas tank; step5: select fuel type; step6: fill up gas tank; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","2->4","3->0","4->6","5->3"],"reference_code":"class FillUpGasTank:\n\n    title = \"fill up gas tank\"\n    steps = 7\n\n    def step0(self):\n        return \"get family in car\"\n\n    def step1(self):\n        return \"drive to the gas station\"\n\n    def step2(self):\n        return \"park next to the gas pump\"\n\n    def step3(self):\n        return \"get out of the car\"\n\n    def step4(self):\n        return \"open up the gas tank\"\n\n    def step5(self):\n        return \"select fuel type\"\n\n    def step6(self):\n        return \"fill up gas tank\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillUpGasTank:\n\n    title = \"fill up gas tank\"\n    steps = 7\n\n","reference_graph":{"title":"fill up gas tank","num_steps":7,"schema":["step0: get family in car","step1: drive to the gas station","step2: park next to the gas pump","step3: get out of the car","step4: open up the gas tank","step5: select fuel type","step6: fill up gas tank"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"dress in weather relevant clothing.","events":{"0":"face the closet","1":"head towards the closet","2":"check the weather forecast","3":"open the closet","4":"browse for the appropriate clothing","5":"find a local parade.","6":"dress in weather relevant clothing."},"context":"find a local parade.","minutes":4.0,"events_minutes":{"0":0.25,"1":0.25,"2":2.0,"3":0.25,"4":2.0},"flatten_input_for_edge_prediction":"step0: face the closet; step1: head towards the closet; step2: check the weather forecast; step3: open the closet; step4: browse for the appropriate clothing; step5: find a local parade.; step6: dress in weather relevant clothing.","flatten_input_for_script_generation":"You want to dress in weather relevant clothing.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step0 -> step3; step1 -> step0; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: find a local parade.; step1: check the weather forecast; step2: head towards the closet; step3: face the closet; step4: open the closet; step5: browse for the appropriate clothing; step6: dress in weather relevant clothing.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class DressInWeatherRelevantClothing:\n\n    title = \"dress in weather relevant clothing.\"\n    steps = 7\n\n    def step0(self):\n        return \"find a local parade.\"\n\n    def step1(self):\n        return \"check the weather forecast\"\n\n    def step2(self):\n        return \"head towards the closet\"\n\n    def step3(self):\n        return \"face the closet\"\n\n    def step4(self):\n        return \"open the closet\"\n\n    def step5(self):\n        return \"browse for the appropriate clothing\"\n\n    def step6(self):\n        return \"dress in weather relevant clothing.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DressInWeatherRelevantClothing:\n\n    title = \"dress in weather relevant clothing.\"\n    steps = 7\n\n","reference_graph":{"title":"dress in weather relevant clothing.","num_steps":7,"schema":["step0: find a local parade.","step1: check the weather forecast","step2: head towards the closet","step3: face the closet","step4: open the closet","step5: browse for the appropriate clothing","step6: dress in weather relevant clothing."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"shop for party supplies","events":{"0":"walk up to store entrance.","1":"grab a shopping cart.","2":"turn car off.","3":"put key in pocket.","4":"get out of car.","5":"drive to the store","6":"shop for party supplies"},"context":"drive to the store","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.0833333333,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: walk up to store entrance.; step1: grab a shopping cart.; step2: turn car off.; step3: put key in pocket.; step4: get out of car.; step5: drive to the store; step6: shop for party supplies","flatten_input_for_script_generation":"You want to shop for party supplies. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the store; step1: turn car off.; step2: put key in pocket.; step3: get out of car.; step4: walk up to store entrance.; step5: grab a shopping cart.; step6: shop for party supplies; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class ShopForPartySupplies:\n\n    title = \"shop for party supplies\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"turn car off.\"\n\n    def step2(self):\n        return \"put key in pocket.\"\n\n    def step3(self):\n        return \"get out of car.\"\n\n    def step4(self):\n        return \"walk up to store entrance.\"\n\n    def step5(self):\n        return \"grab a shopping cart.\"\n\n    def step6(self):\n        return \"shop for party supplies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ShopForPartySupplies:\n\n    title = \"shop for party supplies\"\n    steps = 7\n\n","reference_graph":{"title":"shop for party supplies","num_steps":7,"schema":["step0: drive to the store","step1: turn car off.","step2: put key in pocket.","step3: get out of car.","step4: walk up to store entrance.","step5: grab a shopping cart.","step6: shop for party supplies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Choose a gym.","events":{"0":"determine how to gain muscle","1":"go on the computer","2":"navigate to the internet","3":"look up and compare gyms","4":"decide to gain muscle","5":"NONE","6":"Choose a gym."},"context":"NONE","minutes":1440.0,"events_minutes":{"0":0.0833333333,"1":1.0,"2":0.3333333333,"3":5.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: determine how to gain muscle; step1: go on the computer; step2: navigate to the internet; step3: look up and compare gyms; step4: decide to gain muscle; step5: decided to Choose a gym.; step6: Choose a gym.","flatten_input_for_script_generation":"You want to Choose a gym.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to Choose a gym.; step1: decide to gain muscle; step2: determine how to gain muscle; step3: go on the computer; step4: navigate to the internet; step5: look up and compare gyms; step6: Choose a gym.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class ChooseAGym:\n\n    title = \"Choose a gym.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Choose a gym.\"\n\n    def step1(self):\n        return \"decide to gain muscle\"\n\n    def step2(self):\n        return \"determine how to gain muscle\"\n\n    def step3(self):\n        return \"go on the computer\"\n\n    def step4(self):\n        return \"navigate to the internet\"\n\n    def step5(self):\n        return \"look up and compare gyms\"\n\n    def step6(self):\n        return \"Choose a gym.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseAGym:\n\n    title = \"Choose a gym.\"\n    steps = 7\n\n","reference_graph":{"title":"Choose a gym.","num_steps":7,"schema":["step0: decided to Choose a gym.","step1: decide to gain muscle","step2: determine how to gain muscle","step3: go on the computer","step4: navigate to the internet","step5: look up and compare gyms","step6: Choose a gym."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Bring the child home","events":{"0":"Carry the child to the vehicle.","1":"Open the car door.","2":"Place the child in a booster seat.","3":"Get into the driver's seat.","4":"Complete the final paperwork.","5":"Drive the child back home.","6":"Pass the last identity checks","7":"Bring the child home"},"context":"Pass the last identity checks","minutes":30.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.5,"3":0.1666666667,"4":10.0,"5":20.0},"flatten_input_for_edge_prediction":"step0: Carry the child to the vehicle.; step1: Open the car door.; step2: Place the child in a booster seat.; step3: Get into the driver's seat.; step4: Complete the final paperwork.; step5: Drive the child back home.; step6: Pass the last identity checks; step7: Bring the child home","flatten_input_for_script_generation":"You want to Bring the child home. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: Pass the last identity checks; step1: Complete the final paperwork.; step2: Carry the child to the vehicle.; step3: Open the car door.; step4: Place the child in a booster seat.; step5: Get into the driver's seat.; step6: Drive the child back home.; step7: Bring the child home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->3","3->5","4->0","5->7","6->4"],"reference_code":"class BringTheChildHome:\n\n    title = \"Bring the child home\"\n    steps = 8\n\n    def step0(self):\n        return \"Pass the last identity checks\"\n\n    def step1(self):\n        return \"Complete the final paperwork.\"\n\n    def step2(self):\n        return \"Carry the child to the vehicle.\"\n\n    def step3(self):\n        return \"Open the car door.\"\n\n    def step4(self):\n        return \"Place the child in a booster seat.\"\n\n    def step5(self):\n        return \"Get into the driver's seat.\"\n\n    def step6(self):\n        return \"Drive the child back home.\"\n\n    def step7(self):\n        return \"Bring the child home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BringTheChildHome:\n\n    title = \"Bring the child home\"\n    steps = 8\n\n","reference_graph":{"title":"Bring the child home","num_steps":8,"schema":["step0: Pass the last identity checks","step1: Complete the final paperwork.","step2: Carry the child to the vehicle.","step3: Open the car door.","step4: Place the child in a booster seat.","step5: Get into the driver's seat.","step6: Drive the child back home.","step7: Bring the child home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"walk in the gas station","events":{"0":"close car door","1":"lock car door","2":"step out of car","3":"open car door","4":"turn off the car","5":"take off seat belt","6":"park the car","7":"walk in the gas station"},"context":"park the car","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.1666666667,"3":0.0833333333,"4":0.0166666667,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: close car door; step1: lock car door; step2: step out of car; step3: open car door; step4: turn off the car; step5: take off seat belt; step6: park the car; step7: walk in the gas station","flatten_input_for_script_generation":"You want to walk in the gas station. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step5 -> step3; step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: park the car; step1: turn off the car; step2: take off seat belt; step3: open car door; step4: step out of car; step5: close car door; step6: lock car door; step7: walk in the gas station; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->7","2->0","3->2","4->5","5->3","6->4"],"reference_code":"class WalkInTheGasStation:\n\n    title = \"walk in the gas station\"\n    steps = 8\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"turn off the car\"\n\n    def step2(self):\n        return \"take off seat belt\"\n\n    def step3(self):\n        return \"open car door\"\n\n    def step4(self):\n        return \"step out of car\"\n\n    def step5(self):\n        return \"close car door\"\n\n    def step6(self):\n        return \"lock car door\"\n\n    def step7(self):\n        return \"walk in the gas station\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkInTheGasStation:\n\n    title = \"walk in the gas station\"\n    steps = 8\n\n","reference_graph":{"title":"walk in the gas station","num_steps":8,"schema":["step0: park the car","step1: turn off the car","step2: take off seat belt","step3: open car door","step4: step out of car","step5: close car door","step6: lock car door","step7: walk in the gas station"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Buy guitar chord\/song book","events":{"0":"Walk over to the book section of the music store.","1":"Pick out a book that seems suitable.","2":"Wait in line and purchase the book.","3":"Browse the guitar song books.","4":"Take the book to the register.","5":"Choose guitar liked most","6":"Buy guitar chord\/song book"},"context":"Choose guitar liked most","minutes":10.0,"events_minutes":{"0":0.4166666667,"1":0.1666666667,"2":4.0,"3":5.0,"4":0.4166666667},"flatten_input_for_edge_prediction":"step0: Walk over to the book section of the music store.; step1: Pick out a book that seems suitable.; step2: Wait in line and purchase the book.; step3: Browse the guitar song books.; step4: Take the book to the register.; step5: Choose guitar liked most; step6: Buy guitar chord\/song book","flatten_input_for_script_generation":"You want to Buy guitar chord\/song book. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Choose guitar liked most; step1: Walk over to the book section of the music store.; step2: Browse the guitar song books.; step3: Pick out a book that seems suitable.; step4: Take the book to the register.; step5: Wait in line and purchase the book.; step6: Buy guitar chord\/song book; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->1","4->2","5->0"],"reference_code":"class BuyGuitarChordsongBook:\n\n    title = \"Buy guitar chord\/song book\"\n    steps = 7\n\n    def step0(self):\n        return \"Choose guitar liked most\"\n\n    def step1(self):\n        return \"Walk over to the book section of the music store.\"\n\n    def step2(self):\n        return \"Browse the guitar song books.\"\n\n    def step3(self):\n        return \"Pick out a book that seems suitable.\"\n\n    def step4(self):\n        return \"Take the book to the register.\"\n\n    def step5(self):\n        return \"Wait in line and purchase the book.\"\n\n    def step6(self):\n        return \"Buy guitar chord\/song book\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyGuitarChordsongBook:\n\n    title = \"Buy guitar chord\/song book\"\n    steps = 7\n\n","reference_graph":{"title":"Buy guitar chord\/song book","num_steps":7,"schema":["step0: Choose guitar liked most","step1: Walk over to the book section of the music store.","step2: Browse the guitar song books.","step3: Pick out a book that seems suitable.","step4: Take the book to the register.","step5: Wait in line and purchase the book.","step6: Buy guitar chord\/song book"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"choose a salad recipe","events":{"0":"narrow down to 1 recipe","1":"print the recipe","2":"decide on top 3","3":"look through various recipes","4":"ask wife for recommendation","5":"look for salad recipes online","6":"choose a salad recipe"},"context":"look for salad recipes online","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: narrow down to 1 recipe; step1: print the recipe; step2: decide on top 3; step3: look through various recipes; step4: ask wife for recommendation; step5: look for salad recipes online; step6: choose a salad recipe","flatten_input_for_script_generation":"You want to choose a salad recipe. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step2 -> step0; step4 -> step2; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: look for salad recipes online; step1: look through various recipes; step2: ask wife for recommendation; step3: decide on top 3; step4: narrow down to 1 recipe; step5: print the recipe; step6: choose a salad recipe; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class ChooseASaladRecipe:\n\n    title = \"choose a salad recipe\"\n    steps = 7\n\n    def step0(self):\n        return \"look for salad recipes online\"\n\n    def step1(self):\n        return \"look through various recipes\"\n\n    def step2(self):\n        return \"ask wife for recommendation\"\n\n    def step3(self):\n        return \"decide on top 3\"\n\n    def step4(self):\n        return \"narrow down to 1 recipe\"\n\n    def step5(self):\n        return \"print the recipe\"\n\n    def step6(self):\n        return \"choose a salad recipe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseASaladRecipe:\n\n    title = \"choose a salad recipe\"\n    steps = 7\n\n","reference_graph":{"title":"choose a salad recipe","num_steps":7,"schema":["step0: look for salad recipes online","step1: look through various recipes","step2: ask wife for recommendation","step3: decide on top 3","step4: narrow down to 1 recipe","step5: print the recipe","step6: choose a salad recipe"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get ready for church","events":{"0":"dry water from hair","1":"take a shower","2":"get into the shower","3":"get out of the shower","4":"dry off body","5":"put clothing on.","6":"gather clothing for church","7":"get ready for church"},"context":"gather clothing for church","minutes":20.0,"events_minutes":{"0":10.0,"1":15.0,"2":1.0,"3":1.0,"4":2.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: dry water from hair; step1: take a shower; step2: get into the shower; step3: get out of the shower; step4: dry off body; step5: put clothing on.; step6: gather clothing for church; step7: get ready for church","flatten_input_for_script_generation":"You want to get ready for church. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step3 -> step4; step3 -> step0; step4 -> step5; step0 -> step5; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: gather clothing for church; step1: get into the shower; step2: take a shower; step3: get out of the shower; step4: dry off body; step5: dry water from hair; step6: put clothing on.; step7: get ready for church; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->1","3->4","3->0","4->5","5->7","6->2"],"reference_code":"class GetReadyForChurch:\n\n    title = \"get ready for church\"\n    steps = 8\n\n    def step0(self):\n        return \"gather clothing for church\"\n\n    def step1(self):\n        return \"get into the shower\"\n\n    def step2(self):\n        return \"take a shower\"\n\n    def step3(self):\n        return \"get out of the shower\"\n\n    def step4(self):\n        return \"dry off body\"\n\n    def step5(self):\n        return \"dry water from hair\"\n\n    def step6(self):\n        return \"put clothing on.\"\n\n    def step7(self):\n        return \"get ready for church\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetReadyForChurch:\n\n    title = \"get ready for church\"\n    steps = 8\n\n","reference_graph":{"title":"get ready for church","num_steps":8,"schema":["step0: gather clothing for church","step1: get into the shower","step2: take a shower","step3: get out of the shower","step4: dry off body","step5: dry water from hair","step6: put clothing on.","step7: get ready for church"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"entered grocery store","events":{"0":"look around for entrance","1":"start walking to entrance","2":"grab a cart on the way","3":"grab grocery bags and lock door","4":"get out of car","5":"parked the car","6":"entered grocery store"},"context":"parked the car","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look around for entrance; step1: start walking to entrance; step2: grab a cart on the way; step3: grab grocery bags and lock door; step4: get out of car; step5: parked the car; step6: entered grocery store","flatten_input_for_script_generation":"You want to entered grocery store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step1; step2 -> step6; step1 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: parked the car; step1: get out of car; step2: grab grocery bags and lock door; step3: look around for entrance; step4: start walking to entrance; step5: grab a cart on the way; step6: entered grocery store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->0","4->3","5->4"],"reference_code":"class EnteredGroceryStore:\n\n    title = \"entered grocery store\"\n    steps = 7\n\n    def step0(self):\n        return \"parked the car\"\n\n    def step1(self):\n        return \"get out of car\"\n\n    def step2(self):\n        return \"grab grocery bags and lock door\"\n\n    def step3(self):\n        return \"look around for entrance\"\n\n    def step4(self):\n        return \"start walking to entrance\"\n\n    def step5(self):\n        return \"grab a cart on the way\"\n\n    def step6(self):\n        return \"entered grocery store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnteredGroceryStore:\n\n    title = \"entered grocery store\"\n    steps = 7\n\n","reference_graph":{"title":"entered grocery store","num_steps":7,"schema":["step0: parked the car","step1: get out of car","step2: grab grocery bags and lock door","step3: look around for entrance","step4: start walking to entrance","step5: grab a cart on the way","step6: entered grocery store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go inside the shelter","events":{"0":"open car door","1":"park car into spot","2":"close vehicle door","3":"turn off ignition","4":"exit the vehicle","5":"find open parking spot","6":"drive to shelter","7":"go inside the shelter"},"context":"drive to shelter","minutes":5.0,"events_minutes":{"0":0.25,"1":1.0,"2":0.4166666667,"3":0.25,"4":0.4166666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: open car door; step1: park car into spot; step2: close vehicle door; step3: turn off ignition; step4: exit the vehicle; step5: find open parking spot; step6: drive to shelter; step7: go inside the shelter","flatten_input_for_script_generation":"You want to go inside the shelter. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: drive to shelter; step1: find open parking spot; step2: park car into spot; step3: turn off ignition; step4: open car door; step5: exit the vehicle; step6: close vehicle door; step7: go inside the shelter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->7","3->0","4->2","5->1","6->5"],"reference_code":"class GoInsideTheShelter:\n\n    title = \"go inside the shelter\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to shelter\"\n\n    def step1(self):\n        return \"find open parking spot\"\n\n    def step2(self):\n        return \"park car into spot\"\n\n    def step3(self):\n        return \"turn off ignition\"\n\n    def step4(self):\n        return \"open car door\"\n\n    def step5(self):\n        return \"exit the vehicle\"\n\n    def step6(self):\n        return \"close vehicle door\"\n\n    def step7(self):\n        return \"go inside the shelter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoInsideTheShelter:\n\n    title = \"go inside the shelter\"\n    steps = 8\n\n","reference_graph":{"title":"go inside the shelter","num_steps":8,"schema":["step0: drive to shelter","step1: find open parking spot","step2: park car into spot","step3: turn off ignition","step4: open car door","step5: exit the vehicle","step6: close vehicle door","step7: go inside the shelter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Sign the activity waivers","events":{"0":"log into the website","1":"agree on the terms of the waver","2":"sign the waver","3":"give the signed form to the other person","4":"read the terms and conditions","5":"Log onto the county website","6":"Sign the activity waivers"},"context":"Log onto the county website","minutes":5.0,"events_minutes":{"0":2.0,"1":1.0,"2":1.0,"3":1.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: log into the website; step1: agree on the terms of the waver; step2: sign the waver; step3: give the signed form to the other person; step4: read the terms and conditions; step5: Log onto the county website; step6: Sign the activity waivers","flatten_input_for_script_generation":"You want to Sign the activity waivers. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Log onto the county website; step1: log into the website; step2: read the terms and conditions; step3: agree on the terms of the waver; step4: sign the waver; step5: give the signed form to the other person; step6: Sign the activity waivers; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->6","4->1","5->0"],"reference_code":"class SignTheActivityWaivers:\n\n    title = \"Sign the activity waivers\"\n    steps = 7\n\n    def step0(self):\n        return \"Log onto the county website\"\n\n    def step1(self):\n        return \"log into the website\"\n\n    def step2(self):\n        return \"read the terms and conditions\"\n\n    def step3(self):\n        return \"agree on the terms of the waver\"\n\n    def step4(self):\n        return \"sign the waver\"\n\n    def step5(self):\n        return \"give the signed form to the other person\"\n\n    def step6(self):\n        return \"Sign the activity waivers\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SignTheActivityWaivers:\n\n    title = \"Sign the activity waivers\"\n    steps = 7\n\n","reference_graph":{"title":"Sign the activity waivers","num_steps":7,"schema":["step0: Log onto the county website","step1: log into the website","step2: read the terms and conditions","step3: agree on the terms of the waver","step4: sign the waver","step5: give the signed form to the other person","step6: Sign the activity waivers"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in the car","events":{"0":"wait for the uber","1":"open the uber door","2":"enter the car","3":"let the uber park","4":"greet the driver","5":"NONE","6":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: wait for the uber; step1: open the uber door; step2: enter the car; step3: let the uber park; step4: greet the driver; step5: decided to get in the car; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to get in the car; step1: wait for the uber; step2: let the uber park; step3: greet the driver; step4: open the uber door; step5: enter the car; step6: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->4","4->1","5->0"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"wait for the uber\"\n\n    def step2(self):\n        return \"let the uber park\"\n\n    def step3(self):\n        return \"greet the driver\"\n\n    def step4(self):\n        return \"open the uber door\"\n\n    def step5(self):\n        return \"enter the car\"\n\n    def step6(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: decided to get in the car","step1: wait for the uber","step2: let the uber park","step3: greet the driver","step4: open the uber door","step5: enter the car","step6: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"purchase tickets to the game","events":{"0":"Navigate to the appropriate ticket selling website.","1":"Decide on the specific seating desired for the game.","2":"Fill out payment information on the form.","3":"Add the specific tickets to the shopping cart.","4":"Proceed to check out on the website.","5":"Finalize and confirm the purchase.","6":"look up where to buy tickets for game","7":"purchase tickets to the game"},"context":"look up where to buy tickets for game","minutes":5.0,"events_minutes":{"0":0.3333333333,"1":0.5,"2":0.4166666667,"3":0.25,"4":0.1666666667,"5":0.25},"flatten_input_for_edge_prediction":"step0: Navigate to the appropriate ticket selling website.; step1: Decide on the specific seating desired for the game.; step2: Fill out payment information on the form.; step3: Add the specific tickets to the shopping cart.; step4: Proceed to check out on the website.; step5: Finalize and confirm the purchase.; step6: look up where to buy tickets for game; step7: purchase tickets to the game","flatten_input_for_script_generation":"You want to purchase tickets to the game. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: look up where to buy tickets for game; step1: Navigate to the appropriate ticket selling website.; step2: Decide on the specific seating desired for the game.; step3: Add the specific tickets to the shopping cart.; step4: Proceed to check out on the website.; step5: Fill out payment information on the form.; step6: Finalize and confirm the purchase.; step7: purchase tickets to the game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->5","3->4","4->2","5->7","6->0"],"reference_code":"class PurchaseTicketsToTheGame:\n\n    title = \"purchase tickets to the game\"\n    steps = 8\n\n    def step0(self):\n        return \"look up where to buy tickets for game\"\n\n    def step1(self):\n        return \"Navigate to the appropriate ticket selling website.\"\n\n    def step2(self):\n        return \"Decide on the specific seating desired for the game.\"\n\n    def step3(self):\n        return \"Add the specific tickets to the shopping cart.\"\n\n    def step4(self):\n        return \"Proceed to check out on the website.\"\n\n    def step5(self):\n        return \"Fill out payment information on the form.\"\n\n    def step6(self):\n        return \"Finalize and confirm the purchase.\"\n\n    def step7(self):\n        return \"purchase tickets to the game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PurchaseTicketsToTheGame:\n\n    title = \"purchase tickets to the game\"\n    steps = 8\n\n","reference_graph":{"title":"purchase tickets to the game","num_steps":8,"schema":["step0: look up where to buy tickets for game","step1: Navigate to the appropriate ticket selling website.","step2: Decide on the specific seating desired for the game.","step3: Add the specific tickets to the shopping cart.","step4: Proceed to check out on the website.","step5: Fill out payment information on the form.","step6: Finalize and confirm the purchase.","step7: purchase tickets to the game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Choose starting place","events":{"0":"put lawn clippings bag on","1":"close gas cap","2":"maneuver lawn mower","3":"wheel lawnmower out","4":"grab lawnmower handle","5":"Ensure adequate gas","6":"Choose starting place"},"context":"Ensure adequate gas","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.4166666667,"3":0.4166666667,"4":0.25},"flatten_input_for_edge_prediction":"step0: put lawn clippings bag on; step1: close gas cap; step2: maneuver lawn mower; step3: wheel lawnmower out; step4: grab lawnmower handle; step5: Ensure adequate gas; step6: Choose starting place","flatten_input_for_script_generation":"You want to Choose starting place. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Ensure adequate gas; step1: close gas cap; step2: put lawn clippings bag on; step3: grab lawnmower handle; step4: maneuver lawn mower; step5: wheel lawnmower out; step6: Choose starting place; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->6","4->2","5->1"],"reference_code":"class ChooseStartingPlace:\n\n    title = \"Choose starting place\"\n    steps = 7\n\n    def step0(self):\n        return \"Ensure adequate gas\"\n\n    def step1(self):\n        return \"close gas cap\"\n\n    def step2(self):\n        return \"put lawn clippings bag on\"\n\n    def step3(self):\n        return \"grab lawnmower handle\"\n\n    def step4(self):\n        return \"maneuver lawn mower\"\n\n    def step5(self):\n        return \"wheel lawnmower out\"\n\n    def step6(self):\n        return \"Choose starting place\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseStartingPlace:\n\n    title = \"Choose starting place\"\n    steps = 7\n\n","reference_graph":{"title":"Choose starting place","num_steps":7,"schema":["step0: Ensure adequate gas","step1: close gas cap","step2: put lawn clippings bag on","step3: grab lawnmower handle","step4: maneuver lawn mower","step5: wheel lawnmower out","step6: Choose starting place"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get into the car","events":{"0":"grab door handle","1":"click on car alarm remote","2":"extend arm out","3":"open car door","4":"walk to car door","5":"Walk out of the house","6":"Get into the car"},"context":"Walk out of the house","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.25,"2":0.0833333333,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: grab door handle; step1: click on car alarm remote; step2: extend arm out; step3: open car door; step4: walk to car door; step5: Walk out of the house; step6: Get into the car","flatten_input_for_script_generation":"You want to Get into the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Walk out of the house; step1: click on car alarm remote; step2: walk to car door; step3: extend arm out; step4: grab door handle; step5: open car door; step6: Get into the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class GetIntoTheCar:\n\n    title = \"Get into the car\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk out of the house\"\n\n    def step1(self):\n        return \"click on car alarm remote\"\n\n    def step2(self):\n        return \"walk to car door\"\n\n    def step3(self):\n        return \"extend arm out\"\n\n    def step4(self):\n        return \"grab door handle\"\n\n    def step5(self):\n        return \"open car door\"\n\n    def step6(self):\n        return \"Get into the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetIntoTheCar:\n\n    title = \"Get into the car\"\n    steps = 7\n\n","reference_graph":{"title":"Get into the car","num_steps":7,"schema":["step0: Walk out of the house","step1: click on car alarm remote","step2: walk to car door","step3: extend arm out","step4: grab door handle","step5: open car door","step6: Get into the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Click confirm to process amount from bank account.","events":{"0":"input payment amount on website","1":"decide whether to pay full or half","2":"double check have money in bank","3":"look at past due payment amount","4":"calculate if enough for payment","5":"Input rental amount owed.","6":"Click confirm to process amount from bank account."},"context":"Input rental amount owed.","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":0.1666666667,"4":0.5},"flatten_input_for_edge_prediction":"step0: input payment amount on website; step1: decide whether to pay full or half; step2: double check have money in bank; step3: look at past due payment amount; step4: calculate if enough for payment; step5: Input rental amount owed.; step6: Click confirm to process amount from bank account.","flatten_input_for_script_generation":"You want to Click confirm to process amount from bank account.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: Input rental amount owed.; step1: decide whether to pay full or half; step2: look at past due payment amount; step3: double check have money in bank; step4: calculate if enough for payment; step5: input payment amount on website; step6: Click confirm to process amount from bank account.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->2","4->0","5->3","5->1"],"reference_code":"class ClickConfirmToProcessAmountFromBankAccount:\n\n    title = \"Click confirm to process amount from bank account.\"\n    steps = 7\n\n    def step0(self):\n        return \"Input rental amount owed.\"\n\n    def step1(self):\n        return \"decide whether to pay full or half\"\n\n    def step2(self):\n        return \"look at past due payment amount\"\n\n    def step3(self):\n        return \"double check have money in bank\"\n\n    def step4(self):\n        return \"calculate if enough for payment\"\n\n    def step5(self):\n        return \"input payment amount on website\"\n\n    def step6(self):\n        return \"Click confirm to process amount from bank account.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ClickConfirmToProcessAmountFromBankAccount:\n\n    title = \"Click confirm to process amount from bank account.\"\n    steps = 7\n\n","reference_graph":{"title":"Click confirm to process amount from bank account.","num_steps":7,"schema":["step0: Input rental amount owed.","step1: decide whether to pay full or half","step2: look at past due payment amount","step3: double check have money in bank","step4: calculate if enough for payment","step5: input payment amount on website","step6: Click confirm to process amount from bank account."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Order hundreds of drinks to venue","events":{"0":"reach out to beverage distributor","1":"review information received","2":"look into available beverage distributors","3":"decide which company has the best deal","4":"call up several options to ask about pricing","5":"Rent a venue to hold a massive crowd","6":"Order hundreds of drinks to venue"},"context":"Rent a venue to hold a massive crowd","minutes":120.0,"events_minutes":{"0":15.0,"1":15.0,"2":60.0,"3":15.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: reach out to beverage distributor; step1: review information received; step2: look into available beverage distributors; step3: decide which company has the best deal; step4: call up several options to ask about pricing; step5: Rent a venue to hold a massive crowd; step6: Order hundreds of drinks to venue","flatten_input_for_script_generation":"You want to Order hundreds of drinks to venue. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Rent a venue to hold a massive crowd; step1: look into available beverage distributors; step2: call up several options to ask about pricing; step3: review information received; step4: decide which company has the best deal; step5: reach out to beverage distributor; step6: Order hundreds of drinks to venue; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class OrderHundredsOfDrinksToVenue:\n\n    title = \"Order hundreds of drinks to venue\"\n    steps = 7\n\n    def step0(self):\n        return \"Rent a venue to hold a massive crowd\"\n\n    def step1(self):\n        return \"look into available beverage distributors\"\n\n    def step2(self):\n        return \"call up several options to ask about pricing\"\n\n    def step3(self):\n        return \"review information received\"\n\n    def step4(self):\n        return \"decide which company has the best deal\"\n\n    def step5(self):\n        return \"reach out to beverage distributor\"\n\n    def step6(self):\n        return \"Order hundreds of drinks to venue\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrderHundredsOfDrinksToVenue:\n\n    title = \"Order hundreds of drinks to venue\"\n    steps = 7\n\n","reference_graph":{"title":"Order hundreds of drinks to venue","num_steps":7,"schema":["step0: Rent a venue to hold a massive crowd","step1: look into available beverage distributors","step2: call up several options to ask about pricing","step3: review information received","step4: decide which company has the best deal","step5: reach out to beverage distributor","step6: Order hundreds of drinks to venue"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get the laptop","events":{"0":"pay for laptop","1":"search for laptops online","2":"make list of desired laptops","3":"wait for laptop to arrive","4":"pick from list of laptops","5":"NONE","6":"get the laptop"},"context":"NONE","minutes":5.0,"events_minutes":{"0":3.0,"1":60.0,"2":5.0,"3":10080.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: pay for laptop; step1: search for laptops online; step2: make list of desired laptops; step3: wait for laptop to arrive; step4: pick from list of laptops; step5: decided to get the laptop; step6: get the laptop","flatten_input_for_script_generation":"You want to get the laptop. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step6; step1 -> step2; step4 -> step0; step2 -> step4; step0 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: decided to get the laptop; step1: search for laptops online; step2: wait for laptop to arrive; step3: get the laptop; step4: make list of desired laptops; step5: pick from list of laptops; step6: pay for laptop; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->3","1->2","2->4","3->6","4->0","5->1"],"reference_code":"class GetTheLaptop:\n\n    title = \"get the laptop\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get the laptop\"\n\n    def step1(self):\n        return \"search for laptops online\"\n\n    def step2(self):\n        return \"wait for laptop to arrive\"\n\n    def step3(self):\n        return \"get the laptop\"\n\n    def step4(self):\n        return \"make list of desired laptops\"\n\n    def step5(self):\n        return \"pick from list of laptops\"\n\n    def step6(self):\n        return \"pay for laptop\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class GetTheLaptop:\n\n    title = \"get the laptop\"\n    steps = 7\n\n","reference_graph":{"title":"get the laptop","num_steps":7,"schema":["step0: decided to get the laptop","step1: search for laptops online","step2: wait for laptop to arrive","step3: get the laptop","step4: make list of desired laptops","step5: pick from list of laptops","step6: pay for laptop"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"get hired for the job","events":{"0":"answer interview questions","1":"get drug tested","2":"hand over resume","3":"ask questions about the job","4":"prepare answers for questions","5":"meet with interviewer","6":"shake interviewer's hand","7":"drive to the interview","8":"get hired for the job"},"context":"drive to the interview","minutes":60.0,"events_minutes":{"0":10.0,"1":1.0,"2":0.1666666667,"3":5.0,"4":5.0,"5":0.5,"6":0.1666666667},"flatten_input_for_edge_prediction":"step0: answer interview questions; step1: get drug tested; step2: hand over resume; step3: ask questions about the job; step4: prepare answers for questions; step5: meet with interviewer; step6: shake interviewer's hand; step7: drive to the interview; step8: get hired for the job","flatten_input_for_script_generation":"You want to get hired for the job. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step1 -> step8; step2 -> step0; step6 -> step2; step0 -> step3; step3 -> step1; step5 -> step6; step7 -> step4","flatten_output_for_script_generation":"step0: drive to the interview; step1: prepare answers for questions; step2: meet with interviewer; step3: shake interviewer's hand; step4: get drug tested; step5: get hired for the job; step6: hand over resume; step7: answer interview questions; step8: ask questions about the job; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step6 -> step7; step7 -> step8; step3 -> step6; step8 -> step4","gold_edges_for_prediction":["0->3","1->8","2->0","3->1","4->5","5->6","6->2","7->4"],"reference_code":"class GetHiredForTheJob:\n\n    title = \"get hired for the job\"\n    steps = 9\n\n    def step0(self):\n        return \"drive to the interview\"\n\n    def step1(self):\n        return \"prepare answers for questions\"\n\n    def step2(self):\n        return \"meet with interviewer\"\n\n    def step3(self):\n        return \"shake interviewer's hand\"\n\n    def step4(self):\n        return \"get drug tested\"\n\n    def step5(self):\n        return \"get hired for the job\"\n\n    def step6(self):\n        return \"hand over resume\"\n\n    def step7(self):\n        return \"answer interview questions\"\n\n    def step8(self):\n        return \"ask questions about the job\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n            \"step3 -> step6\",\n            \"step8 -> step4\",\n        ]\n","input_prompt_code":"class GetHiredForTheJob:\n\n    title = \"get hired for the job\"\n    steps = 9\n\n","reference_graph":{"title":"get hired for the job","num_steps":9,"schema":["step0: drive to the interview","step1: prepare answers for questions","step2: meet with interviewer","step3: shake interviewer's hand","step4: get drug tested","step5: get hired for the job","step6: hand over resume","step7: answer interview questions","step8: ask questions about the job"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step6 -> step7","step7 -> step8","step3 -> step6","step8 -> step4"]}}
{"scenario":"Get up from the couch","events":{"0":"put the legs on the floor","1":"gets hungry and thirsty","2":"stand up straight","3":"watch a movie on the couch","4":"get off of the couch","5":"think about what is in the kitchen to eat","6":"NONE","7":"Get up from the couch"},"context":"NONE","minutes":1.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":2.0,"4":2.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: put the legs on the floor; step1: gets hungry and thirsty; step2: stand up straight; step3: watch a movie on the couch; step4: get off of the couch; step5: think about what is in the kitchen to eat; step6: decided to Get up from the couch; step7: Get up from the couch","flatten_input_for_script_generation":"You want to Get up from the couch. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step5; step5 -> step0; step0 -> step4; step2 -> step7; step4 -> step2; step6 -> step3","flatten_output_for_script_generation":"step0: decided to Get up from the couch; step1: watch a movie on the couch; step2: gets hungry and thirsty; step3: think about what is in the kitchen to eat; step4: put the legs on the floor; step5: get off of the couch; step6: stand up straight; step7: Get up from the couch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->5","2->7","3->1","4->2","5->0","6->3"],"reference_code":"class GetUpFromTheCouch:\n\n    title = \"Get up from the couch\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Get up from the couch\"\n\n    def step1(self):\n        return \"watch a movie on the couch\"\n\n    def step2(self):\n        return \"gets hungry and thirsty\"\n\n    def step3(self):\n        return \"think about what is in the kitchen to eat\"\n\n    def step4(self):\n        return \"put the legs on the floor\"\n\n    def step5(self):\n        return \"get off of the couch\"\n\n    def step6(self):\n        return \"stand up straight\"\n\n    def step7(self):\n        return \"Get up from the couch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetUpFromTheCouch:\n\n    title = \"Get up from the couch\"\n    steps = 8\n\n","reference_graph":{"title":"Get up from the couch","num_steps":8,"schema":["step0: decided to Get up from the couch","step1: watch a movie on the couch","step2: gets hungry and thirsty","step3: think about what is in the kitchen to eat","step4: put the legs on the floor","step5: get off of the couch","step6: stand up straight","step7: Get up from the couch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"pay for ticket","events":{"0":"wait for the cashier to type in the ticket order","1":"pull out the right amount of money","2":"take out a wallet","3":"wait to hear what the ticket costs","4":"open the wallet","5":"ask to buy ticket","6":"pay for ticket"},"context":"ask to buy ticket","minutes":2.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: wait for the cashier to type in the ticket order; step1: pull out the right amount of money; step2: take out a wallet; step3: wait to hear what the ticket costs; step4: open the wallet; step5: ask to buy ticket; step6: pay for ticket","flatten_input_for_script_generation":"You want to pay for ticket. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step2 -> step4; step4 -> step1; step3 -> step2; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: ask to buy ticket; step1: wait for the cashier to type in the ticket order; step2: wait to hear what the ticket costs; step3: take out a wallet; step4: open the wallet; step5: pull out the right amount of money; step6: pay for ticket; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class PayForTicket:\n\n    title = \"pay for ticket\"\n    steps = 7\n\n    def step0(self):\n        return \"ask to buy ticket\"\n\n    def step1(self):\n        return \"wait for the cashier to type in the ticket order\"\n\n    def step2(self):\n        return \"wait to hear what the ticket costs\"\n\n    def step3(self):\n        return \"take out a wallet\"\n\n    def step4(self):\n        return \"open the wallet\"\n\n    def step5(self):\n        return \"pull out the right amount of money\"\n\n    def step6(self):\n        return \"pay for ticket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PayForTicket:\n\n    title = \"pay for ticket\"\n    steps = 7\n\n","reference_graph":{"title":"pay for ticket","num_steps":7,"schema":["step0: ask to buy ticket","step1: wait for the cashier to type in the ticket order","step2: wait to hear what the ticket costs","step3: take out a wallet","step4: open the wallet","step5: pull out the right amount of money","step6: pay for ticket"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"set up a website","events":{"0":"decide on best host provider","1":"pay provider for hosting","2":"learn how to create a website","3":"search for how to create a website","4":"go on the internet","5":"decide on a niche","6":"set up a website"},"context":"decide on a niche","minutes":15.0,"events_minutes":{"0":5.0,"1":5.0,"2":120.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: decide on best host provider; step1: pay provider for hosting; step2: learn how to create a website; step3: search for how to create a website; step4: go on the internet; step5: decide on a niche; step6: set up a website","flatten_input_for_script_generation":"You want to set up a website. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step2 -> step0; step3 -> step2; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decide on a niche; step1: go on the internet; step2: search for how to create a website; step3: learn how to create a website; step4: decide on best host provider; step5: pay provider for hosting; step6: set up a website; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->2","4->3","5->4"],"reference_code":"class SetUpAWebsite:\n\n    title = \"set up a website\"\n    steps = 7\n\n    def step0(self):\n        return \"decide on a niche\"\n\n    def step1(self):\n        return \"go on the internet\"\n\n    def step2(self):\n        return \"search for how to create a website\"\n\n    def step3(self):\n        return \"learn how to create a website\"\n\n    def step4(self):\n        return \"decide on best host provider\"\n\n    def step5(self):\n        return \"pay provider for hosting\"\n\n    def step6(self):\n        return \"set up a website\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SetUpAWebsite:\n\n    title = \"set up a website\"\n    steps = 7\n\n","reference_graph":{"title":"set up a website","num_steps":7,"schema":["step0: decide on a niche","step1: go on the internet","step2: search for how to create a website","step3: learn how to create a website","step4: decide on best host provider","step5: pay provider for hosting","step6: set up a website"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get dressed for the concert.","events":{"0":"pick up tickets","1":"stand in line","2":"wait for concert day","3":"drive back home","4":"go to ticket location","5":"Buy tickets to a concert.","6":"get dressed for the concert."},"context":"Buy tickets to a concert.","minutes":30.0,"events_minutes":{"0":1.0,"1":1.0,"2":10080.0,"3":15.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: pick up tickets; step1: stand in line; step2: wait for concert day; step3: drive back home; step4: go to ticket location; step5: Buy tickets to a concert.; step6: get dressed for the concert.","flatten_input_for_script_generation":"You want to get dressed for the concert.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Buy tickets to a concert.; step1: go to ticket location; step2: stand in line; step3: pick up tickets; step4: drive back home; step5: wait for concert day; step6: get dressed for the concert.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->4"],"reference_code":"class GetDressedForTheConcert:\n\n    title = \"get dressed for the concert.\"\n    steps = 7\n\n    def step0(self):\n        return \"Buy tickets to a concert.\"\n\n    def step1(self):\n        return \"go to ticket location\"\n\n    def step2(self):\n        return \"stand in line\"\n\n    def step3(self):\n        return \"pick up tickets\"\n\n    def step4(self):\n        return \"drive back home\"\n\n    def step5(self):\n        return \"wait for concert day\"\n\n    def step6(self):\n        return \"get dressed for the concert.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetDressedForTheConcert:\n\n    title = \"get dressed for the concert.\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed for the concert.","num_steps":7,"schema":["step0: Buy tickets to a concert.","step1: go to ticket location","step2: stand in line","step3: pick up tickets","step4: drive back home","step5: wait for concert day","step6: get dressed for the concert."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in car.","events":{"0":"Walk out the door.","1":"Close the front door.","2":"Zip up coat.","3":"Open front door.","4":"Walk to the car.","5":"Open car door.","6":"dress in weather relevant clothing.","7":"get in car."},"context":"dress in weather relevant clothing.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.3333333333,"2":0.1666666667,"3":0.3333333333,"4":3.0,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: Walk out the door.; step1: Close the front door.; step2: Zip up coat.; step3: Open front door.; step4: Walk to the car.; step5: Open car door.; step6: dress in weather relevant clothing.; step7: get in car.","flatten_input_for_script_generation":"You want to get in car.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step5; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: dress in weather relevant clothing.; step1: Zip up coat.; step2: Open front door.; step3: Walk out the door.; step4: Close the front door.; step5: Walk to the car.; step6: Open car door.; step7: get in car.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->4","2->3","3->0","4->5","5->7","6->2"],"reference_code":"class GetInCar:\n\n    title = \"get in car.\"\n    steps = 8\n\n    def step0(self):\n        return \"dress in weather relevant clothing.\"\n\n    def step1(self):\n        return \"Zip up coat.\"\n\n    def step2(self):\n        return \"Open front door.\"\n\n    def step3(self):\n        return \"Walk out the door.\"\n\n    def step4(self):\n        return \"Close the front door.\"\n\n    def step5(self):\n        return \"Walk to the car.\"\n\n    def step6(self):\n        return \"Open car door.\"\n\n    def step7(self):\n        return \"get in car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetInCar:\n\n    title = \"get in car.\"\n    steps = 8\n\n","reference_graph":{"title":"get in car.","num_steps":8,"schema":["step0: dress in weather relevant clothing.","step1: Zip up coat.","step2: Open front door.","step3: Walk out the door.","step4: Close the front door.","step5: Walk to the car.","step6: Open car door.","step7: get in car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Locate gym trainer.","events":{"0":"thank the receptionist","1":"walk to main gym","2":"be told there is one in the main gym","3":"ask there are trainers in today","4":"walk to the reception desk","5":"Walk through entrance of gym.","6":"Locate gym trainer."},"context":"Walk through entrance of gym.","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: thank the receptionist; step1: walk to main gym; step2: be told there is one in the main gym; step3: ask there are trainers in today; step4: walk to the reception desk; step5: Walk through entrance of gym.; step6: Locate gym trainer.","flatten_input_for_script_generation":"You want to Locate gym trainer.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step1 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: Walk through entrance of gym.; step1: walk to main gym; step2: walk to the reception desk; step3: ask there are trainers in today; step4: be told there is one in the main gym; step5: thank the receptionist; step6: Locate gym trainer.; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class LocateGymTrainer:\n\n    title = \"Locate gym trainer.\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk through entrance of gym.\"\n\n    def step1(self):\n        return \"walk to main gym\"\n\n    def step2(self):\n        return \"walk to the reception desk\"\n\n    def step3(self):\n        return \"ask there are trainers in today\"\n\n    def step4(self):\n        return \"be told there is one in the main gym\"\n\n    def step5(self):\n        return \"thank the receptionist\"\n\n    def step6(self):\n        return \"Locate gym trainer.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class LocateGymTrainer:\n\n    title = \"Locate gym trainer.\"\n    steps = 7\n\n","reference_graph":{"title":"Locate gym trainer.","num_steps":7,"schema":["step0: Walk through entrance of gym.","step1: walk to main gym","step2: walk to the reception desk","step3: ask there are trainers in today","step4: be told there is one in the main gym","step5: thank the receptionist","step6: Locate gym trainer."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"park the car","events":{"0":"Wait for car to leave.","1":"Pull into fair parking lot.","2":"Pay for parking.","3":"Drive around parking lot looking for a spot.","4":"Spot a car leaving the space.","5":"drive to the fair","6":"park the car"},"context":"drive to the fair","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":5.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Wait for car to leave.; step1: Pull into fair parking lot.; step2: Pay for parking.; step3: Drive around parking lot looking for a spot.; step4: Spot a car leaving the space.; step5: drive to the fair; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: drive to the fair; step1: Pull into fair parking lot.; step2: Pay for parking.; step3: Drive around parking lot looking for a spot.; step4: Spot a car leaving the space.; step5: Wait for car to leave.; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->4","4->0","5->1"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the fair\"\n\n    def step1(self):\n        return \"Pull into fair parking lot.\"\n\n    def step2(self):\n        return \"Pay for parking.\"\n\n    def step3(self):\n        return \"Drive around parking lot looking for a spot.\"\n\n    def step4(self):\n        return \"Spot a car leaving the space.\"\n\n    def step5(self):\n        return \"Wait for car to leave.\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to the fair","step1: Pull into fair parking lot.","step2: Pay for parking.","step3: Drive around parking lot looking for a spot.","step4: Spot a car leaving the space.","step5: Wait for car to leave.","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Go in for interviews.","events":{"0":"Wait for jobs to call.","1":"Submit job applications.","2":"Hear phone ring.","3":"Agree on a time for interview.","4":"Pick up phone.","5":"Fill out applications.","6":"Go in for interviews."},"context":"Fill out applications.","minutes":60.0,"events_minutes":{"0":8640.0,"1":5.0,"2":0.0833333333,"3":10.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Wait for jobs to call.; step1: Submit job applications.; step2: Hear phone ring.; step3: Agree on a time for interview.; step4: Pick up phone.; step5: Fill out applications.; step6: Go in for interviews.","flatten_input_for_script_generation":"You want to Go in for interviews.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Fill out applications.; step1: Submit job applications.; step2: Wait for jobs to call.; step3: Hear phone ring.; step4: Pick up phone.; step5: Agree on a time for interview.; step6: Go in for interviews.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class GoInForInterviews:\n\n    title = \"Go in for interviews.\"\n    steps = 7\n\n    def step0(self):\n        return \"Fill out applications.\"\n\n    def step1(self):\n        return \"Submit job applications.\"\n\n    def step2(self):\n        return \"Wait for jobs to call.\"\n\n    def step3(self):\n        return \"Hear phone ring.\"\n\n    def step4(self):\n        return \"Pick up phone.\"\n\n    def step5(self):\n        return \"Agree on a time for interview.\"\n\n    def step6(self):\n        return \"Go in for interviews.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoInForInterviews:\n\n    title = \"Go in for interviews.\"\n    steps = 7\n\n","reference_graph":{"title":"Go in for interviews.","num_steps":7,"schema":["step0: Fill out applications.","step1: Submit job applications.","step2: Wait for jobs to call.","step3: Hear phone ring.","step4: Pick up phone.","step5: Agree on a time for interview.","step6: Go in for interviews."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get married to another.","events":{"0":"ask person to get married","1":"find a person to get married to","2":"invite guests to wedding","3":"get a person to perform wedding ceremony","4":"show up on wedding date","5":"get a wedding venue","6":"NONE","7":"Get married to another."},"context":"NONE","minutes":1440.0,"events_minutes":{"0":10.0,"1":388800.0,"2":30.0,"3":15.0,"4":60.0,"5":30.0},"flatten_input_for_edge_prediction":"step0: ask person to get married; step1: find a person to get married to; step2: invite guests to wedding; step3: get a person to perform wedding ceremony; step4: show up on wedding date; step5: get a wedding venue; step6: decided to Get married to another.; step7: Get married to another.","flatten_input_for_script_generation":"You want to Get married to another.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step5; step0 -> step2; step0 -> step3; step5 -> step4; step3 -> step4; step2 -> step4; step4 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to Get married to another.; step1: find a person to get married to; step2: ask person to get married; step3: get a wedding venue; step4: invite guests to wedding; step5: get a person to perform wedding ceremony; step6: show up on wedding date; step7: Get married to another.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","0->2","0->3","1->0","2->4","3->4","4->7","5->4","6->1"],"reference_code":"class GetMarriedToAnother:\n\n    title = \"Get married to another.\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Get married to another.\"\n\n    def step1(self):\n        return \"find a person to get married to\"\n\n    def step2(self):\n        return \"ask person to get married\"\n\n    def step3(self):\n        return \"get a wedding venue\"\n\n    def step4(self):\n        return \"invite guests to wedding\"\n\n    def step5(self):\n        return \"get a person to perform wedding ceremony\"\n\n    def step6(self):\n        return \"show up on wedding date\"\n\n    def step7(self):\n        return \"Get married to another.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetMarriedToAnother:\n\n    title = \"Get married to another.\"\n    steps = 8\n\n","reference_graph":{"title":"Get married to another.","num_steps":8,"schema":["step0: decided to Get married to another.","step1: find a person to get married to","step2: ask person to get married","step3: get a wedding venue","step4: invite guests to wedding","step5: get a person to perform wedding ceremony","step6: show up on wedding date","step7: Get married to another."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"purchase some candy","events":{"0":"walk to check out","1":"exit the vehicle","2":"decide on candy to buy","3":"walk to candy aisle","4":"walk inside store","5":"drive to the store","6":"purchase some candy"},"context":"drive to the store","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to check out; step1: exit the vehicle; step2: decide on candy to buy; step3: walk to candy aisle; step4: walk inside store; step5: drive to the store; step6: purchase some candy","flatten_input_for_script_generation":"You want to purchase some candy. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step1 -> step4; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: drive to the store; step1: exit the vehicle; step2: walk inside store; step3: walk to candy aisle; step4: decide on candy to buy; step5: walk to check out; step6: purchase some candy; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class PurchaseSomeCandy:\n\n    title = \"purchase some candy\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"exit the vehicle\"\n\n    def step2(self):\n        return \"walk inside store\"\n\n    def step3(self):\n        return \"walk to candy aisle\"\n\n    def step4(self):\n        return \"decide on candy to buy\"\n\n    def step5(self):\n        return \"walk to check out\"\n\n    def step6(self):\n        return \"purchase some candy\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseSomeCandy:\n\n    title = \"purchase some candy\"\n    steps = 7\n\n","reference_graph":{"title":"purchase some candy","num_steps":7,"schema":["step0: drive to the store","step1: exit the vehicle","step2: walk inside store","step3: walk to candy aisle","step4: decide on candy to buy","step5: walk to check out","step6: purchase some candy"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on costume and make up","events":{"0":"drive back home.","1":"get in the car.","2":"walk to the car.","3":"exit the makeup shop.","4":"buy the makeup.","5":"walk to cashier with makeup selections.","6":"shop for makeup","7":"put on costume and make up"},"context":"shop for makeup","minutes":60.0,"events_minutes":{"0":10.0,"1":0.1666666667,"2":2.0,"3":2.0,"4":2.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: drive back home.; step1: get in the car.; step2: walk to the car.; step3: exit the makeup shop.; step4: buy the makeup.; step5: walk to cashier with makeup selections.; step6: shop for makeup; step7: put on costume and make up","flatten_input_for_script_generation":"You want to put on costume and make up. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step0; step0 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: shop for makeup; step1: walk to cashier with makeup selections.; step2: buy the makeup.; step3: exit the makeup shop.; step4: walk to the car.; step5: get in the car.; step6: drive back home.; step7: put on costume and make up; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->0","2->1","3->2","4->3","5->4","6->5"],"reference_code":"class PutOnCostumeAndMakeUp:\n\n    title = \"put on costume and make up\"\n    steps = 8\n\n    def step0(self):\n        return \"shop for makeup\"\n\n    def step1(self):\n        return \"walk to cashier with makeup selections.\"\n\n    def step2(self):\n        return \"buy the makeup.\"\n\n    def step3(self):\n        return \"exit the makeup shop.\"\n\n    def step4(self):\n        return \"walk to the car.\"\n\n    def step5(self):\n        return \"get in the car.\"\n\n    def step6(self):\n        return \"drive back home.\"\n\n    def step7(self):\n        return \"put on costume and make up\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PutOnCostumeAndMakeUp:\n\n    title = \"put on costume and make up\"\n    steps = 8\n\n","reference_graph":{"title":"put on costume and make up","num_steps":8,"schema":["step0: shop for makeup","step1: walk to cashier with makeup selections.","step2: buy the makeup.","step3: exit the makeup shop.","step4: walk to the car.","step5: get in the car.","step6: drive back home.","step7: put on costume and make up"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"place the plant in the hole.","events":{"0":"carry plant to hole","1":"remove plant from temporary planter","2":"go to car","3":"take plant out of car","4":"hold on to temporary planter","5":"dig a hole in the yard","6":"place the plant in the hole."},"context":"dig a hole in the yard","minutes":5.0,"events_minutes":{"0":1.0,"1":0.5833333333,"2":1.0,"3":0.5833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: carry plant to hole; step1: remove plant from temporary planter; step2: go to car; step3: take plant out of car; step4: hold on to temporary planter; step5: dig a hole in the yard; step6: place the plant in the hole.","flatten_input_for_script_generation":"You want to place the plant in the hole.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: dig a hole in the yard; step1: go to car; step2: take plant out of car; step3: carry plant to hole; step4: hold on to temporary planter; step5: remove plant from temporary planter; step6: place the plant in the hole.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class PlaceThePlantInTheHole:\n\n    title = \"place the plant in the hole.\"\n    steps = 7\n\n    def step0(self):\n        return \"dig a hole in the yard\"\n\n    def step1(self):\n        return \"go to car\"\n\n    def step2(self):\n        return \"take plant out of car\"\n\n    def step3(self):\n        return \"carry plant to hole\"\n\n    def step4(self):\n        return \"hold on to temporary planter\"\n\n    def step5(self):\n        return \"remove plant from temporary planter\"\n\n    def step6(self):\n        return \"place the plant in the hole.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceThePlantInTheHole:\n\n    title = \"place the plant in the hole.\"\n    steps = 7\n\n","reference_graph":{"title":"place the plant in the hole.","num_steps":7,"schema":["step0: dig a hole in the yard","step1: go to car","step2: take plant out of car","step3: carry plant to hole","step4: hold on to temporary planter","step5: remove plant from temporary planter","step6: place the plant in the hole."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"converse with a chick","events":{"0":"Select a chick.","1":"Wait for chick to look not busy.","2":"Survey room to see a good chick to converse with.","3":"Walk over to chick.","4":"Make introductions with chick.","5":"Start making small talk.","6":"socialize with people","7":"converse with a chick"},"context":"socialize with people","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":2.0,"2":1.0,"3":0.3333333333,"4":0.1666666667,"5":5.0},"flatten_input_for_edge_prediction":"step0: Select a chick.; step1: Wait for chick to look not busy.; step2: Survey room to see a good chick to converse with.; step3: Walk over to chick.; step4: Make introductions with chick.; step5: Start making small talk.; step6: socialize with people; step7: converse with a chick","flatten_input_for_script_generation":"You want to converse with a chick. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step5; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: socialize with people; step1: Survey room to see a good chick to converse with.; step2: Select a chick.; step3: Wait for chick to look not busy.; step4: Walk over to chick.; step5: Make introductions with chick.; step6: Start making small talk.; step7: converse with a chick; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->5","5->7","6->2"],"reference_code":"class ConverseWithAChick:\n\n    title = \"converse with a chick\"\n    steps = 8\n\n    def step0(self):\n        return \"socialize with people\"\n\n    def step1(self):\n        return \"Survey room to see a good chick to converse with.\"\n\n    def step2(self):\n        return \"Select a chick.\"\n\n    def step3(self):\n        return \"Wait for chick to look not busy.\"\n\n    def step4(self):\n        return \"Walk over to chick.\"\n\n    def step5(self):\n        return \"Make introductions with chick.\"\n\n    def step6(self):\n        return \"Start making small talk.\"\n\n    def step7(self):\n        return \"converse with a chick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ConverseWithAChick:\n\n    title = \"converse with a chick\"\n    steps = 8\n\n","reference_graph":{"title":"converse with a chick","num_steps":8,"schema":["step0: socialize with people","step1: Survey room to see a good chick to converse with.","step2: Select a chick.","step3: Wait for chick to look not busy.","step4: Walk over to chick.","step5: Make introductions with chick.","step6: Start making small talk.","step7: converse with a chick"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Call the doctor's office","events":{"0":"dial the doctor's office","1":"locate the phone","2":"decide to seek help","3":"start to feel sick","4":"find the doctor's office number","5":"NONE","6":"Call the doctor's office"},"context":"NONE","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: dial the doctor's office; step1: locate the phone; step2: decide to seek help; step3: start to feel sick; step4: find the doctor's office number; step5: decided to Call the doctor's office; step6: Call the doctor's office","flatten_input_for_script_generation":"You want to Call the doctor's office. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to Call the doctor's office; step1: start to feel sick; step2: decide to seek help; step3: locate the phone; step4: find the doctor's office number; step5: dial the doctor's office; step6: Call the doctor's office; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->2","4->0","5->3"],"reference_code":"class CallTheDoctorsOffice:\n\n    title = \"Call the doctor's office\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Call the doctor's office\"\n\n    def step1(self):\n        return \"start to feel sick\"\n\n    def step2(self):\n        return \"decide to seek help\"\n\n    def step3(self):\n        return \"locate the phone\"\n\n    def step4(self):\n        return \"find the doctor's office number\"\n\n    def step5(self):\n        return \"dial the doctor's office\"\n\n    def step6(self):\n        return \"Call the doctor's office\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CallTheDoctorsOffice:\n\n    title = \"Call the doctor's office\"\n    steps = 7\n\n","reference_graph":{"title":"Call the doctor's office","num_steps":7,"schema":["step0: decided to Call the doctor's office","step1: start to feel sick","step2: decide to seek help","step3: locate the phone","step4: find the doctor's office number","step5: dial the doctor's office","step6: Call the doctor's office"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Go through school.","events":{"0":"go to primary school","1":"get through university","2":"have  parents choose a school","3":"attend preschool at age four and five","4":"get through high school","5":"NONE","6":"Go through school."},"context":"NONE","minutes":6307200.0,"events_minutes":{"0":2102400.0,"1":2102400.0,"2":525600.0,"3":1051200.0,"4":1051200.0},"flatten_input_for_edge_prediction":"step0: go to primary school; step1: get through university; step2: have  parents choose a school; step3: attend preschool at age four and five; step4: get through high school; step5: decided to Go through school.; step6: Go through school.","flatten_input_for_script_generation":"You want to Go through school.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to Go through school.; step1: have  parents choose a school; step2: attend preschool at age four and five; step3: go to primary school; step4: get through high school; step5: get through university; step6: Go through school.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class GoThroughSchool:\n\n    title = \"Go through school.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Go through school.\"\n\n    def step1(self):\n        return \"have  parents choose a school\"\n\n    def step2(self):\n        return \"attend preschool at age four and five\"\n\n    def step3(self):\n        return \"go to primary school\"\n\n    def step4(self):\n        return \"get through high school\"\n\n    def step5(self):\n        return \"get through university\"\n\n    def step6(self):\n        return \"Go through school.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoThroughSchool:\n\n    title = \"Go through school.\"\n    steps = 7\n\n","reference_graph":{"title":"Go through school.","num_steps":7,"schema":["step0: decided to Go through school.","step1: have  parents choose a school","step2: attend preschool at age four and five","step3: go to primary school","step4: get through high school","step5: get through university","step6: Go through school."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make plans for all to meet together.","events":{"0":"Propose the two ideas.","1":"Pick a time to meet.","2":"Pick the two best ideas.","3":"Come up with ideas to go out.","4":"Call up the group of friends.","5":"call a different friend.","6":"Make plans for all to meet together."},"context":"call a different friend.","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":2.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Propose the two ideas.; step1: Pick a time to meet.; step2: Pick the two best ideas.; step3: Come up with ideas to go out.; step4: Call up the group of friends.; step5: call a different friend.; step6: Make plans for all to meet together.","flatten_input_for_script_generation":"You want to Make plans for all to meet together.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step1; step4 -> step3; step0 -> step2; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: call a different friend.; step1: Call up the group of friends.; step2: Come up with ideas to go out.; step3: Propose the two ideas.; step4: Pick the two best ideas.; step5: Pick a time to meet.; step6: Make plans for all to meet together.; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->2","1->6","2->1","3->0","4->3","5->4"],"reference_code":"class MakePlansForAllToMeetTogether:\n\n    title = \"Make plans for all to meet together.\"\n    steps = 7\n\n    def step0(self):\n        return \"call a different friend.\"\n\n    def step1(self):\n        return \"Call up the group of friends.\"\n\n    def step2(self):\n        return \"Come up with ideas to go out.\"\n\n    def step3(self):\n        return \"Propose the two ideas.\"\n\n    def step4(self):\n        return \"Pick the two best ideas.\"\n\n    def step5(self):\n        return \"Pick a time to meet.\"\n\n    def step6(self):\n        return \"Make plans for all to meet together.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class MakePlansForAllToMeetTogether:\n\n    title = \"Make plans for all to meet together.\"\n    steps = 7\n\n","reference_graph":{"title":"Make plans for all to meet together.","num_steps":7,"schema":["step0: call a different friend.","step1: Call up the group of friends.","step2: Come up with ideas to go out.","step3: Propose the two ideas.","step4: Pick the two best ideas.","step5: Pick a time to meet.","step6: Make plans for all to meet together."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"put together the ingredients","events":{"0":"Look at recipe to make sure of ingredient measurement.","1":"Put ingredients in bowl together one by one.","2":"Grab utensils needed to scoop up ingredients.","3":"Grab a bowl to put ingredients in.","4":"Organize ingredients for ease of use.","5":"gather the cooking tools","6":"put together the ingredients"},"context":"gather the cooking tools","minutes":15.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.3333333333,"3":0.3333333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: Look at recipe to make sure of ingredient measurement.; step1: Put ingredients in bowl together one by one.; step2: Grab utensils needed to scoop up ingredients.; step3: Grab a bowl to put ingredients in.; step4: Organize ingredients for ease of use.; step5: gather the cooking tools; step6: put together the ingredients","flatten_input_for_script_generation":"You want to put together the ingredients. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step0 -> step2; step3 -> step1; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: gather the cooking tools; step1: Organize ingredients for ease of use.; step2: Look at recipe to make sure of ingredient measurement.; step3: Grab a bowl to put ingredients in.; step4: Grab utensils needed to scoop up ingredients.; step5: Put ingredients in bowl together one by one.; step6: put together the ingredients; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","0->2","1->6","2->1","3->1","4->0","5->4"],"reference_code":"class PutTogetherTheIngredients:\n\n    title = \"put together the ingredients\"\n    steps = 7\n\n    def step0(self):\n        return \"gather the cooking tools\"\n\n    def step1(self):\n        return \"Organize ingredients for ease of use.\"\n\n    def step2(self):\n        return \"Look at recipe to make sure of ingredient measurement.\"\n\n    def step3(self):\n        return \"Grab a bowl to put ingredients in.\"\n\n    def step4(self):\n        return \"Grab utensils needed to scoop up ingredients.\"\n\n    def step5(self):\n        return \"Put ingredients in bowl together one by one.\"\n\n    def step6(self):\n        return \"put together the ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutTogetherTheIngredients:\n\n    title = \"put together the ingredients\"\n    steps = 7\n\n","reference_graph":{"title":"put together the ingredients","num_steps":7,"schema":["step0: gather the cooking tools","step1: Organize ingredients for ease of use.","step2: Look at recipe to make sure of ingredient measurement.","step3: Grab a bowl to put ingredients in.","step4: Grab utensils needed to scoop up ingredients.","step5: Put ingredients in bowl together one by one.","step6: put together the ingredients"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Lock the car doors.","events":{"0":"exit the vehicle.","1":"check to make sure windows are rolled up","2":"turn off vehicle","3":"turn off any exterior car lights.","4":"grab anything needed from vehicle.","5":"Park the vehicle in the parking spot.","6":"Lock the car doors."},"context":"Park the vehicle in the parking spot.","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: exit the vehicle.; step1: check to make sure windows are rolled up; step2: turn off vehicle; step3: turn off any exterior car lights.; step4: grab anything needed from vehicle.; step5: Park the vehicle in the parking spot.; step6: Lock the car doors.","flatten_input_for_script_generation":"You want to Lock the car doors.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: Park the vehicle in the parking spot.; step1: turn off any exterior car lights.; step2: check to make sure windows are rolled up; step3: turn off vehicle; step4: grab anything needed from vehicle.; step5: exit the vehicle.; step6: Lock the car doors.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->2","4->0","5->1","5->3"],"reference_code":"class LockTheCarDoors:\n\n    title = \"Lock the car doors.\"\n    steps = 7\n\n    def step0(self):\n        return \"Park the vehicle in the parking spot.\"\n\n    def step1(self):\n        return \"turn off any exterior car lights.\"\n\n    def step2(self):\n        return \"check to make sure windows are rolled up\"\n\n    def step3(self):\n        return \"turn off vehicle\"\n\n    def step4(self):\n        return \"grab anything needed from vehicle.\"\n\n    def step5(self):\n        return \"exit the vehicle.\"\n\n    def step6(self):\n        return \"Lock the car doors.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LockTheCarDoors:\n\n    title = \"Lock the car doors.\"\n    steps = 7\n\n","reference_graph":{"title":"Lock the car doors.","num_steps":7,"schema":["step0: Park the vehicle in the parking spot.","step1: turn off any exterior car lights.","step2: check to make sure windows are rolled up","step3: turn off vehicle","step4: grab anything needed from vehicle.","step5: exit the vehicle.","step6: Lock the car doors."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick up squash gear from the garage","events":{"0":"enter the garage.","1":"exit the house.","2":"put on squash jersey.","3":"walk to the garage.","4":"walk to the front door.","5":"put on athletic shorts.","6":"NONE","7":"pick up squash gear from the garage"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":1.0,"3":0.3333333333,"4":0.5,"5":1.0},"flatten_input_for_edge_prediction":"step0: enter the garage.; step1: exit the house.; step2: put on squash jersey.; step3: walk to the garage.; step4: walk to the front door.; step5: put on athletic shorts.; step6: decided to pick up squash gear from the garage; step7: pick up squash gear from the garage","flatten_input_for_script_generation":"You want to pick up squash gear from the garage. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step5 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step7; step6 -> step2; step6 -> step5","flatten_output_for_script_generation":"step0: decided to pick up squash gear from the garage; step1: put on athletic shorts.; step2: put on squash jersey.; step3: walk to the front door.; step4: exit the house.; step5: walk to the garage.; step6: enter the garage.; step7: pick up squash gear from the garage; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->4","3->0","4->1","5->4","6->2","6->5"],"reference_code":"class PickUpSquashGearFromTheGarage:\n\n    title = \"pick up squash gear from the garage\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to pick up squash gear from the garage\"\n\n    def step1(self):\n        return \"put on athletic shorts.\"\n\n    def step2(self):\n        return \"put on squash jersey.\"\n\n    def step3(self):\n        return \"walk to the front door.\"\n\n    def step4(self):\n        return \"exit the house.\"\n\n    def step5(self):\n        return \"walk to the garage.\"\n\n    def step6(self):\n        return \"enter the garage.\"\n\n    def step7(self):\n        return \"pick up squash gear from the garage\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PickUpSquashGearFromTheGarage:\n\n    title = \"pick up squash gear from the garage\"\n    steps = 8\n\n","reference_graph":{"title":"pick up squash gear from the garage","num_steps":8,"schema":["step0: decided to pick up squash gear from the garage","step1: put on athletic shorts.","step2: put on squash jersey.","step3: walk to the front door.","step4: exit the house.","step5: walk to the garage.","step6: enter the garage.","step7: pick up squash gear from the garage"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get in the car","events":{"0":"pick up wallet","1":"exit the house","2":"pick up car keys","3":"find car keys","4":"look for wallet","5":"get ready to leave","6":"get in the car"},"context":"get ready to leave","minutes":5.0,"events_minutes":{"0":0.25,"1":0.25,"2":0.25,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: pick up wallet; step1: exit the house; step2: pick up car keys; step3: find car keys; step4: look for wallet; step5: get ready to leave; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: get ready to leave; step1: find car keys; step2: look for wallet; step3: pick up wallet; step4: exit the house; step5: get in the car; step6: pick up car keys; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->1","1->6","2->1","3->2","4->0","5->4","5->3"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get ready to leave\"\n\n    def step1(self):\n        return \"find car keys\"\n\n    def step2(self):\n        return \"look for wallet\"\n\n    def step3(self):\n        return \"pick up wallet\"\n\n    def step4(self):\n        return \"exit the house\"\n\n    def step5(self):\n        return \"get in the car\"\n\n    def step6(self):\n        return \"pick up car keys\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: get ready to leave","step1: find car keys","step2: look for wallet","step3: pick up wallet","step4: exit the house","step5: get in the car","step6: pick up car keys"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"Place baking sheet on the counter.","events":{"0":"grab baking sheet","1":"get cookies to correct consistency","2":"open storage drawer","3":"look into drawer","4":"find baking sheet","5":"Mix the ingredients.","6":"Place baking sheet on the counter."},"context":"Mix the ingredients.","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: grab baking sheet; step1: get cookies to correct consistency; step2: open storage drawer; step3: look into drawer; step4: find baking sheet; step5: Mix the ingredients.; step6: Place baking sheet on the counter.","flatten_input_for_script_generation":"You want to Place baking sheet on the counter.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Mix the ingredients.; step1: get cookies to correct consistency; step2: open storage drawer; step3: look into drawer; step4: find baking sheet; step5: grab baking sheet; step6: Place baking sheet on the counter.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->4","4->0","5->1"],"reference_code":"class PlaceBakingSheetOnTheCounter:\n\n    title = \"Place baking sheet on the counter.\"\n    steps = 7\n\n    def step0(self):\n        return \"Mix the ingredients.\"\n\n    def step1(self):\n        return \"get cookies to correct consistency\"\n\n    def step2(self):\n        return \"open storage drawer\"\n\n    def step3(self):\n        return \"look into drawer\"\n\n    def step4(self):\n        return \"find baking sheet\"\n\n    def step5(self):\n        return \"grab baking sheet\"\n\n    def step6(self):\n        return \"Place baking sheet on the counter.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceBakingSheetOnTheCounter:\n\n    title = \"Place baking sheet on the counter.\"\n    steps = 7\n\n","reference_graph":{"title":"Place baking sheet on the counter.","num_steps":7,"schema":["step0: Mix the ingredients.","step1: get cookies to correct consistency","step2: open storage drawer","step3: look into drawer","step4: find baking sheet","step5: grab baking sheet","step6: Place baking sheet on the counter."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"drive over to available parking spot","1":"put the car's transmission into park","2":"find available spot","3":"look for available parking spot","4":"pull the car into playground parking lot","5":"stop the car","6":"pull car into available parking spot","7":"drive to the playground","8":"park the car"},"context":"drive to the playground","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0166666667,"2":0.0833333333,"3":1.0,"4":0.3333333333,"5":0.0166666667,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: drive over to available parking spot; step1: put the car's transmission into park; step2: find available spot; step3: look for available parking spot; step4: pull the car into playground parking lot; step5: stop the car; step6: pull car into available parking spot; step7: drive to the playground; step8: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step6 -> step5; step5 -> step1; step1 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: drive to the playground; step1: pull the car into playground parking lot; step2: look for available parking spot; step3: find available spot; step4: drive over to available parking spot; step5: pull car into available parking spot; step6: stop the car; step7: put the car's transmission into park; step8: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->0","3->2","4->3","5->1","6->5","7->4"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 9\n\n    def step0(self):\n        return \"drive to the playground\"\n\n    def step1(self):\n        return \"pull the car into playground parking lot\"\n\n    def step2(self):\n        return \"look for available parking spot\"\n\n    def step3(self):\n        return \"find available spot\"\n\n    def step4(self):\n        return \"drive over to available parking spot\"\n\n    def step5(self):\n        return \"pull car into available parking spot\"\n\n    def step6(self):\n        return \"stop the car\"\n\n    def step7(self):\n        return \"put the car's transmission into park\"\n\n    def step8(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 9\n\n","reference_graph":{"title":"park the car","num_steps":9,"schema":["step0: drive to the playground","step1: pull the car into playground parking lot","step2: look for available parking spot","step3: find available spot","step4: drive over to available parking spot","step5: pull car into available parking spot","step6: stop the car","step7: put the car's transmission into park","step8: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"stand in line at the counter","events":{"0":"stop at back of line","1":"locate the line","2":"look at map for directions","3":"walk towards line","4":"enter the office through front door","5":"enter the office","6":"stand in line at the counter"},"context":"enter the office","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: stop at back of line; step1: locate the line; step2: look at map for directions; step3: walk towards line; step4: enter the office through front door; step5: enter the office; step6: stand in line at the counter","flatten_input_for_script_generation":"You want to stand in line at the counter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: enter the office; step1: enter the office through front door; step2: look at map for directions; step3: locate the line; step4: walk towards line; step5: stop at back of line; step6: stand in line at the counter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class StandInLineAtTheCounter:\n\n    title = \"stand in line at the counter\"\n    steps = 7\n\n    def step0(self):\n        return \"enter the office\"\n\n    def step1(self):\n        return \"enter the office through front door\"\n\n    def step2(self):\n        return \"look at map for directions\"\n\n    def step3(self):\n        return \"locate the line\"\n\n    def step4(self):\n        return \"walk towards line\"\n\n    def step5(self):\n        return \"stop at back of line\"\n\n    def step6(self):\n        return \"stand in line at the counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StandInLineAtTheCounter:\n\n    title = \"stand in line at the counter\"\n    steps = 7\n\n","reference_graph":{"title":"stand in line at the counter","num_steps":7,"schema":["step0: enter the office","step1: enter the office through front door","step2: look at map for directions","step3: locate the line","step4: walk towards line","step5: stop at back of line","step6: stand in line at the counter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"turn on the stereo","events":{"0":"make sure all wires are connected correctly","1":"move hand towards stereo power button","2":"look for location of power button","3":"adjust to standing up position","4":"press the power button","5":"plug in speakers","6":"turn on the stereo"},"context":"plug in speakers","minutes":2.0,"events_minutes":{"0":0.5,"1":0.5,"2":0.5,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: make sure all wires are connected correctly; step1: move hand towards stereo power button; step2: look for location of power button; step3: adjust to standing up position; step4: press the power button; step5: plug in speakers; step6: turn on the stereo","flatten_input_for_script_generation":"You want to turn on the stereo. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step3 -> step2; step2 -> step1; step4 -> step6; step0 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: plug in speakers; step1: make sure all wires are connected correctly; step2: move hand towards stereo power button; step3: press the power button; step4: turn on the stereo; step5: adjust to standing up position; step6: look for location of power button; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step2; step1 -> step5","gold_edges_for_prediction":["0->3","1->4","2->1","3->2","4->6","5->0"],"reference_code":"class TurnOnTheStereo:\n\n    title = \"turn on the stereo\"\n    steps = 7\n\n    def step0(self):\n        return \"plug in speakers\"\n\n    def step1(self):\n        return \"make sure all wires are connected correctly\"\n\n    def step2(self):\n        return \"move hand towards stereo power button\"\n\n    def step3(self):\n        return \"press the power button\"\n\n    def step4(self):\n        return \"turn on the stereo\"\n\n    def step5(self):\n        return \"adjust to standing up position\"\n\n    def step6(self):\n        return \"look for location of power button\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n            \"step1 -> step5\",\n        ]\n","input_prompt_code":"class TurnOnTheStereo:\n\n    title = \"turn on the stereo\"\n    steps = 7\n\n","reference_graph":{"title":"turn on the stereo","num_steps":7,"schema":["step0: plug in speakers","step1: make sure all wires are connected correctly","step2: move hand towards stereo power button","step3: press the power button","step4: turn on the stereo","step5: adjust to standing up position","step6: look for location of power button"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step2","step1 -> step5"]}}
{"scenario":"open chrome app","events":{"0":"unlock the phone","1":"find chrome app button","2":"reach into pocket","3":"pull phone out","4":"feel around for phone","5":"NONE","6":"open chrome app"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: unlock the phone; step1: find chrome app button; step2: reach into pocket; step3: pull phone out; step4: feel around for phone; step5: decided to open chrome app; step6: open chrome app","flatten_input_for_script_generation":"You want to open chrome app. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to open chrome app; step1: reach into pocket; step2: feel around for phone; step3: pull phone out; step4: unlock the phone; step5: find chrome app button; step6: open chrome app; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class OpenChromeApp:\n\n    title = \"open chrome app\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to open chrome app\"\n\n    def step1(self):\n        return \"reach into pocket\"\n\n    def step2(self):\n        return \"feel around for phone\"\n\n    def step3(self):\n        return \"pull phone out\"\n\n    def step4(self):\n        return \"unlock the phone\"\n\n    def step5(self):\n        return \"find chrome app button\"\n\n    def step6(self):\n        return \"open chrome app\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenChromeApp:\n\n    title = \"open chrome app\"\n    steps = 7\n\n","reference_graph":{"title":"open chrome app","num_steps":7,"schema":["step0: decided to open chrome app","step1: reach into pocket","step2: feel around for phone","step3: pull phone out","step4: unlock the phone","step5: find chrome app button","step6: open chrome app"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Arrange wood in area outside.","events":{"0":"Kneel down by fire pit.","1":"Walk to fire pit.","2":"Walk out the door.","3":"Close the door.","4":"Open the door.","5":"Collect match and fuel.","6":"Arrange wood in area outside."},"context":"Collect match and fuel.","minutes":5.0,"events_minutes":{"0":2.0,"1":7.0,"2":0.1666666667,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Kneel down by fire pit.; step1: Walk to fire pit.; step2: Walk out the door.; step3: Close the door.; step4: Open the door.; step5: Collect match and fuel.; step6: Arrange wood in area outside.","flatten_input_for_script_generation":"You want to Arrange wood in area outside.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Collect match and fuel.; step1: Open the door.; step2: Walk out the door.; step3: Close the door.; step4: Walk to fire pit.; step5: Kneel down by fire pit.; step6: Arrange wood in area outside.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class ArrangeWoodInAreaOutside:\n\n    title = \"Arrange wood in area outside.\"\n    steps = 7\n\n    def step0(self):\n        return \"Collect match and fuel.\"\n\n    def step1(self):\n        return \"Open the door.\"\n\n    def step2(self):\n        return \"Walk out the door.\"\n\n    def step3(self):\n        return \"Close the door.\"\n\n    def step4(self):\n        return \"Walk to fire pit.\"\n\n    def step5(self):\n        return \"Kneel down by fire pit.\"\n\n    def step6(self):\n        return \"Arrange wood in area outside.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ArrangeWoodInAreaOutside:\n\n    title = \"Arrange wood in area outside.\"\n    steps = 7\n\n","reference_graph":{"title":"Arrange wood in area outside.","num_steps":7,"schema":["step0: Collect match and fuel.","step1: Open the door.","step2: Walk out the door.","step3: Close the door.","step4: Walk to fire pit.","step5: Kneel down by fire pit.","step6: Arrange wood in area outside."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk down the hall","events":{"0":"move feet alternating","1":"let go of hand","2":"turn body away from door","3":"close office door","4":"turn head away from door","5":"walk outside of office","6":"walk down the hall"},"context":"walk outside of office","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: move feet alternating; step1: let go of hand; step2: turn body away from door; step3: close office door; step4: turn head away from door; step5: walk outside of office; step6: walk down the hall","flatten_input_for_script_generation":"You want to walk down the hall. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: walk outside of office; step1: close office door; step2: let go of hand; step3: turn body away from door; step4: turn head away from door; step5: move feet alternating; step6: walk down the hall; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->1","4->0","5->3"],"reference_code":"class WalkDownTheHall:\n\n    title = \"walk down the hall\"\n    steps = 7\n\n    def step0(self):\n        return \"walk outside of office\"\n\n    def step1(self):\n        return \"close office door\"\n\n    def step2(self):\n        return \"let go of hand\"\n\n    def step3(self):\n        return \"turn body away from door\"\n\n    def step4(self):\n        return \"turn head away from door\"\n\n    def step5(self):\n        return \"move feet alternating\"\n\n    def step6(self):\n        return \"walk down the hall\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkDownTheHall:\n\n    title = \"walk down the hall\"\n    steps = 7\n\n","reference_graph":{"title":"walk down the hall","num_steps":7,"schema":["step0: walk outside of office","step1: close office door","step2: let go of hand","step3: turn body away from door","step4: turn head away from door","step5: move feet alternating","step6: walk down the hall"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of the car","events":{"0":"put cars transmission in park","1":"open car door","2":"turn off car","3":"remove seat belt","4":"take keys out of ignition","5":"park in a spot","6":"get out of the car"},"context":"park in a spot","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: put cars transmission in park; step1: open car door; step2: turn off car; step3: remove seat belt; step4: take keys out of ignition; step5: park in a spot; step6: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: park in a spot; step1: put cars transmission in park; step2: turn off car; step3: take keys out of ignition; step4: remove seat belt; step5: open car door; step6: get out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->1","4->3","5->0"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"park in a spot\"\n\n    def step1(self):\n        return \"put cars transmission in park\"\n\n    def step2(self):\n        return \"turn off car\"\n\n    def step3(self):\n        return \"take keys out of ignition\"\n\n    def step4(self):\n        return \"remove seat belt\"\n\n    def step5(self):\n        return \"open car door\"\n\n    def step6(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n","reference_graph":{"title":"get out of the car","num_steps":7,"schema":["step0: park in a spot","step1: put cars transmission in park","step2: turn off car","step3: take keys out of ignition","step4: remove seat belt","step5: open car door","step6: get out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Gather some sand.","events":{"0":"gather up some sand","1":"get to the car","2":"get out of bed","3":"drive to the beach","4":"get up and get dressed","5":"NONE","6":"Gather some sand."},"context":"NONE","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: gather up some sand; step1: get to the car; step2: get out of bed; step3: drive to the beach; step4: get up and get dressed; step5: decided to Gather some sand.; step6: Gather some sand.","flatten_input_for_script_generation":"You want to Gather some sand.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to Gather some sand.; step1: get out of bed; step2: get up and get dressed; step3: get to the car; step4: drive to the beach; step5: gather up some sand; step6: Gather some sand.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class GatherSomeSand:\n\n    title = \"Gather some sand.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Gather some sand.\"\n\n    def step1(self):\n        return \"get out of bed\"\n\n    def step2(self):\n        return \"get up and get dressed\"\n\n    def step3(self):\n        return \"get to the car\"\n\n    def step4(self):\n        return \"drive to the beach\"\n\n    def step5(self):\n        return \"gather up some sand\"\n\n    def step6(self):\n        return \"Gather some sand.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherSomeSand:\n\n    title = \"Gather some sand.\"\n    steps = 7\n\n","reference_graph":{"title":"Gather some sand.","num_steps":7,"schema":["step0: decided to Gather some sand.","step1: get out of bed","step2: get up and get dressed","step3: get to the car","step4: drive to the beach","step5: gather up some sand","step6: Gather some sand."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start the car","events":{"0":"put on the seatbelt.","1":"put the key in the ignition.","2":"sit down in the car.","3":"take out the key.","4":"close the door.","5":"get in the car","6":"start the car"},"context":"get in the car","minutes":1.0,"events_minutes":{"0":0.5,"1":1.0,"2":0.5,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: put on the seatbelt.; step1: put the key in the ignition.; step2: sit down in the car.; step3: take out the key.; step4: close the door.; step5: get in the car; step6: start the car","flatten_input_for_script_generation":"You want to start the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: get in the car; step1: sit down in the car.; step2: close the door.; step3: put on the seatbelt.; step4: take out the key.; step5: put the key in the ignition.; step6: start the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class StartTheCar:\n\n    title = \"start the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get in the car\"\n\n    def step1(self):\n        return \"sit down in the car.\"\n\n    def step2(self):\n        return \"close the door.\"\n\n    def step3(self):\n        return \"put on the seatbelt.\"\n\n    def step4(self):\n        return \"take out the key.\"\n\n    def step5(self):\n        return \"put the key in the ignition.\"\n\n    def step6(self):\n        return \"start the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartTheCar:\n\n    title = \"start the car\"\n    steps = 7\n\n","reference_graph":{"title":"start the car","num_steps":7,"schema":["step0: get in the car","step1: sit down in the car.","step2: close the door.","step3: put on the seatbelt.","step4: take out the key.","step5: put the key in the ignition.","step6: start the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"save money from work","events":{"0":"Receive an income from work.","1":"Carefully budget out expenses.","2":"Earn a surplus of income after expenditures.","3":"Store the surplus in the bank account.","4":"Open a bank account.","5":"NONE","6":"save money from work"},"context":"NONE","minutes":525600.0,"events_minutes":{"0":30240.0,"1":60.0,"2":10080.0,"3":15.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Receive an income from work.; step1: Carefully budget out expenses.; step2: Earn a surplus of income after expenditures.; step3: Store the surplus in the bank account.; step4: Open a bank account.; step5: decided to save money from work; step6: save money from work","flatten_input_for_script_generation":"You want to save money from work. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to save money from work; step1: Receive an income from work.; step2: Open a bank account.; step3: Carefully budget out expenses.; step4: Earn a surplus of income after expenditures.; step5: Store the surplus in the bank account.; step6: save money from work; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->6","4->1","5->0"],"reference_code":"class SaveMoneyFromWork:\n\n    title = \"save money from work\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to save money from work\"\n\n    def step1(self):\n        return \"Receive an income from work.\"\n\n    def step2(self):\n        return \"Open a bank account.\"\n\n    def step3(self):\n        return \"Carefully budget out expenses.\"\n\n    def step4(self):\n        return \"Earn a surplus of income after expenditures.\"\n\n    def step5(self):\n        return \"Store the surplus in the bank account.\"\n\n    def step6(self):\n        return \"save money from work\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SaveMoneyFromWork:\n\n    title = \"save money from work\"\n    steps = 7\n\n","reference_graph":{"title":"save money from work","num_steps":7,"schema":["step0: decided to save money from work","step1: Receive an income from work.","step2: Open a bank account.","step3: Carefully budget out expenses.","step4: Earn a surplus of income after expenditures.","step5: Store the surplus in the bank account.","step6: save money from work"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"invite people to the party","events":{"0":"call people to invite","1":"pick up the phone","2":"determine who to invite","3":"locate the phone","4":"unlock the screen","5":"NONE","6":"invite people to the party"},"context":"NONE","minutes":15.0,"events_minutes":{"0":10.0,"1":0.0833333333,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: call people to invite; step1: pick up the phone; step2: determine who to invite; step3: locate the phone; step4: unlock the screen; step5: decided to invite people to the party; step6: invite people to the party","flatten_input_for_script_generation":"You want to invite people to the party. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step3 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: decided to invite people to the party; step1: locate the phone; step2: determine who to invite; step3: call people to invite; step4: invite people to the party; step5: pick up the phone; step6: unlock the screen; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->6","1->4","2->0","3->1","4->0","5->2","5->3"],"reference_code":"class InvitePeopleToTheParty:\n\n    title = \"invite people to the party\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to invite people to the party\"\n\n    def step1(self):\n        return \"locate the phone\"\n\n    def step2(self):\n        return \"determine who to invite\"\n\n    def step3(self):\n        return \"call people to invite\"\n\n    def step4(self):\n        return \"invite people to the party\"\n\n    def step5(self):\n        return \"pick up the phone\"\n\n    def step6(self):\n        return \"unlock the screen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class InvitePeopleToTheParty:\n\n    title = \"invite people to the party\"\n    steps = 7\n\n","reference_graph":{"title":"invite people to the party","num_steps":7,"schema":["step0: decided to invite people to the party","step1: locate the phone","step2: determine who to invite","step3: call people to invite","step4: invite people to the party","step5: pick up the phone","step6: unlock the screen"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"Choose highest paying HITS","events":{"0":"wait for HITS to show up","1":"narrow down search results","2":"check reviews for requesters","3":"look through and mark bad requesters","4":"turn on hit searcher","5":"Search for high paying surveys","6":"Choose highest paying HITS"},"context":"Search for high paying surveys","minutes":10.0,"events_minutes":{"0":4.0,"1":4.0,"2":2.0,"3":3.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: wait for HITS to show up; step1: narrow down search results; step2: check reviews for requesters; step3: look through and mark bad requesters; step4: turn on hit searcher; step5: Search for high paying surveys; step6: Choose highest paying HITS","flatten_input_for_script_generation":"You want to Choose highest paying HITS. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step4 -> step0; step3 -> step2; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Search for high paying surveys; step1: turn on hit searcher; step2: look through and mark bad requesters; step3: wait for HITS to show up; step4: check reviews for requesters; step5: narrow down search results; step6: Choose highest paying HITS; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->2","4->3","4->0","5->4"],"reference_code":"class ChooseHighestPayingHits:\n\n    title = \"Choose highest paying HITS\"\n    steps = 7\n\n    def step0(self):\n        return \"Search for high paying surveys\"\n\n    def step1(self):\n        return \"turn on hit searcher\"\n\n    def step2(self):\n        return \"look through and mark bad requesters\"\n\n    def step3(self):\n        return \"wait for HITS to show up\"\n\n    def step4(self):\n        return \"check reviews for requesters\"\n\n    def step5(self):\n        return \"narrow down search results\"\n\n    def step6(self):\n        return \"Choose highest paying HITS\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseHighestPayingHits:\n\n    title = \"Choose highest paying HITS\"\n    steps = 7\n\n","reference_graph":{"title":"Choose highest paying HITS","num_steps":7,"schema":["step0: Search for high paying surveys","step1: turn on hit searcher","step2: look through and mark bad requesters","step3: wait for HITS to show up","step4: check reviews for requesters","step5: narrow down search results","step6: Choose highest paying HITS"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take asparagus out of the refrigerator","events":{"0":"drive to store","1":"decide to cook asparagus","2":"buy some asparagus","3":"drive back home","4":"exit the house","5":"put asparagus in fridge","6":"NONE","7":"take asparagus out of the refrigerator"},"context":"NONE","minutes":1.0,"events_minutes":{"0":5.0,"1":0.0833333333,"2":5.0,"3":5.0,"4":1.0,"5":0.25},"flatten_input_for_edge_prediction":"step0: drive to store; step1: decide to cook asparagus; step2: buy some asparagus; step3: drive back home; step4: exit the house; step5: put asparagus in fridge; step6: decided to take asparagus out of the refrigerator; step7: take asparagus out of the refrigerator","flatten_input_for_script_generation":"You want to take asparagus out of the refrigerator. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step5; step5 -> step1; step1 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: decided to take asparagus out of the refrigerator; step1: exit the house; step2: drive to store; step3: buy some asparagus; step4: drive back home; step5: put asparagus in fridge; step6: decide to cook asparagus; step7: take asparagus out of the refrigerator; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->7","2->3","3->5","4->0","5->1","6->4"],"reference_code":"class TakeAsparagusOutOfTheRefrigerator:\n\n    title = \"take asparagus out of the refrigerator\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to take asparagus out of the refrigerator\"\n\n    def step1(self):\n        return \"exit the house\"\n\n    def step2(self):\n        return \"drive to store\"\n\n    def step3(self):\n        return \"buy some asparagus\"\n\n    def step4(self):\n        return \"drive back home\"\n\n    def step5(self):\n        return \"put asparagus in fridge\"\n\n    def step6(self):\n        return \"decide to cook asparagus\"\n\n    def step7(self):\n        return \"take asparagus out of the refrigerator\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class TakeAsparagusOutOfTheRefrigerator:\n\n    title = \"take asparagus out of the refrigerator\"\n    steps = 8\n\n","reference_graph":{"title":"take asparagus out of the refrigerator","num_steps":8,"schema":["step0: decided to take asparagus out of the refrigerator","step1: exit the house","step2: drive to store","step3: buy some asparagus","step4: drive back home","step5: put asparagus in fridge","step6: decide to cook asparagus","step7: take asparagus out of the refrigerator"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Get a box.","events":{"0":"go to box aisle","1":"grab desired box","2":"get in car","3":"go to checkout","4":"find the correct box size","5":"drive to store","6":"NONE","7":"Get a box."},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: go to box aisle; step1: grab desired box; step2: get in car; step3: go to checkout; step4: find the correct box size; step5: drive to store; step6: decided to Get a box.; step7: Get a box.","flatten_input_for_script_generation":"You want to Get a box.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step5; step5 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to Get a box.; step1: get in car; step2: drive to store; step3: go to box aisle; step4: find the correct box size; step5: grab desired box; step6: go to checkout; step7: Get a box.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->5","3->7","4->1","5->0","6->2"],"reference_code":"class GetABox:\n\n    title = \"Get a box.\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Get a box.\"\n\n    def step1(self):\n        return \"get in car\"\n\n    def step2(self):\n        return \"drive to store\"\n\n    def step3(self):\n        return \"go to box aisle\"\n\n    def step4(self):\n        return \"find the correct box size\"\n\n    def step5(self):\n        return \"grab desired box\"\n\n    def step6(self):\n        return \"go to checkout\"\n\n    def step7(self):\n        return \"Get a box.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetABox:\n\n    title = \"Get a box.\"\n    steps = 8\n\n","reference_graph":{"title":"Get a box.","num_steps":8,"schema":["step0: decided to Get a box.","step1: get in car","step2: drive to store","step3: go to box aisle","step4: find the correct box size","step5: grab desired box","step6: go to checkout","step7: Get a box."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"order school supplies","events":{"0":"verify everything that is needed is in the cart","1":"look at the supply list","2":"go to the virtual cart","3":"search for the items on the website","4":"add items to cart","5":"enter payment information","6":"submit the order","7":"order the books online","8":"order school supplies"},"context":"order the books online","minutes":5.0,"events_minutes":{"0":2.0,"1":2.0,"2":0.1666666667,"3":1.0,"4":5.0,"5":2.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: verify everything that is needed is in the cart; step1: look at the supply list; step2: go to the virtual cart; step3: search for the items on the website; step4: add items to cart; step5: enter payment information; step6: submit the order; step7: order the books online; step8: order school supplies","flatten_input_for_script_generation":"You want to order school supplies. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step5; step5 -> step6; step6 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: order the books online; step1: look at the supply list; step2: search for the items on the website; step3: add items to cart; step4: go to the virtual cart; step5: verify everything that is needed is in the cart; step6: enter payment information; step7: submit the order; step8: order school supplies; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->3","2->0","3->4","4->2","5->6","6->8","7->1"],"reference_code":"class OrderSchoolSupplies:\n\n    title = \"order school supplies\"\n    steps = 9\n\n    def step0(self):\n        return \"order the books online\"\n\n    def step1(self):\n        return \"look at the supply list\"\n\n    def step2(self):\n        return \"search for the items on the website\"\n\n    def step3(self):\n        return \"add items to cart\"\n\n    def step4(self):\n        return \"go to the virtual cart\"\n\n    def step5(self):\n        return \"verify everything that is needed is in the cart\"\n\n    def step6(self):\n        return \"enter payment information\"\n\n    def step7(self):\n        return \"submit the order\"\n\n    def step8(self):\n        return \"order school supplies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class OrderSchoolSupplies:\n\n    title = \"order school supplies\"\n    steps = 9\n\n","reference_graph":{"title":"order school supplies","num_steps":9,"schema":["step0: order the books online","step1: look at the supply list","step2: search for the items on the website","step3: add items to cart","step4: go to the virtual cart","step5: verify everything that is needed is in the cart","step6: enter payment information","step7: submit the order","step8: order school supplies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"socialize with people","events":{"0":"enter the bar","1":"turn the car off","2":"park the car","3":"finding parking space","4":"get out of the car","5":"drive to the bar","6":"socialize with people"},"context":"drive to the bar","minutes":25.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":0.0833333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: enter the bar; step1: turn the car off; step2: park the car; step3: finding parking space; step4: get out of the car; step5: drive to the bar; step6: socialize with people","flatten_input_for_script_generation":"You want to socialize with people. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to the bar; step1: finding parking space; step2: park the car; step3: turn the car off; step4: get out of the car; step5: enter the bar; step6: socialize with people; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->2","4->0","5->3"],"reference_code":"class SocializeWithPeople:\n\n    title = \"socialize with people\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the bar\"\n\n    def step1(self):\n        return \"finding parking space\"\n\n    def step2(self):\n        return \"park the car\"\n\n    def step3(self):\n        return \"turn the car off\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"enter the bar\"\n\n    def step6(self):\n        return \"socialize with people\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SocializeWithPeople:\n\n    title = \"socialize with people\"\n    steps = 7\n\n","reference_graph":{"title":"socialize with people","num_steps":7,"schema":["step0: drive to the bar","step1: finding parking space","step2: park the car","step3: turn the car off","step4: get out of the car","step5: enter the bar","step6: socialize with people"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Travel to the country by plane.","events":{"0":"pack a suitcase with clothes.","1":"pack a backpack with toiletries.","2":"order an Uber.","3":"wait for the Uber to arrive.","4":"wake up on the day of the trip.","5":"get driven to the airport.","6":"put laptop into the backpack.","7":"Pay for the trip.","8":"Travel to the country by plane."},"context":"Pay for the trip.","minutes":1440.0,"events_minutes":{"0":20.0,"1":5.0,"2":3.0,"3":10.0,"4":0.1666666667,"5":20.0,"6":5.0},"flatten_input_for_edge_prediction":"step0: pack a suitcase with clothes.; step1: pack a backpack with toiletries.; step2: order an Uber.; step3: wait for the Uber to arrive.; step4: wake up on the day of the trip.; step5: get driven to the airport.; step6: put laptop into the backpack.; step7: Pay for the trip.; step8: Travel to the country by plane.","flatten_input_for_script_generation":"You want to Travel to the country by plane.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step1; step4 -> step6; step0 -> step2; step1 -> step2; step6 -> step2; step2 -> step3; step3 -> step5; step5 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: Pay for the trip.; step1: wake up on the day of the trip.; step2: pack a suitcase with clothes.; step3: pack a backpack with toiletries.; step4: put laptop into the backpack.; step5: order an Uber.; step6: wait for the Uber to arrive.; step7: get driven to the airport.; step8: Travel to the country by plane.; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->2","1->2","2->3","3->5","4->0","4->1","4->6","5->8","6->2","7->4"],"reference_code":"class TravelToTheCountryByPlane:\n\n    title = \"Travel to the country by plane.\"\n    steps = 9\n\n    def step0(self):\n        return \"Pay for the trip.\"\n\n    def step1(self):\n        return \"wake up on the day of the trip.\"\n\n    def step2(self):\n        return \"pack a suitcase with clothes.\"\n\n    def step3(self):\n        return \"pack a backpack with toiletries.\"\n\n    def step4(self):\n        return \"put laptop into the backpack.\"\n\n    def step5(self):\n        return \"order an Uber.\"\n\n    def step6(self):\n        return \"wait for the Uber to arrive.\"\n\n    def step7(self):\n        return \"get driven to the airport.\"\n\n    def step8(self):\n        return \"Travel to the country by plane.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TravelToTheCountryByPlane:\n\n    title = \"Travel to the country by plane.\"\n    steps = 9\n\n","reference_graph":{"title":"Travel to the country by plane.","num_steps":9,"schema":["step0: Pay for the trip.","step1: wake up on the day of the trip.","step2: pack a suitcase with clothes.","step3: pack a backpack with toiletries.","step4: put laptop into the backpack.","step5: order an Uber.","step6: wait for the Uber to arrive.","step7: get driven to the airport.","step8: Travel to the country by plane."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"choose a particular book","events":{"0":"narrow down choices","1":"compare the books","2":"read reviews for the books","3":"make final decision","4":"read the author description","5":"read samples of books","6":"choose a particular book"},"context":"read samples of books","minutes":5.0,"events_minutes":{"0":2.0,"1":3.0,"2":3.0,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: narrow down choices; step1: compare the books; step2: read reviews for the books; step3: make final decision; step4: read the author description; step5: read samples of books; step6: choose a particular book","flatten_input_for_script_generation":"You want to choose a particular book. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step4 -> step1; step0 -> step3; step3 -> step6; step5 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: read samples of books; step1: read the author description; step2: read reviews for the books; step3: compare the books; step4: narrow down choices; step5: make final decision; step6: choose a particular book; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->6","4->1","5->2","5->4"],"reference_code":"class ChooseAParticularBook:\n\n    title = \"choose a particular book\"\n    steps = 7\n\n    def step0(self):\n        return \"read samples of books\"\n\n    def step1(self):\n        return \"read the author description\"\n\n    def step2(self):\n        return \"read reviews for the books\"\n\n    def step3(self):\n        return \"compare the books\"\n\n    def step4(self):\n        return \"narrow down choices\"\n\n    def step5(self):\n        return \"make final decision\"\n\n    def step6(self):\n        return \"choose a particular book\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChooseAParticularBook:\n\n    title = \"choose a particular book\"\n    steps = 7\n\n","reference_graph":{"title":"choose a particular book","num_steps":7,"schema":["step0: read samples of books","step1: read the author description","step2: read reviews for the books","step3: compare the books","step4: narrow down choices","step5: make final decision","step6: choose a particular book"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step5 -> step6"]}}
{"scenario":"walk to school supplies","events":{"0":"pick out items needed","1":"ask attendant for directions","2":"look at school supplies","3":"locate aisle for items","4":"walk to the aisle","5":"enter the store","6":"walk to school supplies"},"context":"enter the store","minutes":3.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: pick out items needed; step1: ask attendant for directions; step2: look at school supplies; step3: locate aisle for items; step4: walk to the aisle; step5: enter the store; step6: walk to school supplies","flatten_input_for_script_generation":"You want to walk to school supplies. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step2; step0 -> step6; step2 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: enter the store; step1: ask attendant for directions; step2: locate aisle for items; step3: walk to the aisle; step4: look at school supplies; step5: pick out items needed; step6: walk to school supplies; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->4","4->2","5->1"],"reference_code":"class WalkToSchoolSupplies:\n\n    title = \"walk to school supplies\"\n    steps = 7\n\n    def step0(self):\n        return \"enter the store\"\n\n    def step1(self):\n        return \"ask attendant for directions\"\n\n    def step2(self):\n        return \"locate aisle for items\"\n\n    def step3(self):\n        return \"walk to the aisle\"\n\n    def step4(self):\n        return \"look at school supplies\"\n\n    def step5(self):\n        return \"pick out items needed\"\n\n    def step6(self):\n        return \"walk to school supplies\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToSchoolSupplies:\n\n    title = \"walk to school supplies\"\n    steps = 7\n\n","reference_graph":{"title":"walk to school supplies","num_steps":7,"schema":["step0: enter the store","step1: ask attendant for directions","step2: locate aisle for items","step3: walk to the aisle","step4: look at school supplies","step5: pick out items needed","step6: walk to school supplies"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"parked the car","events":{"0":"look around lot for empty spot","1":"enter parking lot","2":"turn off the car","3":"maneuver car in spot","4":"drive to empty spot","5":"drove to grocery store","6":"parked the car"},"context":"drove to grocery store","minutes":3.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look around lot for empty spot; step1: enter parking lot; step2: turn off the car; step3: maneuver car in spot; step4: drive to empty spot; step5: drove to grocery store; step6: parked the car","flatten_input_for_script_generation":"You want to parked the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: drove to grocery store; step1: enter parking lot; step2: look around lot for empty spot; step3: drive to empty spot; step4: maneuver car in spot; step5: turn off the car; step6: parked the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->2","4->3","5->1"],"reference_code":"class ParkedTheCar:\n\n    title = \"parked the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drove to grocery store\"\n\n    def step1(self):\n        return \"enter parking lot\"\n\n    def step2(self):\n        return \"look around lot for empty spot\"\n\n    def step3(self):\n        return \"drive to empty spot\"\n\n    def step4(self):\n        return \"maneuver car in spot\"\n\n    def step5(self):\n        return \"turn off the car\"\n\n    def step6(self):\n        return \"parked the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkedTheCar:\n\n    title = \"parked the car\"\n    steps = 7\n\n","reference_graph":{"title":"parked the car","num_steps":7,"schema":["step0: drove to grocery store","step1: enter parking lot","step2: look around lot for empty spot","step3: drive to empty spot","step4: maneuver car in spot","step5: turn off the car","step6: parked the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"fly to the college","events":{"0":"Drive to the airport","1":"Purchase plan ticket","2":"Pack all suitcases and bags","3":"Board the plan","4":"Get the ticket, drop off bags Go through security","5":"Walk and find departing gate","6":"order school supplies","7":"fly to the college"},"context":"order school supplies","minutes":120.0,"events_minutes":{"0":60.0,"1":25.0,"2":120.0,"3":15.0,"4":60.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: Drive to the airport; step1: Purchase plan ticket; step2: Pack all suitcases and bags; step3: Board the plan; step4: Get the ticket, drop off bags Go through security; step5: Walk and find departing gate; step6: order school supplies; step7: fly to the college","flatten_input_for_script_generation":"You want to fly to the college. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step5; step5 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: order school supplies; step1: Purchase plan ticket; step2: Pack all suitcases and bags; step3: Drive to the airport; step4: Get the ticket, drop off bags Go through security; step5: Walk and find departing gate; step6: Board the plan; step7: fly to the college; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->2","2->0","3->7","4->5","5->3","6->1"],"reference_code":"class FlyToTheCollege:\n\n    title = \"fly to the college\"\n    steps = 8\n\n    def step0(self):\n        return \"order school supplies\"\n\n    def step1(self):\n        return \"Purchase plan ticket\"\n\n    def step2(self):\n        return \"Pack all suitcases and bags\"\n\n    def step3(self):\n        return \"Drive to the airport\"\n\n    def step4(self):\n        return \"Get the ticket, drop off bags Go through security\"\n\n    def step5(self):\n        return \"Walk and find departing gate\"\n\n    def step6(self):\n        return \"Board the plan\"\n\n    def step7(self):\n        return \"fly to the college\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class FlyToTheCollege:\n\n    title = \"fly to the college\"\n    steps = 8\n\n","reference_graph":{"title":"fly to the college","num_steps":8,"schema":["step0: order school supplies","step1: Purchase plan ticket","step2: Pack all suitcases and bags","step3: Drive to the airport","step4: Get the ticket, drop off bags Go through security","step5: Walk and find departing gate","step6: Board the plan","step7: fly to the college"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"park the car","events":{"0":"stop at the park ranger office","1":"locate the parking lot","2":"put parking pass in window","3":"drive to the correct parking lot","4":"get a parking pass","5":"drive to campgrounds","6":"park the car"},"context":"drive to campgrounds","minutes":2.0,"events_minutes":{"0":5.0,"1":5.0,"2":1.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: stop at the park ranger office; step1: locate the parking lot; step2: put parking pass in window; step3: drive to the correct parking lot; step4: get a parking pass; step5: drive to campgrounds; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step1 -> step3; step3 -> step0; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: drive to campgrounds; step1: locate the parking lot; step2: stop at the park ranger office; step3: get a parking pass; step4: put parking pass in window; step5: park the car; step6: drive to the correct parking lot; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step2","gold_edges_for_prediction":["0->4","1->3","2->6","3->0","4->2","5->1"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to campgrounds\"\n\n    def step1(self):\n        return \"locate the parking lot\"\n\n    def step2(self):\n        return \"stop at the park ranger office\"\n\n    def step3(self):\n        return \"get a parking pass\"\n\n    def step4(self):\n        return \"put parking pass in window\"\n\n    def step5(self):\n        return \"park the car\"\n\n    def step6(self):\n        return \"drive to the correct parking lot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to campgrounds","step1: locate the parking lot","step2: stop at the park ranger office","step3: get a parking pass","step4: put parking pass in window","step5: park the car","step6: drive to the correct parking lot"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step2"]}}
{"scenario":"make a list of snacks","events":{"0":"get what is in the list","1":"confirm with everybody on the list","2":"get pen and paper","3":"check the availability of the snacks","4":"write down the list of snacks needed","5":"find out what everyone wants","6":"make a list of snacks"},"context":"find out what everyone wants","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: get what is in the list; step1: confirm with everybody on the list; step2: get pen and paper; step3: check the availability of the snacks; step4: write down the list of snacks needed; step5: find out what everyone wants; step6: make a list of snacks","flatten_input_for_script_generation":"You want to make a list of snacks. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step4; step4 -> step1; step1 -> step3; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: find out what everyone wants; step1: get pen and paper; step2: check the availability of the snacks; step3: get what is in the list; step4: make a list of snacks; step5: write down the list of snacks needed; step6: confirm with everybody on the list; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class MakeAListOfSnacks:\n\n    title = \"make a list of snacks\"\n    steps = 7\n\n    def step0(self):\n        return \"find out what everyone wants\"\n\n    def step1(self):\n        return \"get pen and paper\"\n\n    def step2(self):\n        return \"check the availability of the snacks\"\n\n    def step3(self):\n        return \"get what is in the list\"\n\n    def step4(self):\n        return \"make a list of snacks\"\n\n    def step5(self):\n        return \"write down the list of snacks needed\"\n\n    def step6(self):\n        return \"confirm with everybody on the list\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class MakeAListOfSnacks:\n\n    title = \"make a list of snacks\"\n    steps = 7\n\n","reference_graph":{"title":"make a list of snacks","num_steps":7,"schema":["step0: find out what everyone wants","step1: get pen and paper","step2: check the availability of the snacks","step3: get what is in the list","step4: make a list of snacks","step5: write down the list of snacks needed","step6: confirm with everybody on the list"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"Set a budget","events":{"0":"look at finances, make decisions","1":"look at reviews on the hotel website","2":"use different websites to check deals","3":"look at average costs","4":"look at hotel options online","5":"Choose when and where  to go","6":"Set a budget"},"context":"Choose when and where  to go","minutes":60.0,"events_minutes":{"0":1.0,"1":30.0,"2":30.0,"3":15.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: look at finances, make decisions; step1: look at reviews on the hotel website; step2: use different websites to check deals; step3: look at average costs; step4: look at hotel options online; step5: Choose when and where  to go; step6: Set a budget","flatten_input_for_script_generation":"You want to Set a budget. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Choose when and where  to go; step1: look at hotel options online; step2: use different websites to check deals; step3: look at reviews on the hotel website; step4: look at average costs; step5: look at finances, make decisions; step6: Set a budget; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class SetABudget:\n\n    title = \"Set a budget\"\n    steps = 7\n\n    def step0(self):\n        return \"Choose when and where  to go\"\n\n    def step1(self):\n        return \"look at hotel options online\"\n\n    def step2(self):\n        return \"use different websites to check deals\"\n\n    def step3(self):\n        return \"look at reviews on the hotel website\"\n\n    def step4(self):\n        return \"look at average costs\"\n\n    def step5(self):\n        return \"look at finances, make decisions\"\n\n    def step6(self):\n        return \"Set a budget\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SetABudget:\n\n    title = \"Set a budget\"\n    steps = 7\n\n","reference_graph":{"title":"Set a budget","num_steps":7,"schema":["step0: Choose when and where  to go","step1: look at hotel options online","step2: use different websites to check deals","step3: look at reviews on the hotel website","step4: look at average costs","step5: look at finances, make decisions","step6: Set a budget"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sit down at computer.","events":{"0":"walk to the computer","1":"enter the room","2":"sit in chair","3":"turn the computer on","4":"pull the chair from the desk","5":"stand by chair","6":"NONE","7":"Sit down at computer."},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.0833333333,"3":0.0166666667,"4":0.0333333333,"5":0.0333333333},"flatten_input_for_edge_prediction":"step0: walk to the computer; step1: enter the room; step2: sit in chair; step3: turn the computer on; step4: pull the chair from the desk; step5: stand by chair; step6: decided to Sit down at computer.; step7: Sit down at computer.","flatten_input_for_script_generation":"You want to Sit down at computer.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step0 -> step4; step0 -> step5; step4 -> step2; step3 -> step2; step5 -> step2; step2 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: decided to Sit down at computer.; step1: enter the room; step2: walk to the computer; step3: turn the computer on; step4: pull the chair from the desk; step5: stand by chair; step6: sit in chair; step7: Sit down at computer.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","0->4","0->5","1->0","2->7","3->2","4->2","5->2","6->1"],"reference_code":"class SitDownAtComputer:\n\n    title = \"Sit down at computer.\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Sit down at computer.\"\n\n    def step1(self):\n        return \"enter the room\"\n\n    def step2(self):\n        return \"walk to the computer\"\n\n    def step3(self):\n        return \"turn the computer on\"\n\n    def step4(self):\n        return \"pull the chair from the desk\"\n\n    def step5(self):\n        return \"stand by chair\"\n\n    def step6(self):\n        return \"sit in chair\"\n\n    def step7(self):\n        return \"Sit down at computer.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SitDownAtComputer:\n\n    title = \"Sit down at computer.\"\n    steps = 8\n\n","reference_graph":{"title":"Sit down at computer.","num_steps":8,"schema":["step0: decided to Sit down at computer.","step1: enter the room","step2: walk to the computer","step3: turn the computer on","step4: pull the chair from the desk","step5: stand by chair","step6: sit in chair","step7: Sit down at computer."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"go inside the bar","events":{"0":"put keys in pocket.","1":"open the car door.","2":"turn off the ignition.","3":"remove keys from the ignition.","4":"step out of the car.","5":"park the car","6":"go inside the bar"},"context":"park the car","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: put keys in pocket.; step1: open the car door.; step2: turn off the ignition.; step3: remove keys from the ignition.; step4: step out of the car.; step5: park the car; step6: go inside the bar","flatten_input_for_script_generation":"You want to go inside the bar. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step3 -> step1; step0 -> step6; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: park the car; step1: turn off the ignition.; step2: remove keys from the ignition.; step3: put keys in pocket.; step4: open the car door.; step5: go inside the bar; step6: step out of the car.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step5","gold_edges_for_prediction":["0->6","1->4","2->3","3->0","3->1","4->6","5->2"],"reference_code":"class GoInsideTheBar:\n\n    title = \"go inside the bar\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"turn off the ignition.\"\n\n    def step2(self):\n        return \"remove keys from the ignition.\"\n\n    def step3(self):\n        return \"put keys in pocket.\"\n\n    def step4(self):\n        return \"open the car door.\"\n\n    def step5(self):\n        return \"go inside the bar\"\n\n    def step6(self):\n        return \"step out of the car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class GoInsideTheBar:\n\n    title = \"go inside the bar\"\n    steps = 7\n\n","reference_graph":{"title":"go inside the bar","num_steps":7,"schema":["step0: park the car","step1: turn off the ignition.","step2: remove keys from the ignition.","step3: put keys in pocket.","step4: open the car door.","step5: go inside the bar","step6: step out of the car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step5"]}}
{"scenario":"walk to the mailbox","events":{"0":"open front door","1":"locate the mailbox","2":"walk to front door","3":"close front door","4":"grab the envelope","5":"seal the envelope","6":"walk to the mailbox"},"context":"seal the envelope","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open front door; step1: locate the mailbox; step2: walk to front door; step3: close front door; step4: grab the envelope; step5: seal the envelope; step6: walk to the mailbox","flatten_input_for_script_generation":"You want to walk to the mailbox. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: seal the envelope; step1: grab the envelope; step2: walk to front door; step3: open front door; step4: close front door; step5: locate the mailbox; step6: walk to the mailbox; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->2","5->4"],"reference_code":"class WalkToTheMailbox:\n\n    title = \"walk to the mailbox\"\n    steps = 7\n\n    def step0(self):\n        return \"seal the envelope\"\n\n    def step1(self):\n        return \"grab the envelope\"\n\n    def step2(self):\n        return \"walk to front door\"\n\n    def step3(self):\n        return \"open front door\"\n\n    def step4(self):\n        return \"close front door\"\n\n    def step5(self):\n        return \"locate the mailbox\"\n\n    def step6(self):\n        return \"walk to the mailbox\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheMailbox:\n\n    title = \"walk to the mailbox\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the mailbox","num_steps":7,"schema":["step0: seal the envelope","step1: grab the envelope","step2: walk to front door","step3: open front door","step4: close front door","step5: locate the mailbox","step6: walk to the mailbox"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"rewrite week spots","events":{"0":"Give the draft to the editor","1":"Print the report","2":"Editor edits the draft","3":"Read through the draft","4":"type the edited draft","5":"write a rough draft","6":"rewrite week spots"},"context":"write a rough draft","minutes":10080.0,"events_minutes":{"0":1.0,"1":2.0,"2":20.0,"3":5.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Give the draft to the editor; step1: Print the report; step2: Editor edits the draft; step3: Read through the draft; step4: type the edited draft; step5: write a rough draft; step6: rewrite week spots","flatten_input_for_script_generation":"You want to rewrite week spots. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: write a rough draft; step1: Read through the draft; step2: Give the draft to the editor; step3: Editor edits the draft; step4: type the edited draft; step5: Print the report; step6: rewrite week spots; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->0","4->1","5->3"],"reference_code":"class RewriteWeekSpots:\n\n    title = \"rewrite week spots\"\n    steps = 7\n\n    def step0(self):\n        return \"write a rough draft\"\n\n    def step1(self):\n        return \"Read through the draft\"\n\n    def step2(self):\n        return \"Give the draft to the editor\"\n\n    def step3(self):\n        return \"Editor edits the draft\"\n\n    def step4(self):\n        return \"type the edited draft\"\n\n    def step5(self):\n        return \"Print the report\"\n\n    def step6(self):\n        return \"rewrite week spots\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RewriteWeekSpots:\n\n    title = \"rewrite week spots\"\n    steps = 7\n\n","reference_graph":{"title":"rewrite week spots","num_steps":7,"schema":["step0: write a rough draft","step1: Read through the draft","step2: Give the draft to the editor","step3: Editor edits the draft","step4: type the edited draft","step5: Print the report","step6: rewrite week spots"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Train skills all summer long","events":{"0":"get on school bus","1":"ride the bus home","2":"walk inside the house","3":"get off school bus","4":"make a plan for summer workouts and skill training","5":"leave the school","6":"walk the rest of the way home","7":"Play the season on JV","8":"Train skills all summer long"},"context":"Play the season on JV","minutes":129600.0,"events_minutes":{"0":0.25,"1":17.0,"2":0.25,"3":0.25,"4":35.0,"5":2.0,"6":3.0},"flatten_input_for_edge_prediction":"step0: get on school bus; step1: ride the bus home; step2: walk inside the house; step3: get off school bus; step4: make a plan for summer workouts and skill training; step5: leave the school; step6: walk the rest of the way home; step7: Play the season on JV; step8: Train skills all summer long","flatten_input_for_script_generation":"You want to Train skills all summer long. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step1; step1 -> step3; step3 -> step6; step6 -> step2; step2 -> step4; step4 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: Play the season on JV; step1: leave the school; step2: get on school bus; step3: ride the bus home; step4: get off school bus; step5: walk the rest of the way home; step6: walk inside the house; step7: make a plan for summer workouts and skill training; step8: Train skills all summer long; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->3","2->4","3->6","4->8","5->0","6->2","7->5"],"reference_code":"class TrainSkillsAllSummerLong:\n\n    title = \"Train skills all summer long\"\n    steps = 9\n\n    def step0(self):\n        return \"Play the season on JV\"\n\n    def step1(self):\n        return \"leave the school\"\n\n    def step2(self):\n        return \"get on school bus\"\n\n    def step3(self):\n        return \"ride the bus home\"\n\n    def step4(self):\n        return \"get off school bus\"\n\n    def step5(self):\n        return \"walk the rest of the way home\"\n\n    def step6(self):\n        return \"walk inside the house\"\n\n    def step7(self):\n        return \"make a plan for summer workouts and skill training\"\n\n    def step8(self):\n        return \"Train skills all summer long\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class TrainSkillsAllSummerLong:\n\n    title = \"Train skills all summer long\"\n    steps = 9\n\n","reference_graph":{"title":"Train skills all summer long","num_steps":9,"schema":["step0: Play the season on JV","step1: leave the school","step2: get on school bus","step3: ride the bus home","step4: get off school bus","step5: walk the rest of the way home","step6: walk inside the house","step7: make a plan for summer workouts and skill training","step8: Train skills all summer long"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Leave house when rain stops.","events":{"0":"check the weather on the phone","1":"Leave house when rain stops","2":"decide to clean the house until the rain stops","3":"look out the window to see if the rain stopped","4":"look at when the rain will stop on the hourly","5":"cleans the house for awhile","6":"Think of first errand needed to complete.","7":"Leave house when rain stops."},"context":"Think of first errand needed to complete.","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":5.0,"4":5.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: check the weather on the phone; step1: Leave house when rain stops; step2: decide to clean the house until the rain stops; step3: look out the window to see if the rain stopped; step4: look at when the rain will stop on the hourly; step5: cleans the house for awhile; step6: Think of first errand needed to complete.; step7: Leave house when rain stops.","flatten_input_for_script_generation":"You want to Leave house when rain stops.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step5; step5 -> step3; step3 -> step1; step1 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Think of first errand needed to complete.; step1: check the weather on the phone; step2: look at when the rain will stop on the hourly; step3: decide to clean the house until the rain stops; step4: cleans the house for awhile; step5: look out the window to see if the rain stopped; step6: Leave house when rain stops; step7: Leave house when rain stops.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->7","2->5","3->1","4->2","5->3","6->0"],"reference_code":"class LeaveHouseWhenRainStops:\n\n    title = \"Leave house when rain stops.\"\n    steps = 8\n\n    def step0(self):\n        return \"Think of first errand needed to complete.\"\n\n    def step1(self):\n        return \"check the weather on the phone\"\n\n    def step2(self):\n        return \"look at when the rain will stop on the hourly\"\n\n    def step3(self):\n        return \"decide to clean the house until the rain stops\"\n\n    def step4(self):\n        return \"cleans the house for awhile\"\n\n    def step5(self):\n        return \"look out the window to see if the rain stopped\"\n\n    def step6(self):\n        return \"Leave house when rain stops\"\n\n    def step7(self):\n        return \"Leave house when rain stops.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class LeaveHouseWhenRainStops:\n\n    title = \"Leave house when rain stops.\"\n    steps = 8\n\n","reference_graph":{"title":"Leave house when rain stops.","num_steps":8,"schema":["step0: Think of first errand needed to complete.","step1: check the weather on the phone","step2: look at when the rain will stop on the hourly","step3: decide to clean the house until the rain stops","step4: cleans the house for awhile","step5: look out the window to see if the rain stopped","step6: Leave house when rain stops","step7: Leave house when rain stops."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Take city bus to car rental location","events":{"0":"prepare and get dressed.","1":"lock the door.","2":"search for purse or wallet.","3":"walk to the bus stop.","4":"find the keys.","5":"Rent red car on rental website","6":"Take city bus to car rental location"},"context":"Rent red car on rental website","minutes":60.0,"events_minutes":{"0":5.0,"1":1.0,"2":2.0,"3":10.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: prepare and get dressed.; step1: lock the door.; step2: search for purse or wallet.; step3: walk to the bus stop.; step4: find the keys.; step5: Rent red car on rental website; step6: Take city bus to car rental location","flatten_input_for_script_generation":"You want to Take city bus to car rental location. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step2 -> step1; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step0; step5 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: Rent red car on rental website; step1: find the keys.; step2: prepare and get dressed.; step3: lock the door.; step4: walk to the bus stop.; step5: search for purse or wallet.; step6: Take city bus to car rental location; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step3; step4 -> step6","gold_edges_for_prediction":["0->1","1->3","2->1","3->6","4->1","5->0","5->2","5->4"],"reference_code":"class TakeCityBusToCarRentalLocation:\n\n    title = \"Take city bus to car rental location\"\n    steps = 7\n\n    def step0(self):\n        return \"Rent red car on rental website\"\n\n    def step1(self):\n        return \"find the keys.\"\n\n    def step2(self):\n        return \"prepare and get dressed.\"\n\n    def step3(self):\n        return \"lock the door.\"\n\n    def step4(self):\n        return \"walk to the bus stop.\"\n\n    def step5(self):\n        return \"search for purse or wallet.\"\n\n    def step6(self):\n        return \"Take city bus to car rental location\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class TakeCityBusToCarRentalLocation:\n\n    title = \"Take city bus to car rental location\"\n    steps = 7\n\n","reference_graph":{"title":"Take city bus to car rental location","num_steps":7,"schema":["step0: Rent red car on rental website","step1: find the keys.","step2: prepare and get dressed.","step3: lock the door.","step4: walk to the bus stop.","step5: search for purse or wallet.","step6: Take city bus to car rental location"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step3","step4 -> step6"]}}
{"scenario":"Work at a career.","events":{"0":"look online for postings","1":"look for jobs in area","2":"apply to several jobs","3":"create a resume and cover letter","4":"get hired by a great company","5":"NONE","6":"Work at a career."},"context":"NONE","minutes":10512000.0,"events_minutes":{"0":7200.0,"1":4320.0,"2":2880.0,"3":1440.0,"4":1440.0},"flatten_input_for_edge_prediction":"step0: look online for postings; step1: look for jobs in area; step2: apply to several jobs; step3: create a resume and cover letter; step4: get hired by a great company; step5: decided to Work at a career.; step6: Work at a career.","flatten_input_for_script_generation":"You want to Work at a career.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to Work at a career.; step1: create a resume and cover letter; step2: look for jobs in area; step3: look online for postings; step4: apply to several jobs; step5: get hired by a great company; step6: Work at a career.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class WorkAtACareer:\n\n    title = \"Work at a career.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Work at a career.\"\n\n    def step1(self):\n        return \"create a resume and cover letter\"\n\n    def step2(self):\n        return \"look for jobs in area\"\n\n    def step3(self):\n        return \"look online for postings\"\n\n    def step4(self):\n        return \"apply to several jobs\"\n\n    def step5(self):\n        return \"get hired by a great company\"\n\n    def step6(self):\n        return \"Work at a career.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WorkAtACareer:\n\n    title = \"Work at a career.\"\n    steps = 7\n\n","reference_graph":{"title":"Work at a career.","num_steps":7,"schema":["step0: decided to Work at a career.","step1: create a resume and cover letter","step2: look for jobs in area","step3: look online for postings","step4: apply to several jobs","step5: get hired by a great company","step6: Work at a career."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"carry plate with asparagus out to grill","events":{"0":"Walk toward patio door.","1":"Open the door.","2":"Pick up plate","3":"Turn towards patio door.","4":"Close the door.","5":"sprinkle asparagus with pepper","6":"carry plate with asparagus out to grill"},"context":"sprinkle asparagus with pepper","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Walk toward patio door.; step1: Open the door.; step2: Pick up plate; step3: Turn towards patio door.; step4: Close the door.; step5: sprinkle asparagus with pepper; step6: carry plate with asparagus out to grill","flatten_input_for_script_generation":"You want to carry plate with asparagus out to grill. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: sprinkle asparagus with pepper; step1: Pick up plate; step2: Turn towards patio door.; step3: Walk toward patio door.; step4: Open the door.; step5: Close the door.; step6: carry plate with asparagus out to grill; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->0","4->6","5->2"],"reference_code":"class CarryPlateWithAsparagusOutToGrill:\n\n    title = \"carry plate with asparagus out to grill\"\n    steps = 7\n\n    def step0(self):\n        return \"sprinkle asparagus with pepper\"\n\n    def step1(self):\n        return \"Pick up plate\"\n\n    def step2(self):\n        return \"Turn towards patio door.\"\n\n    def step3(self):\n        return \"Walk toward patio door.\"\n\n    def step4(self):\n        return \"Open the door.\"\n\n    def step5(self):\n        return \"Close the door.\"\n\n    def step6(self):\n        return \"carry plate with asparagus out to grill\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CarryPlateWithAsparagusOutToGrill:\n\n    title = \"carry plate with asparagus out to grill\"\n    steps = 7\n\n","reference_graph":{"title":"carry plate with asparagus out to grill","num_steps":7,"schema":["step0: sprinkle asparagus with pepper","step1: Pick up plate","step2: Turn towards patio door.","step3: Walk toward patio door.","step4: Open the door.","step5: Close the door.","step6: carry plate with asparagus out to grill"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy some tennis shoes.","events":{"0":"Find tennis shoes","1":"Pick what tennis shoes are desired","2":"Exchange money with store clerk","3":"Drive to the store","4":"Bring tennis shoes to checkout area","5":"Research tennis shoes","6":"look up the rules for tennis.","7":"buy some tennis shoes."},"context":"look up the rules for tennis.","minutes":60.0,"events_minutes":{"0":10.0,"1":5.0,"2":5.0,"3":20.0,"4":5.0,"5":20.0},"flatten_input_for_edge_prediction":"step0: Find tennis shoes; step1: Pick what tennis shoes are desired; step2: Exchange money with store clerk; step3: Drive to the store; step4: Bring tennis shoes to checkout area; step5: Research tennis shoes; step6: look up the rules for tennis.; step7: buy some tennis shoes.","flatten_input_for_script_generation":"You want to buy some tennis shoes.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: look up the rules for tennis.; step1: Research tennis shoes; step2: Pick what tennis shoes are desired; step3: Drive to the store; step4: Find tennis shoes; step5: Bring tennis shoes to checkout area; step6: Exchange money with store clerk; step7: buy some tennis shoes.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->7","3->0","4->2","5->1","6->5"],"reference_code":"class BuySomeTennisShoes:\n\n    title = \"buy some tennis shoes.\"\n    steps = 8\n\n    def step0(self):\n        return \"look up the rules for tennis.\"\n\n    def step1(self):\n        return \"Research tennis shoes\"\n\n    def step2(self):\n        return \"Pick what tennis shoes are desired\"\n\n    def step3(self):\n        return \"Drive to the store\"\n\n    def step4(self):\n        return \"Find tennis shoes\"\n\n    def step5(self):\n        return \"Bring tennis shoes to checkout area\"\n\n    def step6(self):\n        return \"Exchange money with store clerk\"\n\n    def step7(self):\n        return \"buy some tennis shoes.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BuySomeTennisShoes:\n\n    title = \"buy some tennis shoes.\"\n    steps = 8\n\n","reference_graph":{"title":"buy some tennis shoes.","num_steps":8,"schema":["step0: look up the rules for tennis.","step1: Research tennis shoes","step2: Pick what tennis shoes are desired","step3: Drive to the store","step4: Find tennis shoes","step5: Bring tennis shoes to checkout area","step6: Exchange money with store clerk","step7: buy some tennis shoes."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"set up an area for the large animal","events":{"0":"organize the materials needed.","1":"search for a big area.","2":"close the door.","3":"get out of the car.","4":"walk towards the zoo.","5":"drive to the zoo","6":"set up an area for the large animal"},"context":"drive to the zoo","minutes":30.0,"events_minutes":{"0":5.0,"1":7.0,"2":1.0,"3":1.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: organize the materials needed.; step1: search for a big area.; step2: close the door.; step3: get out of the car.; step4: walk towards the zoo.; step5: drive to the zoo; step6: set up an area for the large animal","flatten_input_for_script_generation":"You want to set up an area for the large animal. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to the zoo; step1: get out of the car.; step2: close the door.; step3: walk towards the zoo.; step4: search for a big area.; step5: organize the materials needed.; step6: set up an area for the large animal; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->3"],"reference_code":"class SetUpAnAreaForTheLargeAnimal:\n\n    title = \"set up an area for the large animal\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the zoo\"\n\n    def step1(self):\n        return \"get out of the car.\"\n\n    def step2(self):\n        return \"close the door.\"\n\n    def step3(self):\n        return \"walk towards the zoo.\"\n\n    def step4(self):\n        return \"search for a big area.\"\n\n    def step5(self):\n        return \"organize the materials needed.\"\n\n    def step6(self):\n        return \"set up an area for the large animal\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SetUpAnAreaForTheLargeAnimal:\n\n    title = \"set up an area for the large animal\"\n    steps = 7\n\n","reference_graph":{"title":"set up an area for the large animal","num_steps":7,"schema":["step0: drive to the zoo","step1: get out of the car.","step2: close the door.","step3: walk towards the zoo.","step4: search for a big area.","step5: organize the materials needed.","step6: set up an area for the large animal"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go on the field","events":{"0":"leave the locker room","1":"put on special shoes for game","2":"put on protective undergarments","3":"pull up protective pants and button","4":"pull over protective vest and secure","5":"get dressed in gear","6":"go on the field"},"context":"get dressed in gear","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: leave the locker room; step1: put on special shoes for game; step2: put on protective undergarments; step3: pull up protective pants and button; step4: pull over protective vest and secure; step5: get dressed in gear; step6: go on the field","flatten_input_for_script_generation":"You want to go on the field. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step2 -> step4; step3 -> step1; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: get dressed in gear; step1: put on protective undergarments; step2: pull up protective pants and button; step3: pull over protective vest and secure; step4: put on special shoes for game; step5: leave the locker room; step6: go on the field; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","2->4","3->1","4->1","5->2"],"reference_code":"class GoOnTheField:\n\n    title = \"go on the field\"\n    steps = 7\n\n    def step0(self):\n        return \"get dressed in gear\"\n\n    def step1(self):\n        return \"put on protective undergarments\"\n\n    def step2(self):\n        return \"pull up protective pants and button\"\n\n    def step3(self):\n        return \"pull over protective vest and secure\"\n\n    def step4(self):\n        return \"put on special shoes for game\"\n\n    def step5(self):\n        return \"leave the locker room\"\n\n    def step6(self):\n        return \"go on the field\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOnTheField:\n\n    title = \"go on the field\"\n    steps = 7\n\n","reference_graph":{"title":"go on the field","num_steps":7,"schema":["step0: get dressed in gear","step1: put on protective undergarments","step2: pull up protective pants and button","step3: pull over protective vest and secure","step4: put on special shoes for game","step5: leave the locker room","step6: go on the field"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sign up for 5K race","events":{"0":"submit application and payment","1":"look at calendar to determine availability","2":"find application for entry","3":"fill out application","4":"determine the one that is of most interest","5":"find contact information","6":"research 5K races","7":"sign up for 5K race"},"context":"research 5K races","minutes":15.0,"events_minutes":{"0":1.0,"1":2.0,"2":2.0,"3":10.0,"4":10.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: submit application and payment; step1: look at calendar to determine availability; step2: find application for entry; step3: fill out application; step4: determine the one that is of most interest; step5: find contact information; step6: research 5K races; step7: sign up for 5K race","flatten_input_for_script_generation":"You want to sign up for 5K race. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step5 -> step0; step1 -> step4; step2 -> step3; step2 -> step5; step3 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: research 5K races; step1: look at calendar to determine availability; step2: determine the one that is of most interest; step3: find application for entry; step4: fill out application; step5: find contact information; step6: submit application and payment; step7: sign up for 5K race; step0 -> step1; step2 -> step3; step3 -> step4; step3 -> step5; step5 -> step6; step6 -> step7; step1 -> step2; step4 -> step6","gold_edges_for_prediction":["0->7","1->4","2->3","2->5","3->0","4->2","5->0","6->1"],"reference_code":"class SignUpFor5kRace:\n\n    title = \"sign up for 5K race\"\n    steps = 8\n\n    def step0(self):\n        return \"research 5K races\"\n\n    def step1(self):\n        return \"look at calendar to determine availability\"\n\n    def step2(self):\n        return \"determine the one that is of most interest\"\n\n    def step3(self):\n        return \"find application for entry\"\n\n    def step4(self):\n        return \"fill out application\"\n\n    def step5(self):\n        return \"find contact information\"\n\n    def step6(self):\n        return \"submit application and payment\"\n\n    def step7(self):\n        return \"sign up for 5K race\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step1 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class SignUpFor5kRace:\n\n    title = \"sign up for 5K race\"\n    steps = 8\n\n","reference_graph":{"title":"sign up for 5K race","num_steps":8,"schema":["step0: research 5K races","step1: look at calendar to determine availability","step2: determine the one that is of most interest","step3: find application for entry","step4: fill out application","step5: find contact information","step6: submit application and payment","step7: sign up for 5K race"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step3 -> step5","step5 -> step6","step6 -> step7","step1 -> step2","step4 -> step6"]}}
{"scenario":"put on left rain boot","events":{"0":"grab some socks and put the socks on","1":"go find the clothes","2":"put on the left rain boot","3":"get to the shower","4":"get out of bed","5":"NONE","6":"put on left rain boot"},"context":"NONE","minutes":0.5,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: grab some socks and put the socks on; step1: go find the clothes; step2: put on the left rain boot; step3: get to the shower; step4: get out of bed; step5: decided to put on left rain boot; step6: put on left rain boot","flatten_input_for_script_generation":"You want to put on left rain boot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to put on left rain boot; step1: get out of bed; step2: get to the shower; step3: go find the clothes; step4: grab some socks and put the socks on; step5: put on the left rain boot; step6: put on left rain boot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class PutOnLeftRainBoot:\n\n    title = \"put on left rain boot\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to put on left rain boot\"\n\n    def step1(self):\n        return \"get out of bed\"\n\n    def step2(self):\n        return \"get to the shower\"\n\n    def step3(self):\n        return \"go find the clothes\"\n\n    def step4(self):\n        return \"grab some socks and put the socks on\"\n\n    def step5(self):\n        return \"put on the left rain boot\"\n\n    def step6(self):\n        return \"put on left rain boot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnLeftRainBoot:\n\n    title = \"put on left rain boot\"\n    steps = 7\n\n","reference_graph":{"title":"put on left rain boot","num_steps":7,"schema":["step0: decided to put on left rain boot","step1: get out of bed","step2: get to the shower","step3: go find the clothes","step4: grab some socks and put the socks on","step5: put on the left rain boot","step6: put on left rain boot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick out the type of gun","events":{"0":"Go in to the store","1":"Find a salesperson","2":"Look at the choices","3":"Describe what the gun will be used for","4":"Listen to the salesperson's recommendations","5":"drive to the store","6":"pick out the type of gun"},"context":"drive to the store","minutes":30.0,"events_minutes":{"0":3.0,"1":2.0,"2":10.0,"3":5.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: Go in to the store; step1: Find a salesperson; step2: Look at the choices; step3: Describe what the gun will be used for; step4: Listen to the salesperson's recommendations; step5: drive to the store; step6: pick out the type of gun","flatten_input_for_script_generation":"You want to pick out the type of gun. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: drive to the store; step1: Go in to the store; step2: Find a salesperson; step3: Describe what the gun will be used for; step4: Listen to the salesperson's recommendations; step5: Look at the choices; step6: pick out the type of gun; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->4","4->2","5->0"],"reference_code":"class PickOutTheTypeOfGun:\n\n    title = \"pick out the type of gun\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"Go in to the store\"\n\n    def step2(self):\n        return \"Find a salesperson\"\n\n    def step3(self):\n        return \"Describe what the gun will be used for\"\n\n    def step4(self):\n        return \"Listen to the salesperson's recommendations\"\n\n    def step5(self):\n        return \"Look at the choices\"\n\n    def step6(self):\n        return \"pick out the type of gun\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickOutTheTypeOfGun:\n\n    title = \"pick out the type of gun\"\n    steps = 7\n\n","reference_graph":{"title":"pick out the type of gun","num_steps":7,"schema":["step0: drive to the store","step1: Go in to the store","step2: Find a salesperson","step3: Describe what the gun will be used for","step4: Listen to the salesperson's recommendations","step5: Look at the choices","step6: pick out the type of gun"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sign new lease","events":{"0":"landlord reveals the good news to accept tenant","1":"landlord meets with new tenants again","2":"answer cell phone","3":"landlord calls the tenant","4":"wait patiently for landlord to make a decision","5":"hand over deposit and first month rent check","6":"Submit application to landlord","7":"Sign new lease"},"context":"Submit application to landlord","minutes":1440.0,"events_minutes":{"0":1.0,"1":5.0,"2":1.0,"3":1.0,"4":2880.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: landlord reveals the good news to accept tenant; step1: landlord meets with new tenants again; step2: answer cell phone; step3: landlord calls the tenant; step4: wait patiently for landlord to make a decision; step5: hand over deposit and first month rent check; step6: Submit application to landlord; step7: Sign new lease","flatten_input_for_script_generation":"You want to Sign new lease. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step7; step4 -> step3; step2 -> step0; step3 -> step2; step0 -> step1; step1 -> step5; step6 -> step4","flatten_output_for_script_generation":"step0: Submit application to landlord; step1: wait patiently for landlord to make a decision; step2: hand over deposit and first month rent check; step3: Sign new lease; step4: landlord calls the tenant; step5: answer cell phone; step6: landlord reveals the good news to accept tenant; step7: landlord meets with new tenants again; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step2","gold_edges_for_prediction":["0->1","1->5","2->0","3->2","4->3","5->7","6->4"],"reference_code":"class SignNewLease:\n\n    title = \"Sign new lease\"\n    steps = 8\n\n    def step0(self):\n        return \"Submit application to landlord\"\n\n    def step1(self):\n        return \"wait patiently for landlord to make a decision\"\n\n    def step2(self):\n        return \"hand over deposit and first month rent check\"\n\n    def step3(self):\n        return \"Sign new lease\"\n\n    def step4(self):\n        return \"landlord calls the tenant\"\n\n    def step5(self):\n        return \"answer cell phone\"\n\n    def step6(self):\n        return \"landlord reveals the good news to accept tenant\"\n\n    def step7(self):\n        return \"landlord meets with new tenants again\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step2\",\n        ]\n","input_prompt_code":"class SignNewLease:\n\n    title = \"Sign new lease\"\n    steps = 8\n\n","reference_graph":{"title":"Sign new lease","num_steps":8,"schema":["step0: Submit application to landlord","step1: wait patiently for landlord to make a decision","step2: hand over deposit and first month rent check","step3: Sign new lease","step4: landlord calls the tenant","step5: answer cell phone","step6: landlord reveals the good news to accept tenant","step7: landlord meets with new tenants again"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step2"]}}
{"scenario":"open up the laptop","events":{"0":"reach out for the laptop","1":"look around for the laptop","2":"pull the laptop closer","3":"grab the laptop","4":"locate the position of the laptop","5":"sit on the bed","6":"open up the laptop"},"context":"sit on the bed","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: reach out for the laptop; step1: look around for the laptop; step2: pull the laptop closer; step3: grab the laptop; step4: locate the position of the laptop; step5: sit on the bed; step6: open up the laptop","flatten_input_for_script_generation":"You want to open up the laptop. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: sit on the bed; step1: look around for the laptop; step2: locate the position of the laptop; step3: reach out for the laptop; step4: grab the laptop; step5: pull the laptop closer; step6: open up the laptop; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->2","4->0","5->1"],"reference_code":"class OpenUpTheLaptop:\n\n    title = \"open up the laptop\"\n    steps = 7\n\n    def step0(self):\n        return \"sit on the bed\"\n\n    def step1(self):\n        return \"look around for the laptop\"\n\n    def step2(self):\n        return \"locate the position of the laptop\"\n\n    def step3(self):\n        return \"reach out for the laptop\"\n\n    def step4(self):\n        return \"grab the laptop\"\n\n    def step5(self):\n        return \"pull the laptop closer\"\n\n    def step6(self):\n        return \"open up the laptop\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenUpTheLaptop:\n\n    title = \"open up the laptop\"\n    steps = 7\n\n","reference_graph":{"title":"open up the laptop","num_steps":7,"schema":["step0: sit on the bed","step1: look around for the laptop","step2: locate the position of the laptop","step3: reach out for the laptop","step4: grab the laptop","step5: pull the laptop closer","step6: open up the laptop"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in the car","events":{"0":"step outside of the house","1":"walk to the car","2":"open the car door","3":"sit in the drivers seat","4":"shut the car door","5":"open the front door","6":"NONE","7":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: step outside of the house; step1: walk to the car; step2: open the car door; step3: sit in the drivers seat; step4: shut the car door; step5: open the front door; step6: decided to get in the car; step7: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: decided to get in the car; step1: open the front door; step2: step outside of the house; step3: walk to the car; step4: open the car door; step5: sit in the drivers seat; step6: shut the car door; step7: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->3","3->4","4->7","5->0","6->5"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"open the front door\"\n\n    def step2(self):\n        return \"step outside of the house\"\n\n    def step3(self):\n        return \"walk to the car\"\n\n    def step4(self):\n        return \"open the car door\"\n\n    def step5(self):\n        return \"sit in the drivers seat\"\n\n    def step6(self):\n        return \"shut the car door\"\n\n    def step7(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 8\n\n","reference_graph":{"title":"get in the car","num_steps":8,"schema":["step0: decided to get in the car","step1: open the front door","step2: step outside of the house","step3: walk to the car","step4: open the car door","step5: sit in the drivers seat","step6: shut the car door","step7: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"go out to the car","events":{"0":"open front door","1":"step over threshold of front door","2":"walk to desk","3":"go to the front door","4":"look around for car keys","5":"notice car keys on desk","6":"pick up car keys off of desk","7":"get dressed for the day","8":"go out to the car"},"context":"get dressed for the day","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":2.0,"5":0.0833333333,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: open front door; step1: step over threshold of front door; step2: walk to desk; step3: go to the front door; step4: look around for car keys; step5: notice car keys on desk; step6: pick up car keys off of desk; step7: get dressed for the day; step8: go out to the car","flatten_input_for_script_generation":"You want to go out to the car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step5 -> step2; step2 -> step6; step6 -> step3; step3 -> step0; step0 -> step1; step1 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: get dressed for the day; step1: look around for car keys; step2: notice car keys on desk; step3: walk to desk; step4: pick up car keys off of desk; step5: go to the front door; step6: open front door; step7: step over threshold of front door; step8: go out to the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->8","2->6","3->0","4->5","5->2","6->3","7->4"],"reference_code":"class GoOutToTheCar:\n\n    title = \"go out to the car\"\n    steps = 9\n\n    def step0(self):\n        return \"get dressed for the day\"\n\n    def step1(self):\n        return \"look around for car keys\"\n\n    def step2(self):\n        return \"notice car keys on desk\"\n\n    def step3(self):\n        return \"walk to desk\"\n\n    def step4(self):\n        return \"pick up car keys off of desk\"\n\n    def step5(self):\n        return \"go to the front door\"\n\n    def step6(self):\n        return \"open front door\"\n\n    def step7(self):\n        return \"step over threshold of front door\"\n\n    def step8(self):\n        return \"go out to the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoOutToTheCar:\n\n    title = \"go out to the car\"\n    steps = 9\n\n","reference_graph":{"title":"go out to the car","num_steps":9,"schema":["step0: get dressed for the day","step1: look around for car keys","step2: notice car keys on desk","step3: walk to desk","step4: pick up car keys off of desk","step5: go to the front door","step6: open front door","step7: step over threshold of front door","step8: go out to the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"sign up for course","events":{"0":"sort courses by languages taught","1":"sort courses by price","2":"decide which course is best","3":"go to website of best course","4":"decide which language to learn","5":"read reviews of courses","6":"search for language courses","7":"sign up for course"},"context":"search for language courses","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":15.0,"3":0.25,"4":15.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: sort courses by languages taught; step1: sort courses by price; step2: decide which course is best; step3: go to website of best course; step4: decide which language to learn; step5: read reviews of courses; step6: search for language courses; step7: sign up for course","flatten_input_for_script_generation":"You want to sign up for course. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step5; step5 -> step2; step2 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: search for language courses; step1: decide which language to learn; step2: sort courses by languages taught; step3: sort courses by price; step4: read reviews of courses; step5: decide which course is best; step6: go to website of best course; step7: sign up for course; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->3","3->7","4->0","5->2","6->4"],"reference_code":"class SignUpForCourse:\n\n    title = \"sign up for course\"\n    steps = 8\n\n    def step0(self):\n        return \"search for language courses\"\n\n    def step1(self):\n        return \"decide which language to learn\"\n\n    def step2(self):\n        return \"sort courses by languages taught\"\n\n    def step3(self):\n        return \"sort courses by price\"\n\n    def step4(self):\n        return \"read reviews of courses\"\n\n    def step5(self):\n        return \"decide which course is best\"\n\n    def step6(self):\n        return \"go to website of best course\"\n\n    def step7(self):\n        return \"sign up for course\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SignUpForCourse:\n\n    title = \"sign up for course\"\n    steps = 8\n\n","reference_graph":{"title":"sign up for course","num_steps":8,"schema":["step0: search for language courses","step1: decide which language to learn","step2: sort courses by languages taught","step3: sort courses by price","step4: read reviews of courses","step5: decide which course is best","step6: go to website of best course","step7: sign up for course"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"File the tax","events":{"0":"make sure details are correct","1":"check address is correct","2":"write down any private info","3":"click the accept return button","4":"go to last page and esign","5":"Check tax return for errors","6":"File the tax"},"context":"Check tax return for errors","minutes":5.0,"events_minutes":{"0":1.0,"1":2.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: make sure details are correct; step1: check address is correct; step2: write down any private info; step3: click the accept return button; step4: go to last page and esign; step5: Check tax return for errors; step6: File the tax","flatten_input_for_script_generation":"You want to File the tax. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step4; step2 -> step1; step2 -> step0; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Check tax return for errors; step1: write down any private info; step2: make sure details are correct; step3: go to last page and esign; step4: click the accept return button; step5: check address is correct; step6: File the tax; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step5; step1 -> step2; step4 -> step6","gold_edges_for_prediction":["0->4","1->4","2->1","2->0","3->6","4->3","5->2"],"reference_code":"class FileTheTax:\n\n    title = \"File the tax\"\n    steps = 7\n\n    def step0(self):\n        return \"Check tax return for errors\"\n\n    def step1(self):\n        return \"write down any private info\"\n\n    def step2(self):\n        return \"make sure details are correct\"\n\n    def step3(self):\n        return \"go to last page and esign\"\n\n    def step4(self):\n        return \"click the accept return button\"\n\n    def step5(self):\n        return \"check address is correct\"\n\n    def step6(self):\n        return \"File the tax\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step5\",\n            \"step1 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class FileTheTax:\n\n    title = \"File the tax\"\n    steps = 7\n\n","reference_graph":{"title":"File the tax","num_steps":7,"schema":["step0: Check tax return for errors","step1: write down any private info","step2: make sure details are correct","step3: go to last page and esign","step4: click the accept return button","step5: check address is correct","step6: File the tax"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step5","step1 -> step2","step4 -> step6"]}}
{"scenario":"get in the car","events":{"0":"turn towards the car.","1":"put on a jacket.","2":"lock the house.","3":"exit the house.","4":"grab the car keys.","5":"walk to the front door.","6":"NONE","7":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.05,"1":0.3333333333,"2":0.1666666667,"3":0.0833333333,"4":0.0833333333,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: turn towards the car.; step1: put on a jacket.; step2: lock the house.; step3: exit the house.; step4: grab the car keys.; step5: walk to the front door.; step6: decided to get in the car; step7: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step1 -> step5; step5 -> step3; step3 -> step2; step2 -> step0; step0 -> step7; step6 -> step4; step6 -> step1","flatten_output_for_script_generation":"step0: decided to get in the car; step1: put on a jacket.; step2: grab the car keys.; step3: walk to the front door.; step4: exit the house.; step5: lock the house.; step6: turn towards the car.; step7: get in the car; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->5","2->0","3->2","4->5","5->3","6->4","6->1"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"put on a jacket.\"\n\n    def step2(self):\n        return \"grab the car keys.\"\n\n    def step3(self):\n        return \"walk to the front door.\"\n\n    def step4(self):\n        return \"exit the house.\"\n\n    def step5(self):\n        return \"lock the house.\"\n\n    def step6(self):\n        return \"turn towards the car.\"\n\n    def step7(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 8\n\n","reference_graph":{"title":"get in the car","num_steps":8,"schema":["step0: decided to get in the car","step1: put on a jacket.","step2: grab the car keys.","step3: walk to the front door.","step4: exit the house.","step5: lock the house.","step6: turn towards the car.","step7: get in the car"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get out of the car","events":{"0":"Step out of the car.","1":"Pull on the car door handle to open the door.","2":"Take off the seatbelt.","3":"Unlock the car doors.","4":"Reach hand toward the car door handle.","5":"Turn off the car.","6":"Grip the car door handle.","7":"park the car","8":"get out of the car"},"context":"park the car","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0166666667,"3":0.0333333333,"4":0.0166666667,"5":0.0333333333,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Step out of the car.; step1: Pull on the car door handle to open the door.; step2: Take off the seatbelt.; step3: Unlock the car doors.; step4: Reach hand toward the car door handle.; step5: Turn off the car.; step6: Grip the car door handle.; step7: park the car; step8: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step5 -> step2; step2 -> step3; step4 -> step6; step6 -> step1; step1 -> step0; step0 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: park the car; step1: Turn off the car.; step2: Unlock the car doors.; step3: Reach hand toward the car door handle.; step4: Grip the car door handle.; step5: Take off the seatbelt.; step6: Pull on the car door handle to open the door.; step7: Step out of the car.; step8: get out of the car; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","2->3","3->4","4->6","5->2","6->1","7->5"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 9\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"Turn off the car.\"\n\n    def step2(self):\n        return \"Unlock the car doors.\"\n\n    def step3(self):\n        return \"Reach hand toward the car door handle.\"\n\n    def step4(self):\n        return \"Grip the car door handle.\"\n\n    def step5(self):\n        return \"Take off the seatbelt.\"\n\n    def step6(self):\n        return \"Pull on the car door handle to open the door.\"\n\n    def step7(self):\n        return \"Step out of the car.\"\n\n    def step8(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 9\n\n","reference_graph":{"title":"get out of the car","num_steps":9,"schema":["step0: park the car","step1: Turn off the car.","step2: Unlock the car doors.","step3: Reach hand toward the car door handle.","step4: Grip the car door handle.","step5: Take off the seatbelt.","step6: Pull on the car door handle to open the door.","step7: Step out of the car.","step8: get out of the car"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"microwave the soup","events":{"0":"put bowl of soup in microwave","1":"open microwave door","2":"hit the enter button","3":"close microwave door","4":"enter the desired time to cook soup","5":"pour soup in the bowl","6":"microwave the soup"},"context":"pour soup in the bowl","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: put bowl of soup in microwave; step1: open microwave door; step2: hit the enter button; step3: close microwave door; step4: enter the desired time to cook soup; step5: pour soup in the bowl; step6: microwave the soup","flatten_input_for_script_generation":"You want to microwave the soup. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: pour soup in the bowl; step1: open microwave door; step2: put bowl of soup in microwave; step3: close microwave door; step4: enter the desired time to cook soup; step5: hit the enter button; step6: microwave the soup; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->4","4->2","5->1"],"reference_code":"class MicrowaveTheSoup:\n\n    title = \"microwave the soup\"\n    steps = 7\n\n    def step0(self):\n        return \"pour soup in the bowl\"\n\n    def step1(self):\n        return \"open microwave door\"\n\n    def step2(self):\n        return \"put bowl of soup in microwave\"\n\n    def step3(self):\n        return \"close microwave door\"\n\n    def step4(self):\n        return \"enter the desired time to cook soup\"\n\n    def step5(self):\n        return \"hit the enter button\"\n\n    def step6(self):\n        return \"microwave the soup\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MicrowaveTheSoup:\n\n    title = \"microwave the soup\"\n    steps = 7\n\n","reference_graph":{"title":"microwave the soup","num_steps":7,"schema":["step0: pour soup in the bowl","step1: open microwave door","step2: put bowl of soup in microwave","step3: close microwave door","step4: enter the desired time to cook soup","step5: hit the enter button","step6: microwave the soup"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put baking sheet with dough in the oven.","events":{"0":"walk to the oven with the baking sheet.","1":"grab the handle of the oven.","2":"open the oven door.","3":"pick up the baking sheet.","4":"reach for the handle of the oven.","5":"Put cookie dough on baking sheet.","6":"Put baking sheet with dough in the oven."},"context":"Put cookie dough on baking sheet.","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk to the oven with the baking sheet.; step1: grab the handle of the oven.; step2: open the oven door.; step3: pick up the baking sheet.; step4: reach for the handle of the oven.; step5: Put cookie dough on baking sheet.; step6: Put baking sheet with dough in the oven.","flatten_input_for_script_generation":"You want to Put baking sheet with dough in the oven.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Put cookie dough on baking sheet.; step1: pick up the baking sheet.; step2: walk to the oven with the baking sheet.; step3: reach for the handle of the oven.; step4: grab the handle of the oven.; step5: open the oven door.; step6: Put baking sheet with dough in the oven.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->0","4->1","5->3"],"reference_code":"class PutBakingSheetWithDoughInTheOven:\n\n    title = \"Put baking sheet with dough in the oven.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put cookie dough on baking sheet.\"\n\n    def step1(self):\n        return \"pick up the baking sheet.\"\n\n    def step2(self):\n        return \"walk to the oven with the baking sheet.\"\n\n    def step3(self):\n        return \"reach for the handle of the oven.\"\n\n    def step4(self):\n        return \"grab the handle of the oven.\"\n\n    def step5(self):\n        return \"open the oven door.\"\n\n    def step6(self):\n        return \"Put baking sheet with dough in the oven.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutBakingSheetWithDoughInTheOven:\n\n    title = \"Put baking sheet with dough in the oven.\"\n    steps = 7\n\n","reference_graph":{"title":"Put baking sheet with dough in the oven.","num_steps":7,"schema":["step0: Put cookie dough on baking sheet.","step1: pick up the baking sheet.","step2: walk to the oven with the baking sheet.","step3: reach for the handle of the oven.","step4: grab the handle of the oven.","step5: open the oven door.","step6: Put baking sheet with dough in the oven."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"choose a grocery store","events":{"0":"make final decision","1":"compare grocery stores","2":"look for directions to store","3":"navigate to other grocery store websites","4":"narrow down choices","5":"look up grocery stores online","6":"choose a grocery store"},"context":"look up grocery stores online","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.0833333333,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: make final decision; step1: compare grocery stores; step2: look for directions to store; step3: navigate to other grocery store websites; step4: narrow down choices; step5: look up grocery stores online; step6: choose a grocery store","flatten_input_for_script_generation":"You want to choose a grocery store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step1 -> step4; step4 -> step0; step0 -> step2; step3 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: look up grocery stores online; step1: navigate to other grocery store websites; step2: look for directions to store; step3: choose a grocery store; step4: compare grocery stores; step5: narrow down choices; step6: make final decision; step0 -> step1; step2 -> step3; step4 -> step5; step5 -> step6; step6 -> step2; step1 -> step4","gold_edges_for_prediction":["0->2","1->4","2->6","3->1","4->0","5->3"],"reference_code":"class ChooseAGroceryStore:\n\n    title = \"choose a grocery store\"\n    steps = 7\n\n    def step0(self):\n        return \"look up grocery stores online\"\n\n    def step1(self):\n        return \"navigate to other grocery store websites\"\n\n    def step2(self):\n        return \"look for directions to store\"\n\n    def step3(self):\n        return \"choose a grocery store\"\n\n    def step4(self):\n        return \"compare grocery stores\"\n\n    def step5(self):\n        return \"narrow down choices\"\n\n    def step6(self):\n        return \"make final decision\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n            \"step1 -> step4\",\n        ]\n","input_prompt_code":"class ChooseAGroceryStore:\n\n    title = \"choose a grocery store\"\n    steps = 7\n\n","reference_graph":{"title":"choose a grocery store","num_steps":7,"schema":["step0: look up grocery stores online","step1: navigate to other grocery store websites","step2: look for directions to store","step3: choose a grocery store","step4: compare grocery stores","step5: narrow down choices","step6: make final decision"],"relations":["step0 -> step1","step2 -> step3","step4 -> step5","step5 -> step6","step6 -> step2","step1 -> step4"]}}
{"scenario":"Purchase materials such as wood and nails","events":{"0":"drive to hardware store","1":"purchase needed materials","2":"get into car","3":"park car and enter store","4":"decide on needed materials","5":"Research bird house plans and schematics","6":"Purchase materials such as wood and nails"},"context":"Research bird house plans and schematics","minutes":30.0,"events_minutes":{"0":10.0,"1":10.0,"2":10.0,"3":10.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: drive to hardware store; step1: purchase needed materials; step2: get into car; step3: park car and enter store; step4: decide on needed materials; step5: Research bird house plans and schematics; step6: Purchase materials such as wood and nails","flatten_input_for_script_generation":"You want to Purchase materials such as wood and nails. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Research bird house plans and schematics; step1: decide on needed materials; step2: get into car; step3: drive to hardware store; step4: park car and enter store; step5: purchase needed materials; step6: Purchase materials such as wood and nails; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->2","5->4"],"reference_code":"class PurchaseMaterialsSuchAsWoodAndNails:\n\n    title = \"Purchase materials such as wood and nails\"\n    steps = 7\n\n    def step0(self):\n        return \"Research bird house plans and schematics\"\n\n    def step1(self):\n        return \"decide on needed materials\"\n\n    def step2(self):\n        return \"get into car\"\n\n    def step3(self):\n        return \"drive to hardware store\"\n\n    def step4(self):\n        return \"park car and enter store\"\n\n    def step5(self):\n        return \"purchase needed materials\"\n\n    def step6(self):\n        return \"Purchase materials such as wood and nails\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseMaterialsSuchAsWoodAndNails:\n\n    title = \"Purchase materials such as wood and nails\"\n    steps = 7\n\n","reference_graph":{"title":"Purchase materials such as wood and nails","num_steps":7,"schema":["step0: Research bird house plans and schematics","step1: decide on needed materials","step2: get into car","step3: drive to hardware store","step4: park car and enter store","step5: purchase needed materials","step6: Purchase materials such as wood and nails"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk to the car","events":{"0":"Extend right leg forward in the direction of the car.","1":"Remember where the car is parked.","2":"Lift left leg up off the ground.","3":"Extend left leg forward in the direction of the car.","4":"Continue lifting and extending legs until arrival at the car.","5":"Lift right leg up off the ground.","6":"Leave the apartment building","7":"Walk to the car"},"context":"Leave the apartment building","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0333333333,"2":0.0166666667,"3":0.0166666667,"4":0.25,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: Extend right leg forward in the direction of the car.; step1: Remember where the car is parked.; step2: Lift left leg up off the ground.; step3: Extend left leg forward in the direction of the car.; step4: Continue lifting and extending legs until arrival at the car.; step5: Lift right leg up off the ground.; step6: Leave the apartment building; step7: Walk to the car","flatten_input_for_script_generation":"You want to Walk to the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step1 -> step2; step5 -> step0; step0 -> step4; step2 -> step3; step3 -> step4; step4 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: Leave the apartment building; step1: Remember where the car is parked.; step2: Lift right leg up off the ground.; step3: Lift left leg up off the ground.; step4: Extend right leg forward in the direction of the car.; step5: Extend left leg forward in the direction of the car.; step6: Continue lifting and extending legs until arrival at the car.; step7: Walk to the car; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step5 -> step6","gold_edges_for_prediction":["0->4","1->5","1->2","2->3","3->4","4->7","5->0","6->1"],"reference_code":"class WalkToTheCar:\n\n    title = \"Walk to the car\"\n    steps = 8\n\n    def step0(self):\n        return \"Leave the apartment building\"\n\n    def step1(self):\n        return \"Remember where the car is parked.\"\n\n    def step2(self):\n        return \"Lift right leg up off the ground.\"\n\n    def step3(self):\n        return \"Lift left leg up off the ground.\"\n\n    def step4(self):\n        return \"Extend right leg forward in the direction of the car.\"\n\n    def step5(self):\n        return \"Extend left leg forward in the direction of the car.\"\n\n    def step6(self):\n        return \"Continue lifting and extending legs until arrival at the car.\"\n\n    def step7(self):\n        return \"Walk to the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheCar:\n\n    title = \"Walk to the car\"\n    steps = 8\n\n","reference_graph":{"title":"Walk to the car","num_steps":8,"schema":["step0: Leave the apartment building","step1: Remember where the car is parked.","step2: Lift right leg up off the ground.","step3: Lift left leg up off the ground.","step4: Extend right leg forward in the direction of the car.","step5: Extend left leg forward in the direction of the car.","step6: Continue lifting and extending legs until arrival at the car.","step7: Walk to the car"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step5 -> step6"]}}
{"scenario":"Build Time traveling machine","events":{"0":"buy time travel parts","1":"determine parts list","2":"decide on which time travel design to use","3":"go to parts store","4":"look at design document","5":"Look at time travel machine designs","6":"Build Time traveling machine"},"context":"Look at time travel machine designs","minutes":259200.0,"events_minutes":{"0":60.0,"1":15.0,"2":5.0,"3":25.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: buy time travel parts; step1: determine parts list; step2: decide on which time travel design to use; step3: go to parts store; step4: look at design document; step5: Look at time travel machine designs; step6: Build Time traveling machine","flatten_input_for_script_generation":"You want to Build Time traveling machine. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Look at time travel machine designs; step1: decide on which time travel design to use; step2: look at design document; step3: determine parts list; step4: go to parts store; step5: buy time travel parts; step6: Build Time traveling machine; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class BuildTimeTravelingMachine:\n\n    title = \"Build Time traveling machine\"\n    steps = 7\n\n    def step0(self):\n        return \"Look at time travel machine designs\"\n\n    def step1(self):\n        return \"decide on which time travel design to use\"\n\n    def step2(self):\n        return \"look at design document\"\n\n    def step3(self):\n        return \"determine parts list\"\n\n    def step4(self):\n        return \"go to parts store\"\n\n    def step5(self):\n        return \"buy time travel parts\"\n\n    def step6(self):\n        return \"Build Time traveling machine\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuildTimeTravelingMachine:\n\n    title = \"Build Time traveling machine\"\n    steps = 7\n\n","reference_graph":{"title":"Build Time traveling machine","num_steps":7,"schema":["step0: Look at time travel machine designs","step1: decide on which time travel design to use","step2: look at design document","step3: determine parts list","step4: go to parts store","step5: buy time travel parts","step6: Build Time traveling machine"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Receive package in mail.","events":{"0":"Go to front door","1":"Wait until status says delivered","2":"Check delivery status","3":"Open front door","4":"Pick up package","5":"Wait for delivery.","6":"Receive package in mail."},"context":"Wait for delivery.","minutes":20.0,"events_minutes":{"0":2.0,"1":4320.0,"2":5.0,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Go to front door; step1: Wait until status says delivered; step2: Check delivery status; step3: Open front door; step4: Pick up package; step5: Wait for delivery.; step6: Receive package in mail.","flatten_input_for_script_generation":"You want to Receive package in mail.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Wait for delivery.; step1: Check delivery status; step2: Wait until status says delivered; step3: Go to front door; step4: Open front door; step5: Pick up package; step6: Receive package in mail.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class ReceivePackageInMail:\n\n    title = \"Receive package in mail.\"\n    steps = 7\n\n    def step0(self):\n        return \"Wait for delivery.\"\n\n    def step1(self):\n        return \"Check delivery status\"\n\n    def step2(self):\n        return \"Wait until status says delivered\"\n\n    def step3(self):\n        return \"Go to front door\"\n\n    def step4(self):\n        return \"Open front door\"\n\n    def step5(self):\n        return \"Pick up package\"\n\n    def step6(self):\n        return \"Receive package in mail.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReceivePackageInMail:\n\n    title = \"Receive package in mail.\"\n    steps = 7\n\n","reference_graph":{"title":"Receive package in mail.","num_steps":7,"schema":["step0: Wait for delivery.","step1: Check delivery status","step2: Wait until status says delivered","step3: Go to front door","step4: Open front door","step5: Pick up package","step6: Receive package in mail."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Chooses a horse","events":{"0":"check out the horses that meet qualifications","1":"look at the best option","2":"go over pros and cons","3":"decide to eliminate all but two","4":"decide what horses meet qualifications","5":"meet different horses","6":"Chooses a horse"},"context":"meet different horses","minutes":43200.0,"events_minutes":{"0":5.0,"1":1.0,"2":2.0,"3":3.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: check out the horses that meet qualifications; step1: look at the best option; step2: go over pros and cons; step3: decide to eliminate all but two; step4: decide what horses meet qualifications; step5: meet different horses; step6: Chooses a horse","flatten_input_for_script_generation":"You want to Chooses a horse. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: meet different horses; step1: decide what horses meet qualifications; step2: check out the horses that meet qualifications; step3: decide to eliminate all but two; step4: go over pros and cons; step5: look at the best option; step6: Chooses a horse; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class ChoosesAHorse:\n\n    title = \"Chooses a horse\"\n    steps = 7\n\n    def step0(self):\n        return \"meet different horses\"\n\n    def step1(self):\n        return \"decide what horses meet qualifications\"\n\n    def step2(self):\n        return \"check out the horses that meet qualifications\"\n\n    def step3(self):\n        return \"decide to eliminate all but two\"\n\n    def step4(self):\n        return \"go over pros and cons\"\n\n    def step5(self):\n        return \"look at the best option\"\n\n    def step6(self):\n        return \"Chooses a horse\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ChoosesAHorse:\n\n    title = \"Chooses a horse\"\n    steps = 7\n\n","reference_graph":{"title":"Chooses a horse","num_steps":7,"schema":["step0: meet different horses","step1: decide what horses meet qualifications","step2: check out the horses that meet qualifications","step3: decide to eliminate all but two","step4: go over pros and cons","step5: look at the best option","step6: Chooses a horse"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go in the store","events":{"0":"Open the car door.","1":"Open the door to the store.","2":"Close the car door.","3":"Turn off the car.","4":"Enter the store.","5":"Walk to the store's entrance.","6":"Get out of the car.","7":"park the car","8":"go in the store"},"context":"park the car","minutes":10.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0166666667,"3":0.0833333333,"4":0.0333333333,"5":0.25,"6":0.0333333333},"flatten_input_for_edge_prediction":"step0: Open the car door.; step1: Open the door to the store.; step2: Close the car door.; step3: Turn off the car.; step4: Enter the store.; step5: Walk to the store's entrance.; step6: Get out of the car.; step7: park the car; step8: go in the store","flatten_input_for_script_generation":"You want to go in the store. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step6; step6 -> step2; step2 -> step5; step5 -> step1; step1 -> step4; step4 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: park the car; step1: Turn off the car.; step2: Open the car door.; step3: Get out of the car.; step4: Close the car door.; step5: Walk to the store's entrance.; step6: Open the door to the store.; step7: Enter the store.; step8: go in the store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->5","3->0","4->8","5->1","6->2","7->3"],"reference_code":"class GoInTheStore:\n\n    title = \"go in the store\"\n    steps = 9\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"Turn off the car.\"\n\n    def step2(self):\n        return \"Open the car door.\"\n\n    def step3(self):\n        return \"Get out of the car.\"\n\n    def step4(self):\n        return \"Close the car door.\"\n\n    def step5(self):\n        return \"Walk to the store's entrance.\"\n\n    def step6(self):\n        return \"Open the door to the store.\"\n\n    def step7(self):\n        return \"Enter the store.\"\n\n    def step8(self):\n        return \"go in the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GoInTheStore:\n\n    title = \"go in the store\"\n    steps = 9\n\n","reference_graph":{"title":"go in the store","num_steps":9,"schema":["step0: park the car","step1: Turn off the car.","step2: Open the car door.","step3: Get out of the car.","step4: Close the car door.","step5: Walk to the store's entrance.","step6: Open the door to the store.","step7: Enter the store.","step8: go in the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Serve the hot dog","events":{"0":"grill the bun","1":"grab the condiments","2":"add the condiments","3":"put hotdog in bun","4":"grab a bun","5":"Move hot dogs to hot side of grill","6":"Serve the hot dog"},"context":"Move hot dogs to hot side of grill","minutes":3.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: grill the bun; step1: grab the condiments; step2: add the condiments; step3: put hotdog in bun; step4: grab a bun; step5: Move hot dogs to hot side of grill; step6: Serve the hot dog","flatten_input_for_script_generation":"You want to Serve the hot dog. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step1 -> step2; step3 -> step1; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Move hot dogs to hot side of grill; step1: grab a bun; step2: grill the bun; step3: put hotdog in bun; step4: grab the condiments; step5: add the condiments; step6: Serve the hot dog; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->1","4->0","5->4"],"reference_code":"class ServeTheHotDog:\n\n    title = \"Serve the hot dog\"\n    steps = 7\n\n    def step0(self):\n        return \"Move hot dogs to hot side of grill\"\n\n    def step1(self):\n        return \"grab a bun\"\n\n    def step2(self):\n        return \"grill the bun\"\n\n    def step3(self):\n        return \"put hotdog in bun\"\n\n    def step4(self):\n        return \"grab the condiments\"\n\n    def step5(self):\n        return \"add the condiments\"\n\n    def step6(self):\n        return \"Serve the hot dog\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ServeTheHotDog:\n\n    title = \"Serve the hot dog\"\n    steps = 7\n\n","reference_graph":{"title":"Serve the hot dog","num_steps":7,"schema":["step0: Move hot dogs to hot side of grill","step1: grab a bun","step2: grill the bun","step3: put hotdog in bun","step4: grab the condiments","step5: add the condiments","step6: Serve the hot dog"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get on the boat","events":{"0":"park the car","1":"walk towards the dock","2":"turn the car off","3":"lock the car door","4":"get out of the car","5":"drive to where the boating trip is","6":"get on the boat"},"context":"drive to where the boating trip is","minutes":15.0,"events_minutes":{"0":1.0,"1":3.0,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: park the car; step1: walk towards the dock; step2: turn the car off; step3: lock the car door; step4: get out of the car; step5: drive to where the boating trip is; step6: get on the boat","flatten_input_for_script_generation":"You want to get on the boat. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: drive to where the boating trip is; step1: park the car; step2: turn the car off; step3: get out of the car; step4: lock the car door; step5: walk towards the dock; step6: get on the boat; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->1","4->3","5->0"],"reference_code":"class GetOnTheBoat:\n\n    title = \"get on the boat\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to where the boating trip is\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"turn the car off\"\n\n    def step3(self):\n        return \"get out of the car\"\n\n    def step4(self):\n        return \"lock the car door\"\n\n    def step5(self):\n        return \"walk towards the dock\"\n\n    def step6(self):\n        return \"get on the boat\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOnTheBoat:\n\n    title = \"get on the boat\"\n    steps = 7\n\n","reference_graph":{"title":"get on the boat","num_steps":7,"schema":["step0: drive to where the boating trip is","step1: park the car","step2: turn the car off","step3: get out of the car","step4: lock the car door","step5: walk towards the dock","step6: get on the boat"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"print out the recipe","events":{"0":"read over the recipe.","1":"put paper in the printer.","2":"open the document in the respective program.","3":"click the print button in the program.","4":"save the recipe to the computer.","5":"decide on best recipe","6":"print out the recipe"},"context":"decide on best recipe","minutes":2.0,"events_minutes":{"0":2.0,"1":5.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: read over the recipe.; step1: put paper in the printer.; step2: open the document in the respective program.; step3: click the print button in the program.; step4: save the recipe to the computer.; step5: decide on best recipe; step6: print out the recipe","flatten_input_for_script_generation":"You want to print out the recipe. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step2 -> step3; step1 -> step2; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decide on best recipe; step1: read over the recipe.; step2: save the recipe to the computer.; step3: put paper in the printer.; step4: open the document in the respective program.; step5: click the print button in the program.; step6: print out the recipe; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->6","4->1","5->0"],"reference_code":"class PrintOutTheRecipe:\n\n    title = \"print out the recipe\"\n    steps = 7\n\n    def step0(self):\n        return \"decide on best recipe\"\n\n    def step1(self):\n        return \"read over the recipe.\"\n\n    def step2(self):\n        return \"save the recipe to the computer.\"\n\n    def step3(self):\n        return \"put paper in the printer.\"\n\n    def step4(self):\n        return \"open the document in the respective program.\"\n\n    def step5(self):\n        return \"click the print button in the program.\"\n\n    def step6(self):\n        return \"print out the recipe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PrintOutTheRecipe:\n\n    title = \"print out the recipe\"\n    steps = 7\n\n","reference_graph":{"title":"print out the recipe","num_steps":7,"schema":["step0: decide on best recipe","step1: read over the recipe.","step2: save the recipe to the computer.","step3: put paper in the printer.","step4: open the document in the respective program.","step5: click the print button in the program.","step6: print out the recipe"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put in the dirty clothes","events":{"0":"turn head towards laundry basket","1":"turn body towards laundry basket","2":"pull items out of laundry basket","3":"drop items over washing machine","4":"reach into laundry basket","5":"open the washing machine","6":"put in the dirty clothes"},"context":"open the washing machine","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":1.0,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: turn head towards laundry basket; step1: turn body towards laundry basket; step2: pull items out of laundry basket; step3: drop items over washing machine; step4: reach into laundry basket; step5: open the washing machine; step6: put in the dirty clothes","flatten_input_for_script_generation":"You want to put in the dirty clothes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: open the washing machine; step1: turn head towards laundry basket; step2: turn body towards laundry basket; step3: reach into laundry basket; step4: pull items out of laundry basket; step5: drop items over washing machine; step6: put in the dirty clothes; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->4","2->3","3->6","4->2","5->1","5->0"],"reference_code":"class PutInTheDirtyClothes:\n\n    title = \"put in the dirty clothes\"\n    steps = 7\n\n    def step0(self):\n        return \"open the washing machine\"\n\n    def step1(self):\n        return \"turn head towards laundry basket\"\n\n    def step2(self):\n        return \"turn body towards laundry basket\"\n\n    def step3(self):\n        return \"reach into laundry basket\"\n\n    def step4(self):\n        return \"pull items out of laundry basket\"\n\n    def step5(self):\n        return \"drop items over washing machine\"\n\n    def step6(self):\n        return \"put in the dirty clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutInTheDirtyClothes:\n\n    title = \"put in the dirty clothes\"\n    steps = 7\n\n","reference_graph":{"title":"put in the dirty clothes","num_steps":7,"schema":["step0: open the washing machine","step1: turn head towards laundry basket","step2: turn body towards laundry basket","step3: reach into laundry basket","step4: pull items out of laundry basket","step5: drop items over washing machine","step6: put in the dirty clothes"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"receive the large animal","events":{"0":"order food for the new animal","1":"wait for the paperwork to be approved","2":"order medicine and toys","3":"wait for transport to arrive","4":"received certified mail with notarized licenses","5":"set up the paperwork","6":"receive the large animal"},"context":"set up the paperwork","minutes":30.0,"events_minutes":{"0":60.0,"1":4320.0,"2":60.0,"3":1440.0,"4":2880.0},"flatten_input_for_edge_prediction":"step0: order food for the new animal; step1: wait for the paperwork to be approved; step2: order medicine and toys; step3: wait for transport to arrive; step4: received certified mail with notarized licenses; step5: set up the paperwork; step6: receive the large animal","flatten_input_for_script_generation":"You want to receive the large animal. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: set up the paperwork; step1: wait for the paperwork to be approved; step2: received certified mail with notarized licenses; step3: order food for the new animal; step4: order medicine and toys; step5: wait for transport to arrive; step6: receive the large animal; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class ReceiveTheLargeAnimal:\n\n    title = \"receive the large animal\"\n    steps = 7\n\n    def step0(self):\n        return \"set up the paperwork\"\n\n    def step1(self):\n        return \"wait for the paperwork to be approved\"\n\n    def step2(self):\n        return \"received certified mail with notarized licenses\"\n\n    def step3(self):\n        return \"order food for the new animal\"\n\n    def step4(self):\n        return \"order medicine and toys\"\n\n    def step5(self):\n        return \"wait for transport to arrive\"\n\n    def step6(self):\n        return \"receive the large animal\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReceiveTheLargeAnimal:\n\n    title = \"receive the large animal\"\n    steps = 7\n\n","reference_graph":{"title":"receive the large animal","num_steps":7,"schema":["step0: set up the paperwork","step1: wait for the paperwork to be approved","step2: received certified mail with notarized licenses","step3: order food for the new animal","step4: order medicine and toys","step5: wait for transport to arrive","step6: receive the large animal"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put the pack inside th car","events":{"0":"select accept on the payment pad","1":"thank the cashier","2":"walk outside to the car","3":"walk towards the store doors","4":"open up car door","5":"pull out credit card out of payment pad","6":"Make payment for the purchase","7":"Put the pack inside th car"},"context":"Make payment for the purchase","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0,"5":1.0},"flatten_input_for_edge_prediction":"step0: select accept on the payment pad; step1: thank the cashier; step2: walk outside to the car; step3: walk towards the store doors; step4: open up car door; step5: pull out credit card out of payment pad; step6: Make payment for the purchase; step7: Put the pack inside th car","flatten_input_for_script_generation":"You want to Put the pack inside th car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step1 -> step3; step2 -> step4; step5 -> step1; step4 -> step7; step0 -> step5; step6 -> step0","flatten_output_for_script_generation":"step0: Make payment for the purchase; step1: select accept on the payment pad; step2: walk towards the store doors; step3: walk outside to the car; step4: open up car door; step5: thank the cashier; step6: Put the pack inside th car; step7: pull out credit card out of payment pad; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step2; step4 -> step6; step7 -> step5; step1 -> step7","gold_edges_for_prediction":["0->5","1->3","2->4","3->2","4->7","5->1","6->0"],"reference_code":"class PutThePackInsideThCar:\n\n    title = \"Put the pack inside th car\"\n    steps = 8\n\n    def step0(self):\n        return \"Make payment for the purchase\"\n\n    def step1(self):\n        return \"select accept on the payment pad\"\n\n    def step2(self):\n        return \"walk towards the store doors\"\n\n    def step3(self):\n        return \"walk outside to the car\"\n\n    def step4(self):\n        return \"open up car door\"\n\n    def step5(self):\n        return \"thank the cashier\"\n\n    def step6(self):\n        return \"Put the pack inside th car\"\n\n    def step7(self):\n        return \"pull out credit card out of payment pad\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n            \"step7 -> step5\",\n            \"step1 -> step7\",\n        ]\n","input_prompt_code":"class PutThePackInsideThCar:\n\n    title = \"Put the pack inside th car\"\n    steps = 8\n\n","reference_graph":{"title":"Put the pack inside th car","num_steps":8,"schema":["step0: Make payment for the purchase","step1: select accept on the payment pad","step2: walk towards the store doors","step3: walk outside to the car","step4: open up car door","step5: thank the cashier","step6: Put the pack inside th car","step7: pull out credit card out of payment pad"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step2","step4 -> step6","step7 -> step5","step1 -> step7"]}}
{"scenario":"open the refrigerator","events":{"0":"Begin pulling on the refrigerator door.","1":"Stop in front of the refrigerator.","2":"Reach hand toward the refrigerator door.","3":"Continue pulling until the door is opened.","4":"Grip the refrigerator door tightly.","5":"walk to the refrigerator","6":"open the refrigerator"},"context":"walk to the refrigerator","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: Begin pulling on the refrigerator door.; step1: Stop in front of the refrigerator.; step2: Reach hand toward the refrigerator door.; step3: Continue pulling until the door is opened.; step4: Grip the refrigerator door tightly.; step5: walk to the refrigerator; step6: open the refrigerator","flatten_input_for_script_generation":"You want to open the refrigerator. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: walk to the refrigerator; step1: Stop in front of the refrigerator.; step2: Reach hand toward the refrigerator door.; step3: Grip the refrigerator door tightly.; step4: Begin pulling on the refrigerator door.; step5: Continue pulling until the door is opened.; step6: open the refrigerator; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->6","4->0","5->1"],"reference_code":"class OpenTheRefrigerator:\n\n    title = \"open the refrigerator\"\n    steps = 7\n\n    def step0(self):\n        return \"walk to the refrigerator\"\n\n    def step1(self):\n        return \"Stop in front of the refrigerator.\"\n\n    def step2(self):\n        return \"Reach hand toward the refrigerator door.\"\n\n    def step3(self):\n        return \"Grip the refrigerator door tightly.\"\n\n    def step4(self):\n        return \"Begin pulling on the refrigerator door.\"\n\n    def step5(self):\n        return \"Continue pulling until the door is opened.\"\n\n    def step6(self):\n        return \"open the refrigerator\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheRefrigerator:\n\n    title = \"open the refrigerator\"\n    steps = 7\n\n","reference_graph":{"title":"open the refrigerator","num_steps":7,"schema":["step0: walk to the refrigerator","step1: Stop in front of the refrigerator.","step2: Reach hand toward the refrigerator door.","step3: Grip the refrigerator door tightly.","step4: Begin pulling on the refrigerator door.","step5: Continue pulling until the door is opened.","step6: open the refrigerator"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"order the book","events":{"0":"input credit card details","1":"navigate to shopping cart","2":"add the book to shopping cart","3":"click the purchase button","4":"click the checkout button","5":"find the lowest price of the book","6":"order the book"},"context":"find the lowest price of the book","minutes":1.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: input credit card details; step1: navigate to shopping cart; step2: add the book to shopping cart; step3: click the purchase button; step4: click the checkout button; step5: find the lowest price of the book; step6: order the book","flatten_input_for_script_generation":"You want to order the book. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: find the lowest price of the book; step1: add the book to shopping cart; step2: navigate to shopping cart; step3: click the checkout button; step4: input credit card details; step5: click the purchase button; step6: order the book; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->6","4->0","5->2"],"reference_code":"class OrderTheBook:\n\n    title = \"order the book\"\n    steps = 7\n\n    def step0(self):\n        return \"find the lowest price of the book\"\n\n    def step1(self):\n        return \"add the book to shopping cart\"\n\n    def step2(self):\n        return \"navigate to shopping cart\"\n\n    def step3(self):\n        return \"click the checkout button\"\n\n    def step4(self):\n        return \"input credit card details\"\n\n    def step5(self):\n        return \"click the purchase button\"\n\n    def step6(self):\n        return \"order the book\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrderTheBook:\n\n    title = \"order the book\"\n    steps = 7\n\n","reference_graph":{"title":"order the book","num_steps":7,"schema":["step0: find the lowest price of the book","step1: add the book to shopping cart","step2: navigate to shopping cart","step3: click the checkout button","step4: input credit card details","step5: click the purchase button","step6: order the book"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk inside, buy a pack of water bottle","events":{"0":"find a parking spot","1":"turn of the car","2":"put the car in park","3":"pull into parking spot","4":"grab the wallet","5":"Drive to nearest store","6":"Walk inside, buy a pack of water bottle"},"context":"Drive to nearest store","minutes":3.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: find a parking spot; step1: turn of the car; step2: put the car in park; step3: pull into parking spot; step4: grab the wallet; step5: Drive to nearest store; step6: Walk inside, buy a pack of water bottle","flatten_input_for_script_generation":"You want to Walk inside, buy a pack of water bottle. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step4 -> step6; step2 -> step1; step1 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: Drive to nearest store; step1: find a parking spot; step2: pull into parking spot; step3: put the car in park; step4: turn of the car; step5: grab the wallet; step6: Walk inside, buy a pack of water bottle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->3","1->4","2->1","3->2","4->6","5->0"],"reference_code":"class WalkInsideBuyAPackOfWaterBottle:\n\n    title = \"Walk inside, buy a pack of water bottle\"\n    steps = 7\n\n    def step0(self):\n        return \"Drive to nearest store\"\n\n    def step1(self):\n        return \"find a parking spot\"\n\n    def step2(self):\n        return \"pull into parking spot\"\n\n    def step3(self):\n        return \"put the car in park\"\n\n    def step4(self):\n        return \"turn of the car\"\n\n    def step5(self):\n        return \"grab the wallet\"\n\n    def step6(self):\n        return \"Walk inside, buy a pack of water bottle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class WalkInsideBuyAPackOfWaterBottle:\n\n    title = \"Walk inside, buy a pack of water bottle\"\n    steps = 7\n\n","reference_graph":{"title":"Walk inside, buy a pack of water bottle","num_steps":7,"schema":["step0: Drive to nearest store","step1: find a parking spot","step2: pull into parking spot","step3: put the car in park","step4: turn of the car","step5: grab the wallet","step6: Walk inside, buy a pack of water bottle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step5 -> step6","step4 -> step5"]}}
{"scenario":"work every day","events":{"0":"Give status report to boss.","1":"Set up work area.","2":"Work on list.","3":"Talk with boss.","4":"Get daily task list.","5":"start at work","6":"work every day"},"context":"start at work","minutes":86400.0,"events_minutes":{"0":60.0,"1":60.0,"2":480.0,"3":20.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Give status report to boss.; step1: Set up work area.; step2: Work on list.; step3: Talk with boss.; step4: Get daily task list.; step5: start at work; step6: work every day","flatten_input_for_script_generation":"You want to work every day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: start at work; step1: Talk with boss.; step2: Get daily task list.; step3: Set up work area.; step4: Work on list.; step5: Give status report to boss.; step6: work every day; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->4","4->1","5->3"],"reference_code":"class WorkEveryDay:\n\n    title = \"work every day\"\n    steps = 7\n\n    def step0(self):\n        return \"start at work\"\n\n    def step1(self):\n        return \"Talk with boss.\"\n\n    def step2(self):\n        return \"Get daily task list.\"\n\n    def step3(self):\n        return \"Set up work area.\"\n\n    def step4(self):\n        return \"Work on list.\"\n\n    def step5(self):\n        return \"Give status report to boss.\"\n\n    def step6(self):\n        return \"work every day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WorkEveryDay:\n\n    title = \"work every day\"\n    steps = 7\n\n","reference_graph":{"title":"work every day","num_steps":7,"schema":["step0: start at work","step1: Talk with boss.","step2: Get daily task list.","step3: Set up work area.","step4: Work on list.","step5: Give status report to boss.","step6: work every day"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"measure out the ingredients.","events":{"0":"open flour package","1":"unpeel the banana","2":"grab the banana","3":"reach into flour bag","4":"grab measuring scoop","5":"Gather all of the ingredients.","6":"measure out the ingredients."},"context":"Gather all of the ingredients.","minutes":5.0,"events_minutes":{"0":0.25,"1":0.25,"2":0.25,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: open flour package; step1: unpeel the banana; step2: grab the banana; step3: reach into flour bag; step4: grab measuring scoop; step5: Gather all of the ingredients.; step6: measure out the ingredients.","flatten_input_for_script_generation":"You want to measure out the ingredients.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step4 -> step0; step3 -> step6; step2 -> step1; step1 -> step6; step5 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: Gather all of the ingredients.; step1: grab the banana; step2: open flour package; step3: reach into flour bag; step4: measure out the ingredients.; step5: grab measuring scoop; step6: unpeel the banana; step0 -> step1; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step2; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->3","1->6","2->1","3->6","4->0","5->4","5->2"],"reference_code":"class MeasureOutTheIngredients:\n\n    title = \"measure out the ingredients.\"\n    steps = 7\n\n    def step0(self):\n        return \"Gather all of the ingredients.\"\n\n    def step1(self):\n        return \"grab the banana\"\n\n    def step2(self):\n        return \"open flour package\"\n\n    def step3(self):\n        return \"reach into flour bag\"\n\n    def step4(self):\n        return \"measure out the ingredients.\"\n\n    def step5(self):\n        return \"grab measuring scoop\"\n\n    def step6(self):\n        return \"unpeel the banana\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class MeasureOutTheIngredients:\n\n    title = \"measure out the ingredients.\"\n    steps = 7\n\n","reference_graph":{"title":"measure out the ingredients.","num_steps":7,"schema":["step0: Gather all of the ingredients.","step1: grab the banana","step2: open flour package","step3: reach into flour bag","step4: measure out the ingredients.","step5: grab measuring scoop","step6: unpeel the banana"],"relations":["step0 -> step1","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step2","step1 -> step6","step6 -> step4"]}}
{"scenario":"Read the instructions carefully","events":{"0":"bring instructions to reading level","1":"move arms towards face","2":"move head towards instructions","3":"determine if instructions can be read","4":"move eyes back and forth","5":"Get the instructions","6":"Read the instructions carefully"},"context":"Get the instructions","minutes":60.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: bring instructions to reading level; step1: move arms towards face; step2: move head towards instructions; step3: determine if instructions can be read; step4: move eyes back and forth; step5: Get the instructions; step6: Read the instructions carefully","flatten_input_for_script_generation":"You want to Read the instructions carefully. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step1; step0 -> step3; step4 -> step6; step1 -> step3; step3 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: Get the instructions; step1: move head towards instructions; step2: bring instructions to reading level; step3: move arms towards face; step4: determine if instructions can be read; step5: move eyes back and forth; step6: Read the instructions carefully; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->3","2->0","2->1","3->4","4->6","5->2"],"reference_code":"class ReadTheInstructionsCarefully:\n\n    title = \"Read the instructions carefully\"\n    steps = 7\n\n    def step0(self):\n        return \"Get the instructions\"\n\n    def step1(self):\n        return \"move head towards instructions\"\n\n    def step2(self):\n        return \"bring instructions to reading level\"\n\n    def step3(self):\n        return \"move arms towards face\"\n\n    def step4(self):\n        return \"determine if instructions can be read\"\n\n    def step5(self):\n        return \"move eyes back and forth\"\n\n    def step6(self):\n        return \"Read the instructions carefully\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadTheInstructionsCarefully:\n\n    title = \"Read the instructions carefully\"\n    steps = 7\n\n","reference_graph":{"title":"Read the instructions carefully","num_steps":7,"schema":["step0: Get the instructions","step1: move head towards instructions","step2: bring instructions to reading level","step3: move arms towards face","step4: determine if instructions can be read","step5: move eyes back and forth","step6: Read the instructions carefully"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Bring the child home","events":{"0":"laugh with the child","1":"talk with the child","2":"sit down with the child","3":"find out if the child would like to be adopted","4":"affirm that the child wants to be adopted","5":"Meet the child","6":"Bring the child home"},"context":"Meet the child","minutes":30.0,"events_minutes":{"0":15.0,"1":15.0,"2":0.25,"3":0.5,"4":0.25},"flatten_input_for_edge_prediction":"step0: laugh with the child; step1: talk with the child; step2: sit down with the child; step3: find out if the child would like to be adopted; step4: affirm that the child wants to be adopted; step5: Meet the child; step6: Bring the child home","flatten_input_for_script_generation":"You want to Bring the child home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Meet the child; step1: sit down with the child; step2: talk with the child; step3: laugh with the child; step4: find out if the child would like to be adopted; step5: affirm that the child wants to be adopted; step6: Bring the child home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class BringTheChildHome:\n\n    title = \"Bring the child home\"\n    steps = 7\n\n    def step0(self):\n        return \"Meet the child\"\n\n    def step1(self):\n        return \"sit down with the child\"\n\n    def step2(self):\n        return \"talk with the child\"\n\n    def step3(self):\n        return \"laugh with the child\"\n\n    def step4(self):\n        return \"find out if the child would like to be adopted\"\n\n    def step5(self):\n        return \"affirm that the child wants to be adopted\"\n\n    def step6(self):\n        return \"Bring the child home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BringTheChildHome:\n\n    title = \"Bring the child home\"\n    steps = 7\n\n","reference_graph":{"title":"Bring the child home","num_steps":7,"schema":["step0: Meet the child","step1: sit down with the child","step2: talk with the child","step3: laugh with the child","step4: find out if the child would like to be adopted","step5: affirm that the child wants to be adopted","step6: Bring the child home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"write down the steps","events":{"0":"think about things that need done","1":"grab a pen and paper","2":"make a plan in the head","3":"think about how to do tasks most efficiently","4":"think about what order makes sense","5":"plan what to do","6":"write down the steps"},"context":"plan what to do","minutes":20.0,"events_minutes":{"0":0.5,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: think about things that need done; step1: grab a pen and paper; step2: make a plan in the head; step3: think about how to do tasks most efficiently; step4: think about what order makes sense; step5: plan what to do; step6: write down the steps","flatten_input_for_script_generation":"You want to write down the steps. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: plan what to do; step1: think about things that need done; step2: think about how to do tasks most efficiently; step3: think about what order makes sense; step4: make a plan in the head; step5: grab a pen and paper; step6: write down the steps; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->2","5->0"],"reference_code":"class WriteDownTheSteps:\n\n    title = \"write down the steps\"\n    steps = 7\n\n    def step0(self):\n        return \"plan what to do\"\n\n    def step1(self):\n        return \"think about things that need done\"\n\n    def step2(self):\n        return \"think about how to do tasks most efficiently\"\n\n    def step3(self):\n        return \"think about what order makes sense\"\n\n    def step4(self):\n        return \"make a plan in the head\"\n\n    def step5(self):\n        return \"grab a pen and paper\"\n\n    def step6(self):\n        return \"write down the steps\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WriteDownTheSteps:\n\n    title = \"write down the steps\"\n    steps = 7\n\n","reference_graph":{"title":"write down the steps","num_steps":7,"schema":["step0: plan what to do","step1: think about things that need done","step2: think about how to do tasks most efficiently","step3: think about what order makes sense","step4: make a plan in the head","step5: grab a pen and paper","step6: write down the steps"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in the car","events":{"0":"wake up and notice slept late","1":"panic and rush into bathroom","2":"rush to put on clothes","3":"race into kitchen for quick meal","4":"take quick shower","5":"NONE","6":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":4.0,"2":5.0,"3":6.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: wake up and notice slept late; step1: panic and rush into bathroom; step2: rush to put on clothes; step3: race into kitchen for quick meal; step4: take quick shower; step5: decided to get in the car; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to get in the car; step1: wake up and notice slept late; step2: panic and rush into bathroom; step3: take quick shower; step4: rush to put on clothes; step5: race into kitchen for quick meal; step6: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->6","4->2","5->0"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"wake up and notice slept late\"\n\n    def step2(self):\n        return \"panic and rush into bathroom\"\n\n    def step3(self):\n        return \"take quick shower\"\n\n    def step4(self):\n        return \"rush to put on clothes\"\n\n    def step5(self):\n        return \"race into kitchen for quick meal\"\n\n    def step6(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: decided to get in the car","step1: wake up and notice slept late","step2: panic and rush into bathroom","step3: take quick shower","step4: rush to put on clothes","step5: race into kitchen for quick meal","step6: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"go out to the car","events":{"0":"turn off lights","1":"exit the home","2":"grab car keys","3":"grab the wallet","4":"close house door","5":"open house door","6":"get dressed for the day","7":"go out to the car"},"context":"get dressed for the day","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.25,"2":1.0,"3":1.0,"4":0.25,"5":0.25},"flatten_input_for_edge_prediction":"step0: turn off lights; step1: exit the home; step2: grab car keys; step3: grab the wallet; step4: close house door; step5: open house door; step6: get dressed for the day; step7: go out to the car","flatten_input_for_script_generation":"You want to go out to the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step0; step0 -> step5; step5 -> step1; step1 -> step4; step4 -> step7; step6 -> step3; step6 -> step2","flatten_output_for_script_generation":"step0: get dressed for the day; step1: grab car keys; step2: grab the wallet; step3: turn off lights; step4: open house door; step5: exit the home; step6: close house door; step7: go out to the car; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->4","2->0","3->0","4->7","5->1","6->3","6->2"],"reference_code":"class GoOutToTheCar:\n\n    title = \"go out to the car\"\n    steps = 8\n\n    def step0(self):\n        return \"get dressed for the day\"\n\n    def step1(self):\n        return \"grab car keys\"\n\n    def step2(self):\n        return \"grab the wallet\"\n\n    def step3(self):\n        return \"turn off lights\"\n\n    def step4(self):\n        return \"open house door\"\n\n    def step5(self):\n        return \"exit the home\"\n\n    def step6(self):\n        return \"close house door\"\n\n    def step7(self):\n        return \"go out to the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoOutToTheCar:\n\n    title = \"go out to the car\"\n    steps = 8\n\n","reference_graph":{"title":"go out to the car","num_steps":8,"schema":["step0: get dressed for the day","step1: grab car keys","step2: grab the wallet","step3: turn off lights","step4: open house door","step5: exit the home","step6: close house door","step7: go out to the car"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"take the plant home","events":{"0":"Do not drop plant","1":"Place plant in hatch","2":"Drive home with plant in back","3":"Take plant out of hatch when home","4":"Open the hatch of car","5":"Walk to car with plant","6":"buy the plant","7":"take the plant home"},"context":"buy the plant","minutes":10.0,"events_minutes":{"0":2.0,"1":1.0,"2":5.0,"3":3.0,"4":1.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: Do not drop plant; step1: Place plant in hatch; step2: Drive home with plant in back; step3: Take plant out of hatch when home; step4: Open the hatch of car; step5: Walk to car with plant; step6: buy the plant; step7: take the plant home","flatten_input_for_script_generation":"You want to take the plant home. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step7; step0 -> step4; step6 -> step5; step6 -> step0","flatten_output_for_script_generation":"step0: buy the plant; step1: Do not drop plant; step2: Walk to car with plant; step3: Open the hatch of car; step4: Place plant in hatch; step5: Drive home with plant in back; step6: Take plant out of hatch when home; step7: take the plant home; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step1 -> step3","gold_edges_for_prediction":["0->4","1->2","2->3","3->7","4->1","5->4","6->5","6->0"],"reference_code":"class TakeThePlantHome:\n\n    title = \"take the plant home\"\n    steps = 8\n\n    def step0(self):\n        return \"buy the plant\"\n\n    def step1(self):\n        return \"Do not drop plant\"\n\n    def step2(self):\n        return \"Walk to car with plant\"\n\n    def step3(self):\n        return \"Open the hatch of car\"\n\n    def step4(self):\n        return \"Place plant in hatch\"\n\n    def step5(self):\n        return \"Drive home with plant in back\"\n\n    def step6(self):\n        return \"Take plant out of hatch when home\"\n\n    def step7(self):\n        return \"take the plant home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step1 -> step3\",\n        ]\n","input_prompt_code":"class TakeThePlantHome:\n\n    title = \"take the plant home\"\n    steps = 8\n\n","reference_graph":{"title":"take the plant home","num_steps":8,"schema":["step0: buy the plant","step1: Do not drop plant","step2: Walk to car with plant","step3: Open the hatch of car","step4: Place plant in hatch","step5: Drive home with plant in back","step6: Take plant out of hatch when home","step7: take the plant home"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step1 -> step3"]}}
{"scenario":"Walk into the show","events":{"0":"stop and use the restroom before the show","1":"get in line at the wine and cheese counter","2":"wait for order to be filled","3":"order charcuterie and wine","4":"walk in and leave coat at coat check","5":"Show tickets at the door","6":"Walk into the show"},"context":"Show tickets at the door","minutes":1.0,"events_minutes":{"0":5.0,"1":5.0,"2":2.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: stop and use the restroom before the show; step1: get in line at the wine and cheese counter; step2: wait for order to be filled; step3: order charcuterie and wine; step4: walk in and leave coat at coat check; step5: Show tickets at the door; step6: Walk into the show","flatten_input_for_script_generation":"You want to Walk into the show. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Show tickets at the door; step1: walk in and leave coat at coat check; step2: stop and use the restroom before the show; step3: get in line at the wine and cheese counter; step4: order charcuterie and wine; step5: wait for order to be filled; step6: Walk into the show; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class WalkIntoTheShow:\n\n    title = \"Walk into the show\"\n    steps = 7\n\n    def step0(self):\n        return \"Show tickets at the door\"\n\n    def step1(self):\n        return \"walk in and leave coat at coat check\"\n\n    def step2(self):\n        return \"stop and use the restroom before the show\"\n\n    def step3(self):\n        return \"get in line at the wine and cheese counter\"\n\n    def step4(self):\n        return \"order charcuterie and wine\"\n\n    def step5(self):\n        return \"wait for order to be filled\"\n\n    def step6(self):\n        return \"Walk into the show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkIntoTheShow:\n\n    title = \"Walk into the show\"\n    steps = 7\n\n","reference_graph":{"title":"Walk into the show","num_steps":7,"schema":["step0: Show tickets at the door","step1: walk in and leave coat at coat check","step2: stop and use the restroom before the show","step3: get in line at the wine and cheese counter","step4: order charcuterie and wine","step5: wait for order to be filled","step6: Walk into the show"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"gather the ingredients","events":{"0":"determine the ingredients","1":"open the fridge","2":"walk towards fridge","3":"walk towards cabinet","4":"open the cabinet","5":"choose a recipe","6":"gather the ingredients"},"context":"choose a recipe","minutes":15.0,"events_minutes":{"0":0.3333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: determine the ingredients; step1: open the fridge; step2: walk towards fridge; step3: walk towards cabinet; step4: open the cabinet; step5: choose a recipe; step6: gather the ingredients","flatten_input_for_script_generation":"You want to gather the ingredients. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step0 -> step3; step2 -> step1; step1 -> step6; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: choose a recipe; step1: determine the ingredients; step2: walk towards fridge; step3: walk towards cabinet; step4: open the fridge; step5: open the cabinet; step6: gather the ingredients; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","0->3","1->6","2->1","3->4","4->6","5->0"],"reference_code":"class GatherTheIngredients:\n\n    title = \"gather the ingredients\"\n    steps = 7\n\n    def step0(self):\n        return \"choose a recipe\"\n\n    def step1(self):\n        return \"determine the ingredients\"\n\n    def step2(self):\n        return \"walk towards fridge\"\n\n    def step3(self):\n        return \"walk towards cabinet\"\n\n    def step4(self):\n        return \"open the fridge\"\n\n    def step5(self):\n        return \"open the cabinet\"\n\n    def step6(self):\n        return \"gather the ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherTheIngredients:\n\n    title = \"gather the ingredients\"\n    steps = 7\n\n","reference_graph":{"title":"gather the ingredients","num_steps":7,"schema":["step0: choose a recipe","step1: determine the ingredients","step2: walk towards fridge","step3: walk towards cabinet","step4: open the fridge","step5: open the cabinet","step6: gather the ingredients"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"pay for cruise tour","events":{"0":"enter personal information","1":"go to cruise website","2":"add any options","3":"pick a room","4":"add cruise to cart","5":"pick a cruise tour","6":"pay for cruise tour"},"context":"pick a cruise tour","minutes":10.0,"events_minutes":{"0":15.0,"1":1.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: enter personal information; step1: go to cruise website; step2: add any options; step3: pick a room; step4: add cruise to cart; step5: pick a cruise tour; step6: pay for cruise tour","flatten_input_for_script_generation":"You want to pay for cruise tour. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step4 -> step0; step0 -> step6; step3 -> step2; step2 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: pick a cruise tour; step1: go to cruise website; step2: pick a room; step3: add any options; step4: add cruise to cart; step5: enter personal information; step6: pay for cruise tour; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step5 -> step6; step3 -> step4","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class PayForCruiseTour:\n\n    title = \"pay for cruise tour\"\n    steps = 7\n\n    def step0(self):\n        return \"pick a cruise tour\"\n\n    def step1(self):\n        return \"go to cruise website\"\n\n    def step2(self):\n        return \"pick a room\"\n\n    def step3(self):\n        return \"add any options\"\n\n    def step4(self):\n        return \"add cruise to cart\"\n\n    def step5(self):\n        return \"enter personal information\"\n\n    def step6(self):\n        return \"pay for cruise tour\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step3 -> step4\",\n        ]\n","input_prompt_code":"class PayForCruiseTour:\n\n    title = \"pay for cruise tour\"\n    steps = 7\n\n","reference_graph":{"title":"pay for cruise tour","num_steps":7,"schema":["step0: pick a cruise tour","step1: go to cruise website","step2: pick a room","step3: add any options","step4: add cruise to cart","step5: enter personal information","step6: pay for cruise tour"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step5 -> step6","step3 -> step4"]}}
{"scenario":"walk to DVD player","events":{"0":"get up and in position.","1":"pick up the dvd.","2":"grip the hand tightly.","3":"start to move arms and legs.","4":"slowly direct yourself to the location.","5":"find shrek DVD","6":"walk to DVD player"},"context":"find shrek DVD","minutes":1.0,"events_minutes":{"0":0.6666666667,"1":0.1666666667,"2":0.1666666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: get up and in position.; step1: pick up the dvd.; step2: grip the hand tightly.; step3: start to move arms and legs.; step4: slowly direct yourself to the location.; step5: find shrek DVD; step6: walk to DVD player","flatten_input_for_script_generation":"You want to walk to DVD player. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step0 -> step4; step3 -> step6; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: find shrek DVD; step1: pick up the dvd.; step2: grip the hand tightly.; step3: get up and in position.; step4: start to move arms and legs.; step5: slowly direct yourself to the location.; step6: walk to DVD player; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","0->4","1->2","2->0","3->6","4->6","5->1"],"reference_code":"class WalkToDvdPlayer:\n\n    title = \"walk to DVD player\"\n    steps = 7\n\n    def step0(self):\n        return \"find shrek DVD\"\n\n    def step1(self):\n        return \"pick up the dvd.\"\n\n    def step2(self):\n        return \"grip the hand tightly.\"\n\n    def step3(self):\n        return \"get up and in position.\"\n\n    def step4(self):\n        return \"start to move arms and legs.\"\n\n    def step5(self):\n        return \"slowly direct yourself to the location.\"\n\n    def step6(self):\n        return \"walk to DVD player\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToDvdPlayer:\n\n    title = \"walk to DVD player\"\n    steps = 7\n\n","reference_graph":{"title":"walk to DVD player","num_steps":7,"schema":["step0: find shrek DVD","step1: pick up the dvd.","step2: grip the hand tightly.","step3: get up and in position.","step4: start to move arms and legs.","step5: slowly direct yourself to the location.","step6: walk to DVD player"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"Go home with everything.","events":{"0":"unlock the car door","1":"get in driver's seat","2":"put kitten in the passenger seat","3":"put the car in drive","4":"walk to car with items","5":"put items in the trunk","6":"Purchase the items and kitten.","7":"Go home with everything."},"context":"Purchase the items and kitten.","minutes":10.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.0833333333,"4":0.1666666667,"5":0.3333333333},"flatten_input_for_edge_prediction":"step0: unlock the car door; step1: get in driver's seat; step2: put kitten in the passenger seat; step3: put the car in drive; step4: walk to car with items; step5: put items in the trunk; step6: Purchase the items and kitten.; step7: Go home with everything.","flatten_input_for_script_generation":"You want to Go home with everything.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step5 -> step1; step2 -> step5; step1 -> step3; step3 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: Purchase the items and kitten.; step1: walk to car with items; step2: unlock the car door; step3: put kitten in the passenger seat; step4: put items in the trunk; step5: get in driver's seat; step6: put the car in drive; step7: Go home with everything.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->3","2->5","3->7","4->0","5->1","6->4"],"reference_code":"class GoHomeWithEverything:\n\n    title = \"Go home with everything.\"\n    steps = 8\n\n    def step0(self):\n        return \"Purchase the items and kitten.\"\n\n    def step1(self):\n        return \"walk to car with items\"\n\n    def step2(self):\n        return \"unlock the car door\"\n\n    def step3(self):\n        return \"put kitten in the passenger seat\"\n\n    def step4(self):\n        return \"put items in the trunk\"\n\n    def step5(self):\n        return \"get in driver's seat\"\n\n    def step6(self):\n        return \"put the car in drive\"\n\n    def step7(self):\n        return \"Go home with everything.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoHomeWithEverything:\n\n    title = \"Go home with everything.\"\n    steps = 8\n\n","reference_graph":{"title":"Go home with everything.","num_steps":8,"schema":["step0: Purchase the items and kitten.","step1: walk to car with items","step2: unlock the car door","step3: put kitten in the passenger seat","step4: put items in the trunk","step5: get in driver's seat","step6: put the car in drive","step7: Go home with everything."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get dressed for the day","events":{"0":"Open the closet.","1":"Put towel around waist","2":"Walk into bedroom.","3":"Pick out clothes.","4":"Dry off from the shower.","5":"take a shower","6":"get dressed for the day"},"context":"take a shower","minutes":30.0,"events_minutes":{"0":0.5,"1":0.3333333333,"2":1.0,"3":3.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Open the closet.; step1: Put towel around waist; step2: Walk into bedroom.; step3: Pick out clothes.; step4: Dry off from the shower.; step5: take a shower; step6: get dressed for the day","flatten_input_for_script_generation":"You want to get dressed for the day. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: take a shower; step1: Dry off from the shower.; step2: Put towel around waist; step3: Walk into bedroom.; step4: Open the closet.; step5: Pick out clothes.; step6: get dressed for the day; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->6","4->1","5->4"],"reference_code":"class GetDressedForTheDay:\n\n    title = \"get dressed for the day\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"Dry off from the shower.\"\n\n    def step2(self):\n        return \"Put towel around waist\"\n\n    def step3(self):\n        return \"Walk into bedroom.\"\n\n    def step4(self):\n        return \"Open the closet.\"\n\n    def step5(self):\n        return \"Pick out clothes.\"\n\n    def step6(self):\n        return \"get dressed for the day\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetDressedForTheDay:\n\n    title = \"get dressed for the day\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed for the day","num_steps":7,"schema":["step0: take a shower","step1: Dry off from the shower.","step2: Put towel around waist","step3: Walk into bedroom.","step4: Open the closet.","step5: Pick out clothes.","step6: get dressed for the day"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in the car","events":{"0":"grab car keys off the counter.","1":"look up directions before leaving.","2":"exit the house.","3":"decide which skate shop is best.","4":"grab wallet off of counter.","5":"look online for a skate shop","6":"get in the car"},"context":"look online for a skate shop","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":1.0,"2":0.3333333333,"3":3.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab car keys off the counter.; step1: look up directions before leaving.; step2: exit the house.; step3: decide which skate shop is best.; step4: grab wallet off of counter.; step5: look online for a skate shop; step6: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step3 -> step0; step3 -> step4; step1 -> step2; step0 -> step2; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: look online for a skate shop; step1: decide which skate shop is best.; step2: look up directions before leaving.; step3: grab car keys off the counter.; step4: grab wallet off of counter.; step5: exit the house.; step6: get in the car; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->1","3->0","3->4","4->2","5->3"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"look online for a skate shop\"\n\n    def step1(self):\n        return \"decide which skate shop is best.\"\n\n    def step2(self):\n        return \"look up directions before leaving.\"\n\n    def step3(self):\n        return \"grab car keys off the counter.\"\n\n    def step4(self):\n        return \"grab wallet off of counter.\"\n\n    def step5(self):\n        return \"exit the house.\"\n\n    def step6(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 7\n\n","reference_graph":{"title":"get in the car","num_steps":7,"schema":["step0: look online for a skate shop","step1: decide which skate shop is best.","step2: look up directions before leaving.","step3: grab car keys off the counter.","step4: grab wallet off of counter.","step5: exit the house.","step6: get in the car"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"make lemonade in kitchen","events":{"0":"grab lemons from fridge","1":"find container to hold lemonade","2":"open pantry door","3":"grab sugar from pantry","4":"open fridge door","5":"get out ingredients to make lemonade","6":"make lemonade in kitchen"},"context":"get out ingredients to make lemonade","minutes":20.0,"events_minutes":{"0":0.25,"1":1.0,"2":0.25,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: grab lemons from fridge; step1: find container to hold lemonade; step2: open pantry door; step3: grab sugar from pantry; step4: open fridge door; step5: get out ingredients to make lemonade; step6: make lemonade in kitchen","flatten_input_for_script_generation":"You want to make lemonade in kitchen. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step6; step2 -> step3; step3 -> step6; step1 -> step6; step5 -> step4; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: get out ingredients to make lemonade; step1: find container to hold lemonade; step2: open fridge door; step3: grab lemons from fridge; step4: make lemonade in kitchen; step5: open pantry door; step6: grab sugar from pantry; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step4; step1 -> step4","gold_edges_for_prediction":["0->6","1->6","2->3","3->6","4->0","5->4","5->2","5->1"],"reference_code":"class MakeLemonadeInKitchen:\n\n    title = \"make lemonade in kitchen\"\n    steps = 7\n\n    def step0(self):\n        return \"get out ingredients to make lemonade\"\n\n    def step1(self):\n        return \"find container to hold lemonade\"\n\n    def step2(self):\n        return \"open fridge door\"\n\n    def step3(self):\n        return \"grab lemons from fridge\"\n\n    def step4(self):\n        return \"make lemonade in kitchen\"\n\n    def step5(self):\n        return \"open pantry door\"\n\n    def step6(self):\n        return \"grab sugar from pantry\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n            \"step1 -> step4\",\n        ]\n","input_prompt_code":"class MakeLemonadeInKitchen:\n\n    title = \"make lemonade in kitchen\"\n    steps = 7\n\n","reference_graph":{"title":"make lemonade in kitchen","num_steps":7,"schema":["step0: get out ingredients to make lemonade","step1: find container to hold lemonade","step2: open fridge door","step3: grab lemons from fridge","step4: make lemonade in kitchen","step5: open pantry door","step6: grab sugar from pantry"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step4","step1 -> step4"]}}
{"scenario":"add salad dressing","events":{"0":"grab salad dressing","1":"open refrigerator door","2":"walk back over to counter","3":"walk to refrigerator","4":"close refrigerator door","5":"look for salad dressing inside refrigerator","6":"set bowl back on counter","7":"mix up the ingredients","8":"add salad dressing"},"context":"mix up the ingredients","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333,"5":0.25,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab salad dressing; step1: open refrigerator door; step2: walk back over to counter; step3: walk to refrigerator; step4: close refrigerator door; step5: look for salad dressing inside refrigerator; step6: set bowl back on counter; step7: mix up the ingredients; step8: add salad dressing","flatten_input_for_script_generation":"You want to add salad dressing. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step6 -> step8; step3 -> step1; step1 -> step5; step5 -> step0; step0 -> step4; step4 -> step2; step2 -> step6; step7 -> step3","flatten_output_for_script_generation":"step0: mix up the ingredients; step1: walk to refrigerator; step2: set bowl back on counter; step3: add salad dressing; step4: open refrigerator door; step5: look for salad dressing inside refrigerator; step6: grab salad dressing; step7: close refrigerator door; step8: walk back over to counter; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8; step8 -> step2","gold_edges_for_prediction":["0->4","1->5","2->6","3->1","4->2","5->0","6->8","7->3"],"reference_code":"class AddSaladDressing:\n\n    title = \"add salad dressing\"\n    steps = 9\n\n    def step0(self):\n        return \"mix up the ingredients\"\n\n    def step1(self):\n        return \"walk to refrigerator\"\n\n    def step2(self):\n        return \"set bowl back on counter\"\n\n    def step3(self):\n        return \"add salad dressing\"\n\n    def step4(self):\n        return \"open refrigerator door\"\n\n    def step5(self):\n        return \"look for salad dressing inside refrigerator\"\n\n    def step6(self):\n        return \"grab salad dressing\"\n\n    def step7(self):\n        return \"close refrigerator door\"\n\n    def step8(self):\n        return \"walk back over to counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n            \"step8 -> step2\",\n        ]\n","input_prompt_code":"class AddSaladDressing:\n\n    title = \"add salad dressing\"\n    steps = 9\n\n","reference_graph":{"title":"add salad dressing","num_steps":9,"schema":["step0: mix up the ingredients","step1: walk to refrigerator","step2: set bowl back on counter","step3: add salad dressing","step4: open refrigerator door","step5: look for salad dressing inside refrigerator","step6: grab salad dressing","step7: close refrigerator door","step8: walk back over to counter"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8","step8 -> step2"]}}
{"scenario":"take naps in house","events":{"0":"take a nap on the bed","1":"get tired after a while","2":"sit on the bed for a little","3":"go and get dressed","4":"take a shower","5":"find relaxing things to do","6":"take naps in house"},"context":"find relaxing things to do","minutes":60.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: take a nap on the bed; step1: get tired after a while; step2: sit on the bed for a little; step3: go and get dressed; step4: take a shower; step5: find relaxing things to do; step6: take naps in house","flatten_input_for_script_generation":"You want to take naps in house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step2 -> step0; step1 -> step2; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: find relaxing things to do; step1: take a shower; step2: go and get dressed; step3: get tired after a while; step4: sit on the bed for a little; step5: take a nap on the bed; step6: take naps in house; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->1","4->3","5->4"],"reference_code":"class TakeNapsInHouse:\n\n    title = \"take naps in house\"\n    steps = 7\n\n    def step0(self):\n        return \"find relaxing things to do\"\n\n    def step1(self):\n        return \"take a shower\"\n\n    def step2(self):\n        return \"go and get dressed\"\n\n    def step3(self):\n        return \"get tired after a while\"\n\n    def step4(self):\n        return \"sit on the bed for a little\"\n\n    def step5(self):\n        return \"take a nap on the bed\"\n\n    def step6(self):\n        return \"take naps in house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeNapsInHouse:\n\n    title = \"take naps in house\"\n    steps = 7\n\n","reference_graph":{"title":"take naps in house","num_steps":7,"schema":["step0: find relaxing things to do","step1: take a shower","step2: go and get dressed","step3: get tired after a while","step4: sit on the bed for a little","step5: take a nap on the bed","step6: take naps in house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"gather the ingredients","events":{"0":"purchase items from the store","1":"find some missing and need to go to store","2":"return home and bring items inside","3":"check for ingredients in house","4":"look at ingredients section","5":"chose a recipe","6":"gather the ingredients"},"context":"chose a recipe","minutes":15.0,"events_minutes":{"0":5.0,"1":5.0,"2":10.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: purchase items from the store; step1: find some missing and need to go to store; step2: return home and bring items inside; step3: check for ingredients in house; step4: look at ingredients section; step5: chose a recipe; step6: gather the ingredients","flatten_input_for_script_generation":"You want to gather the ingredients. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: chose a recipe; step1: look at ingredients section; step2: check for ingredients in house; step3: find some missing and need to go to store; step4: purchase items from the store; step5: return home and bring items inside; step6: gather the ingredients; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class GatherTheIngredients:\n\n    title = \"gather the ingredients\"\n    steps = 7\n\n    def step0(self):\n        return \"chose a recipe\"\n\n    def step1(self):\n        return \"look at ingredients section\"\n\n    def step2(self):\n        return \"check for ingredients in house\"\n\n    def step3(self):\n        return \"find some missing and need to go to store\"\n\n    def step4(self):\n        return \"purchase items from the store\"\n\n    def step5(self):\n        return \"return home and bring items inside\"\n\n    def step6(self):\n        return \"gather the ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherTheIngredients:\n\n    title = \"gather the ingredients\"\n    steps = 7\n\n","reference_graph":{"title":"gather the ingredients","num_steps":7,"schema":["step0: chose a recipe","step1: look at ingredients section","step2: check for ingredients in house","step3: find some missing and need to go to store","step4: purchase items from the store","step5: return home and bring items inside","step6: gather the ingredients"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a shopping cart","events":{"0":"search for the cart station.","1":"wash hands vigorously.","2":"take off sunglasses.","3":"stop when in front of the carts.","4":"slowly walk in direction of the cart station.","5":"go inside the store","6":"get a shopping cart"},"context":"go inside the store","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: search for the cart station.; step1: wash hands vigorously.; step2: take off sunglasses.; step3: stop when in front of the carts.; step4: slowly walk in direction of the cart station.; step5: go inside the store; step6: get a shopping cart","flatten_input_for_script_generation":"You want to get a shopping cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: go inside the store; step1: wash hands vigorously.; step2: take off sunglasses.; step3: search for the cart station.; step4: slowly walk in direction of the cart station.; step5: stop when in front of the carts.; step6: get a shopping cart; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->0","3->6","4->3","5->2","5->1"],"reference_code":"class GetAShoppingCart:\n\n    title = \"get a shopping cart\"\n    steps = 7\n\n    def step0(self):\n        return \"go inside the store\"\n\n    def step1(self):\n        return \"wash hands vigorously.\"\n\n    def step2(self):\n        return \"take off sunglasses.\"\n\n    def step3(self):\n        return \"search for the cart station.\"\n\n    def step4(self):\n        return \"slowly walk in direction of the cart station.\"\n\n    def step5(self):\n        return \"stop when in front of the carts.\"\n\n    def step6(self):\n        return \"get a shopping cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAShoppingCart:\n\n    title = \"get a shopping cart\"\n    steps = 7\n\n","reference_graph":{"title":"get a shopping cart","num_steps":7,"schema":["step0: go inside the store","step1: wash hands vigorously.","step2: take off sunglasses.","step3: search for the cart station.","step4: slowly walk in direction of the cart station.","step5: stop when in front of the carts.","step6: get a shopping cart"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"set up an outfit","events":{"0":"choose from available tops","1":"choose from available bottoms","2":"choose from available shoes","3":"choose from available socks","4":"choose from available underwear","5":"look through clothing","6":"set up an outfit"},"context":"look through clothing","minutes":15.0,"events_minutes":{"0":0.25,"1":0.25,"2":0.25,"3":0.25,"4":0.25},"flatten_input_for_edge_prediction":"step0: choose from available tops; step1: choose from available bottoms; step2: choose from available shoes; step3: choose from available socks; step4: choose from available underwear; step5: look through clothing; step6: set up an outfit","flatten_input_for_script_generation":"You want to set up an outfit. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step1 -> step6; step4 -> step6; step3 -> step6; step2 -> step6; step5 -> step0; step5 -> step1; step5 -> step4; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: look through clothing; step1: choose from available shoes; step2: choose from available tops; step3: set up an outfit; step4: choose from available bottoms; step5: choose from available underwear; step6: choose from available socks; step0 -> step1; step0 -> step2; step0 -> step4; step0 -> step5; step0 -> step6; step2 -> step3; step4 -> step3; step5 -> step3; step6 -> step3; step1 -> step3","gold_edges_for_prediction":["0->6","1->6","2->6","3->6","4->6","5->0","5->1","5->4","5->3","5->2"],"reference_code":"class SetUpAnOutfit:\n\n    title = \"set up an outfit\"\n    steps = 7\n\n    def step0(self):\n        return \"look through clothing\"\n\n    def step1(self):\n        return \"choose from available shoes\"\n\n    def step2(self):\n        return \"choose from available tops\"\n\n    def step3(self):\n        return \"set up an outfit\"\n\n    def step4(self):\n        return \"choose from available bottoms\"\n\n    def step5(self):\n        return \"choose from available underwear\"\n\n    def step6(self):\n        return \"choose from available socks\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step4\",\n            \"step0 -> step5\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step5 -> step3\",\n            \"step6 -> step3\",\n            \"step1 -> step3\",\n        ]\n","input_prompt_code":"class SetUpAnOutfit:\n\n    title = \"set up an outfit\"\n    steps = 7\n\n","reference_graph":{"title":"set up an outfit","num_steps":7,"schema":["step0: look through clothing","step1: choose from available shoes","step2: choose from available tops","step3: set up an outfit","step4: choose from available bottoms","step5: choose from available underwear","step6: choose from available socks"],"relations":["step0 -> step1","step0 -> step2","step0 -> step4","step0 -> step5","step0 -> step6","step2 -> step3","step4 -> step3","step5 -> step3","step6 -> step3","step1 -> step3"]}}
{"scenario":"till an area of the yard","events":{"0":"get the tiller","1":"dig up rocks from soil","2":"cut the sod","3":"clean lawn of debris","4":"kill any weeds","5":"Take the seeds home","6":"till an area of the yard"},"context":"Take the seeds home","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":10.0,"3":0.1666666667,"4":10.0},"flatten_input_for_edge_prediction":"step0: get the tiller; step1: dig up rocks from soil; step2: cut the sod; step3: clean lawn of debris; step4: kill any weeds; step5: Take the seeds home; step6: till an area of the yard","flatten_input_for_script_generation":"You want to till an area of the yard. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step1 -> step2; step0 -> step6; step2 -> step4; step4 -> step0; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: Take the seeds home; step1: dig up rocks from soil; step2: clean lawn of debris; step3: cut the sod; step4: kill any weeds; step5: get the tiller; step6: till an area of the yard; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->6","1->2","2->4","3->2","4->0","5->3","5->1"],"reference_code":"class TillAnAreaOfTheYard:\n\n    title = \"till an area of the yard\"\n    steps = 7\n\n    def step0(self):\n        return \"Take the seeds home\"\n\n    def step1(self):\n        return \"dig up rocks from soil\"\n\n    def step2(self):\n        return \"clean lawn of debris\"\n\n    def step3(self):\n        return \"cut the sod\"\n\n    def step4(self):\n        return \"kill any weeds\"\n\n    def step5(self):\n        return \"get the tiller\"\n\n    def step6(self):\n        return \"till an area of the yard\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class TillAnAreaOfTheYard:\n\n    title = \"till an area of the yard\"\n    steps = 7\n\n","reference_graph":{"title":"till an area of the yard","num_steps":7,"schema":["step0: Take the seeds home","step1: dig up rocks from soil","step2: clean lawn of debris","step3: cut the sod","step4: kill any weeds","step5: get the tiller","step6: till an area of the yard"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step5 -> step6","step4 -> step5"]}}
{"scenario":"Purchase zoo ticket.","events":{"0":"park car in empty space","1":"find empty space","2":"get out of car","3":"drive around looking for space","4":"walk to ticket counter","5":"find parking lot","6":"Start car and drive to zoo.","7":"Purchase zoo ticket."},"context":"Start car and drive to zoo.","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":3.0,"2":0.0833333333,"3":3.0,"4":3.0,"5":2.0},"flatten_input_for_edge_prediction":"step0: park car in empty space; step1: find empty space; step2: get out of car; step3: drive around looking for space; step4: walk to ticket counter; step5: find parking lot; step6: Start car and drive to zoo.; step7: Purchase zoo ticket.","flatten_input_for_script_generation":"You want to Purchase zoo ticket.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: Start car and drive to zoo.; step1: find parking lot; step2: drive around looking for space; step3: find empty space; step4: park car in empty space; step5: get out of car; step6: walk to ticket counter; step7: Purchase zoo ticket.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->7","5->3","6->5"],"reference_code":"class PurchaseZooTicket:\n\n    title = \"Purchase zoo ticket.\"\n    steps = 8\n\n    def step0(self):\n        return \"Start car and drive to zoo.\"\n\n    def step1(self):\n        return \"find parking lot\"\n\n    def step2(self):\n        return \"drive around looking for space\"\n\n    def step3(self):\n        return \"find empty space\"\n\n    def step4(self):\n        return \"park car in empty space\"\n\n    def step5(self):\n        return \"get out of car\"\n\n    def step6(self):\n        return \"walk to ticket counter\"\n\n    def step7(self):\n        return \"Purchase zoo ticket.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PurchaseZooTicket:\n\n    title = \"Purchase zoo ticket.\"\n    steps = 8\n\n","reference_graph":{"title":"Purchase zoo ticket.","num_steps":8,"schema":["step0: Start car and drive to zoo.","step1: find parking lot","step2: drive around looking for space","step3: find empty space","step4: park car in empty space","step5: get out of car","step6: walk to ticket counter","step7: Purchase zoo ticket."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Read reviews for local dance studios.","events":{"0":"search and individual studio","1":"go to google","2":"choose to view the reviews","3":"look at the websites","4":"look online for nearby dance studios","5":"NONE","6":"Read reviews for local dance studios."},"context":"NONE","minutes":60.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":15.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: search and individual studio; step1: go to google; step2: choose to view the reviews; step3: look at the websites; step4: look online for nearby dance studios; step5: decided to Read reviews for local dance studios.; step6: Read reviews for local dance studios.","flatten_input_for_script_generation":"You want to Read reviews for local dance studios.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step1 -> step4; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to Read reviews for local dance studios.; step1: go to google; step2: look online for nearby dance studios; step3: look at the websites; step4: search and individual studio; step5: choose to view the reviews; step6: Read reviews for local dance studios.; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class ReadReviewsForLocalDanceStudios:\n\n    title = \"Read reviews for local dance studios.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Read reviews for local dance studios.\"\n\n    def step1(self):\n        return \"go to google\"\n\n    def step2(self):\n        return \"look online for nearby dance studios\"\n\n    def step3(self):\n        return \"look at the websites\"\n\n    def step4(self):\n        return \"search and individual studio\"\n\n    def step5(self):\n        return \"choose to view the reviews\"\n\n    def step6(self):\n        return \"Read reviews for local dance studios.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadReviewsForLocalDanceStudios:\n\n    title = \"Read reviews for local dance studios.\"\n    steps = 7\n\n","reference_graph":{"title":"Read reviews for local dance studios.","num_steps":7,"schema":["step0: decided to Read reviews for local dance studios.","step1: go to google","step2: look online for nearby dance studios","step3: look at the websites","step4: search and individual studio","step5: choose to view the reviews","step6: Read reviews for local dance studios."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6"]}}
{"scenario":"boil water for noodles","events":{"0":"place a lid on the pot","1":"place pot with water on stove","2":"add salt to the water and stir","3":"wait for the water to boil","4":"allow the water to get hot","5":"turn on the stove","6":"boil water for noodles"},"context":"turn on the stove","minutes":10.0,"events_minutes":{"0":2.0,"1":2.0,"2":2.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: place a lid on the pot; step1: place pot with water on stove; step2: add salt to the water and stir; step3: wait for the water to boil; step4: allow the water to get hot; step5: turn on the stove; step6: boil water for noodles","flatten_input_for_script_generation":"You want to boil water for noodles. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: turn on the stove; step1: place pot with water on stove; step2: add salt to the water and stir; step3: place a lid on the pot; step4: allow the water to get hot; step5: wait for the water to boil; step6: boil water for noodles; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class BoilWaterForNoodles:\n\n    title = \"boil water for noodles\"\n    steps = 7\n\n    def step0(self):\n        return \"turn on the stove\"\n\n    def step1(self):\n        return \"place pot with water on stove\"\n\n    def step2(self):\n        return \"add salt to the water and stir\"\n\n    def step3(self):\n        return \"place a lid on the pot\"\n\n    def step4(self):\n        return \"allow the water to get hot\"\n\n    def step5(self):\n        return \"wait for the water to boil\"\n\n    def step6(self):\n        return \"boil water for noodles\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BoilWaterForNoodles:\n\n    title = \"boil water for noodles\"\n    steps = 7\n\n","reference_graph":{"title":"boil water for noodles","num_steps":7,"schema":["step0: turn on the stove","step1: place pot with water on stove","step2: add salt to the water and stir","step3: place a lid on the pot","step4: allow the water to get hot","step5: wait for the water to boil","step6: boil water for noodles"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"purchase pet from the breeder","events":{"0":"see new puppies","1":"select a favorite puppy","2":"enter breeders house","3":"park the car","4":"turn off vehicle","5":"drive to breeder","6":"purchase pet from the breeder"},"context":"drive to breeder","minutes":60.0,"events_minutes":{"0":5.0,"1":15.0,"2":5.0,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: see new puppies; step1: select a favorite puppy; step2: enter breeders house; step3: park the car; step4: turn off vehicle; step5: drive to breeder; step6: purchase pet from the breeder","flatten_input_for_script_generation":"You want to purchase pet from the breeder. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to breeder; step1: park the car; step2: turn off vehicle; step3: enter breeders house; step4: see new puppies; step5: select a favorite puppy; step6: purchase pet from the breeder; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class PurchasePetFromTheBreeder:\n\n    title = \"purchase pet from the breeder\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to breeder\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"turn off vehicle\"\n\n    def step3(self):\n        return \"enter breeders house\"\n\n    def step4(self):\n        return \"see new puppies\"\n\n    def step5(self):\n        return \"select a favorite puppy\"\n\n    def step6(self):\n        return \"purchase pet from the breeder\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchasePetFromTheBreeder:\n\n    title = \"purchase pet from the breeder\"\n    steps = 7\n\n","reference_graph":{"title":"purchase pet from the breeder","num_steps":7,"schema":["step0: drive to breeder","step1: park the car","step2: turn off vehicle","step3: enter breeders house","step4: see new puppies","step5: select a favorite puppy","step6: purchase pet from the breeder"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"buy ticket enter park","events":{"0":"locate the ticket stand","1":"greet the person selling tickets","2":"park the car","3":"walk to the ticket stand","4":"get out of the car","5":"drive to the park","6":"buy ticket enter park"},"context":"drive to the park","minutes":10.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: locate the ticket stand; step1: greet the person selling tickets; step2: park the car; step3: walk to the ticket stand; step4: get out of the car; step5: drive to the park; step6: buy ticket enter park","flatten_input_for_script_generation":"You want to buy ticket enter park. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the park; step1: park the car; step2: get out of the car; step3: locate the ticket stand; step4: walk to the ticket stand; step5: greet the person selling tickets; step6: buy ticket enter park; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->0","5->2"],"reference_code":"class BuyTicketEnterPark:\n\n    title = \"buy ticket enter park\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the park\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"get out of the car\"\n\n    def step3(self):\n        return \"locate the ticket stand\"\n\n    def step4(self):\n        return \"walk to the ticket stand\"\n\n    def step5(self):\n        return \"greet the person selling tickets\"\n\n    def step6(self):\n        return \"buy ticket enter park\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyTicketEnterPark:\n\n    title = \"buy ticket enter park\"\n    steps = 7\n\n","reference_graph":{"title":"buy ticket enter park","num_steps":7,"schema":["step0: drive to the park","step1: park the car","step2: get out of the car","step3: locate the ticket stand","step4: walk to the ticket stand","step5: greet the person selling tickets","step6: buy ticket enter park"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Browse through the jackets.","events":{"0":"pull into the store parking lot","1":"park the car","2":"walk into the store","3":"get out of the car","4":"pull into available parking spot","5":"look for available parking spot","6":"Go to the store.","7":"Browse through the jackets."},"context":"Go to the store.","minutes":60.0,"events_minutes":{"0":0.3333333333,"1":0.1666666667,"2":1.0,"3":0.5,"4":0.1666666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: pull into the store parking lot; step1: park the car; step2: walk into the store; step3: get out of the car; step4: pull into available parking spot; step5: look for available parking spot; step6: Go to the store.; step7: Browse through the jackets.","flatten_input_for_script_generation":"You want to Browse through the jackets.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step4; step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Go to the store.; step1: pull into the store parking lot; step2: look for available parking spot; step3: pull into available parking spot; step4: park the car; step5: get out of the car; step6: walk into the store; step7: Browse through the jackets.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->7","3->2","4->1","5->4","6->0"],"reference_code":"class BrowseThroughTheJackets:\n\n    title = \"Browse through the jackets.\"\n    steps = 8\n\n    def step0(self):\n        return \"Go to the store.\"\n\n    def step1(self):\n        return \"pull into the store parking lot\"\n\n    def step2(self):\n        return \"look for available parking spot\"\n\n    def step3(self):\n        return \"pull into available parking spot\"\n\n    def step4(self):\n        return \"park the car\"\n\n    def step5(self):\n        return \"get out of the car\"\n\n    def step6(self):\n        return \"walk into the store\"\n\n    def step7(self):\n        return \"Browse through the jackets.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class BrowseThroughTheJackets:\n\n    title = \"Browse through the jackets.\"\n    steps = 8\n\n","reference_graph":{"title":"Browse through the jackets.","num_steps":8,"schema":["step0: Go to the store.","step1: pull into the store parking lot","step2: look for available parking spot","step3: pull into available parking spot","step4: park the car","step5: get out of the car","step6: walk into the store","step7: Browse through the jackets."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Travel to school dance.","events":{"0":"grab coat from closet","1":"grab keys and lock the door to the house","2":"Stand up and make sure the shoes are comfortable","3":"double check hair and makeup in mirror","4":"use key fob to unlock car doors","5":"Put on shoes.","6":"Travel to school dance."},"context":"Put on shoes.","minutes":240.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":2.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab coat from closet; step1: grab keys and lock the door to the house; step2: Stand up and make sure the shoes are comfortable; step3: double check hair and makeup in mirror; step4: use key fob to unlock car doors; step5: Put on shoes.; step6: Travel to school dance.","flatten_input_for_script_generation":"You want to Travel to school dance.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Put on shoes.; step1: Stand up and make sure the shoes are comfortable; step2: grab coat from closet; step3: double check hair and makeup in mirror; step4: grab keys and lock the door to the house; step5: use key fob to unlock car doors; step6: Travel to school dance.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class TravelToSchoolDance:\n\n    title = \"Travel to school dance.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put on shoes.\"\n\n    def step1(self):\n        return \"Stand up and make sure the shoes are comfortable\"\n\n    def step2(self):\n        return \"grab coat from closet\"\n\n    def step3(self):\n        return \"double check hair and makeup in mirror\"\n\n    def step4(self):\n        return \"grab keys and lock the door to the house\"\n\n    def step5(self):\n        return \"use key fob to unlock car doors\"\n\n    def step6(self):\n        return \"Travel to school dance.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TravelToSchoolDance:\n\n    title = \"Travel to school dance.\"\n    steps = 7\n\n","reference_graph":{"title":"Travel to school dance.","num_steps":7,"schema":["step0: Put on shoes.","step1: Stand up and make sure the shoes are comfortable","step2: grab coat from closet","step3: double check hair and makeup in mirror","step4: grab keys and lock the door to the house","step5: use key fob to unlock car doors","step6: Travel to school dance."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pick something that is different, such as a new restaurant.","events":{"0":"Compare the available restaurants.","1":"read the reviews.","2":"Search in the internet for good restaurant","3":"Decide on the restaurant.","4":"Pick the best two restaurant","5":"Find out what is happening this weekend.","6":"Pick something that is different, such as a new restaurant."},"context":"Find out what is happening this weekend.","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Compare the available restaurants.; step1: read the reviews.; step2: Search in the internet for good restaurant; step3: Decide on the restaurant.; step4: Pick the best two restaurant; step5: Find out what is happening this weekend.; step6: Pick something that is different, such as a new restaurant.","flatten_input_for_script_generation":"You want to Pick something that is different, such as a new restaurant.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Find out what is happening this weekend.; step1: Search in the internet for good restaurant; step2: Compare the available restaurants.; step3: Pick the best two restaurant; step4: read the reviews.; step5: Decide on the restaurant.; step6: Pick something that is different, such as a new restaurant.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class PickSomethingThatIsDifferentSuchAsANewRestaurant:\n\n    title = \"Pick something that is different, such as a new restaurant.\"\n    steps = 7\n\n    def step0(self):\n        return \"Find out what is happening this weekend.\"\n\n    def step1(self):\n        return \"Search in the internet for good restaurant\"\n\n    def step2(self):\n        return \"Compare the available restaurants.\"\n\n    def step3(self):\n        return \"Pick the best two restaurant\"\n\n    def step4(self):\n        return \"read the reviews.\"\n\n    def step5(self):\n        return \"Decide on the restaurant.\"\n\n    def step6(self):\n        return \"Pick something that is different, such as a new restaurant.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickSomethingThatIsDifferentSuchAsANewRestaurant:\n\n    title = \"Pick something that is different, such as a new restaurant.\"\n    steps = 7\n\n","reference_graph":{"title":"Pick something that is different, such as a new restaurant.","num_steps":7,"schema":["step0: Find out what is happening this weekend.","step1: Search in the internet for good restaurant","step2: Compare the available restaurants.","step3: Pick the best two restaurant","step4: read the reviews.","step5: Decide on the restaurant.","step6: Pick something that is different, such as a new restaurant."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Speak with owner.","events":{"0":"dial store owner's phone number","1":"pick up phone","2":"find store owner's phone number","3":"find name of store owner","4":"press the call button","5":"Decide on desired store.","6":"Speak with owner."},"context":"Decide on desired store.","minutes":60.0,"events_minutes":{"0":0.25,"1":0.0833333333,"2":1.0,"3":1.0,"4":0.05},"flatten_input_for_edge_prediction":"step0: dial store owner's phone number; step1: pick up phone; step2: find store owner's phone number; step3: find name of store owner; step4: press the call button; step5: Decide on desired store.; step6: Speak with owner.","flatten_input_for_script_generation":"You want to Speak with owner.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step3 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: Decide on desired store.; step1: find name of store owner; step2: find store owner's phone number; step3: pick up phone; step4: dial store owner's phone number; step5: press the call button; step6: Speak with owner.; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->6","5->3"],"reference_code":"class SpeakWithOwner:\n\n    title = \"Speak with owner.\"\n    steps = 7\n\n    def step0(self):\n        return \"Decide on desired store.\"\n\n    def step1(self):\n        return \"find name of store owner\"\n\n    def step2(self):\n        return \"find store owner's phone number\"\n\n    def step3(self):\n        return \"pick up phone\"\n\n    def step4(self):\n        return \"dial store owner's phone number\"\n\n    def step5(self):\n        return \"press the call button\"\n\n    def step6(self):\n        return \"Speak with owner.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class SpeakWithOwner:\n\n    title = \"Speak with owner.\"\n    steps = 7\n\n","reference_graph":{"title":"Speak with owner.","num_steps":7,"schema":["step0: Decide on desired store.","step1: find name of store owner","step2: find store owner's phone number","step3: pick up phone","step4: dial store owner's phone number","step5: press the call button","step6: Speak with owner."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"enter the arena","events":{"0":"wait for employee to verify tickets","1":"give employee tickets","2":"gain entrance to arena","3":"wait in line to enter","4":"walk to the entrance","5":"take out tickets","6":"enter the arena"},"context":"take out tickets","minutes":5.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":5.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: wait for employee to verify tickets; step1: give employee tickets; step2: gain entrance to arena; step3: wait in line to enter; step4: walk to the entrance; step5: take out tickets; step6: enter the arena","flatten_input_for_script_generation":"You want to enter the arena. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: take out tickets; step1: walk to the entrance; step2: wait in line to enter; step3: give employee tickets; step4: wait for employee to verify tickets; step5: gain entrance to arena; step6: enter the arena; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class EnterTheArena:\n\n    title = \"enter the arena\"\n    steps = 7\n\n    def step0(self):\n        return \"take out tickets\"\n\n    def step1(self):\n        return \"walk to the entrance\"\n\n    def step2(self):\n        return \"wait in line to enter\"\n\n    def step3(self):\n        return \"give employee tickets\"\n\n    def step4(self):\n        return \"wait for employee to verify tickets\"\n\n    def step5(self):\n        return \"gain entrance to arena\"\n\n    def step6(self):\n        return \"enter the arena\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheArena:\n\n    title = \"enter the arena\"\n    steps = 7\n\n","reference_graph":{"title":"enter the arena","num_steps":7,"schema":["step0: take out tickets","step1: walk to the entrance","step2: wait in line to enter","step3: give employee tickets","step4: wait for employee to verify tickets","step5: gain entrance to arena","step6: enter the arena"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pay for bus ticket.","events":{"0":"hand the money to the driver.","1":"count the money.","2":"take out the money.","3":"take out the wallet.","4":"climb the steps.","5":"Enter bus through steps.","6":"Pay for bus ticket."},"context":"Enter bus through steps.","minutes":1.0,"events_minutes":{"0":1.0,"1":0.5,"2":0.5,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: hand the money to the driver.; step1: count the money.; step2: take out the money.; step3: take out the wallet.; step4: climb the steps.; step5: Enter bus through steps.; step6: Pay for bus ticket.","flatten_input_for_script_generation":"You want to Pay for bus ticket.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step1 -> step0; step2 -> step1; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Enter bus through steps.; step1: climb the steps.; step2: take out the wallet.; step3: take out the money.; step4: count the money.; step5: hand the money to the driver.; step6: Pay for bus ticket.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","4->3","5->4"],"reference_code":"class PayForBusTicket:\n\n    title = \"Pay for bus ticket.\"\n    steps = 7\n\n    def step0(self):\n        return \"Enter bus through steps.\"\n\n    def step1(self):\n        return \"climb the steps.\"\n\n    def step2(self):\n        return \"take out the wallet.\"\n\n    def step3(self):\n        return \"take out the money.\"\n\n    def step4(self):\n        return \"count the money.\"\n\n    def step5(self):\n        return \"hand the money to the driver.\"\n\n    def step6(self):\n        return \"Pay for bus ticket.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PayForBusTicket:\n\n    title = \"Pay for bus ticket.\"\n    steps = 7\n\n","reference_graph":{"title":"Pay for bus ticket.","num_steps":7,"schema":["step0: Enter bus through steps.","step1: climb the steps.","step2: take out the wallet.","step3: take out the money.","step4: count the money.","step5: hand the money to the driver.","step6: Pay for bus ticket."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter the field","events":{"0":"Park the car.","1":"Close the car door.","2":"Walk to the field.","3":"Get out of the car.","4":"Step onto the field.","5":"drive to tryout location","6":"enter the field"},"context":"drive to tryout location","minutes":10.0,"events_minutes":{"0":0.4166666667,"1":0.0333333333,"2":0.5833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Park the car.; step1: Close the car door.; step2: Walk to the field.; step3: Get out of the car.; step4: Step onto the field.; step5: drive to tryout location; step6: enter the field","flatten_input_for_script_generation":"You want to enter the field. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: drive to tryout location; step1: Park the car.; step2: Get out of the car.; step3: Close the car door.; step4: Walk to the field.; step5: Step onto the field.; step6: enter the field; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->1","4->6","5->0"],"reference_code":"class EnterTheField:\n\n    title = \"enter the field\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to tryout location\"\n\n    def step1(self):\n        return \"Park the car.\"\n\n    def step2(self):\n        return \"Get out of the car.\"\n\n    def step3(self):\n        return \"Close the car door.\"\n\n    def step4(self):\n        return \"Walk to the field.\"\n\n    def step5(self):\n        return \"Step onto the field.\"\n\n    def step6(self):\n        return \"enter the field\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheField:\n\n    title = \"enter the field\"\n    steps = 7\n\n","reference_graph":{"title":"enter the field","num_steps":7,"schema":["step0: drive to tryout location","step1: Park the car.","step2: Get out of the car.","step3: Close the car door.","step4: Walk to the field.","step5: Step onto the field.","step6: enter the field"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read salsa making articles","events":{"0":"determine which link to click","1":"read through search results","2":"click the link","3":"wait for webpage to open","4":"scroll down webpage","5":"look up how to make salsa","6":"read salsa making articles"},"context":"look up how to make salsa","minutes":45.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0333333333,"3":0.0166666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: determine which link to click; step1: read through search results; step2: click the link; step3: wait for webpage to open; step4: scroll down webpage; step5: look up how to make salsa; step6: read salsa making articles","flatten_input_for_script_generation":"You want to read salsa making articles. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: look up how to make salsa; step1: read through search results; step2: determine which link to click; step3: click the link; step4: wait for webpage to open; step5: scroll down webpage; step6: read salsa making articles; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->4","4->6","5->1"],"reference_code":"class ReadSalsaMakingArticles:\n\n    title = \"read salsa making articles\"\n    steps = 7\n\n    def step0(self):\n        return \"look up how to make salsa\"\n\n    def step1(self):\n        return \"read through search results\"\n\n    def step2(self):\n        return \"determine which link to click\"\n\n    def step3(self):\n        return \"click the link\"\n\n    def step4(self):\n        return \"wait for webpage to open\"\n\n    def step5(self):\n        return \"scroll down webpage\"\n\n    def step6(self):\n        return \"read salsa making articles\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadSalsaMakingArticles:\n\n    title = \"read salsa making articles\"\n    steps = 7\n\n","reference_graph":{"title":"read salsa making articles","num_steps":7,"schema":["step0: look up how to make salsa","step1: read through search results","step2: determine which link to click","step3: click the link","step4: wait for webpage to open","step5: scroll down webpage","step6: read salsa making articles"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sit down in computer chair","events":{"0":"Walk over to computer chair.","1":"Pull computer chair out from desk.","2":"Stand in front of the computer chair.","3":"Squat down onto the chair.","4":"Align back of body with the chair.","5":"NONE","6":"sit down in computer chair"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: Walk over to computer chair.; step1: Pull computer chair out from desk.; step2: Stand in front of the computer chair.; step3: Squat down onto the chair.; step4: Align back of body with the chair.; step5: decided to sit down in computer chair; step6: sit down in computer chair","flatten_input_for_script_generation":"You want to sit down in computer chair. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to sit down in computer chair; step1: Walk over to computer chair.; step2: Pull computer chair out from desk.; step3: Stand in front of the computer chair.; step4: Align back of body with the chair.; step5: Squat down onto the chair.; step6: sit down in computer chair; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->6","4->3","5->0"],"reference_code":"class SitDownInComputerChair:\n\n    title = \"sit down in computer chair\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to sit down in computer chair\"\n\n    def step1(self):\n        return \"Walk over to computer chair.\"\n\n    def step2(self):\n        return \"Pull computer chair out from desk.\"\n\n    def step3(self):\n        return \"Stand in front of the computer chair.\"\n\n    def step4(self):\n        return \"Align back of body with the chair.\"\n\n    def step5(self):\n        return \"Squat down onto the chair.\"\n\n    def step6(self):\n        return \"sit down in computer chair\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SitDownInComputerChair:\n\n    title = \"sit down in computer chair\"\n    steps = 7\n\n","reference_graph":{"title":"sit down in computer chair","num_steps":7,"schema":["step0: decided to sit down in computer chair","step1: Walk over to computer chair.","step2: Pull computer chair out from desk.","step3: Stand in front of the computer chair.","step4: Align back of body with the chair.","step5: Squat down onto the chair.","step6: sit down in computer chair"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"order the books online","events":{"0":"enter credit card number","1":"add books to cart","2":"look for best price on books","3":"enter method of payment","4":"click on checkout button","5":"navigate to amazon website","6":"enter credit card expiration date","7":"look up books required for class","8":"order the books online"},"context":"look up books required for class","minutes":5.0,"events_minutes":{"0":1.0,"1":2.0,"2":5.0,"3":0.0833333333,"4":0.0166666667,"5":0.0833333333,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: enter credit card number; step1: add books to cart; step2: look for best price on books; step3: enter method of payment; step4: click on checkout button; step5: navigate to amazon website; step6: enter credit card expiration date; step7: look up books required for class; step8: order the books online","flatten_input_for_script_generation":"You want to order the books online. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step6; step3 -> step0; step0 -> step8; step6 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: look up books required for class; step1: navigate to amazon website; step2: look for best price on books; step3: add books to cart; step4: click on checkout button; step5: enter method of payment; step6: enter credit card expiration date; step7: enter credit card number; step8: order the books online; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->8","1->4","2->1","3->6","3->0","4->3","5->2","6->8","7->5"],"reference_code":"class OrderTheBooksOnline:\n\n    title = \"order the books online\"\n    steps = 9\n\n    def step0(self):\n        return \"look up books required for class\"\n\n    def step1(self):\n        return \"navigate to amazon website\"\n\n    def step2(self):\n        return \"look for best price on books\"\n\n    def step3(self):\n        return \"add books to cart\"\n\n    def step4(self):\n        return \"click on checkout button\"\n\n    def step5(self):\n        return \"enter method of payment\"\n\n    def step6(self):\n        return \"enter credit card expiration date\"\n\n    def step7(self):\n        return \"enter credit card number\"\n\n    def step8(self):\n        return \"order the books online\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class OrderTheBooksOnline:\n\n    title = \"order the books online\"\n    steps = 9\n\n","reference_graph":{"title":"order the books online","num_steps":9,"schema":["step0: look up books required for class","step1: navigate to amazon website","step2: look for best price on books","step3: add books to cart","step4: click on checkout button","step5: enter method of payment","step6: enter credit card expiration date","step7: enter credit card number","step8: order the books online"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"cut up fruit","events":{"0":"get out cutting board","1":"sharpen knives and pitting tools","2":"have bowl for stems and pits","3":"have bowl for cut ingredients","4":"wash the fruit in the sink","5":"get out ingredients","6":"cut up fruit"},"context":"get out ingredients","minutes":5.0,"events_minutes":{"0":1.0,"1":2.0,"2":1.0,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: get out cutting board; step1: sharpen knives and pitting tools; step2: have bowl for stems and pits; step3: have bowl for cut ingredients; step4: wash the fruit in the sink; step5: get out ingredients; step6: cut up fruit","flatten_input_for_script_generation":"You want to cut up fruit. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step0 -> step6; step1 -> step6; step2 -> step6; step3 -> step6; step5 -> step3; step5 -> step2; step5 -> step4; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: get out ingredients; step1: sharpen knives and pitting tools; step2: wash the fruit in the sink; step3: cut up fruit; step4: get out cutting board; step5: have bowl for stems and pits; step6: have bowl for cut ingredients; step0 -> step1; step0 -> step6; step0 -> step5; step0 -> step2; step0 -> step4; step2 -> step3; step4 -> step3; step1 -> step3; step5 -> step3; step6 -> step3","gold_edges_for_prediction":["0->6","1->6","2->6","3->6","4->6","5->3","5->2","5->4","5->0","5->1"],"reference_code":"class CutUpFruit:\n\n    title = \"cut up fruit\"\n    steps = 7\n\n    def step0(self):\n        return \"get out ingredients\"\n\n    def step1(self):\n        return \"sharpen knives and pitting tools\"\n\n    def step2(self):\n        return \"wash the fruit in the sink\"\n\n    def step3(self):\n        return \"cut up fruit\"\n\n    def step4(self):\n        return \"get out cutting board\"\n\n    def step5(self):\n        return \"have bowl for stems and pits\"\n\n    def step6(self):\n        return \"have bowl for cut ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step0 -> step5\",\n            \"step0 -> step2\",\n            \"step0 -> step4\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step1 -> step3\",\n            \"step5 -> step3\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class CutUpFruit:\n\n    title = \"cut up fruit\"\n    steps = 7\n\n","reference_graph":{"title":"cut up fruit","num_steps":7,"schema":["step0: get out ingredients","step1: sharpen knives and pitting tools","step2: wash the fruit in the sink","step3: cut up fruit","step4: get out cutting board","step5: have bowl for stems and pits","step6: have bowl for cut ingredients"],"relations":["step0 -> step1","step0 -> step6","step0 -> step5","step0 -> step2","step0 -> step4","step2 -> step3","step4 -> step3","step1 -> step3","step5 -> step3","step6 -> step3"]}}
{"scenario":"launch a music playing app","events":{"0":"press the power button.","1":"type password for the laptop.","2":"wait for computer to turn on.","3":"move cursor towards music app icon.","4":"press enter to log in to the laptop.","5":"open up the laptop","6":"launch a music playing app"},"context":"open up the laptop","minutes":2.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: press the power button.; step1: type password for the laptop.; step2: wait for computer to turn on.; step3: move cursor towards music app icon.; step4: press enter to log in to the laptop.; step5: open up the laptop; step6: launch a music playing app","flatten_input_for_script_generation":"You want to launch a music playing app. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: open up the laptop; step1: press the power button.; step2: wait for computer to turn on.; step3: type password for the laptop.; step4: press enter to log in to the laptop.; step5: move cursor towards music app icon.; step6: launch a music playing app; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->1","3->6","4->3","5->0"],"reference_code":"class LaunchAMusicPlayingApp:\n\n    title = \"launch a music playing app\"\n    steps = 7\n\n    def step0(self):\n        return \"open up the laptop\"\n\n    def step1(self):\n        return \"press the power button.\"\n\n    def step2(self):\n        return \"wait for computer to turn on.\"\n\n    def step3(self):\n        return \"type password for the laptop.\"\n\n    def step4(self):\n        return \"press enter to log in to the laptop.\"\n\n    def step5(self):\n        return \"move cursor towards music app icon.\"\n\n    def step6(self):\n        return \"launch a music playing app\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LaunchAMusicPlayingApp:\n\n    title = \"launch a music playing app\"\n    steps = 7\n\n","reference_graph":{"title":"launch a music playing app","num_steps":7,"schema":["step0: open up the laptop","step1: press the power button.","step2: wait for computer to turn on.","step3: type password for the laptop.","step4: press enter to log in to the laptop.","step5: move cursor towards music app icon.","step6: launch a music playing app"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"tell the barber what haircut to receive","events":{"0":"take seat and wait for barber","1":"ask about waiting time","2":"get called up to barber chair","3":"take seat in front of mirror","4":"talk to receptionist","5":"go inside the shop","6":"tell the barber what haircut to receive"},"context":"go inside the shop","minutes":10.0,"events_minutes":{"0":34.0,"1":1.0,"2":3.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: take seat and wait for barber; step1: ask about waiting time; step2: get called up to barber chair; step3: take seat in front of mirror; step4: talk to receptionist; step5: go inside the shop; step6: tell the barber what haircut to receive","flatten_input_for_script_generation":"You want to tell the barber what haircut to receive. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: go inside the shop; step1: talk to receptionist; step2: ask about waiting time; step3: take seat and wait for barber; step4: get called up to barber chair; step5: take seat in front of mirror; step6: tell the barber what haircut to receive; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->1","5->4"],"reference_code":"class TellTheBarberWhatHaircutToReceive:\n\n    title = \"tell the barber what haircut to receive\"\n    steps = 7\n\n    def step0(self):\n        return \"go inside the shop\"\n\n    def step1(self):\n        return \"talk to receptionist\"\n\n    def step2(self):\n        return \"ask about waiting time\"\n\n    def step3(self):\n        return \"take seat and wait for barber\"\n\n    def step4(self):\n        return \"get called up to barber chair\"\n\n    def step5(self):\n        return \"take seat in front of mirror\"\n\n    def step6(self):\n        return \"tell the barber what haircut to receive\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TellTheBarberWhatHaircutToReceive:\n\n    title = \"tell the barber what haircut to receive\"\n    steps = 7\n\n","reference_graph":{"title":"tell the barber what haircut to receive","num_steps":7,"schema":["step0: go inside the shop","step1: talk to receptionist","step2: ask about waiting time","step3: take seat and wait for barber","step4: get called up to barber chair","step5: take seat in front of mirror","step6: tell the barber what haircut to receive"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on shoes","events":{"0":"grab a towel.","1":"dry off with the towel.","2":"go to the bedroom.","3":"leave the bathroom.","4":"step out of the shower.","5":"take a shower","6":"put on shoes"},"context":"take a shower","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.1666666667,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab a towel.; step1: dry off with the towel.; step2: go to the bedroom.; step3: leave the bathroom.; step4: step out of the shower.; step5: take a shower; step6: put on shoes","flatten_input_for_script_generation":"You want to put on shoes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: take a shower; step1: step out of the shower.; step2: grab a towel.; step3: dry off with the towel.; step4: leave the bathroom.; step5: go to the bedroom.; step6: put on shoes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->2","4->0","5->4"],"reference_code":"class PutOnShoes:\n\n    title = \"put on shoes\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"step out of the shower.\"\n\n    def step2(self):\n        return \"grab a towel.\"\n\n    def step3(self):\n        return \"dry off with the towel.\"\n\n    def step4(self):\n        return \"leave the bathroom.\"\n\n    def step5(self):\n        return \"go to the bedroom.\"\n\n    def step6(self):\n        return \"put on shoes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnShoes:\n\n    title = \"put on shoes\"\n    steps = 7\n\n","reference_graph":{"title":"put on shoes","num_steps":7,"schema":["step0: take a shower","step1: step out of the shower.","step2: grab a towel.","step3: dry off with the towel.","step4: leave the bathroom.","step5: go to the bedroom.","step6: put on shoes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Buy the various computer parts","events":{"0":"take off side panel","1":"look inside store for parts needed","2":"decide to upgrade parts","3":"notice computer having problems","4":"turn off computer","5":"head to computer store","6":"notice parts are broken","7":"NONE","8":"Buy the various computer parts"},"context":"NONE","minutes":120.0,"events_minutes":{"0":1.0,"1":37.0,"2":1.0,"3":2.0,"4":1.0,"5":27.0,"6":3.0},"flatten_input_for_edge_prediction":"step0: take off side panel; step1: look inside store for parts needed; step2: decide to upgrade parts; step3: notice computer having problems; step4: turn off computer; step5: head to computer store; step6: notice parts are broken; step7: decided to Buy the various computer parts; step8: Buy the various computer parts","flatten_input_for_script_generation":"You want to Buy the various computer parts. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step6; step6 -> step2; step2 -> step5; step5 -> step1; step1 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to Buy the various computer parts; step1: notice computer having problems; step2: turn off computer; step3: take off side panel; step4: notice parts are broken; step5: decide to upgrade parts; step6: head to computer store; step7: look inside store for parts needed; step8: Buy the various computer parts; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->5","3->4","4->0","5->1","6->2","7->3"],"reference_code":"class BuyTheVariousComputerParts:\n\n    title = \"Buy the various computer parts\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to Buy the various computer parts\"\n\n    def step1(self):\n        return \"notice computer having problems\"\n\n    def step2(self):\n        return \"turn off computer\"\n\n    def step3(self):\n        return \"take off side panel\"\n\n    def step4(self):\n        return \"notice parts are broken\"\n\n    def step5(self):\n        return \"decide to upgrade parts\"\n\n    def step6(self):\n        return \"head to computer store\"\n\n    def step7(self):\n        return \"look inside store for parts needed\"\n\n    def step8(self):\n        return \"Buy the various computer parts\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class BuyTheVariousComputerParts:\n\n    title = \"Buy the various computer parts\"\n    steps = 9\n\n","reference_graph":{"title":"Buy the various computer parts","num_steps":9,"schema":["step0: decided to Buy the various computer parts","step1: notice computer having problems","step2: turn off computer","step3: take off side panel","step4: notice parts are broken","step5: decide to upgrade parts","step6: head to computer store","step7: look inside store for parts needed","step8: Buy the various computer parts"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Let the attendees into the party","events":{"0":"Open the door to let the attendees in.","1":"Listen for a knock at the door.","2":"Repeat until all the attendees have arrived.","3":"Walk over to the door of the venue.","4":"Wait for the attendees to arrive.","5":"Order hundreds of drinks to venue","6":"Let the attendees into the party"},"context":"Order hundreds of drinks to venue","minutes":60.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":10.0,"3":0.3333333333,"4":15.0},"flatten_input_for_edge_prediction":"step0: Open the door to let the attendees in.; step1: Listen for a knock at the door.; step2: Repeat until all the attendees have arrived.; step3: Walk over to the door of the venue.; step4: Wait for the attendees to arrive.; step5: Order hundreds of drinks to venue; step6: Let the attendees into the party","flatten_input_for_script_generation":"You want to Let the attendees into the party. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Order hundreds of drinks to venue; step1: Wait for the attendees to arrive.; step2: Listen for a knock at the door.; step3: Walk over to the door of the venue.; step4: Open the door to let the attendees in.; step5: Repeat until all the attendees have arrived.; step6: Let the attendees into the party; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->0","4->1","5->4"],"reference_code":"class LetTheAttendeesIntoTheParty:\n\n    title = \"Let the attendees into the party\"\n    steps = 7\n\n    def step0(self):\n        return \"Order hundreds of drinks to venue\"\n\n    def step1(self):\n        return \"Wait for the attendees to arrive.\"\n\n    def step2(self):\n        return \"Listen for a knock at the door.\"\n\n    def step3(self):\n        return \"Walk over to the door of the venue.\"\n\n    def step4(self):\n        return \"Open the door to let the attendees in.\"\n\n    def step5(self):\n        return \"Repeat until all the attendees have arrived.\"\n\n    def step6(self):\n        return \"Let the attendees into the party\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LetTheAttendeesIntoTheParty:\n\n    title = \"Let the attendees into the party\"\n    steps = 7\n\n","reference_graph":{"title":"Let the attendees into the party","num_steps":7,"schema":["step0: Order hundreds of drinks to venue","step1: Wait for the attendees to arrive.","step2: Listen for a knock at the door.","step3: Walk over to the door of the venue.","step4: Open the door to let the attendees in.","step5: Repeat until all the attendees have arrived.","step6: Let the attendees into the party"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put the ingredients on the plate.","events":{"0":"open the drawer","1":"take out a plate","2":"put plate on counter","3":"take out silverwave","4":"open the cabinet","5":"put the food on the counter","6":"use sliverwave to get ingredients","7":"Pull ingredients out of the fridge.","8":"Put the ingredients on the plate."},"context":"Pull ingredients out of the fridge.","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0166666667,"2":2.0,"3":2.0,"4":0.0166666667,"5":2.0,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the drawer; step1: take out a plate; step2: put plate on counter; step3: take out silverwave; step4: open the cabinet; step5: put the food on the counter; step6: use sliverwave to get ingredients; step7: Pull ingredients out of the fridge.; step8: Put the ingredients on the plate.","flatten_input_for_script_generation":"You want to Put the ingredients on the plate.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step5 -> step0; step4 -> step1; step0 -> step3; step1 -> step2; step3 -> step2; step2 -> step6; step6 -> step8; step7 -> step5","flatten_output_for_script_generation":"step0: Pull ingredients out of the fridge.; step1: put the food on the counter; step2: open the cabinet; step3: open the drawer; step4: take out a plate; step5: take out silverwave; step6: put plate on counter; step7: use sliverwave to get ingredients; step8: Put the ingredients on the plate.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->2","2->6","3->2","4->1","5->4","5->0","6->8","7->5"],"reference_code":"class PutTheIngredientsOnThePlate:\n\n    title = \"Put the ingredients on the plate.\"\n    steps = 9\n\n    def step0(self):\n        return \"Pull ingredients out of the fridge.\"\n\n    def step1(self):\n        return \"put the food on the counter\"\n\n    def step2(self):\n        return \"open the cabinet\"\n\n    def step3(self):\n        return \"open the drawer\"\n\n    def step4(self):\n        return \"take out a plate\"\n\n    def step5(self):\n        return \"take out silverwave\"\n\n    def step6(self):\n        return \"put plate on counter\"\n\n    def step7(self):\n        return \"use sliverwave to get ingredients\"\n\n    def step8(self):\n        return \"Put the ingredients on the plate.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PutTheIngredientsOnThePlate:\n\n    title = \"Put the ingredients on the plate.\"\n    steps = 9\n\n","reference_graph":{"title":"Put the ingredients on the plate.","num_steps":9,"schema":["step0: Pull ingredients out of the fridge.","step1: put the food on the counter","step2: open the cabinet","step3: open the drawer","step4: take out a plate","step5: take out silverwave","step6: put plate on counter","step7: use sliverwave to get ingredients","step8: Put the ingredients on the plate."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"park the car","events":{"0":"pull into zoo's parking lot","1":"notice available parking spot","2":"drive to available parking spot","3":"pull into available parking spot","4":"stop the car","5":"look for available parking spot","6":"drive to the zoo","7":"park the car"},"context":"drive to the zoo","minutes":3.0,"events_minutes":{"0":0.3333333333,"1":0.0333333333,"2":0.1666666667,"3":0.0833333333,"4":0.0166666667,"5":1.0},"flatten_input_for_edge_prediction":"step0: pull into zoo's parking lot; step1: notice available parking spot; step2: drive to available parking spot; step3: pull into available parking spot; step4: stop the car; step5: look for available parking spot; step6: drive to the zoo; step7: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: drive to the zoo; step1: pull into zoo's parking lot; step2: look for available parking spot; step3: notice available parking spot; step4: drive to available parking spot; step5: pull into available parking spot; step6: stop the car; step7: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->2","2->3","3->4","4->7","5->1","6->0"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to the zoo\"\n\n    def step1(self):\n        return \"pull into zoo's parking lot\"\n\n    def step2(self):\n        return \"look for available parking spot\"\n\n    def step3(self):\n        return \"notice available parking spot\"\n\n    def step4(self):\n        return \"drive to available parking spot\"\n\n    def step5(self):\n        return \"pull into available parking spot\"\n\n    def step6(self):\n        return \"stop the car\"\n\n    def step7(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 8\n\n","reference_graph":{"title":"park the car","num_steps":8,"schema":["step0: drive to the zoo","step1: pull into zoo's parking lot","step2: look for available parking spot","step3: notice available parking spot","step4: drive to available parking spot","step5: pull into available parking spot","step6: stop the car","step7: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Pick the nearest theater","events":{"0":"look at show times for movie","1":"verify the close theater is showing the movie","2":"look at prices for ticket","3":"find closest theater","4":"look at theaters on google maps","5":"Check the theaters showing the Suicide Squad","6":"Pick the nearest theater"},"context":"Check the theaters showing the Suicide Squad","minutes":0.5,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look at show times for movie; step1: verify the close theater is showing the movie; step2: look at prices for ticket; step3: find closest theater; step4: look at theaters on google maps; step5: Check the theaters showing the Suicide Squad; step6: Pick the nearest theater","flatten_input_for_script_generation":"You want to Pick the nearest theater. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step4 -> step3; step3 -> step1; step1 -> step2; step1 -> step0; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Check the theaters showing the Suicide Squad; step1: look at theaters on google maps; step2: look at show times for movie; step3: Pick the nearest theater; step4: find closest theater; step5: verify the close theater is showing the movie; step6: look at prices for ticket; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step5 -> step2; step6 -> step3","gold_edges_for_prediction":["0->6","1->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class PickTheNearestTheater:\n\n    title = \"Pick the nearest theater\"\n    steps = 7\n\n    def step0(self):\n        return \"Check the theaters showing the Suicide Squad\"\n\n    def step1(self):\n        return \"look at theaters on google maps\"\n\n    def step2(self):\n        return \"look at show times for movie\"\n\n    def step3(self):\n        return \"Pick the nearest theater\"\n\n    def step4(self):\n        return \"find closest theater\"\n\n    def step5(self):\n        return \"verify the close theater is showing the movie\"\n\n    def step6(self):\n        return \"look at prices for ticket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step2\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class PickTheNearestTheater:\n\n    title = \"Pick the nearest theater\"\n    steps = 7\n\n","reference_graph":{"title":"Pick the nearest theater","num_steps":7,"schema":["step0: Check the theaters showing the Suicide Squad","step1: look at theaters on google maps","step2: look at show times for movie","step3: Pick the nearest theater","step4: find closest theater","step5: verify the close theater is showing the movie","step6: look at prices for ticket"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step5 -> step2","step6 -> step3"]}}
{"scenario":"sprinkle asparagus with salt","events":{"0":"grab the salt","1":"open the salt","2":"find the salt","3":"close the cabinet door","4":"open cabinet door","5":"put asparagus on plate","6":"sprinkle asparagus with salt"},"context":"put asparagus on plate","minutes":0.5,"events_minutes":{"0":0.05,"1":0.05,"2":0.0833333333,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: grab the salt; step1: open the salt; step2: find the salt; step3: close the cabinet door; step4: open cabinet door; step5: put asparagus on plate; step6: sprinkle asparagus with salt","flatten_input_for_script_generation":"You want to sprinkle asparagus with salt. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step0 -> step1; step0 -> step3; step1 -> step6; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: put asparagus on plate; step1: open cabinet door; step2: find the salt; step3: grab the salt; step4: open the salt; step5: close the cabinet door; step6: sprinkle asparagus with salt; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->1","0->3","1->6","2->0","3->6","4->2","5->4"],"reference_code":"class SprinkleAsparagusWithSalt:\n\n    title = \"sprinkle asparagus with salt\"\n    steps = 7\n\n    def step0(self):\n        return \"put asparagus on plate\"\n\n    def step1(self):\n        return \"open cabinet door\"\n\n    def step2(self):\n        return \"find the salt\"\n\n    def step3(self):\n        return \"grab the salt\"\n\n    def step4(self):\n        return \"open the salt\"\n\n    def step5(self):\n        return \"close the cabinet door\"\n\n    def step6(self):\n        return \"sprinkle asparagus with salt\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SprinkleAsparagusWithSalt:\n\n    title = \"sprinkle asparagus with salt\"\n    steps = 7\n\n","reference_graph":{"title":"sprinkle asparagus with salt","num_steps":7,"schema":["step0: put asparagus on plate","step1: open cabinet door","step2: find the salt","step3: grab the salt","step4: open the salt","step5: close the cabinet door","step6: sprinkle asparagus with salt"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"walk to train to ride","events":{"0":"Lift left leg off the ground.","1":"Lift right leg off the ground.","2":"Identify the location of the train stop.","3":"Extend left leg in direction of the train stop.","4":"Extend right leg in direction of the train stop.","5":"Continue lifting and extending legs until arrival at train stop.","6":"pay for ticket","7":"walk to train to ride"},"context":"pay for ticket","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.1666666667,"3":0.0166666667,"4":0.0166666667,"5":5.0},"flatten_input_for_edge_prediction":"step0: Lift left leg off the ground.; step1: Lift right leg off the ground.; step2: Identify the location of the train stop.; step3: Extend left leg in direction of the train stop.; step4: Extend right leg in direction of the train stop.; step5: Continue lifting and extending legs until arrival at train stop.; step6: pay for ticket; step7: walk to train to ride","flatten_input_for_script_generation":"You want to walk to train to ride. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step2 -> step0; step1 -> step4; step4 -> step5; step0 -> step3; step3 -> step5; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: pay for ticket; step1: Identify the location of the train stop.; step2: Lift right leg off the ground.; step3: Lift left leg off the ground.; step4: Extend right leg in direction of the train stop.; step5: Extend left leg in direction of the train stop.; step6: Continue lifting and extending legs until arrival at train stop.; step7: walk to train to ride; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","2->0","3->5","4->5","5->7","6->2"],"reference_code":"class WalkToTrainToRide:\n\n    title = \"walk to train to ride\"\n    steps = 8\n\n    def step0(self):\n        return \"pay for ticket\"\n\n    def step1(self):\n        return \"Identify the location of the train stop.\"\n\n    def step2(self):\n        return \"Lift right leg off the ground.\"\n\n    def step3(self):\n        return \"Lift left leg off the ground.\"\n\n    def step4(self):\n        return \"Extend right leg in direction of the train stop.\"\n\n    def step5(self):\n        return \"Extend left leg in direction of the train stop.\"\n\n    def step6(self):\n        return \"Continue lifting and extending legs until arrival at train stop.\"\n\n    def step7(self):\n        return \"walk to train to ride\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTrainToRide:\n\n    title = \"walk to train to ride\"\n    steps = 8\n\n","reference_graph":{"title":"walk to train to ride","num_steps":8,"schema":["step0: pay for ticket","step1: Identify the location of the train stop.","step2: Lift right leg off the ground.","step3: Lift left leg off the ground.","step4: Extend right leg in direction of the train stop.","step5: Extend left leg in direction of the train stop.","step6: Continue lifting and extending legs until arrival at train stop.","step7: walk to train to ride"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step5 -> step6"]}}
{"scenario":"Be the best runner on the team.","events":{"0":"practice running techniques","1":"lookup running tutorials","2":"ask coach about training program","3":"get racing experience","4":"start weightlifting program","5":"Make the track team.","6":"Be the best runner on the team."},"context":"Make the track team.","minutes":259200.0,"events_minutes":{"0":259200.0,"1":5.0,"2":5.0,"3":5256000.0,"4":86400.0},"flatten_input_for_edge_prediction":"step0: practice running techniques; step1: lookup running tutorials; step2: ask coach about training program; step3: get racing experience; step4: start weightlifting program; step5: Make the track team.; step6: Be the best runner on the team.","flatten_input_for_script_generation":"You want to Be the best runner on the team.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step1 -> step4; step2 -> step0; step2 -> step4; step0 -> step3; step4 -> step3; step3 -> step6; step5 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: Make the track team.; step1: ask coach about training program; step2: lookup running tutorials; step3: practice running techniques; step4: start weightlifting program; step5: get racing experience; step6: Be the best runner on the team.; step0 -> step1; step0 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step1 -> step3; step1 -> step4; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","1->4","2->0","2->4","3->6","4->3","5->1","5->2"],"reference_code":"class BeTheBestRunnerOnTheTeam:\n\n    title = \"Be the best runner on the team.\"\n    steps = 7\n\n    def step0(self):\n        return \"Make the track team.\"\n\n    def step1(self):\n        return \"ask coach about training program\"\n\n    def step2(self):\n        return \"lookup running tutorials\"\n\n    def step3(self):\n        return \"practice running techniques\"\n\n    def step4(self):\n        return \"start weightlifting program\"\n\n    def step5(self):\n        return \"get racing experience\"\n\n    def step6(self):\n        return \"Be the best runner on the team.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BeTheBestRunnerOnTheTeam:\n\n    title = \"Be the best runner on the team.\"\n    steps = 7\n\n","reference_graph":{"title":"Be the best runner on the team.","num_steps":7,"schema":["step0: Make the track team.","step1: ask coach about training program","step2: lookup running tutorials","step3: practice running techniques","step4: start weightlifting program","step5: get racing experience","step6: Be the best runner on the team."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step1 -> step3","step1 -> step4","step5 -> step6"]}}
{"scenario":"Work at the job","events":{"0":"Agree on first work day.","1":"Purchase new uniform.","2":"Get in car.","3":"Drive to new job.","4":"Put on uniform.","5":"Get the job","6":"Work at the job"},"context":"Get the job","minutes":129600.0,"events_minutes":{"0":10.0,"1":30.0,"2":0.5,"3":30.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Agree on first work day.; step1: Purchase new uniform.; step2: Get in car.; step3: Drive to new job.; step4: Put on uniform.; step5: Get the job; step6: Work at the job","flatten_input_for_script_generation":"You want to Work at the job. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Get the job; step1: Agree on first work day.; step2: Purchase new uniform.; step3: Put on uniform.; step4: Get in car.; step5: Drive to new job.; step6: Work at the job; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->6","4->2","5->0"],"reference_code":"class WorkAtTheJob:\n\n    title = \"Work at the job\"\n    steps = 7\n\n    def step0(self):\n        return \"Get the job\"\n\n    def step1(self):\n        return \"Agree on first work day.\"\n\n    def step2(self):\n        return \"Purchase new uniform.\"\n\n    def step3(self):\n        return \"Put on uniform.\"\n\n    def step4(self):\n        return \"Get in car.\"\n\n    def step5(self):\n        return \"Drive to new job.\"\n\n    def step6(self):\n        return \"Work at the job\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WorkAtTheJob:\n\n    title = \"Work at the job\"\n    steps = 7\n\n","reference_graph":{"title":"Work at the job","num_steps":7,"schema":["step0: Get the job","step1: Agree on first work day.","step2: Purchase new uniform.","step3: Put on uniform.","step4: Get in car.","step5: Drive to new job.","step6: Work at the job"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"dress in running clothes","events":{"0":"retrieve running clothes","1":"get out of bed","2":"turn off alarm","3":"walk to the closet","4":"set an alarm","5":"practice until day of race","6":"dress in running clothes"},"context":"practice until day of race","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.5,"3":1.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: retrieve running clothes; step1: get out of bed; step2: turn off alarm; step3: walk to the closet; step4: set an alarm; step5: practice until day of race; step6: dress in running clothes","flatten_input_for_script_generation":"You want to dress in running clothes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step4 -> step2; step1 -> step3; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: practice until day of race; step1: set an alarm; step2: get out of bed; step3: turn off alarm; step4: walk to the closet; step5: retrieve running clothes; step6: dress in running clothes; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->3","3->0","4->1","4->2","5->4"],"reference_code":"class DressInRunningClothes:\n\n    title = \"dress in running clothes\"\n    steps = 7\n\n    def step0(self):\n        return \"practice until day of race\"\n\n    def step1(self):\n        return \"set an alarm\"\n\n    def step2(self):\n        return \"get out of bed\"\n\n    def step3(self):\n        return \"turn off alarm\"\n\n    def step4(self):\n        return \"walk to the closet\"\n\n    def step5(self):\n        return \"retrieve running clothes\"\n\n    def step6(self):\n        return \"dress in running clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DressInRunningClothes:\n\n    title = \"dress in running clothes\"\n    steps = 7\n\n","reference_graph":{"title":"dress in running clothes","num_steps":7,"schema":["step0: practice until day of race","step1: set an alarm","step2: get out of bed","step3: turn off alarm","step4: walk to the closet","step5: retrieve running clothes","step6: dress in running clothes"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make some great artwork","events":{"0":"work on project","1":"sit in chair","2":"pull out chair","3":"decide on what to make","4":"gather art supplies","5":"Listen to the teacher","6":"Make some great artwork"},"context":"Listen to the teacher","minutes":120.0,"events_minutes":{"0":60.0,"1":1.0,"2":0.5,"3":10.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: work on project; step1: sit in chair; step2: pull out chair; step3: decide on what to make; step4: gather art supplies; step5: Listen to the teacher; step6: Make some great artwork","flatten_input_for_script_generation":"You want to Make some great artwork. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step4 -> step2; step1 -> step0; step2 -> step1; step0 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: Listen to the teacher; step1: decide on what to make; step2: work on project; step3: Make some great artwork; step4: gather art supplies; step5: pull out chair; step6: sit in chair; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->6","1->0","2->1","3->0","4->2","5->4","5->3"],"reference_code":"class MakeSomeGreatArtwork:\n\n    title = \"Make some great artwork\"\n    steps = 7\n\n    def step0(self):\n        return \"Listen to the teacher\"\n\n    def step1(self):\n        return \"decide on what to make\"\n\n    def step2(self):\n        return \"work on project\"\n\n    def step3(self):\n        return \"Make some great artwork\"\n\n    def step4(self):\n        return \"gather art supplies\"\n\n    def step5(self):\n        return \"pull out chair\"\n\n    def step6(self):\n        return \"sit in chair\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class MakeSomeGreatArtwork:\n\n    title = \"Make some great artwork\"\n    steps = 7\n\n","reference_graph":{"title":"Make some great artwork","num_steps":7,"schema":["step0: Listen to the teacher","step1: decide on what to make","step2: work on project","step3: Make some great artwork","step4: gather art supplies","step5: pull out chair","step6: sit in chair"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"light the grill","events":{"0":"move hand to burner knob","1":"grab bag of coal","2":"find bag of coal","3":"put coals on grill","4":"turn burner knob","5":"NONE","6":"light the grill"},"context":"NONE","minutes":4.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: move hand to burner knob; step1: grab bag of coal; step2: find bag of coal; step3: put coals on grill; step4: turn burner knob; step5: decided to light the grill; step6: light the grill","flatten_input_for_script_generation":"You want to light the grill. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step1; step1 -> step3; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to light the grill; step1: find bag of coal; step2: put coals on grill; step3: move hand to burner knob; step4: turn burner knob; step5: grab bag of coal; step6: light the grill; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->0","4->6","5->2"],"reference_code":"class LightTheGrill:\n\n    title = \"light the grill\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to light the grill\"\n\n    def step1(self):\n        return \"find bag of coal\"\n\n    def step2(self):\n        return \"put coals on grill\"\n\n    def step3(self):\n        return \"move hand to burner knob\"\n\n    def step4(self):\n        return \"turn burner knob\"\n\n    def step5(self):\n        return \"grab bag of coal\"\n\n    def step6(self):\n        return \"light the grill\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class LightTheGrill:\n\n    title = \"light the grill\"\n    steps = 7\n\n","reference_graph":{"title":"light the grill","num_steps":7,"schema":["step0: decided to light the grill","step1: find bag of coal","step2: put coals on grill","step3: move hand to burner knob","step4: turn burner knob","step5: grab bag of coal","step6: light the grill"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6"]}}
{"scenario":"get in the car","events":{"0":"put on left sock","1":"get the car keys","2":"put on pants","3":"put on right shoe","4":"put on a shirt","5":"put on right sock","6":"put on left shoe","7":"NONE","8":"get in the car"},"context":"NONE","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.25,"3":0.4166666667,"4":0.1666666667,"5":0.1666666667,"6":0.4166666667},"flatten_input_for_edge_prediction":"step0: put on left sock; step1: get the car keys; step2: put on pants; step3: put on right shoe; step4: put on a shirt; step5: put on right sock; step6: put on left shoe; step7: decided to get in the car; step8: get in the car","flatten_input_for_script_generation":"You want to get in the car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step5; step2 -> step0; step0 -> step6; step5 -> step3; step6 -> step1; step3 -> step1; step1 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to get in the car; step1: put on a shirt; step2: put on pants; step3: put on right sock; step4: put on left sock; step5: put on right shoe; step6: put on left shoe; step7: get the car keys; step8: get in the car; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->5","2->0","3->1","4->2","5->3","6->1","7->4"],"reference_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to get in the car\"\n\n    def step1(self):\n        return \"put on a shirt\"\n\n    def step2(self):\n        return \"put on pants\"\n\n    def step3(self):\n        return \"put on right sock\"\n\n    def step4(self):\n        return \"put on left sock\"\n\n    def step5(self):\n        return \"put on right shoe\"\n\n    def step6(self):\n        return \"put on left shoe\"\n\n    def step7(self):\n        return \"get the car keys\"\n\n    def step8(self):\n        return \"get in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetInTheCar:\n\n    title = \"get in the car\"\n    steps = 9\n\n","reference_graph":{"title":"get in the car","num_steps":9,"schema":["step0: decided to get in the car","step1: put on a shirt","step2: put on pants","step3: put on right sock","step4: put on left sock","step5: put on right shoe","step6: put on left shoe","step7: get the car keys","step8: get in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step5 -> step7","step7 -> step8"]}}
{"scenario":"sit down at the desk","events":{"0":"turn on the desk lamp for more light.","1":"walk to the home office.","2":"pull out the chair from the desk.","3":"enter the home office.","4":"set the laptop on the desk.","5":"decide to learn a new recipe","6":"sit down at the desk"},"context":"decide to learn a new recipe","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.3333333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: turn on the desk lamp for more light.; step1: walk to the home office.; step2: pull out the chair from the desk.; step3: enter the home office.; step4: set the laptop on the desk.; step5: decide to learn a new recipe; step6: sit down at the desk","flatten_input_for_script_generation":"You want to sit down at the desk. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step3 -> step0; step4 -> step2; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decide to learn a new recipe; step1: walk to the home office.; step2: enter the home office.; step3: set the laptop on the desk.; step4: turn on the desk lamp for more light.; step5: pull out the chair from the desk.; step6: sit down at the desk; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->4","3->0","4->2","5->1"],"reference_code":"class SitDownAtTheDesk:\n\n    title = \"sit down at the desk\"\n    steps = 7\n\n    def step0(self):\n        return \"decide to learn a new recipe\"\n\n    def step1(self):\n        return \"walk to the home office.\"\n\n    def step2(self):\n        return \"enter the home office.\"\n\n    def step3(self):\n        return \"set the laptop on the desk.\"\n\n    def step4(self):\n        return \"turn on the desk lamp for more light.\"\n\n    def step5(self):\n        return \"pull out the chair from the desk.\"\n\n    def step6(self):\n        return \"sit down at the desk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SitDownAtTheDesk:\n\n    title = \"sit down at the desk\"\n    steps = 7\n\n","reference_graph":{"title":"sit down at the desk","num_steps":7,"schema":["step0: decide to learn a new recipe","step1: walk to the home office.","step2: enter the home office.","step3: set the laptop on the desk.","step4: turn on the desk lamp for more light.","step5: pull out the chair from the desk.","step6: sit down at the desk"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"leave the office building","events":{"0":"tidy up workspace","1":"grab personal belongings","2":"walk towards the exit","3":"turn off computer","4":"take the elevator down","5":"NONE","6":"leave the office building"},"context":"NONE","minutes":1.0,"events_minutes":{"0":5.0,"1":0.25,"2":1.0,"3":0.25,"4":3.0},"flatten_input_for_edge_prediction":"step0: tidy up workspace; step1: grab personal belongings; step2: walk towards the exit; step3: turn off computer; step4: take the elevator down; step5: decided to leave the office building; step6: leave the office building","flatten_input_for_script_generation":"You want to leave the office building. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decided to leave the office building; step1: tidy up workspace; step2: turn off computer; step3: grab personal belongings; step4: take the elevator down; step5: walk towards the exit; step6: leave the office building; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->1","4->2","5->0"],"reference_code":"class LeaveTheOfficeBuilding:\n\n    title = \"leave the office building\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to leave the office building\"\n\n    def step1(self):\n        return \"tidy up workspace\"\n\n    def step2(self):\n        return \"turn off computer\"\n\n    def step3(self):\n        return \"grab personal belongings\"\n\n    def step4(self):\n        return \"take the elevator down\"\n\n    def step5(self):\n        return \"walk towards the exit\"\n\n    def step6(self):\n        return \"leave the office building\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LeaveTheOfficeBuilding:\n\n    title = \"leave the office building\"\n    steps = 7\n\n","reference_graph":{"title":"leave the office building","num_steps":7,"schema":["step0: decided to leave the office building","step1: tidy up workspace","step2: turn off computer","step3: grab personal belongings","step4: take the elevator down","step5: walk towards the exit","step6: leave the office building"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Slice the tomato.","events":{"0":"grip tomato to stabilize","1":"pick up a knife","2":"stand above the cutting board","3":"apply pressure to the tomato with the knife","4":"bring knife to tomato","5":"Set tomato on cutting board.","6":"Slice the tomato."},"context":"Set tomato on cutting board.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.1666666667,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: grip tomato to stabilize; step1: pick up a knife; step2: stand above the cutting board; step3: apply pressure to the tomato with the knife; step4: bring knife to tomato; step5: Set tomato on cutting board.; step6: Slice the tomato.","flatten_input_for_script_generation":"You want to Slice the tomato.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: Set tomato on cutting board.; step1: stand above the cutting board; step2: pick up a knife; step3: grip tomato to stabilize; step4: bring knife to tomato; step5: apply pressure to the tomato with the knife; step6: Slice the tomato.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->0","3->6","4->3","5->1","5->2"],"reference_code":"class SliceTheTomato:\n\n    title = \"Slice the tomato.\"\n    steps = 7\n\n    def step0(self):\n        return \"Set tomato on cutting board.\"\n\n    def step1(self):\n        return \"stand above the cutting board\"\n\n    def step2(self):\n        return \"pick up a knife\"\n\n    def step3(self):\n        return \"grip tomato to stabilize\"\n\n    def step4(self):\n        return \"bring knife to tomato\"\n\n    def step5(self):\n        return \"apply pressure to the tomato with the knife\"\n\n    def step6(self):\n        return \"Slice the tomato.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SliceTheTomato:\n\n    title = \"Slice the tomato.\"\n    steps = 7\n\n","reference_graph":{"title":"Slice the tomato.","num_steps":7,"schema":["step0: Set tomato on cutting board.","step1: stand above the cutting board","step2: pick up a knife","step3: grip tomato to stabilize","step4: bring knife to tomato","step5: apply pressure to the tomato with the knife","step6: Slice the tomato."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Plan where to go","events":{"0":"look at the forecast","1":"check the hours of availability","2":"look for locations that provide the activity","3":"call in advance to get necessary information","4":"decide what looks fun for the day","5":"NONE","6":"Plan where to go"},"context":"NONE","minutes":10.0,"events_minutes":{"0":2.0,"1":2.0,"2":10.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: look at the forecast; step1: check the hours of availability; step2: look for locations that provide the activity; step3: call in advance to get necessary information; step4: decide what looks fun for the day; step5: decided to Plan where to go; step6: Plan where to go","flatten_input_for_script_generation":"You want to Plan where to go. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0; step5 -> step4","flatten_output_for_script_generation":"step0: decided to Plan where to go; step1: decide what looks fun for the day; step2: look at the forecast; step3: look for locations that provide the activity; step4: check the hours of availability; step5: call in advance to get necessary information; step6: Plan where to go; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->6","4->2","5->0","5->4"],"reference_code":"class PlanWhereToGo:\n\n    title = \"Plan where to go\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to Plan where to go\"\n\n    def step1(self):\n        return \"decide what looks fun for the day\"\n\n    def step2(self):\n        return \"look at the forecast\"\n\n    def step3(self):\n        return \"look for locations that provide the activity\"\n\n    def step4(self):\n        return \"check the hours of availability\"\n\n    def step5(self):\n        return \"call in advance to get necessary information\"\n\n    def step6(self):\n        return \"Plan where to go\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlanWhereToGo:\n\n    title = \"Plan where to go\"\n    steps = 7\n\n","reference_graph":{"title":"Plan where to go","num_steps":7,"schema":["step0: decided to Plan where to go","step1: decide what looks fun for the day","step2: look at the forecast","step3: look for locations that provide the activity","step4: check the hours of availability","step5: call in advance to get necessary information","step6: Plan where to go"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"choose a place that sells mopeds","events":{"0":"make a final decision","1":"narrow down the choices","2":"read reviews about the store","3":"compare the different stores","4":"look for directions to the store","5":"look for places that sells mopeds","6":"choose a place that sells mopeds"},"context":"look for places that sells mopeds","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: make a final decision; step1: narrow down the choices; step2: read reviews about the store; step3: compare the different stores; step4: look for directions to the store; step5: look for places that sells mopeds; step6: choose a place that sells mopeds","flatten_input_for_script_generation":"You want to choose a place that sells mopeds. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step4 -> step6; step2 -> step1; step1 -> step0; step0 -> step4; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: look for places that sells mopeds; step1: compare the different stores; step2: narrow down the choices; step3: make a final decision; step4: look for directions to the store; step5: choose a place that sells mopeds; step6: read reviews about the store; step0 -> step1; step0 -> step6; step1 -> step2; step2 -> step3; step4 -> step5; step6 -> step2; step3 -> step4","gold_edges_for_prediction":["0->4","1->0","2->1","3->1","4->6","5->2","5->3"],"reference_code":"class ChooseAPlaceThatSellsMopeds:\n\n    title = \"choose a place that sells mopeds\"\n    steps = 7\n\n    def step0(self):\n        return \"look for places that sells mopeds\"\n\n    def step1(self):\n        return \"compare the different stores\"\n\n    def step2(self):\n        return \"narrow down the choices\"\n\n    def step3(self):\n        return \"make a final decision\"\n\n    def step4(self):\n        return \"look for directions to the store\"\n\n    def step5(self):\n        return \"choose a place that sells mopeds\"\n\n    def step6(self):\n        return \"read reviews about the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n            \"step3 -> step4\",\n        ]\n","input_prompt_code":"class ChooseAPlaceThatSellsMopeds:\n\n    title = \"choose a place that sells mopeds\"\n    steps = 7\n\n","reference_graph":{"title":"choose a place that sells mopeds","num_steps":7,"schema":["step0: look for places that sells mopeds","step1: compare the different stores","step2: narrow down the choices","step3: make a final decision","step4: look for directions to the store","step5: choose a place that sells mopeds","step6: read reviews about the store"],"relations":["step0 -> step1","step0 -> step6","step1 -> step2","step2 -> step3","step4 -> step5","step6 -> step2","step3 -> step4"]}}
{"scenario":"sort courses by languages taught","events":{"0":"Double check work when completed","1":"Pick out best available help tools","2":"Use the tools for better efficiency","3":"Periodically check for mistakes","4":"Separate each language from the others","5":"decide which language to learn","6":"sort courses by languages taught"},"context":"decide which language to learn","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Double check work when completed; step1: Pick out best available help tools; step2: Use the tools for better efficiency; step3: Periodically check for mistakes; step4: Separate each language from the others; step5: decide which language to learn; step6: sort courses by languages taught","flatten_input_for_script_generation":"You want to sort courses by languages taught. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step2 -> step3; step4 -> step2; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decide which language to learn; step1: Pick out best available help tools; step2: Separate each language from the others; step3: Use the tools for better efficiency; step4: Periodically check for mistakes; step5: Double check work when completed; step6: sort courses by languages taught; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->0","4->2","5->1"],"reference_code":"class SortCoursesByLanguagesTaught:\n\n    title = \"sort courses by languages taught\"\n    steps = 7\n\n    def step0(self):\n        return \"decide which language to learn\"\n\n    def step1(self):\n        return \"Pick out best available help tools\"\n\n    def step2(self):\n        return \"Separate each language from the others\"\n\n    def step3(self):\n        return \"Use the tools for better efficiency\"\n\n    def step4(self):\n        return \"Periodically check for mistakes\"\n\n    def step5(self):\n        return \"Double check work when completed\"\n\n    def step6(self):\n        return \"sort courses by languages taught\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SortCoursesByLanguagesTaught:\n\n    title = \"sort courses by languages taught\"\n    steps = 7\n\n","reference_graph":{"title":"sort courses by languages taught","num_steps":7,"schema":["step0: decide which language to learn","step1: Pick out best available help tools","step2: Separate each language from the others","step3: Use the tools for better efficiency","step4: Periodically check for mistakes","step5: Double check work when completed","step6: sort courses by languages taught"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk inside gym","events":{"0":"lock the car","1":"turn off the car","2":"take off the seat belt","3":"get out of the car","4":"start walking towards the gym","5":"walk through the gym entrance","6":"take the car key out of ignition","7":"park car in spot","8":"walk inside gym"},"context":"park car in spot","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0833333333,"3":0.1666666667,"4":0.5,"5":0.0833333333,"6":0.0333333333},"flatten_input_for_edge_prediction":"step0: lock the car; step1: turn off the car; step2: take off the seat belt; step3: get out of the car; step4: start walking towards the gym; step5: walk through the gym entrance; step6: take the car key out of ignition; step7: park car in spot; step8: walk inside gym","flatten_input_for_script_generation":"You want to walk inside gym. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step6; step1 -> step2; step6 -> step3; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step5; step5 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: park car in spot; step1: turn off the car; step2: take the car key out of ignition; step3: take off the seat belt; step4: get out of the car; step5: lock the car; step6: start walking towards the gym; step7: walk through the gym entrance; step8: walk inside gym; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","1->6","1->2","2->3","3->0","4->5","5->8","6->3","7->1"],"reference_code":"class WalkInsideGym:\n\n    title = \"walk inside gym\"\n    steps = 9\n\n    def step0(self):\n        return \"park car in spot\"\n\n    def step1(self):\n        return \"turn off the car\"\n\n    def step2(self):\n        return \"take the car key out of ignition\"\n\n    def step3(self):\n        return \"take off the seat belt\"\n\n    def step4(self):\n        return \"get out of the car\"\n\n    def step5(self):\n        return \"lock the car\"\n\n    def step6(self):\n        return \"start walking towards the gym\"\n\n    def step7(self):\n        return \"walk through the gym entrance\"\n\n    def step8(self):\n        return \"walk inside gym\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WalkInsideGym:\n\n    title = \"walk inside gym\"\n    steps = 9\n\n","reference_graph":{"title":"walk inside gym","num_steps":9,"schema":["step0: park car in spot","step1: turn off the car","step2: take the car key out of ignition","step3: take off the seat belt","step4: get out of the car","step5: lock the car","step6: start walking towards the gym","step7: walk through the gym entrance","step8: walk inside gym"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"write a first draft","events":{"0":"take time to think","1":"make an outline","2":"edit and add to draft as necessary","3":"look over notes","4":"begin writing first draft","5":"take notes about the subject","6":"write a first draft"},"context":"take notes about the subject","minutes":30.0,"events_minutes":{"0":10.0,"1":15.0,"2":60.0,"3":5.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: take time to think; step1: make an outline; step2: edit and add to draft as necessary; step3: look over notes; step4: begin writing first draft; step5: take notes about the subject; step6: write a first draft","flatten_input_for_script_generation":"You want to write a first draft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step2; step0 -> step1; step2 -> step6; step5 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: take notes about the subject; step1: look over notes; step2: make an outline; step3: begin writing first draft; step4: edit and add to draft as necessary; step5: write a first draft; step6: take time to think; step0 -> step1; step0 -> step6; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step2","gold_edges_for_prediction":["0->1","1->4","2->6","3->1","4->2","5->0","5->3"],"reference_code":"class WriteAFirstDraft:\n\n    title = \"write a first draft\"\n    steps = 7\n\n    def step0(self):\n        return \"take notes about the subject\"\n\n    def step1(self):\n        return \"look over notes\"\n\n    def step2(self):\n        return \"make an outline\"\n\n    def step3(self):\n        return \"begin writing first draft\"\n\n    def step4(self):\n        return \"edit and add to draft as necessary\"\n\n    def step5(self):\n        return \"write a first draft\"\n\n    def step6(self):\n        return \"take time to think\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step6\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class WriteAFirstDraft:\n\n    title = \"write a first draft\"\n    steps = 7\n\n","reference_graph":{"title":"write a first draft","num_steps":7,"schema":["step0: take notes about the subject","step1: look over notes","step2: make an outline","step3: begin writing first draft","step4: edit and add to draft as necessary","step5: write a first draft","step6: take time to think"],"relations":["step0 -> step1","step0 -> step6","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step2"]}}
{"scenario":"get into car","events":{"0":"unlock car door","1":"sit into car seat","2":"grab car door handle","3":"step into car","4":"open car door","5":"close car door","6":"grab car keys","7":"get into car"},"context":"grab car keys","minutes":2.0,"events_minutes":{"0":0.05,"1":0.05,"2":0.0166666667,"3":0.05,"4":0.05,"5":0.05},"flatten_input_for_edge_prediction":"step0: unlock car door; step1: sit into car seat; step2: grab car door handle; step3: step into car; step4: open car door; step5: close car door; step6: grab car keys; step7: get into car","flatten_input_for_script_generation":"You want to get into car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step5; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: grab car keys; step1: unlock car door; step2: grab car door handle; step3: open car door; step4: step into car; step5: sit into car seat; step6: close car door; step7: get into car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->5","2->4","3->1","4->3","5->7","6->0"],"reference_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 8\n\n    def step0(self):\n        return \"grab car keys\"\n\n    def step1(self):\n        return \"unlock car door\"\n\n    def step2(self):\n        return \"grab car door handle\"\n\n    def step3(self):\n        return \"open car door\"\n\n    def step4(self):\n        return \"step into car\"\n\n    def step5(self):\n        return \"sit into car seat\"\n\n    def step6(self):\n        return \"close car door\"\n\n    def step7(self):\n        return \"get into car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 8\n\n","reference_graph":{"title":"get into car","num_steps":8,"schema":["step0: grab car keys","step1: unlock car door","step2: grab car door handle","step3: open car door","step4: step into car","step5: sit into car seat","step6: close car door","step7: get into car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Walk up to the store entrance.","events":{"0":"open the car door","1":"lock the car","2":"get out of the car","3":"park the car","4":"close the car door","5":"Go to the supermarket to purchase the coffee maker","6":"Walk up to the store entrance."},"context":"Go to the supermarket to purchase the coffee maker","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":1.0,"2":1.0,"3":5.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: open the car door; step1: lock the car; step2: get out of the car; step3: park the car; step4: close the car door; step5: Go to the supermarket to purchase the coffee maker; step6: Walk up to the store entrance.","flatten_input_for_script_generation":"You want to Walk up to the store entrance.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Go to the supermarket to purchase the coffee maker; step1: park the car; step2: open the car door; step3: get out of the car; step4: close the car door; step5: lock the car; step6: Walk up to the store entrance.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->0","4->1","5->3"],"reference_code":"class WalkUpToTheStoreEntrance:\n\n    title = \"Walk up to the store entrance.\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the supermarket to purchase the coffee maker\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"open the car door\"\n\n    def step3(self):\n        return \"get out of the car\"\n\n    def step4(self):\n        return \"close the car door\"\n\n    def step5(self):\n        return \"lock the car\"\n\n    def step6(self):\n        return \"Walk up to the store entrance.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkUpToTheStoreEntrance:\n\n    title = \"Walk up to the store entrance.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk up to the store entrance.","num_steps":7,"schema":["step0: Go to the supermarket to purchase the coffee maker","step1: park the car","step2: open the car door","step3: get out of the car","step4: close the car door","step5: lock the car","step6: Walk up to the store entrance."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"dry off body","events":{"0":"Pick up towel","1":"Wrap towel around body","2":"Rub towel over body","3":"Shake off water from body","4":"Rub towel over hair","5":"take a shower","6":"dry off body"},"context":"take a shower","minutes":1.0,"events_minutes":{"0":0.05,"1":30.0,"2":3.0,"3":0.1666666667,"4":2.0},"flatten_input_for_edge_prediction":"step0: Pick up towel; step1: Wrap towel around body; step2: Rub towel over body; step3: Shake off water from body; step4: Rub towel over hair; step5: take a shower; step6: dry off body","flatten_input_for_script_generation":"You want to dry off body. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step0 -> step4; step2 -> step1; step4 -> step1; step1 -> step6; step3 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: take a shower; step1: Shake off water from body; step2: Pick up towel; step3: Rub towel over body; step4: Rub towel over hair; step5: Wrap towel around body; step6: dry off body; step0 -> step1; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->2","0->4","1->6","2->1","3->0","4->1","5->3"],"reference_code":"class DryOffBody:\n\n    title = \"dry off body\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"Shake off water from body\"\n\n    def step2(self):\n        return \"Pick up towel\"\n\n    def step3(self):\n        return \"Rub towel over body\"\n\n    def step4(self):\n        return \"Rub towel over hair\"\n\n    def step5(self):\n        return \"Wrap towel around body\"\n\n    def step6(self):\n        return \"dry off body\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class DryOffBody:\n\n    title = \"dry off body\"\n    steps = 7\n\n","reference_graph":{"title":"dry off body","num_steps":7,"schema":["step0: take a shower","step1: Shake off water from body","step2: Pick up towel","step3: Rub towel over body","step4: Rub towel over hair","step5: Wrap towel around body","step6: dry off body"],"relations":["step0 -> step1","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"Pick the most appealing one","events":{"0":"observe the shape of the stones","1":"observe the overall design of the ring","2":"notice the way the ring looks on the finger","3":"feel an emotional connection to one of the rings","4":"look at each ring carefully","5":"Repeat steps 1 and 2","6":"Pick the most appealing one"},"context":"Repeat steps 1 and 2","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.5,"3":0.0333333333,"4":0.25},"flatten_input_for_edge_prediction":"step0: observe the shape of the stones; step1: observe the overall design of the ring; step2: notice the way the ring looks on the finger; step3: feel an emotional connection to one of the rings; step4: look at each ring carefully; step5: Repeat steps 1 and 2; step6: Pick the most appealing one","flatten_input_for_script_generation":"You want to Pick the most appealing one. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step1; step4 -> step2; step0 -> step3; step1 -> step3; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Repeat steps 1 and 2; step1: look at each ring carefully; step2: observe the shape of the stones; step3: observe the overall design of the ring; step4: notice the way the ring looks on the finger; step5: feel an emotional connection to one of the rings; step6: Pick the most appealing one; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->3","2->3","3->6","4->0","4->1","4->2","5->4"],"reference_code":"class PickTheMostAppealingOne:\n\n    title = \"Pick the most appealing one\"\n    steps = 7\n\n    def step0(self):\n        return \"Repeat steps 1 and 2\"\n\n    def step1(self):\n        return \"look at each ring carefully\"\n\n    def step2(self):\n        return \"observe the shape of the stones\"\n\n    def step3(self):\n        return \"observe the overall design of the ring\"\n\n    def step4(self):\n        return \"notice the way the ring looks on the finger\"\n\n    def step5(self):\n        return \"feel an emotional connection to one of the rings\"\n\n    def step6(self):\n        return \"Pick the most appealing one\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickTheMostAppealingOne:\n\n    title = \"Pick the most appealing one\"\n    steps = 7\n\n","reference_graph":{"title":"Pick the most appealing one","num_steps":7,"schema":["step0: Repeat steps 1 and 2","step1: look at each ring carefully","step2: observe the shape of the stones","step3: observe the overall design of the ring","step4: notice the way the ring looks on the finger","step5: feel an emotional connection to one of the rings","step6: Pick the most appealing one"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Earn a surplus of income after expenditures.","events":{"0":"stick to the budget","1":"buy things on sale when possible","2":"stay healthy and avoid accidents","3":"continue to work and get a paycheck","4":"avoid impulse purchases","5":"Carefully budget out expenses.","6":"Earn a surplus of income after expenditures."},"context":"Carefully budget out expenses.","minutes":10080.0,"events_minutes":{"0":43200.0,"1":43200.0,"2":43200.0,"3":43200.0,"4":43200.0},"flatten_input_for_edge_prediction":"step0: stick to the budget; step1: buy things on sale when possible; step2: stay healthy and avoid accidents; step3: continue to work and get a paycheck; step4: avoid impulse purchases; step5: Carefully budget out expenses.; step6: Earn a surplus of income after expenditures.","flatten_input_for_script_generation":"You want to Earn a surplus of income after expenditures.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step3 -> step6; step4 -> step6; step2 -> step6; step1 -> step6; step5 -> step0; step5 -> step3; step5 -> step4; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: Carefully budget out expenses.; step1: buy things on sale when possible; step2: stick to the budget; step3: Earn a surplus of income after expenditures.; step4: continue to work and get a paycheck; step5: avoid impulse purchases; step6: stay healthy and avoid accidents; step0 -> step1; step0 -> step2; step0 -> step4; step0 -> step5; step0 -> step6; step2 -> step3; step4 -> step3; step5 -> step3; step6 -> step3; step1 -> step3","gold_edges_for_prediction":["0->6","1->6","2->6","3->6","4->6","5->0","5->3","5->4","5->2","5->1"],"reference_code":"class EarnASurplusOfIncomeAfterExpenditures:\n\n    title = \"Earn a surplus of income after expenditures.\"\n    steps = 7\n\n    def step0(self):\n        return \"Carefully budget out expenses.\"\n\n    def step1(self):\n        return \"buy things on sale when possible\"\n\n    def step2(self):\n        return \"stick to the budget\"\n\n    def step3(self):\n        return \"Earn a surplus of income after expenditures.\"\n\n    def step4(self):\n        return \"continue to work and get a paycheck\"\n\n    def step5(self):\n        return \"avoid impulse purchases\"\n\n    def step6(self):\n        return \"stay healthy and avoid accidents\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step4\",\n            \"step0 -> step5\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step5 -> step3\",\n            \"step6 -> step3\",\n            \"step1 -> step3\",\n        ]\n","input_prompt_code":"class EarnASurplusOfIncomeAfterExpenditures:\n\n    title = \"Earn a surplus of income after expenditures.\"\n    steps = 7\n\n","reference_graph":{"title":"Earn a surplus of income after expenditures.","num_steps":7,"schema":["step0: Carefully budget out expenses.","step1: buy things on sale when possible","step2: stick to the budget","step3: Earn a surplus of income after expenditures.","step4: continue to work and get a paycheck","step5: avoid impulse purchases","step6: stay healthy and avoid accidents"],"relations":["step0 -> step1","step0 -> step2","step0 -> step4","step0 -> step5","step0 -> step6","step2 -> step3","step4 -> step3","step5 -> step3","step6 -> step3","step1 -> step3"]}}
{"scenario":"get a person to perform wedding ceremony","events":{"0":"call around to find available wedding officiate","1":"schedule a date with wedding officiate","2":"discuss with partner what kind of wedding to have","3":"put a down payment to reserve the wedding officiant","4":"agree on type of religious officiate","5":"celebrate acceptance of wedding proposal","6":"ask person to get married","7":"get a person to perform wedding ceremony"},"context":"ask person to get married","minutes":15.0,"events_minutes":{"0":20.0,"1":10.0,"2":60.0,"3":15.0,"4":15.0,"5":60.0},"flatten_input_for_edge_prediction":"step0: call around to find available wedding officiate; step1: schedule a date with wedding officiate; step2: discuss with partner what kind of wedding to have; step3: put a down payment to reserve the wedding officiant; step4: agree on type of religious officiate; step5: celebrate acceptance of wedding proposal; step6: ask person to get married; step7: get a person to perform wedding ceremony","flatten_input_for_script_generation":"You want to get a person to perform wedding ceremony. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: ask person to get married; step1: celebrate acceptance of wedding proposal; step2: discuss with partner what kind of wedding to have; step3: agree on type of religious officiate; step4: call around to find available wedding officiate; step5: schedule a date with wedding officiate; step6: put a down payment to reserve the wedding officiant; step7: get a person to perform wedding ceremony; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->3","2->4","3->7","4->0","5->2","6->5"],"reference_code":"class GetAPersonToPerformWeddingCeremony:\n\n    title = \"get a person to perform wedding ceremony\"\n    steps = 8\n\n    def step0(self):\n        return \"ask person to get married\"\n\n    def step1(self):\n        return \"celebrate acceptance of wedding proposal\"\n\n    def step2(self):\n        return \"discuss with partner what kind of wedding to have\"\n\n    def step3(self):\n        return \"agree on type of religious officiate\"\n\n    def step4(self):\n        return \"call around to find available wedding officiate\"\n\n    def step5(self):\n        return \"schedule a date with wedding officiate\"\n\n    def step6(self):\n        return \"put a down payment to reserve the wedding officiant\"\n\n    def step7(self):\n        return \"get a person to perform wedding ceremony\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetAPersonToPerformWeddingCeremony:\n\n    title = \"get a person to perform wedding ceremony\"\n    steps = 8\n\n","reference_graph":{"title":"get a person to perform wedding ceremony","num_steps":8,"schema":["step0: ask person to get married","step1: celebrate acceptance of wedding proposal","step2: discuss with partner what kind of wedding to have","step3: agree on type of religious officiate","step4: call around to find available wedding officiate","step5: schedule a date with wedding officiate","step6: put a down payment to reserve the wedding officiant","step7: get a person to perform wedding ceremony"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"lock the door.","events":{"0":"walk towards the door","1":"close the door","2":"walk through the door","3":"grab the door knob","4":"turn the door knob","5":"push the door open","6":"insert key into the door's lock","7":"find the keys.","8":"lock the door."},"context":"find the keys.","minutes":1.0,"events_minutes":{"0":0.25,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.0333333333,"5":0.0333333333,"6":0.0333333333},"flatten_input_for_edge_prediction":"step0: walk towards the door; step1: close the door; step2: walk through the door; step3: grab the door knob; step4: turn the door knob; step5: push the door open; step6: insert key into the door's lock; step7: find the keys.; step8: lock the door.","flatten_input_for_script_generation":"You want to lock the door.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step5; step5 -> step2; step2 -> step1; step1 -> step6; step6 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: find the keys.; step1: walk towards the door; step2: grab the door knob; step3: turn the door knob; step4: push the door open; step5: walk through the door; step6: close the door; step7: insert key into the door's lock; step8: lock the door.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->5","5->2","6->8","7->0"],"reference_code":"class LockTheDoor:\n\n    title = \"lock the door.\"\n    steps = 9\n\n    def step0(self):\n        return \"find the keys.\"\n\n    def step1(self):\n        return \"walk towards the door\"\n\n    def step2(self):\n        return \"grab the door knob\"\n\n    def step3(self):\n        return \"turn the door knob\"\n\n    def step4(self):\n        return \"push the door open\"\n\n    def step5(self):\n        return \"walk through the door\"\n\n    def step6(self):\n        return \"close the door\"\n\n    def step7(self):\n        return \"insert key into the door's lock\"\n\n    def step8(self):\n        return \"lock the door.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class LockTheDoor:\n\n    title = \"lock the door.\"\n    steps = 9\n\n","reference_graph":{"title":"lock the door.","num_steps":9,"schema":["step0: find the keys.","step1: walk towards the door","step2: grab the door knob","step3: turn the door knob","step4: push the door open","step5: walk through the door","step6: close the door","step7: insert key into the door's lock","step8: lock the door."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get out of the car, lock the doors","events":{"0":"switch off the engine","1":"take off seatbelt","2":"open the door","3":"put car in park","4":"take keys out","5":"park the car in the parking lot","6":"get out of the car, lock the doors"},"context":"park the car in the parking lot","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.05,"2":0.0333333333,"3":0.0333333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: switch off the engine; step1: take off seatbelt; step2: open the door; step3: put car in park; step4: take keys out; step5: park the car in the parking lot; step6: get out of the car, lock the doors","flatten_input_for_script_generation":"You want to get out of the car, lock the doors. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step0 -> step1; step4 -> step2; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: park the car in the parking lot; step1: put car in park; step2: switch off the engine; step3: take keys out; step4: take off seatbelt; step5: open the door; step6: get out of the car, lock the doors; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","0->1","1->2","2->6","3->0","4->2","5->3"],"reference_code":"class GetOutOfTheCarLockTheDoors:\n\n    title = \"get out of the car, lock the doors\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car in the parking lot\"\n\n    def step1(self):\n        return \"put car in park\"\n\n    def step2(self):\n        return \"switch off the engine\"\n\n    def step3(self):\n        return \"take keys out\"\n\n    def step4(self):\n        return \"take off seatbelt\"\n\n    def step5(self):\n        return \"open the door\"\n\n    def step6(self):\n        return \"get out of the car, lock the doors\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfTheCarLockTheDoors:\n\n    title = \"get out of the car, lock the doors\"\n    steps = 7\n\n","reference_graph":{"title":"get out of the car, lock the doors","num_steps":7,"schema":["step0: park the car in the parking lot","step1: put car in park","step2: switch off the engine","step3: take keys out","step4: take off seatbelt","step5: open the door","step6: get out of the car, lock the doors"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"begin by calling first person on list","events":{"0":"dial number off list","1":"wait for answer","2":"locate a phone","3":"double check list","4":"press call button","5":"make a list","6":"begin by calling first person on list"},"context":"make a list","minutes":5.0,"events_minutes":{"0":0.1333333333,"1":0.1666666667,"2":0.1666666667,"3":0.3333333333,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: dial number off list; step1: wait for answer; step2: locate a phone; step3: double check list; step4: press call button; step5: make a list; step6: begin by calling first person on list","flatten_input_for_script_generation":"You want to begin by calling first person on list. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: make a list; step1: locate a phone; step2: double check list; step3: dial number off list; step4: press call button; step5: wait for answer; step6: begin by calling first person on list; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->0","4->1","5->3","5->2"],"reference_code":"class BeginByCallingFirstPersonOnList:\n\n    title = \"begin by calling first person on list\"\n    steps = 7\n\n    def step0(self):\n        return \"make a list\"\n\n    def step1(self):\n        return \"locate a phone\"\n\n    def step2(self):\n        return \"double check list\"\n\n    def step3(self):\n        return \"dial number off list\"\n\n    def step4(self):\n        return \"press call button\"\n\n    def step5(self):\n        return \"wait for answer\"\n\n    def step6(self):\n        return \"begin by calling first person on list\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BeginByCallingFirstPersonOnList:\n\n    title = \"begin by calling first person on list\"\n    steps = 7\n\n","reference_graph":{"title":"begin by calling first person on list","num_steps":7,"schema":["step0: make a list","step1: locate a phone","step2: double check list","step3: dial number off list","step4: press call button","step5: wait for answer","step6: begin by calling first person on list"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab the wallet","events":{"0":"find wallet in freezer","1":"realize wallet cannot be found in usual spots","2":"check the purse","3":"check the freezer","4":"look for wallet","5":"get dressed for the day","6":"grab the wallet"},"context":"get dressed for the day","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.1666666667,"2":0.1666666667,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: find wallet in freezer; step1: realize wallet cannot be found in usual spots; step2: check the purse; step3: check the freezer; step4: look for wallet; step5: get dressed for the day; step6: grab the wallet","flatten_input_for_script_generation":"You want to grab the wallet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step1 -> step3; step2 -> step1; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get dressed for the day; step1: look for wallet; step2: check the purse; step3: realize wallet cannot be found in usual spots; step4: check the freezer; step5: find wallet in freezer; step6: grab the wallet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->0","4->2","5->4"],"reference_code":"class GrabTheWallet:\n\n    title = \"grab the wallet\"\n    steps = 7\n\n    def step0(self):\n        return \"get dressed for the day\"\n\n    def step1(self):\n        return \"look for wallet\"\n\n    def step2(self):\n        return \"check the purse\"\n\n    def step3(self):\n        return \"realize wallet cannot be found in usual spots\"\n\n    def step4(self):\n        return \"check the freezer\"\n\n    def step5(self):\n        return \"find wallet in freezer\"\n\n    def step6(self):\n        return \"grab the wallet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabTheWallet:\n\n    title = \"grab the wallet\"\n    steps = 7\n\n","reference_graph":{"title":"grab the wallet","num_steps":7,"schema":["step0: get dressed for the day","step1: look for wallet","step2: check the purse","step3: realize wallet cannot be found in usual spots","step4: check the freezer","step5: find wallet in freezer","step6: grab the wallet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put the car in park, turn off","events":{"0":"grip onto shift handle","1":"put hand on shift handle","2":"push handle into park","3":"grab onto the keys","4":"turn the keys to off and remove","5":"line up car in space","6":"put the car in park, turn off"},"context":"line up car in space","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0333333333,"2":0.0333333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grip onto shift handle; step1: put hand on shift handle; step2: push handle into park; step3: grab onto the keys; step4: turn the keys to off and remove; step5: line up car in space; step6: put the car in park, turn off","flatten_input_for_script_generation":"You want to put the car in park, turn off. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: line up car in space; step1: put hand on shift handle; step2: grip onto shift handle; step3: push handle into park; step4: grab onto the keys; step5: turn the keys to off and remove; step6: put the car in park, turn off; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->4","4->6","5->1"],"reference_code":"class PutTheCarInParkTurnOff:\n\n    title = \"put the car in park, turn off\"\n    steps = 7\n\n    def step0(self):\n        return \"line up car in space\"\n\n    def step1(self):\n        return \"put hand on shift handle\"\n\n    def step2(self):\n        return \"grip onto shift handle\"\n\n    def step3(self):\n        return \"push handle into park\"\n\n    def step4(self):\n        return \"grab onto the keys\"\n\n    def step5(self):\n        return \"turn the keys to off and remove\"\n\n    def step6(self):\n        return \"put the car in park, turn off\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutTheCarInParkTurnOff:\n\n    title = \"put the car in park, turn off\"\n    steps = 7\n\n","reference_graph":{"title":"put the car in park, turn off","num_steps":7,"schema":["step0: line up car in space","step1: put hand on shift handle","step2: grip onto shift handle","step3: push handle into park","step4: grab onto the keys","step5: turn the keys to off and remove","step6: put the car in park, turn off"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch news channel","events":{"0":"turn on tv","1":"sit down on couch","2":"walk towards living room","3":"grab the remote","4":"search for news channel","5":"find remote control","6":"NONE","7":"watch news channel"},"context":"NONE","minutes":10.0,"events_minutes":{"0":0.05,"1":0.0833333333,"2":0.3333333333,"3":0.05,"4":0.5,"5":0.5},"flatten_input_for_edge_prediction":"step0: turn on tv; step1: sit down on couch; step2: walk towards living room; step3: grab the remote; step4: search for news channel; step5: find remote control; step6: decided to watch news channel; step7: watch news channel","flatten_input_for_script_generation":"You want to watch news channel. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step5; step5 -> step3; step3 -> step0; step0 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: decided to watch news channel; step1: walk towards living room; step2: sit down on couch; step3: find remote control; step4: grab the remote; step5: turn on tv; step6: search for news channel; step7: watch news channel; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->5","2->1","3->0","4->7","5->3","6->2"],"reference_code":"class WatchNewsChannel:\n\n    title = \"watch news channel\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to watch news channel\"\n\n    def step1(self):\n        return \"walk towards living room\"\n\n    def step2(self):\n        return \"sit down on couch\"\n\n    def step3(self):\n        return \"find remote control\"\n\n    def step4(self):\n        return \"grab the remote\"\n\n    def step5(self):\n        return \"turn on tv\"\n\n    def step6(self):\n        return \"search for news channel\"\n\n    def step7(self):\n        return \"watch news channel\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WatchNewsChannel:\n\n    title = \"watch news channel\"\n    steps = 8\n\n","reference_graph":{"title":"watch news channel","num_steps":8,"schema":["step0: decided to watch news channel","step1: walk towards living room","step2: sit down on couch","step3: find remote control","step4: grab the remote","step5: turn on tv","step6: search for news channel","step7: watch news channel"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"grease the pan","events":{"0":"spread a thin layer of oil on the pan","1":"set the pan on the kitchen counter","2":"grab a pan out of the cabinet","3":"open the kitchen cabinet","4":"grab a bottle of cooking oil","5":"mix with the mixer","6":"grease the pan"},"context":"mix with the mixer","minutes":1.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":0.25,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: spread a thin layer of oil on the pan; step1: set the pan on the kitchen counter; step2: grab a pan out of the cabinet; step3: open the kitchen cabinet; step4: grab a bottle of cooking oil; step5: mix with the mixer; step6: grease the pan","flatten_input_for_script_generation":"You want to grease the pan. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: mix with the mixer; step1: open the kitchen cabinet; step2: grab a pan out of the cabinet; step3: set the pan on the kitchen counter; step4: grab a bottle of cooking oil; step5: spread a thin layer of oil on the pan; step6: grease the pan; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->2","4->0","5->3"],"reference_code":"class GreaseThePan:\n\n    title = \"grease the pan\"\n    steps = 7\n\n    def step0(self):\n        return \"mix with the mixer\"\n\n    def step1(self):\n        return \"open the kitchen cabinet\"\n\n    def step2(self):\n        return \"grab a pan out of the cabinet\"\n\n    def step3(self):\n        return \"set the pan on the kitchen counter\"\n\n    def step4(self):\n        return \"grab a bottle of cooking oil\"\n\n    def step5(self):\n        return \"spread a thin layer of oil on the pan\"\n\n    def step6(self):\n        return \"grease the pan\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GreaseThePan:\n\n    title = \"grease the pan\"\n    steps = 7\n\n","reference_graph":{"title":"grease the pan","num_steps":7,"schema":["step0: mix with the mixer","step1: open the kitchen cabinet","step2: grab a pan out of the cabinet","step3: set the pan on the kitchen counter","step4: grab a bottle of cooking oil","step5: spread a thin layer of oil on the pan","step6: grease the pan"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"narrow down choice","events":{"0":"decide best matches","1":"match lipsticks to criteria","2":"remember the criteria","3":"open list of lipsticks","4":"decide on criteria","5":"navigate to other lipsticks","6":"narrow down choice"},"context":"navigate to other lipsticks","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: decide best matches; step1: match lipsticks to criteria; step2: remember the criteria; step3: open list of lipsticks; step4: decide on criteria; step5: navigate to other lipsticks; step6: narrow down choice","flatten_input_for_script_generation":"You want to narrow down choice. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step2 -> step4; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: navigate to other lipsticks; step1: remember the criteria; step2: decide on criteria; step3: match lipsticks to criteria; step4: decide best matches; step5: open list of lipsticks; step6: narrow down choice; step0 -> step1; step0 -> step5; step2 -> step3; step3 -> step4; step1 -> step2; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->1","5->3","5->2"],"reference_code":"class NarrowDownChoice:\n\n    title = \"narrow down choice\"\n    steps = 7\n\n    def step0(self):\n        return \"navigate to other lipsticks\"\n\n    def step1(self):\n        return \"remember the criteria\"\n\n    def step2(self):\n        return \"decide on criteria\"\n\n    def step3(self):\n        return \"match lipsticks to criteria\"\n\n    def step4(self):\n        return \"decide best matches\"\n\n    def step5(self):\n        return \"open list of lipsticks\"\n\n    def step6(self):\n        return \"narrow down choice\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class NarrowDownChoice:\n\n    title = \"narrow down choice\"\n    steps = 7\n\n","reference_graph":{"title":"narrow down choice","num_steps":7,"schema":["step0: navigate to other lipsticks","step1: remember the criteria","step2: decide on criteria","step3: match lipsticks to criteria","step4: decide best matches","step5: open list of lipsticks","step6: narrow down choice"],"relations":["step0 -> step1","step0 -> step5","step2 -> step3","step3 -> step4","step1 -> step2","step5 -> step3","step4 -> step6"]}}
{"scenario":"park the car in the parking lot","events":{"0":"turn the car ignition off","1":"turn on signal to turn into parking spot","2":"drive around looking for a parking spot","3":"put car in park","4":"pull into parking spot","5":"Go to the theater","6":"park the car in the parking lot"},"context":"Go to the theater","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":2.0,"3":0.1666666667,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: turn the car ignition off; step1: turn on signal to turn into parking spot; step2: drive around looking for a parking spot; step3: put car in park; step4: pull into parking spot; step5: Go to the theater; step6: park the car in the parking lot","flatten_input_for_script_generation":"You want to park the car in the parking lot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Go to the theater; step1: drive around looking for a parking spot; step2: turn on signal to turn into parking spot; step3: pull into parking spot; step4: put car in park; step5: turn the car ignition off; step6: park the car in the parking lot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->1","3->0","4->3","5->2"],"reference_code":"class ParkTheCarInTheParkingLot:\n\n    title = \"park the car in the parking lot\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the theater\"\n\n    def step1(self):\n        return \"drive around looking for a parking spot\"\n\n    def step2(self):\n        return \"turn on signal to turn into parking spot\"\n\n    def step3(self):\n        return \"pull into parking spot\"\n\n    def step4(self):\n        return \"put car in park\"\n\n    def step5(self):\n        return \"turn the car ignition off\"\n\n    def step6(self):\n        return \"park the car in the parking lot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCarInTheParkingLot:\n\n    title = \"park the car in the parking lot\"\n    steps = 7\n\n","reference_graph":{"title":"park the car in the parking lot","num_steps":7,"schema":["step0: Go to the theater","step1: drive around looking for a parking spot","step2: turn on signal to turn into parking spot","step3: pull into parking spot","step4: put car in park","step5: turn the car ignition off","step6: park the car in the parking lot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"have bowl for cut ingredients","events":{"0":"Move toward where work is to be done","1":"Find the location of desired bowl","2":"Grab the bowl firmly","3":"Set the bowl down","4":"Walk toward the bowls location","5":"get out ingredients","6":"have bowl for cut ingredients"},"context":"get out ingredients","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Move toward where work is to be done; step1: Find the location of desired bowl; step2: Grab the bowl firmly; step3: Set the bowl down; step4: Walk toward the bowls location; step5: get out ingredients; step6: have bowl for cut ingredients","flatten_input_for_script_generation":"You want to have bowl for cut ingredients. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get out ingredients; step1: Find the location of desired bowl; step2: Walk toward the bowls location; step3: Grab the bowl firmly; step4: Move toward where work is to be done; step5: Set the bowl down; step6: have bowl for cut ingredients; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class HaveBowlForCutIngredients:\n\n    title = \"have bowl for cut ingredients\"\n    steps = 7\n\n    def step0(self):\n        return \"get out ingredients\"\n\n    def step1(self):\n        return \"Find the location of desired bowl\"\n\n    def step2(self):\n        return \"Walk toward the bowls location\"\n\n    def step3(self):\n        return \"Grab the bowl firmly\"\n\n    def step4(self):\n        return \"Move toward where work is to be done\"\n\n    def step5(self):\n        return \"Set the bowl down\"\n\n    def step6(self):\n        return \"have bowl for cut ingredients\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveBowlForCutIngredients:\n\n    title = \"have bowl for cut ingredients\"\n    steps = 7\n\n","reference_graph":{"title":"have bowl for cut ingredients","num_steps":7,"schema":["step0: get out ingredients","step1: Find the location of desired bowl","step2: Walk toward the bowls location","step3: Grab the bowl firmly","step4: Move toward where work is to be done","step5: Set the bowl down","step6: have bowl for cut ingredients"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make a list of ingredients.","events":{"0":"add the amount of each ingredient needed","1":"look in pantry to see if ingredients already there","2":"cross off ingredients already owned","3":"grab a pen","4":"grab a piece of paper","5":"go through list of ingredients and write each one down","6":"FIND A NEW RECIEPE","7":"Make a list of ingredients."},"context":"FIND A NEW RECIEPE","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":1.0,"2":0.5,"3":0.0833333333,"4":0.0833333333,"5":2.0},"flatten_input_for_edge_prediction":"step0: add the amount of each ingredient needed; step1: look in pantry to see if ingredients already there; step2: cross off ingredients already owned; step3: grab a pen; step4: grab a piece of paper; step5: go through list of ingredients and write each one down; step6: FIND A NEW RECIEPE; step7: Make a list of ingredients.","flatten_input_for_script_generation":"You want to Make a list of ingredients.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step4 -> step5; step5 -> step0; step0 -> step1; step1 -> step2; step2 -> step7; step6 -> step3; step6 -> step4","flatten_output_for_script_generation":"step0: FIND A NEW RECIEPE; step1: grab a piece of paper; step2: grab a pen; step3: go through list of ingredients and write each one down; step4: add the amount of each ingredient needed; step5: look in pantry to see if ingredients already there; step6: cross off ingredients already owned; step7: Make a list of ingredients.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->7","3->5","4->5","5->0","6->3","6->4"],"reference_code":"class MakeAListOfIngredients:\n\n    title = \"Make a list of ingredients.\"\n    steps = 8\n\n    def step0(self):\n        return \"FIND A NEW RECIEPE\"\n\n    def step1(self):\n        return \"grab a piece of paper\"\n\n    def step2(self):\n        return \"grab a pen\"\n\n    def step3(self):\n        return \"go through list of ingredients and write each one down\"\n\n    def step4(self):\n        return \"add the amount of each ingredient needed\"\n\n    def step5(self):\n        return \"look in pantry to see if ingredients already there\"\n\n    def step6(self):\n        return \"cross off ingredients already owned\"\n\n    def step7(self):\n        return \"Make a list of ingredients.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MakeAListOfIngredients:\n\n    title = \"Make a list of ingredients.\"\n    steps = 8\n\n","reference_graph":{"title":"Make a list of ingredients.","num_steps":8,"schema":["step0: FIND A NEW RECIEPE","step1: grab a piece of paper","step2: grab a pen","step3: go through list of ingredients and write each one down","step4: add the amount of each ingredient needed","step5: look in pantry to see if ingredients already there","step6: cross off ingredients already owned","step7: Make a list of ingredients."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"pull up protective pants and button","events":{"0":"operate the buttons","1":"grab pants and orient","2":"locate the pants","3":"slide legs into pants","4":"adjust pant position","5":"put on protective undergarments","6":"pull up protective pants and button"},"context":"put on protective undergarments","minutes":1.0,"events_minutes":{"0":0.25,"1":0.0833333333,"2":0.1666666667,"3":0.25,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: operate the buttons; step1: grab pants and orient; step2: locate the pants; step3: slide legs into pants; step4: adjust pant position; step5: put on protective undergarments; step6: pull up protective pants and button","flatten_input_for_script_generation":"You want to pull up protective pants and button. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: put on protective undergarments; step1: locate the pants; step2: grab pants and orient; step3: slide legs into pants; step4: adjust pant position; step5: operate the buttons; step6: pull up protective pants and button; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->4","4->0","5->2"],"reference_code":"class PullUpProtectivePantsAndButton:\n\n    title = \"pull up protective pants and button\"\n    steps = 7\n\n    def step0(self):\n        return \"put on protective undergarments\"\n\n    def step1(self):\n        return \"locate the pants\"\n\n    def step2(self):\n        return \"grab pants and orient\"\n\n    def step3(self):\n        return \"slide legs into pants\"\n\n    def step4(self):\n        return \"adjust pant position\"\n\n    def step5(self):\n        return \"operate the buttons\"\n\n    def step6(self):\n        return \"pull up protective pants and button\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullUpProtectivePantsAndButton:\n\n    title = \"pull up protective pants and button\"\n    steps = 7\n\n","reference_graph":{"title":"pull up protective pants and button","num_steps":7,"schema":["step0: put on protective undergarments","step1: locate the pants","step2: grab pants and orient","step3: slide legs into pants","step4: adjust pant position","step5: operate the buttons","step6: pull up protective pants and button"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put dark colors separate.","events":{"0":"decide if item is dark or light","1":"place light items in a different pile","2":"place dark items in one pile","3":"look at the item","4":"pick up each clothing item","5":"sort the clothes","6":"Put dark colors separate."},"context":"sort the clothes","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: decide if item is dark or light; step1: place light items in a different pile; step2: place dark items in one pile; step3: look at the item; step4: pick up each clothing item; step5: sort the clothes; step6: Put dark colors separate.","flatten_input_for_script_generation":"You want to Put dark colors separate.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step2; step0 -> step1; step2 -> step6; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: sort the clothes; step1: pick up each clothing item; step2: look at the item; step3: decide if item is dark or light; step4: place dark items in one pile; step5: place light items in a different pile; step6: Put dark colors separate.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","0->1","1->6","2->6","3->0","4->3","5->4"],"reference_code":"class PutDarkColorsSeparate:\n\n    title = \"Put dark colors separate.\"\n    steps = 7\n\n    def step0(self):\n        return \"sort the clothes\"\n\n    def step1(self):\n        return \"pick up each clothing item\"\n\n    def step2(self):\n        return \"look at the item\"\n\n    def step3(self):\n        return \"decide if item is dark or light\"\n\n    def step4(self):\n        return \"place dark items in one pile\"\n\n    def step5(self):\n        return \"place light items in a different pile\"\n\n    def step6(self):\n        return \"Put dark colors separate.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutDarkColorsSeparate:\n\n    title = \"Put dark colors separate.\"\n    steps = 7\n\n","reference_graph":{"title":"Put dark colors separate.","num_steps":7,"schema":["step0: sort the clothes","step1: pick up each clothing item","step2: look at the item","step3: decide if item is dark or light","step4: place dark items in one pile","step5: place light items in a different pile","step6: Put dark colors separate."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"gather needed documents","events":{"0":"create a folder labeled financial aid","1":"locate W-2 in the house","2":"place all documents into the financial aid folder","3":"look in filing cabinet for documents","4":"make copies of bank statements","5":"get a copy of social security card","6":"research what documents are needed","7":"gather needed documents"},"context":"research what documents are needed","minutes":10.0,"events_minutes":{"0":2.0,"1":5.0,"2":5.0,"3":10.0,"4":5.0,"5":10.0},"flatten_input_for_edge_prediction":"step0: create a folder labeled financial aid; step1: locate W-2 in the house; step2: place all documents into the financial aid folder; step3: look in filing cabinet for documents; step4: make copies of bank statements; step5: get a copy of social security card; step6: research what documents are needed; step7: gather needed documents","flatten_input_for_script_generation":"You want to gather needed documents. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step4; step1 -> step5; step4 -> step0; step0 -> step2; step2 -> step7; step6 -> step3; step6 -> step1","flatten_output_for_script_generation":"step0: research what documents are needed; step1: locate W-2 in the house; step2: look in filing cabinet for documents; step3: get a copy of social security card; step4: make copies of bank statements; step5: create a folder labeled financial aid; step6: place all documents into the financial aid folder; step7: gather needed documents; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->5","2->7","3->5","4->0","5->4","6->3","6->1"],"reference_code":"class GatherNeededDocuments:\n\n    title = \"gather needed documents\"\n    steps = 8\n\n    def step0(self):\n        return \"research what documents are needed\"\n\n    def step1(self):\n        return \"locate W-2 in the house\"\n\n    def step2(self):\n        return \"look in filing cabinet for documents\"\n\n    def step3(self):\n        return \"get a copy of social security card\"\n\n    def step4(self):\n        return \"make copies of bank statements\"\n\n    def step5(self):\n        return \"create a folder labeled financial aid\"\n\n    def step6(self):\n        return \"place all documents into the financial aid folder\"\n\n    def step7(self):\n        return \"gather needed documents\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GatherNeededDocuments:\n\n    title = \"gather needed documents\"\n    steps = 8\n\n","reference_graph":{"title":"gather needed documents","num_steps":8,"schema":["step0: research what documents are needed","step1: locate W-2 in the house","step2: look in filing cabinet for documents","step3: get a copy of social security card","step4: make copies of bank statements","step5: create a folder labeled financial aid","step6: place all documents into the financial aid folder","step7: gather needed documents"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step5 -> step6","step6 -> step7"]}}
{"scenario":"put on special shoes for game","events":{"0":"find the shoes","1":"put right shoe on","2":"look for shoes","3":"walk towards shoes","4":"put left shoe on","5":"pull over protective vest and secure","6":"put on special shoes for game"},"context":"pull over protective vest and secure","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the shoes; step1: put right shoe on; step2: look for shoes; step3: walk towards shoes; step4: put left shoe on; step5: pull over protective vest and secure; step6: put on special shoes for game","flatten_input_for_script_generation":"You want to put on special shoes for game. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step3 -> step4; step4 -> step6; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: pull over protective vest and secure; step1: look for shoes; step2: find the shoes; step3: walk towards shoes; step4: put right shoe on; step5: put left shoe on; step6: put on special shoes for game; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","3->4","4->6","5->2"],"reference_code":"class PutOnSpecialShoesForGame:\n\n    title = \"put on special shoes for game\"\n    steps = 7\n\n    def step0(self):\n        return \"pull over protective vest and secure\"\n\n    def step1(self):\n        return \"look for shoes\"\n\n    def step2(self):\n        return \"find the shoes\"\n\n    def step3(self):\n        return \"walk towards shoes\"\n\n    def step4(self):\n        return \"put right shoe on\"\n\n    def step5(self):\n        return \"put left shoe on\"\n\n    def step6(self):\n        return \"put on special shoes for game\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnSpecialShoesForGame:\n\n    title = \"put on special shoes for game\"\n    steps = 7\n\n","reference_graph":{"title":"put on special shoes for game","num_steps":7,"schema":["step0: pull over protective vest and secure","step1: look for shoes","step2: find the shoes","step3: walk towards shoes","step4: put right shoe on","step5: put left shoe on","step6: put on special shoes for game"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"buy time travel parts","events":{"0":"put item into cart","1":"push the cart around","2":"browse through the aisles","3":"checkout at the register","4":"grab item from shelf","5":"go to parts store","6":"buy time travel parts"},"context":"go to parts store","minutes":60.0,"events_minutes":{"0":0.0333333333,"1":10.0,"2":10.0,"3":2.0,"4":0.05},"flatten_input_for_edge_prediction":"step0: put item into cart; step1: push the cart around; step2: browse through the aisles; step3: checkout at the register; step4: grab item from shelf; step5: go to parts store; step6: buy time travel parts","flatten_input_for_script_generation":"You want to buy time travel parts. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step0; step0 -> step3; step1 -> step2; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go to parts store; step1: push the cart around; step2: browse through the aisles; step3: grab item from shelf; step4: put item into cart; step5: checkout at the register; step6: buy time travel parts; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->3","1->2","2->4","3->6","4->0","5->1"],"reference_code":"class BuyTimeTravelParts:\n\n    title = \"buy time travel parts\"\n    steps = 7\n\n    def step0(self):\n        return \"go to parts store\"\n\n    def step1(self):\n        return \"push the cart around\"\n\n    def step2(self):\n        return \"browse through the aisles\"\n\n    def step3(self):\n        return \"grab item from shelf\"\n\n    def step4(self):\n        return \"put item into cart\"\n\n    def step5(self):\n        return \"checkout at the register\"\n\n    def step6(self):\n        return \"buy time travel parts\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class BuyTimeTravelParts:\n\n    title = \"buy time travel parts\"\n    steps = 7\n\n","reference_graph":{"title":"buy time travel parts","num_steps":7,"schema":["step0: go to parts store","step1: push the cart around","step2: browse through the aisles","step3: grab item from shelf","step4: put item into cart","step5: checkout at the register","step6: buy time travel parts"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"pick out an outfit","events":{"0":"remove from the closet","1":"browse through the clothes","2":"grab onto the clothing pieces","3":"place clothing elsewhere","4":"open the closet","5":"take a shower","6":"pick out an outfit"},"context":"take a shower","minutes":3.0,"events_minutes":{"0":0.1666666667,"1":2.0,"2":0.0833333333,"3":0.3666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: remove from the closet; step1: browse through the clothes; step2: grab onto the clothing pieces; step3: place clothing elsewhere; step4: open the closet; step5: take a shower; step6: pick out an outfit","flatten_input_for_script_generation":"You want to pick out an outfit. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: take a shower; step1: open the closet; step2: browse through the clothes; step3: grab onto the clothing pieces; step4: remove from the closet; step5: place clothing elsewhere; step6: pick out an outfit; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->6","4->1","5->4"],"reference_code":"class PickOutAnOutfit:\n\n    title = \"pick out an outfit\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"open the closet\"\n\n    def step2(self):\n        return \"browse through the clothes\"\n\n    def step3(self):\n        return \"grab onto the clothing pieces\"\n\n    def step4(self):\n        return \"remove from the closet\"\n\n    def step5(self):\n        return \"place clothing elsewhere\"\n\n    def step6(self):\n        return \"pick out an outfit\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickOutAnOutfit:\n\n    title = \"pick out an outfit\"\n    steps = 7\n\n","reference_graph":{"title":"pick out an outfit","num_steps":7,"schema":["step0: take a shower","step1: open the closet","step2: browse through the clothes","step3: grab onto the clothing pieces","step4: remove from the closet","step5: place clothing elsewhere","step6: pick out an outfit"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sign the waver","events":{"0":"hit enter key","1":"sign inside spot","2":"click on signature spot","3":"look for signature spot","4":"find signature spot","5":"agree on the terms of the waver","6":"sign the waver"},"context":"agree on the terms of the waver","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: hit enter key; step1: sign inside spot; step2: click on signature spot; step3: look for signature spot; step4: find signature spot; step5: agree on the terms of the waver; step6: sign the waver","flatten_input_for_script_generation":"You want to sign the waver. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: agree on the terms of the waver; step1: look for signature spot; step2: find signature spot; step3: click on signature spot; step4: sign inside spot; step5: hit enter key; step6: sign the waver; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->4","4->2","5->3"],"reference_code":"class SignTheWaver:\n\n    title = \"sign the waver\"\n    steps = 7\n\n    def step0(self):\n        return \"agree on the terms of the waver\"\n\n    def step1(self):\n        return \"look for signature spot\"\n\n    def step2(self):\n        return \"find signature spot\"\n\n    def step3(self):\n        return \"click on signature spot\"\n\n    def step4(self):\n        return \"sign inside spot\"\n\n    def step5(self):\n        return \"hit enter key\"\n\n    def step6(self):\n        return \"sign the waver\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SignTheWaver:\n\n    title = \"sign the waver\"\n    steps = 7\n\n","reference_graph":{"title":"sign the waver","num_steps":7,"schema":["step0: agree on the terms of the waver","step1: look for signature spot","step2: find signature spot","step3: click on signature spot","step4: sign inside spot","step5: hit enter key","step6: sign the waver"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"remove from pan","events":{"0":"stick spatula onto baking pan","1":"scoop item out of the baking pan","2":"grab a spatula or other tool","3":"open the drawer","4":"place item onto a plate","5":"let baking pan rest on counter","6":"remove from pan"},"context":"let baking pan rest on counter","minutes":1.0,"events_minutes":{"0":0.05,"1":0.25,"2":0.0333333333,"3":0.0833333333,"4":0.0666666667},"flatten_input_for_edge_prediction":"step0: stick spatula onto baking pan; step1: scoop item out of the baking pan; step2: grab a spatula or other tool; step3: open the drawer; step4: place item onto a plate; step5: let baking pan rest on counter; step6: remove from pan","flatten_input_for_script_generation":"You want to remove from pan. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: let baking pan rest on counter; step1: open the drawer; step2: grab a spatula or other tool; step3: stick spatula onto baking pan; step4: scoop item out of the baking pan; step5: place item onto a plate; step6: remove from pan; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class RemoveFromPan:\n\n    title = \"remove from pan\"\n    steps = 7\n\n    def step0(self):\n        return \"let baking pan rest on counter\"\n\n    def step1(self):\n        return \"open the drawer\"\n\n    def step2(self):\n        return \"grab a spatula or other tool\"\n\n    def step3(self):\n        return \"stick spatula onto baking pan\"\n\n    def step4(self):\n        return \"scoop item out of the baking pan\"\n\n    def step5(self):\n        return \"place item onto a plate\"\n\n    def step6(self):\n        return \"remove from pan\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RemoveFromPan:\n\n    title = \"remove from pan\"\n    steps = 7\n\n","reference_graph":{"title":"remove from pan","num_steps":7,"schema":["step0: let baking pan rest on counter","step1: open the drawer","step2: grab a spatula or other tool","step3: stick spatula onto baking pan","step4: scoop item out of the baking pan","step5: place item onto a plate","step6: remove from pan"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"work on project","events":{"0":"dip paintbrush into another paint","1":"paint on the canvas","2":"dip paintbrush in water","3":"pick up paintbrush","4":"dip paintbrush in paint","5":"sit in chair","6":"work on project"},"context":"sit in chair","minutes":60.0,"events_minutes":{"0":0.0833333333,"1":10.0,"2":0.0833333333,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: dip paintbrush into another paint; step1: paint on the canvas; step2: dip paintbrush in water; step3: pick up paintbrush; step4: dip paintbrush in paint; step5: sit in chair; step6: work on project","flatten_input_for_script_generation":"You want to work on project. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: sit in chair; step1: pick up paintbrush; step2: dip paintbrush in paint; step3: paint on the canvas; step4: dip paintbrush in water; step5: dip paintbrush into another paint; step6: work on project; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->4","4->1","5->3"],"reference_code":"class WorkOnProject:\n\n    title = \"work on project\"\n    steps = 7\n\n    def step0(self):\n        return \"sit in chair\"\n\n    def step1(self):\n        return \"pick up paintbrush\"\n\n    def step2(self):\n        return \"dip paintbrush in paint\"\n\n    def step3(self):\n        return \"paint on the canvas\"\n\n    def step4(self):\n        return \"dip paintbrush in water\"\n\n    def step5(self):\n        return \"dip paintbrush into another paint\"\n\n    def step6(self):\n        return \"work on project\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WorkOnProject:\n\n    title = \"work on project\"\n    steps = 7\n\n","reference_graph":{"title":"work on project","num_steps":7,"schema":["step0: sit in chair","step1: pick up paintbrush","step2: dip paintbrush in paint","step3: paint on the canvas","step4: dip paintbrush in water","step5: dip paintbrush into another paint","step6: work on project"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get called up to barber chair","events":{"0":"play with phone","1":"look at barber cutting hair","2":"grab a magazine","3":"look through magazine","4":"look at time","5":"take seat and wait for barber","6":"get called up to barber chair"},"context":"take seat and wait for barber","minutes":3.0,"events_minutes":{"0":15.0,"1":10.0,"2":0.0333333333,"3":5.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: play with phone; step1: look at barber cutting hair; step2: grab a magazine; step3: look through magazine; step4: look at time; step5: take seat and wait for barber; step6: get called up to barber chair","flatten_input_for_script_generation":"You want to get called up to barber chair. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step6; step1 -> step6; step0 -> step4; step4 -> step6; step5 -> step2; step5 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: take seat and wait for barber; step1: play with phone; step2: grab a magazine; step3: look through magazine; step4: get called up to barber chair; step5: look at barber cutting hair; step6: look at time; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step4; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->4","1->6","2->3","3->6","4->6","5->2","5->1","5->0"],"reference_code":"class GetCalledUpToBarberChair:\n\n    title = \"get called up to barber chair\"\n    steps = 7\n\n    def step0(self):\n        return \"take seat and wait for barber\"\n\n    def step1(self):\n        return \"play with phone\"\n\n    def step2(self):\n        return \"grab a magazine\"\n\n    def step3(self):\n        return \"look through magazine\"\n\n    def step4(self):\n        return \"get called up to barber chair\"\n\n    def step5(self):\n        return \"look at barber cutting hair\"\n\n    def step6(self):\n        return \"look at time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step4\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class GetCalledUpToBarberChair:\n\n    title = \"get called up to barber chair\"\n    steps = 7\n\n","reference_graph":{"title":"get called up to barber chair","num_steps":7,"schema":["step0: take seat and wait for barber","step1: play with phone","step2: grab a magazine","step3: look through magazine","step4: get called up to barber chair","step5: look at barber cutting hair","step6: look at time"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step4","step1 -> step6","step6 -> step4"]}}
{"scenario":"get cooling rack out of cabinet","events":{"0":"find the cabinet","1":"open the cabinet","2":"look for cooling rack","3":"look for cabinet","4":"walk to cabinet","5":"bake in the oven as instructed","6":"get cooling rack out of cabinet"},"context":"bake in the oven as instructed","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the cabinet; step1: open the cabinet; step2: look for cooling rack; step3: look for cabinet; step4: walk to cabinet; step5: bake in the oven as instructed; step6: get cooling rack out of cabinet","flatten_input_for_script_generation":"You want to get cooling rack out of cabinet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: bake in the oven as instructed; step1: look for cabinet; step2: find the cabinet; step3: walk to cabinet; step4: open the cabinet; step5: look for cooling rack; step6: get cooling rack out of cabinet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->0","4->1","5->3"],"reference_code":"class GetCoolingRackOutOfCabinet:\n\n    title = \"get cooling rack out of cabinet\"\n    steps = 7\n\n    def step0(self):\n        return \"bake in the oven as instructed\"\n\n    def step1(self):\n        return \"look for cabinet\"\n\n    def step2(self):\n        return \"find the cabinet\"\n\n    def step3(self):\n        return \"walk to cabinet\"\n\n    def step4(self):\n        return \"open the cabinet\"\n\n    def step5(self):\n        return \"look for cooling rack\"\n\n    def step6(self):\n        return \"get cooling rack out of cabinet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetCoolingRackOutOfCabinet:\n\n    title = \"get cooling rack out of cabinet\"\n    steps = 7\n\n","reference_graph":{"title":"get cooling rack out of cabinet","num_steps":7,"schema":["step0: bake in the oven as instructed","step1: look for cabinet","step2: find the cabinet","step3: walk to cabinet","step4: open the cabinet","step5: look for cooling rack","step6: get cooling rack out of cabinet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter address into form","events":{"0":"click on the name blank","1":"locate the address blank","2":"fill in the name blank","3":"click into the address blank","4":"wait for new page to load","5":"click on checkout","6":"enter address into form"},"context":"click on checkout","minutes":1.0,"events_minutes":{"0":0.5,"1":0.5,"2":1.0,"3":0.1666666667,"4":0.5},"flatten_input_for_edge_prediction":"step0: click on the name blank; step1: locate the address blank; step2: fill in the name blank; step3: click into the address blank; step4: wait for new page to load; step5: click on checkout; step6: enter address into form","flatten_input_for_script_generation":"You want to enter address into form. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: click on checkout; step1: wait for new page to load; step2: click on the name blank; step3: fill in the name blank; step4: locate the address blank; step5: click into the address blank; step6: enter address into form; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->6","4->0","5->4"],"reference_code":"class EnterAddressIntoForm:\n\n    title = \"enter address into form\"\n    steps = 7\n\n    def step0(self):\n        return \"click on checkout\"\n\n    def step1(self):\n        return \"wait for new page to load\"\n\n    def step2(self):\n        return \"click on the name blank\"\n\n    def step3(self):\n        return \"fill in the name blank\"\n\n    def step4(self):\n        return \"locate the address blank\"\n\n    def step5(self):\n        return \"click into the address blank\"\n\n    def step6(self):\n        return \"enter address into form\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterAddressIntoForm:\n\n    title = \"enter address into form\"\n    steps = 7\n\n","reference_graph":{"title":"enter address into form","num_steps":7,"schema":["step0: click on checkout","step1: wait for new page to load","step2: click on the name blank","step3: fill in the name blank","step4: locate the address blank","step5: click into the address blank","step6: enter address into form"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get racing experience","events":{"0":"look for races nearby","1":"practice driving fast","2":"enter some races","3":"get a racing car","4":"win a few races","5":"start weightlifting program","6":"get racing experience"},"context":"start weightlifting program","minutes":5256000.0,"events_minutes":{"0":1440.0,"1":43200.0,"2":129600.0,"3":1440.0,"4":129600.0},"flatten_input_for_edge_prediction":"step0: look for races nearby; step1: practice driving fast; step2: enter some races; step3: get a racing car; step4: win a few races; step5: start weightlifting program; step6: get racing experience","flatten_input_for_script_generation":"You want to get racing experience. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: start weightlifting program; step1: get a racing car; step2: practice driving fast; step3: look for races nearby; step4: enter some races; step5: win a few races; step6: get racing experience; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class GetRacingExperience:\n\n    title = \"get racing experience\"\n    steps = 7\n\n    def step0(self):\n        return \"start weightlifting program\"\n\n    def step1(self):\n        return \"get a racing car\"\n\n    def step2(self):\n        return \"practice driving fast\"\n\n    def step3(self):\n        return \"look for races nearby\"\n\n    def step4(self):\n        return \"enter some races\"\n\n    def step5(self):\n        return \"win a few races\"\n\n    def step6(self):\n        return \"get racing experience\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetRacingExperience:\n\n    title = \"get racing experience\"\n    steps = 7\n\n","reference_graph":{"title":"get racing experience","num_steps":7,"schema":["step0: start weightlifting program","step1: get a racing car","step2: practice driving fast","step3: look for races nearby","step4: enter some races","step5: win a few races","step6: get racing experience"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of the car","events":{"0":"open the car door","1":"take off the seat belt","2":"take the key out of ignition","3":"engage the parking break","4":"shift the gear into park","5":"turn off the car","6":"park the car","7":"get out of the car"},"context":"park the car","minutes":0.5,"events_minutes":{"0":0.05,"1":0.0833333333,"2":0.05,"3":0.05,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the car door; step1: take off the seat belt; step2: take the key out of ignition; step3: engage the parking break; step4: shift the gear into park; step5: turn off the car; step6: park the car; step7: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step5 -> step2; step5 -> step1; step2 -> step0; step1 -> step0; step3 -> step5; step0 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: park the car; step1: shift the gear into park; step2: engage the parking break; step3: turn off the car; step4: take the key out of ignition; step5: take off the seat belt; step6: open the car door; step7: get out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->0","2->0","3->5","4->3","5->2","5->1","6->4"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 8\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"shift the gear into park\"\n\n    def step2(self):\n        return \"engage the parking break\"\n\n    def step3(self):\n        return \"turn off the car\"\n\n    def step4(self):\n        return \"take the key out of ignition\"\n\n    def step5(self):\n        return \"take off the seat belt\"\n\n    def step6(self):\n        return \"open the car door\"\n\n    def step7(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 8\n\n","reference_graph":{"title":"get out of the car","num_steps":8,"schema":["step0: park the car","step1: shift the gear into park","step2: engage the parking break","step3: turn off the car","step4: take the key out of ignition","step5: take off the seat belt","step6: open the car door","step7: get out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"stand up straight","events":{"0":"stretch to the right","1":"raise arms above head","2":"stretch to the left","3":"bend knees to loosen leg muscles","4":"stretch straight up","5":"get off of the couch","6":"stand up straight"},"context":"get off of the couch","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: stretch to the right; step1: raise arms above head; step2: stretch to the left; step3: bend knees to loosen leg muscles; step4: stretch straight up; step5: get off of the couch; step6: stand up straight","flatten_input_for_script_generation":"You want to stand up straight. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step1 -> step0; step1 -> step2; step4 -> step3; step0 -> step3; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get off of the couch; step1: raise arms above head; step2: stretch straight up; step3: stretch to the right; step4: stretch to the left; step5: bend knees to loosen leg muscles; step6: stand up straight; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","1->0","1->2","2->3","3->6","4->3","5->1"],"reference_code":"class StandUpStraight:\n\n    title = \"stand up straight\"\n    steps = 7\n\n    def step0(self):\n        return \"get off of the couch\"\n\n    def step1(self):\n        return \"raise arms above head\"\n\n    def step2(self):\n        return \"stretch straight up\"\n\n    def step3(self):\n        return \"stretch to the right\"\n\n    def step4(self):\n        return \"stretch to the left\"\n\n    def step5(self):\n        return \"bend knees to loosen leg muscles\"\n\n    def step6(self):\n        return \"stand up straight\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StandUpStraight:\n\n    title = \"stand up straight\"\n    steps = 7\n\n","reference_graph":{"title":"stand up straight","num_steps":7,"schema":["step0: get off of the couch","step1: raise arms above head","step2: stretch straight up","step3: stretch to the right","step4: stretch to the left","step5: bend knees to loosen leg muscles","step6: stand up straight"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Place plant in hatch","events":{"0":"lift the plant","1":"grab the plant","2":"extend plant to hatch","3":"walk towards hatch","4":"let go of plant","5":"Open the hatch of car","6":"Place plant in hatch"},"context":"Open the hatch of car","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.05,"3":0.1666666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: lift the plant; step1: grab the plant; step2: extend plant to hatch; step3: walk towards hatch; step4: let go of plant; step5: Open the hatch of car; step6: Place plant in hatch","flatten_input_for_script_generation":"You want to Place plant in hatch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Open the hatch of car; step1: grab the plant; step2: lift the plant; step3: walk towards hatch; step4: extend plant to hatch; step5: let go of plant; step6: Place plant in hatch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->2","4->6","5->1"],"reference_code":"class PlacePlantInHatch:\n\n    title = \"Place plant in hatch\"\n    steps = 7\n\n    def step0(self):\n        return \"Open the hatch of car\"\n\n    def step1(self):\n        return \"grab the plant\"\n\n    def step2(self):\n        return \"lift the plant\"\n\n    def step3(self):\n        return \"walk towards hatch\"\n\n    def step4(self):\n        return \"extend plant to hatch\"\n\n    def step5(self):\n        return \"let go of plant\"\n\n    def step6(self):\n        return \"Place plant in hatch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlacePlantInHatch:\n\n    title = \"Place plant in hatch\"\n    steps = 7\n\n","reference_graph":{"title":"Place plant in hatch","num_steps":7,"schema":["step0: Open the hatch of car","step1: grab the plant","step2: lift the plant","step3: walk towards hatch","step4: extend plant to hatch","step5: let go of plant","step6: Place plant in hatch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get hired by a great company","events":{"0":"get ready for interview","1":"wait for calls","2":"get invited to interview","3":"get call with job offer","4":"go to interview","5":"apply to several jobs","6":"get hired by a great company"},"context":"apply to several jobs","minutes":1440.0,"events_minutes":{"0":4320.0,"1":14400.0,"2":1440.0,"3":7200.0,"4":1440.0},"flatten_input_for_edge_prediction":"step0: get ready for interview; step1: wait for calls; step2: get invited to interview; step3: get call with job offer; step4: go to interview; step5: apply to several jobs; step6: get hired by a great company","flatten_input_for_script_generation":"You want to get hired by a great company. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: apply to several jobs; step1: wait for calls; step2: get invited to interview; step3: get ready for interview; step4: go to interview; step5: get call with job offer; step6: get hired by a great company; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class GetHiredByAGreatCompany:\n\n    title = \"get hired by a great company\"\n    steps = 7\n\n    def step0(self):\n        return \"apply to several jobs\"\n\n    def step1(self):\n        return \"wait for calls\"\n\n    def step2(self):\n        return \"get invited to interview\"\n\n    def step3(self):\n        return \"get ready for interview\"\n\n    def step4(self):\n        return \"go to interview\"\n\n    def step5(self):\n        return \"get call with job offer\"\n\n    def step6(self):\n        return \"get hired by a great company\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetHiredByAGreatCompany:\n\n    title = \"get hired by a great company\"\n    steps = 7\n\n","reference_graph":{"title":"get hired by a great company","num_steps":7,"schema":["step0: apply to several jobs","step1: wait for calls","step2: get invited to interview","step3: get ready for interview","step4: go to interview","step5: get call with job offer","step6: get hired by a great company"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get spoons for mixing","events":{"0":"dispose of clutter","1":"place bowl in proper spot","2":"choose desired spoon size","3":"bring spoon to bowl","4":"find spoon drawer","5":"add the wet  ingredients","6":"get spoons for mixing"},"context":"add the wet  ingredients","minutes":1.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: dispose of clutter; step1: place bowl in proper spot; step2: choose desired spoon size; step3: bring spoon to bowl; step4: find spoon drawer; step5: add the wet  ingredients; step6: get spoons for mixing","flatten_input_for_script_generation":"You want to get spoons for mixing. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: add the wet  ingredients; step1: place bowl in proper spot; step2: dispose of clutter; step3: find spoon drawer; step4: choose desired spoon size; step5: bring spoon to bowl; step6: get spoons for mixing; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->4","2->3","3->6","4->2","5->0","5->1"],"reference_code":"class GetSpoonsForMixing:\n\n    title = \"get spoons for mixing\"\n    steps = 7\n\n    def step0(self):\n        return \"add the wet  ingredients\"\n\n    def step1(self):\n        return \"place bowl in proper spot\"\n\n    def step2(self):\n        return \"dispose of clutter\"\n\n    def step3(self):\n        return \"find spoon drawer\"\n\n    def step4(self):\n        return \"choose desired spoon size\"\n\n    def step5(self):\n        return \"bring spoon to bowl\"\n\n    def step6(self):\n        return \"get spoons for mixing\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSpoonsForMixing:\n\n    title = \"get spoons for mixing\"\n    steps = 7\n\n","reference_graph":{"title":"get spoons for mixing","num_steps":7,"schema":["step0: add the wet  ingredients","step1: place bowl in proper spot","step2: dispose of clutter","step3: find spoon drawer","step4: choose desired spoon size","step5: bring spoon to bowl","step6: get spoons for mixing"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"take plant out of car","events":{"0":"look for the plant","1":"grab the plant","2":"open car door","3":"move plant towards door","4":"extend hand toward plant","5":"go to car","6":"take plant out of car"},"context":"go to car","minutes":0.5833333333,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: look for the plant; step1: grab the plant; step2: open car door; step3: move plant towards door; step4: extend hand toward plant; step5: go to car; step6: take plant out of car","flatten_input_for_script_generation":"You want to take plant out of car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go to car; step1: open car door; step2: look for the plant; step3: extend hand toward plant; step4: grab the plant; step5: move plant towards door; step6: take plant out of car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class TakePlantOutOfCar:\n\n    title = \"take plant out of car\"\n    steps = 7\n\n    def step0(self):\n        return \"go to car\"\n\n    def step1(self):\n        return \"open car door\"\n\n    def step2(self):\n        return \"look for the plant\"\n\n    def step3(self):\n        return \"extend hand toward plant\"\n\n    def step4(self):\n        return \"grab the plant\"\n\n    def step5(self):\n        return \"move plant towards door\"\n\n    def step6(self):\n        return \"take plant out of car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakePlantOutOfCar:\n\n    title = \"take plant out of car\"\n    steps = 7\n\n","reference_graph":{"title":"take plant out of car","num_steps":7,"schema":["step0: go to car","step1: open car door","step2: look for the plant","step3: extend hand toward plant","step4: grab the plant","step5: move plant towards door","step6: take plant out of car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"landlord calls the tenant","events":{"0":"makes final decision","1":"finds cell phone","2":"looks for tenant number","3":"looks for cell phone","4":"finds tenant number","5":"wait patiently for landlord to make a decision","6":"landlord calls the tenant"},"context":"wait patiently for landlord to make a decision","minutes":1.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: makes final decision; step1: finds cell phone; step2: looks for tenant number; step3: looks for cell phone; step4: finds tenant number; step5: wait patiently for landlord to make a decision; step6: landlord calls the tenant","flatten_input_for_script_generation":"You want to landlord calls the tenant. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: wait patiently for landlord to make a decision; step1: makes final decision; step2: looks for cell phone; step3: finds cell phone; step4: looks for tenant number; step5: finds tenant number; step6: landlord calls the tenant; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->4","3->1","4->6","5->0"],"reference_code":"class LandlordCallsTheTenant:\n\n    title = \"landlord calls the tenant\"\n    steps = 7\n\n    def step0(self):\n        return \"wait patiently for landlord to make a decision\"\n\n    def step1(self):\n        return \"makes final decision\"\n\n    def step2(self):\n        return \"looks for cell phone\"\n\n    def step3(self):\n        return \"finds cell phone\"\n\n    def step4(self):\n        return \"looks for tenant number\"\n\n    def step5(self):\n        return \"finds tenant number\"\n\n    def step6(self):\n        return \"landlord calls the tenant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LandlordCallsTheTenant:\n\n    title = \"landlord calls the tenant\"\n    steps = 7\n\n","reference_graph":{"title":"landlord calls the tenant","num_steps":7,"schema":["step0: wait patiently for landlord to make a decision","step1: makes final decision","step2: looks for cell phone","step3: finds cell phone","step4: looks for tenant number","step5: finds tenant number","step6: landlord calls the tenant"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"figure out clothes to wear","events":{"0":"eyeball possible outfits","1":"scan the closet","2":"decide on outfit","3":"grab chosen clothes","4":"recall weather forecast","5":"go to closet","6":"figure out clothes to wear"},"context":"go to closet","minutes":1.0,"events_minutes":{"0":0.25,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: eyeball possible outfits; step1: scan the closet; step2: decide on outfit; step3: grab chosen clothes; step4: recall weather forecast; step5: go to closet; step6: figure out clothes to wear","flatten_input_for_script_generation":"You want to figure out clothes to wear. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step1 -> step2; step0 -> step3; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: go to closet; step1: recall weather forecast; step2: scan the closet; step3: eyeball possible outfits; step4: decide on outfit; step5: grab chosen clothes; step6: figure out clothes to wear; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","1->2","2->3","3->6","4->1","5->4"],"reference_code":"class FigureOutClothesToWear:\n\n    title = \"figure out clothes to wear\"\n    steps = 7\n\n    def step0(self):\n        return \"go to closet\"\n\n    def step1(self):\n        return \"recall weather forecast\"\n\n    def step2(self):\n        return \"scan the closet\"\n\n    def step3(self):\n        return \"eyeball possible outfits\"\n\n    def step4(self):\n        return \"decide on outfit\"\n\n    def step5(self):\n        return \"grab chosen clothes\"\n\n    def step6(self):\n        return \"figure out clothes to wear\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FigureOutClothesToWear:\n\n    title = \"figure out clothes to wear\"\n    steps = 7\n\n","reference_graph":{"title":"figure out clothes to wear","num_steps":7,"schema":["step0: go to closet","step1: recall weather forecast","step2: scan the closet","step3: eyeball possible outfits","step4: decide on outfit","step5: grab chosen clothes","step6: figure out clothes to wear"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"pass the fourth grade","events":{"0":"continue learning through summer","1":"pass all quizzes and tests for the year","2":"show up for each day of 4th grade","3":"finish the last day of school","4":"pass all of the 4th grade homework","5":"pass the third grade","6":"pass the fourth grade"},"context":"pass the third grade","minutes":525600.0,"events_minutes":{"0":129600.0,"1":525600.0,"2":525600.0,"3":1440.0,"4":525600.0},"flatten_input_for_edge_prediction":"step0: continue learning through summer; step1: pass all quizzes and tests for the year; step2: show up for each day of 4th grade; step3: finish the last day of school; step4: pass all of the 4th grade homework; step5: pass the third grade; step6: pass the fourth grade","flatten_input_for_script_generation":"You want to pass the fourth grade. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step4; step2 -> step1; step1 -> step3; step4 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: pass the third grade; step1: continue learning through summer; step2: show up for each day of 4th grade; step3: pass all of the 4th grade homework; step4: pass all quizzes and tests for the year; step5: finish the last day of school; step6: pass the fourth grade; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","2->1","3->6","4->3","5->0"],"reference_code":"class PassTheFourthGrade:\n\n    title = \"pass the fourth grade\"\n    steps = 7\n\n    def step0(self):\n        return \"pass the third grade\"\n\n    def step1(self):\n        return \"continue learning through summer\"\n\n    def step2(self):\n        return \"show up for each day of 4th grade\"\n\n    def step3(self):\n        return \"pass all of the 4th grade homework\"\n\n    def step4(self):\n        return \"pass all quizzes and tests for the year\"\n\n    def step5(self):\n        return \"finish the last day of school\"\n\n    def step6(self):\n        return \"pass the fourth grade\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PassTheFourthGrade:\n\n    title = \"pass the fourth grade\"\n    steps = 7\n\n","reference_graph":{"title":"pass the fourth grade","num_steps":7,"schema":["step0: pass the third grade","step1: continue learning through summer","step2: show up for each day of 4th grade","step3: pass all of the 4th grade homework","step4: pass all quizzes and tests for the year","step5: finish the last day of school","step6: pass the fourth grade"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Preheat the oven.","events":{"0":"find the oven","1":"walk to oven","2":"look for oven","3":"enter the temperature","4":"hit bake button","5":"decide what to eat","6":"Preheat the oven."},"context":"decide what to eat","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the oven; step1: walk to oven; step2: look for oven; step3: enter the temperature; step4: hit bake button; step5: decide what to eat; step6: Preheat the oven.","flatten_input_for_script_generation":"You want to Preheat the oven.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decide what to eat; step1: look for oven; step2: find the oven; step3: walk to oven; step4: enter the temperature; step5: hit bake button; step6: Preheat the oven.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->6","5->2"],"reference_code":"class PreheatTheOven:\n\n    title = \"Preheat the oven.\"\n    steps = 7\n\n    def step0(self):\n        return \"decide what to eat\"\n\n    def step1(self):\n        return \"look for oven\"\n\n    def step2(self):\n        return \"find the oven\"\n\n    def step3(self):\n        return \"walk to oven\"\n\n    def step4(self):\n        return \"enter the temperature\"\n\n    def step5(self):\n        return \"hit bake button\"\n\n    def step6(self):\n        return \"Preheat the oven.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PreheatTheOven:\n\n    title = \"Preheat the oven.\"\n    steps = 7\n\n","reference_graph":{"title":"Preheat the oven.","num_steps":7,"schema":["step0: decide what to eat","step1: look for oven","step2: find the oven","step3: walk to oven","step4: enter the temperature","step5: hit bake button","step6: Preheat the oven."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"stir the bowl","events":{"0":"open the drawer","1":"place hand on drawer","2":"use the tool to mix","3":"look for kitchen tool","4":"take out the kitchen tool","5":"mix the ingredients in the bowl","6":"stir the bowl"},"context":"mix the ingredients in the bowl","minutes":3.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":4.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the drawer; step1: place hand on drawer; step2: use the tool to mix; step3: look for kitchen tool; step4: take out the kitchen tool; step5: mix the ingredients in the bowl; step6: stir the bowl","flatten_input_for_script_generation":"You want to stir the bowl. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: mix the ingredients in the bowl; step1: place hand on drawer; step2: open the drawer; step3: look for kitchen tool; step4: take out the kitchen tool; step5: use the tool to mix; step6: stir the bowl; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->4","4->2","5->1"],"reference_code":"class StirTheBowl:\n\n    title = \"stir the bowl\"\n    steps = 7\n\n    def step0(self):\n        return \"mix the ingredients in the bowl\"\n\n    def step1(self):\n        return \"place hand on drawer\"\n\n    def step2(self):\n        return \"open the drawer\"\n\n    def step3(self):\n        return \"look for kitchen tool\"\n\n    def step4(self):\n        return \"take out the kitchen tool\"\n\n    def step5(self):\n        return \"use the tool to mix\"\n\n    def step6(self):\n        return \"stir the bowl\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StirTheBowl:\n\n    title = \"stir the bowl\"\n    steps = 7\n\n","reference_graph":{"title":"stir the bowl","num_steps":7,"schema":["step0: mix the ingredients in the bowl","step1: place hand on drawer","step2: open the drawer","step3: look for kitchen tool","step4: take out the kitchen tool","step5: use the tool to mix","step6: stir the bowl"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on the seatbelt.","events":{"0":"adjust seat belt into comfortable position","1":"grab seat belt","2":"pull seat belt down across body","3":"latch seat belt on right side of body","4":"reach right hand past left shoulder","5":"close the door.","6":"put on the seatbelt."},"context":"close the door.","minutes":0.5,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.1666666667,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: adjust seat belt into comfortable position; step1: grab seat belt; step2: pull seat belt down across body; step3: latch seat belt on right side of body; step4: reach right hand past left shoulder; step5: close the door.; step6: put on the seatbelt.","flatten_input_for_script_generation":"You want to put on the seatbelt.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: close the door.; step1: reach right hand past left shoulder; step2: grab seat belt; step3: pull seat belt down across body; step4: latch seat belt on right side of body; step5: adjust seat belt into comfortable position; step6: put on the seatbelt.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->1","5->4"],"reference_code":"class PutOnTheSeatbelt:\n\n    title = \"put on the seatbelt.\"\n    steps = 7\n\n    def step0(self):\n        return \"close the door.\"\n\n    def step1(self):\n        return \"reach right hand past left shoulder\"\n\n    def step2(self):\n        return \"grab seat belt\"\n\n    def step3(self):\n        return \"pull seat belt down across body\"\n\n    def step4(self):\n        return \"latch seat belt on right side of body\"\n\n    def step5(self):\n        return \"adjust seat belt into comfortable position\"\n\n    def step6(self):\n        return \"put on the seatbelt.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnTheSeatbelt:\n\n    title = \"put on the seatbelt.\"\n    steps = 7\n\n","reference_graph":{"title":"put on the seatbelt.","num_steps":7,"schema":["step0: close the door.","step1: reach right hand past left shoulder","step2: grab seat belt","step3: pull seat belt down across body","step4: latch seat belt on right side of body","step5: adjust seat belt into comfortable position","step6: put on the seatbelt."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull up the windows","events":{"0":"Hold on window controls until window stops","1":"Locate window controls in car","2":"Reach towards window controls with hand","3":"Press window controls with finger","4":"Check to see if window is closed fully","5":"stop the car","6":"pull up the windows"},"context":"stop the car","minutes":0.5,"events_minutes":{"0":0.0666666667,"1":0.05,"2":0.0166666667,"3":0.0166666667,"4":0.05},"flatten_input_for_edge_prediction":"step0: Hold on window controls until window stops; step1: Locate window controls in car; step2: Reach towards window controls with hand; step3: Press window controls with finger; step4: Check to see if window is closed fully; step5: stop the car; step6: pull up the windows","flatten_input_for_script_generation":"You want to pull up the windows. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: stop the car; step1: Locate window controls in car; step2: Reach towards window controls with hand; step3: Press window controls with finger; step4: Hold on window controls until window stops; step5: Check to see if window is closed fully; step6: pull up the windows; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->3","3->0","4->6","5->1"],"reference_code":"class PullUpTheWindows:\n\n    title = \"pull up the windows\"\n    steps = 7\n\n    def step0(self):\n        return \"stop the car\"\n\n    def step1(self):\n        return \"Locate window controls in car\"\n\n    def step2(self):\n        return \"Reach towards window controls with hand\"\n\n    def step3(self):\n        return \"Press window controls with finger\"\n\n    def step4(self):\n        return \"Hold on window controls until window stops\"\n\n    def step5(self):\n        return \"Check to see if window is closed fully\"\n\n    def step6(self):\n        return \"pull up the windows\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullUpTheWindows:\n\n    title = \"pull up the windows\"\n    steps = 7\n\n","reference_graph":{"title":"pull up the windows","num_steps":7,"schema":["step0: stop the car","step1: Locate window controls in car","step2: Reach towards window controls with hand","step3: Press window controls with finger","step4: Hold on window controls until window stops","step5: Check to see if window is closed fully","step6: pull up the windows"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"glance through results","events":{"0":"find the results page's location","1":"find polls information","2":"go to the results page","3":"skim through the information","4":"start reading the results","5":"look for polls information","6":"glance through results"},"context":"look for polls information","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.05,"3":3.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the results page's location; step1: find polls information; step2: go to the results page; step3: skim through the information; step4: start reading the results; step5: look for polls information; step6: glance through results","flatten_input_for_script_generation":"You want to glance through results. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: look for polls information; step1: find polls information; step2: skim through the information; step3: find the results page's location; step4: go to the results page; step5: start reading the results; step6: glance through results; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->4","3->0","4->6","5->1"],"reference_code":"class GlanceThroughResults:\n\n    title = \"glance through results\"\n    steps = 7\n\n    def step0(self):\n        return \"look for polls information\"\n\n    def step1(self):\n        return \"find polls information\"\n\n    def step2(self):\n        return \"skim through the information\"\n\n    def step3(self):\n        return \"find the results page's location\"\n\n    def step4(self):\n        return \"go to the results page\"\n\n    def step5(self):\n        return \"start reading the results\"\n\n    def step6(self):\n        return \"glance through results\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GlanceThroughResults:\n\n    title = \"glance through results\"\n    steps = 7\n\n","reference_graph":{"title":"glance through results","num_steps":7,"schema":["step0: look for polls information","step1: find polls information","step2: skim through the information","step3: find the results page's location","step4: go to the results page","step5: start reading the results","step6: glance through results"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"mix with the mixer","events":{"0":"Turn off mixer","1":"Hold mixer firmly","2":"Mix until the instructions say to stop","3":"Set mixer to desired speed","4":"Turn on the mixer","5":"put mix in the bowl","6":"mix with the mixer"},"context":"put mix in the bowl","minutes":5.0,"events_minutes":{"0":1.0,"1":0.3333333333,"2":2.0,"3":0.1666666667,"4":0.5},"flatten_input_for_edge_prediction":"step0: Turn off mixer; step1: Hold mixer firmly; step2: Mix until the instructions say to stop; step3: Set mixer to desired speed; step4: Turn on the mixer; step5: put mix in the bowl; step6: mix with the mixer","flatten_input_for_script_generation":"You want to mix with the mixer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: put mix in the bowl; step1: Set mixer to desired speed; step2: Hold mixer firmly; step3: Turn on the mixer; step4: Mix until the instructions say to stop; step5: Turn off mixer; step6: mix with the mixer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->1","4->2","5->3"],"reference_code":"class MixWithTheMixer:\n\n    title = \"mix with the mixer\"\n    steps = 7\n\n    def step0(self):\n        return \"put mix in the bowl\"\n\n    def step1(self):\n        return \"Set mixer to desired speed\"\n\n    def step2(self):\n        return \"Hold mixer firmly\"\n\n    def step3(self):\n        return \"Turn on the mixer\"\n\n    def step4(self):\n        return \"Mix until the instructions say to stop\"\n\n    def step5(self):\n        return \"Turn off mixer\"\n\n    def step6(self):\n        return \"mix with the mixer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MixWithTheMixer:\n\n    title = \"mix with the mixer\"\n    steps = 7\n\n","reference_graph":{"title":"mix with the mixer","num_steps":7,"schema":["step0: put mix in the bowl","step1: Set mixer to desired speed","step2: Hold mixer firmly","step3: Turn on the mixer","step4: Mix until the instructions say to stop","step5: Turn off mixer","step6: mix with the mixer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a preliminary design","events":{"0":"think of ideas","1":"put ideas on document","2":"find design document","3":"remember the ideas","4":"open design document","5":"check out other concepts","6":"make a preliminary design"},"context":"check out other concepts","minutes":2880.0,"events_minutes":{"0":60.0,"1":1.0,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: think of ideas; step1: put ideas on document; step2: find design document; step3: remember the ideas; step4: open design document; step5: check out other concepts; step6: make a preliminary design","flatten_input_for_script_generation":"You want to make a preliminary design. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: check out other concepts; step1: find design document; step2: think of ideas; step3: remember the ideas; step4: put ideas on document; step5: make a preliminary design; step6: open design document; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->1","5->0","5->2"],"reference_code":"class MakeAPreliminaryDesign:\n\n    title = \"make a preliminary design\"\n    steps = 7\n\n    def step0(self):\n        return \"check out other concepts\"\n\n    def step1(self):\n        return \"find design document\"\n\n    def step2(self):\n        return \"think of ideas\"\n\n    def step3(self):\n        return \"remember the ideas\"\n\n    def step4(self):\n        return \"put ideas on document\"\n\n    def step5(self):\n        return \"make a preliminary design\"\n\n    def step6(self):\n        return \"open design document\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class MakeAPreliminaryDesign:\n\n    title = \"make a preliminary design\"\n    steps = 7\n\n","reference_graph":{"title":"make a preliminary design","num_steps":7,"schema":["step0: check out other concepts","step1: find design document","step2: think of ideas","step3: remember the ideas","step4: put ideas on document","step5: make a preliminary design","step6: open design document"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"fill out ad form online","events":{"0":"click on space","1":"look for ad form","2":"begin to type","3":"find space in form","4":"find ad form","5":"write an ad to attract applicants","6":"fill out ad form online"},"context":"write an ad to attract applicants","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: click on space; step1: look for ad form; step2: begin to type; step3: find space in form; step4: find ad form; step5: write an ad to attract applicants; step6: fill out ad form online","flatten_input_for_script_generation":"You want to fill out ad form online. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: write an ad to attract applicants; step1: look for ad form; step2: find ad form; step3: find space in form; step4: click on space; step5: begin to type; step6: fill out ad form online; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class FillOutAdFormOnline:\n\n    title = \"fill out ad form online\"\n    steps = 7\n\n    def step0(self):\n        return \"write an ad to attract applicants\"\n\n    def step1(self):\n        return \"look for ad form\"\n\n    def step2(self):\n        return \"find ad form\"\n\n    def step3(self):\n        return \"find space in form\"\n\n    def step4(self):\n        return \"click on space\"\n\n    def step5(self):\n        return \"begin to type\"\n\n    def step6(self):\n        return \"fill out ad form online\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutAdFormOnline:\n\n    title = \"fill out ad form online\"\n    steps = 7\n\n","reference_graph":{"title":"fill out ad form online","num_steps":7,"schema":["step0: write an ad to attract applicants","step1: look for ad form","step2: find ad form","step3: find space in form","step4: click on space","step5: begin to type","step6: fill out ad form online"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get in a comfortable position","events":{"0":"decide on comfortable position","1":"orient body in differing positions","2":"gauge seat comfort","3":"sit in seat","4":"orient body to sit","5":"Find a place to sit.","6":"get in a comfortable position"},"context":"Find a place to sit.","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.1666666667,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: decide on comfortable position; step1: orient body in differing positions; step2: gauge seat comfort; step3: sit in seat; step4: orient body to sit; step5: Find a place to sit.; step6: get in a comfortable position","flatten_input_for_script_generation":"You want to get in a comfortable position. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step3 -> step1; step2 -> step0; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Find a place to sit.; step1: orient body to sit; step2: sit in seat; step3: gauge seat comfort; step4: orient body in differing positions; step5: decide on comfortable position; step6: get in a comfortable position; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->0","3->2","3->1","4->3","5->4"],"reference_code":"class GetInAComfortablePosition:\n\n    title = \"get in a comfortable position\"\n    steps = 7\n\n    def step0(self):\n        return \"Find a place to sit.\"\n\n    def step1(self):\n        return \"orient body to sit\"\n\n    def step2(self):\n        return \"sit in seat\"\n\n    def step3(self):\n        return \"gauge seat comfort\"\n\n    def step4(self):\n        return \"orient body in differing positions\"\n\n    def step5(self):\n        return \"decide on comfortable position\"\n\n    def step6(self):\n        return \"get in a comfortable position\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInAComfortablePosition:\n\n    title = \"get in a comfortable position\"\n    steps = 7\n\n","reference_graph":{"title":"get in a comfortable position","num_steps":7,"schema":["step0: Find a place to sit.","step1: orient body to sit","step2: sit in seat","step3: gauge seat comfort","step4: orient body in differing positions","step5: decide on comfortable position","step6: get in a comfortable position"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get out of car.","events":{"0":"turn ignition off","1":"park in the parking spot","2":"grab handle of car door","3":"remove seatbelt from clicked position","4":"find a parking spot","5":"step out of the car","6":"open door of car","7":"Drive to the grocery store.","8":"Get out of car."},"context":"Drive to the grocery store.","minutes":1.0,"events_minutes":{"0":0.3333333333,"1":0.5,"2":0.1666666667,"3":0.1666666667,"4":2.0,"5":0.3333333333,"6":0.3333333333},"flatten_input_for_edge_prediction":"step0: turn ignition off; step1: park in the parking spot; step2: grab handle of car door; step3: remove seatbelt from clicked position; step4: find a parking spot; step5: step out of the car; step6: open door of car; step7: Drive to the grocery store.; step8: Get out of car.","flatten_input_for_script_generation":"You want to Get out of car.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step6 -> step5; step5 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: Drive to the grocery store.; step1: find a parking spot; step2: park in the parking spot; step3: turn ignition off; step4: remove seatbelt from clicked position; step5: grab handle of car door; step6: open door of car; step7: step out of the car; step8: Get out of car.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->8","6->5","7->4"],"reference_code":"class GetOutOfCar:\n\n    title = \"Get out of car.\"\n    steps = 9\n\n    def step0(self):\n        return \"Drive to the grocery store.\"\n\n    def step1(self):\n        return \"find a parking spot\"\n\n    def step2(self):\n        return \"park in the parking spot\"\n\n    def step3(self):\n        return \"turn ignition off\"\n\n    def step4(self):\n        return \"remove seatbelt from clicked position\"\n\n    def step5(self):\n        return \"grab handle of car door\"\n\n    def step6(self):\n        return \"open door of car\"\n\n    def step7(self):\n        return \"step out of the car\"\n\n    def step8(self):\n        return \"Get out of car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetOutOfCar:\n\n    title = \"Get out of car.\"\n    steps = 9\n\n","reference_graph":{"title":"Get out of car.","num_steps":9,"schema":["step0: Drive to the grocery store.","step1: find a parking spot","step2: park in the parking spot","step3: turn ignition off","step4: remove seatbelt from clicked position","step5: grab handle of car door","step6: open door of car","step7: step out of the car","step8: Get out of car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"get into car","events":{"0":"grab door handle","1":"walk up to the car","2":"unlock the car","3":"open the door","4":"climb inside the car","5":"decide on needed materials","6":"get into car"},"context":"decide on needed materials","minutes":10.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":0.05,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab door handle; step1: walk up to the car; step2: unlock the car; step3: open the door; step4: climb inside the car; step5: decide on needed materials; step6: get into car","flatten_input_for_script_generation":"You want to get into car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decide on needed materials; step1: walk up to the car; step2: unlock the car; step3: grab door handle; step4: open the door; step5: climb inside the car; step6: get into car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->4","4->6","5->1"],"reference_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 7\n\n    def step0(self):\n        return \"decide on needed materials\"\n\n    def step1(self):\n        return \"walk up to the car\"\n\n    def step2(self):\n        return \"unlock the car\"\n\n    def step3(self):\n        return \"grab door handle\"\n\n    def step4(self):\n        return \"open the door\"\n\n    def step5(self):\n        return \"climb inside the car\"\n\n    def step6(self):\n        return \"get into car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetIntoCar:\n\n    title = \"get into car\"\n    steps = 7\n\n","reference_graph":{"title":"get into car","num_steps":7,"schema":["step0: decide on needed materials","step1: walk up to the car","step2: unlock the car","step3: grab door handle","step4: open the door","step5: climb inside the car","step6: get into car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"leave the school","events":{"0":"leave graduation and school forever","1":"receive a diploma","2":"attend final JV session","3":"complete all coursework","4":"go to graduation","5":"Play the season on JV","6":"leave the school"},"context":"Play the season on JV","minutes":2.0,"events_minutes":{"0":5.0,"1":1.0,"2":120.0,"3":216000.0,"4":240.0},"flatten_input_for_edge_prediction":"step0: leave graduation and school forever; step1: receive a diploma; step2: attend final JV session; step3: complete all coursework; step4: go to graduation; step5: Play the season on JV; step6: leave the school","flatten_input_for_script_generation":"You want to leave the school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step3 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: Play the season on JV; step1: complete all coursework; step2: attend final JV session; step3: go to graduation; step4: receive a diploma; step5: leave graduation and school forever; step6: leave the school; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->4","4->1","5->2","5->3"],"reference_code":"class LeaveTheSchool:\n\n    title = \"leave the school\"\n    steps = 7\n\n    def step0(self):\n        return \"Play the season on JV\"\n\n    def step1(self):\n        return \"complete all coursework\"\n\n    def step2(self):\n        return \"attend final JV session\"\n\n    def step3(self):\n        return \"go to graduation\"\n\n    def step4(self):\n        return \"receive a diploma\"\n\n    def step5(self):\n        return \"leave graduation and school forever\"\n\n    def step6(self):\n        return \"leave the school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LeaveTheSchool:\n\n    title = \"leave the school\"\n    steps = 7\n\n","reference_graph":{"title":"leave the school","num_steps":7,"schema":["step0: Play the season on JV","step1: complete all coursework","step2: attend final JV session","step3: go to graduation","step4: receive a diploma","step5: leave graduation and school forever","step6: leave the school"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"get dressed, choose shoes","events":{"0":"open the closet","1":"look through the closet","2":"remove clothes from closet","3":"grab the clothes","4":"put the clothes on","5":"decide what to wear","6":"get dressed, choose shoes"},"context":"decide what to wear","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":2.0,"2":0.0833333333,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: open the closet; step1: look through the closet; step2: remove clothes from closet; step3: grab the clothes; step4: put the clothes on; step5: decide what to wear; step6: get dressed, choose shoes","flatten_input_for_script_generation":"You want to get dressed, choose shoes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decide what to wear; step1: open the closet; step2: look through the closet; step3: grab the clothes; step4: remove clothes from closet; step5: put the clothes on; step6: get dressed, choose shoes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->4","3->2","4->6","5->0"],"reference_code":"class GetDressedChooseShoes:\n\n    title = \"get dressed, choose shoes\"\n    steps = 7\n\n    def step0(self):\n        return \"decide what to wear\"\n\n    def step1(self):\n        return \"open the closet\"\n\n    def step2(self):\n        return \"look through the closet\"\n\n    def step3(self):\n        return \"grab the clothes\"\n\n    def step4(self):\n        return \"remove clothes from closet\"\n\n    def step5(self):\n        return \"put the clothes on\"\n\n    def step6(self):\n        return \"get dressed, choose shoes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetDressedChooseShoes:\n\n    title = \"get dressed, choose shoes\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed, choose shoes","num_steps":7,"schema":["step0: decide what to wear","step1: open the closet","step2: look through the closet","step3: grab the clothes","step4: remove clothes from closet","step5: put the clothes on","step6: get dressed, choose shoes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"print the recipe","events":{"0":"Click on print button","1":"Confirm printer settings","2":"Turn on printer","3":"Choose printer settings","4":"Use mouse to move to print button","5":"Collect print out","6":"narrow down to 1 recipe","7":"print the recipe"},"context":"narrow down to 1 recipe","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0833333333,"2":0.1,"3":0.0833333333,"4":0.0833333333,"5":0.05},"flatten_input_for_edge_prediction":"step0: Click on print button; step1: Confirm printer settings; step2: Turn on printer; step3: Choose printer settings; step4: Use mouse to move to print button; step5: Collect print out; step6: narrow down to 1 recipe; step7: print the recipe","flatten_input_for_script_generation":"You want to print the recipe. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step4 -> step0; step0 -> step5; step3 -> step1; step5 -> step7; step1 -> step4; step6 -> step2","flatten_output_for_script_generation":"step0: narrow down to 1 recipe; step1: Turn on printer; step2: Choose printer settings; step3: Confirm printer settings; step4: Use mouse to move to print button; step5: Click on print button; step6: Collect print out; step7: print the recipe; step0 -> step1; step1 -> step2; step2 -> step3; step4 -> step5; step5 -> step6; step6 -> step7; step3 -> step4","gold_edges_for_prediction":["0->5","1->4","2->3","3->1","4->0","5->7","6->2"],"reference_code":"class PrintTheRecipe:\n\n    title = \"print the recipe\"\n    steps = 8\n\n    def step0(self):\n        return \"narrow down to 1 recipe\"\n\n    def step1(self):\n        return \"Turn on printer\"\n\n    def step2(self):\n        return \"Choose printer settings\"\n\n    def step3(self):\n        return \"Confirm printer settings\"\n\n    def step4(self):\n        return \"Use mouse to move to print button\"\n\n    def step5(self):\n        return \"Click on print button\"\n\n    def step6(self):\n        return \"Collect print out\"\n\n    def step7(self):\n        return \"print the recipe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step3 -> step4\",\n        ]\n","input_prompt_code":"class PrintTheRecipe:\n\n    title = \"print the recipe\"\n    steps = 8\n\n","reference_graph":{"title":"print the recipe","num_steps":8,"schema":["step0: narrow down to 1 recipe","step1: Turn on printer","step2: Choose printer settings","step3: Confirm printer settings","step4: Use mouse to move to print button","step5: Click on print button","step6: Collect print out","step7: print the recipe"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step4 -> step5","step5 -> step6","step6 -> step7","step3 -> step4"]}}
{"scenario":"put on serving plate","events":{"0":"use the knife to loosen the edges","1":"cut into bars","2":"carefully remove the bars from the pan","3":"pick up a knife","4":"wait for pan to cool","5":"let rest on cooling rack","6":"put on serving plate"},"context":"let rest on cooling rack","minutes":1.0,"events_minutes":{"0":0.5,"1":3.0,"2":5.0,"3":0.0833333333,"4":60.0},"flatten_input_for_edge_prediction":"step0: use the knife to loosen the edges; step1: cut into bars; step2: carefully remove the bars from the pan; step3: pick up a knife; step4: wait for pan to cool; step5: let rest on cooling rack; step6: put on serving plate","flatten_input_for_script_generation":"You want to put on serving plate. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step3 -> step0; step1 -> step2; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: let rest on cooling rack; step1: wait for pan to cool; step2: pick up a knife; step3: cut into bars; step4: use the knife to loosen the edges; step5: carefully remove the bars from the pan; step6: put on serving plate; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->1","3->0","4->3","5->4"],"reference_code":"class PutOnServingPlate:\n\n    title = \"put on serving plate\"\n    steps = 7\n\n    def step0(self):\n        return \"let rest on cooling rack\"\n\n    def step1(self):\n        return \"wait for pan to cool\"\n\n    def step2(self):\n        return \"pick up a knife\"\n\n    def step3(self):\n        return \"cut into bars\"\n\n    def step4(self):\n        return \"use the knife to loosen the edges\"\n\n    def step5(self):\n        return \"carefully remove the bars from the pan\"\n\n    def step6(self):\n        return \"put on serving plate\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnServingPlate:\n\n    title = \"put on serving plate\"\n    steps = 7\n\n","reference_graph":{"title":"put on serving plate","num_steps":7,"schema":["step0: let rest on cooling rack","step1: wait for pan to cool","step2: pick up a knife","step3: cut into bars","step4: use the knife to loosen the edges","step5: carefully remove the bars from the pan","step6: put on serving plate"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"unlock the closet doors","events":{"0":"put key in keyhole","1":"put hand in pocket","2":"find key in pocket","3":"find the keyhole","4":"take key in pocket","5":"Go to the closet","6":"unlock the closet doors"},"context":"Go to the closet","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put key in keyhole; step1: put hand in pocket; step2: find key in pocket; step3: find the keyhole; step4: take key in pocket; step5: Go to the closet; step6: unlock the closet doors","flatten_input_for_script_generation":"You want to unlock the closet doors. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step3 -> step0; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: Go to the closet; step1: find the keyhole; step2: put hand in pocket; step3: find key in pocket; step4: take key in pocket; step5: put key in keyhole; step6: unlock the closet doors; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->0","5->1","5->3"],"reference_code":"class UnlockTheClosetDoors:\n\n    title = \"unlock the closet doors\"\n    steps = 7\n\n    def step0(self):\n        return \"Go to the closet\"\n\n    def step1(self):\n        return \"find the keyhole\"\n\n    def step2(self):\n        return \"put hand in pocket\"\n\n    def step3(self):\n        return \"find key in pocket\"\n\n    def step4(self):\n        return \"take key in pocket\"\n\n    def step5(self):\n        return \"put key in keyhole\"\n\n    def step6(self):\n        return \"unlock the closet doors\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class UnlockTheClosetDoors:\n\n    title = \"unlock the closet doors\"\n    steps = 7\n\n","reference_graph":{"title":"unlock the closet doors","num_steps":7,"schema":["step0: Go to the closet","step1: find the keyhole","step2: put hand in pocket","step3: find key in pocket","step4: take key in pocket","step5: put key in keyhole","step6: unlock the closet doors"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step4 -> step5"]}}
{"scenario":"narrow down the choices","events":{"0":"decide criteria for best reviews","1":"find best reviews by criteria","2":"choose the best reviews","3":"sort out the best reviews","4":"decide how many reviews to narrow down to","5":"read reviews about the store","6":"narrow down the choices"},"context":"read reviews about the store","minutes":1.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: decide criteria for best reviews; step1: find best reviews by criteria; step2: choose the best reviews; step3: sort out the best reviews; step4: decide how many reviews to narrow down to; step5: read reviews about the store; step6: narrow down the choices","flatten_input_for_script_generation":"You want to narrow down the choices. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step4; step1 -> step3; step4 -> step3; step2 -> step6; step3 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: read reviews about the store; step1: decide criteria for best reviews; step2: find best reviews by criteria; step3: decide how many reviews to narrow down to; step4: sort out the best reviews; step5: choose the best reviews; step6: narrow down the choices; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->4","1->3","2->6","3->2","4->3","5->0"],"reference_code":"class NarrowDownTheChoices:\n\n    title = \"narrow down the choices\"\n    steps = 7\n\n    def step0(self):\n        return \"read reviews about the store\"\n\n    def step1(self):\n        return \"decide criteria for best reviews\"\n\n    def step2(self):\n        return \"find best reviews by criteria\"\n\n    def step3(self):\n        return \"decide how many reviews to narrow down to\"\n\n    def step4(self):\n        return \"sort out the best reviews\"\n\n    def step5(self):\n        return \"choose the best reviews\"\n\n    def step6(self):\n        return \"narrow down the choices\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class NarrowDownTheChoices:\n\n    title = \"narrow down the choices\"\n    steps = 7\n\n","reference_graph":{"title":"narrow down the choices","num_steps":7,"schema":["step0: read reviews about the store","step1: decide criteria for best reviews","step2: find best reviews by criteria","step3: decide how many reviews to narrow down to","step4: sort out the best reviews","step5: choose the best reviews","step6: narrow down the choices"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read the revised draft","events":{"0":"confirm start of the draft","1":"find start of draft","2":"move eyes down page","3":"scroll up to top of page","4":"look for start of draft","5":"make needed changes","6":"read the revised draft"},"context":"make needed changes","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: confirm start of the draft; step1: find start of draft; step2: move eyes down page; step3: scroll up to top of page; step4: look for start of draft; step5: make needed changes; step6: read the revised draft","flatten_input_for_script_generation":"You want to read the revised draft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: make needed changes; step1: scroll up to top of page; step2: move eyes down page; step3: look for start of draft; step4: find start of draft; step5: confirm start of the draft; step6: read the revised draft; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->3"],"reference_code":"class ReadTheRevisedDraft:\n\n    title = \"read the revised draft\"\n    steps = 7\n\n    def step0(self):\n        return \"make needed changes\"\n\n    def step1(self):\n        return \"scroll up to top of page\"\n\n    def step2(self):\n        return \"move eyes down page\"\n\n    def step3(self):\n        return \"look for start of draft\"\n\n    def step4(self):\n        return \"find start of draft\"\n\n    def step5(self):\n        return \"confirm start of the draft\"\n\n    def step6(self):\n        return \"read the revised draft\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadTheRevisedDraft:\n\n    title = \"read the revised draft\"\n    steps = 7\n\n","reference_graph":{"title":"read the revised draft","num_steps":7,"schema":["step0: make needed changes","step1: scroll up to top of page","step2: move eyes down page","step3: look for start of draft","step4: find start of draft","step5: confirm start of the draft","step6: read the revised draft"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to class","events":{"0":"walk towards building","1":"close car door","2":"walk towards area where classroom is","3":"walk towards class door","4":"enter the building","5":"get out of the car","6":"walk to class"},"context":"get out of the car","minutes":1.0,"events_minutes":{"0":1.0,"1":0.05,"2":1.0,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: walk towards building; step1: close car door; step2: walk towards area where classroom is; step3: walk towards class door; step4: enter the building; step5: get out of the car; step6: walk to class","flatten_input_for_script_generation":"You want to walk to class. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get out of the car; step1: close car door; step2: walk towards building; step3: enter the building; step4: walk towards area where classroom is; step5: walk towards class door; step6: walk to class; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->6","4->2","5->1"],"reference_code":"class WalkToClass:\n\n    title = \"walk to class\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the car\"\n\n    def step1(self):\n        return \"close car door\"\n\n    def step2(self):\n        return \"walk towards building\"\n\n    def step3(self):\n        return \"enter the building\"\n\n    def step4(self):\n        return \"walk towards area where classroom is\"\n\n    def step5(self):\n        return \"walk towards class door\"\n\n    def step6(self):\n        return \"walk to class\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToClass:\n\n    title = \"walk to class\"\n    steps = 7\n\n","reference_graph":{"title":"walk to class","num_steps":7,"schema":["step0: get out of the car","step1: close car door","step2: walk towards building","step3: enter the building","step4: walk towards area where classroom is","step5: walk towards class door","step6: walk to class"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick up tickets","events":{"0":"get to front of the line","1":"Give worker proof of ticket purchase","2":"walk to ticket window","3":"slowly move forward in line","4":"wait in single file line","5":"stand in line","6":"pick up tickets"},"context":"stand in line","minutes":1.0,"events_minutes":{"0":2.0,"1":0.0333333333,"2":1.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: get to front of the line; step1: Give worker proof of ticket purchase; step2: walk to ticket window; step3: slowly move forward in line; step4: wait in single file line; step5: stand in line; step6: pick up tickets","flatten_input_for_script_generation":"You want to pick up tickets. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: stand in line; step1: wait in single file line; step2: slowly move forward in line; step3: get to front of the line; step4: walk to ticket window; step5: Give worker proof of ticket purchase; step6: pick up tickets; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->0","4->3","5->4"],"reference_code":"class PickUpTickets:\n\n    title = \"pick up tickets\"\n    steps = 7\n\n    def step0(self):\n        return \"stand in line\"\n\n    def step1(self):\n        return \"wait in single file line\"\n\n    def step2(self):\n        return \"slowly move forward in line\"\n\n    def step3(self):\n        return \"get to front of the line\"\n\n    def step4(self):\n        return \"walk to ticket window\"\n\n    def step5(self):\n        return \"Give worker proof of ticket purchase\"\n\n    def step6(self):\n        return \"pick up tickets\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickUpTickets:\n\n    title = \"pick up tickets\"\n    steps = 7\n\n","reference_graph":{"title":"pick up tickets","num_steps":7,"schema":["step0: stand in line","step1: wait in single file line","step2: slowly move forward in line","step3: get to front of the line","step4: walk to ticket window","step5: Give worker proof of ticket purchase","step6: pick up tickets"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Organize ingredients for ease of use.","events":{"0":"arrange the bowls for ease of use","1":"get the cold ingredients from the refridgerator","2":"measure each ingredient into a separate bowl","3":"put away measuring tools","4":"get dry ingredients from the cupboard","5":"gather the cooking tools","6":"Organize ingredients for ease of use."},"context":"gather the cooking tools","minutes":0.5,"events_minutes":{"0":1.0,"1":1.0,"2":5.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: arrange the bowls for ease of use; step1: get the cold ingredients from the refridgerator; step2: measure each ingredient into a separate bowl; step3: put away measuring tools; step4: get dry ingredients from the cupboard; step5: gather the cooking tools; step6: Organize ingredients for ease of use.","flatten_input_for_script_generation":"You want to Organize ingredients for ease of use.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: gather the cooking tools; step1: get the cold ingredients from the refridgerator; step2: get dry ingredients from the cupboard; step3: measure each ingredient into a separate bowl; step4: put away measuring tools; step5: arrange the bowls for ease of use; step6: Organize ingredients for ease of use.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->2","5->4","5->1"],"reference_code":"class OrganizeIngredientsForEaseOfUse:\n\n    title = \"Organize ingredients for ease of use.\"\n    steps = 7\n\n    def step0(self):\n        return \"gather the cooking tools\"\n\n    def step1(self):\n        return \"get the cold ingredients from the refridgerator\"\n\n    def step2(self):\n        return \"get dry ingredients from the cupboard\"\n\n    def step3(self):\n        return \"measure each ingredient into a separate bowl\"\n\n    def step4(self):\n        return \"put away measuring tools\"\n\n    def step5(self):\n        return \"arrange the bowls for ease of use\"\n\n    def step6(self):\n        return \"Organize ingredients for ease of use.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrganizeIngredientsForEaseOfUse:\n\n    title = \"Organize ingredients for ease of use.\"\n    steps = 7\n\n","reference_graph":{"title":"Organize ingredients for ease of use.","num_steps":7,"schema":["step0: gather the cooking tools","step1: get the cold ingredients from the refridgerator","step2: get dry ingredients from the cupboard","step3: measure each ingredient into a separate bowl","step4: put away measuring tools","step5: arrange the bowls for ease of use","step6: Organize ingredients for ease of use."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull out credit card out of payment pad","events":{"0":"wait for instruction","1":"follow remaining prompts","2":"ensure accept was detected","3":"grip onto card","4":"pull card from slot","5":"select accept on the payment pad","6":"pull out credit card out of payment pad"},"context":"select accept on the payment pad","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":0.05,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: wait for instruction; step1: follow remaining prompts; step2: ensure accept was detected; step3: grip onto card; step4: pull card from slot; step5: select accept on the payment pad; step6: pull out credit card out of payment pad","flatten_input_for_script_generation":"You want to pull out credit card out of payment pad. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step2 -> step0; step0 -> step3; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: select accept on the payment pad; step1: ensure accept was detected; step2: follow remaining prompts; step3: wait for instruction; step4: grip onto card; step5: pull card from slot; step6: pull out credit card out of payment pad; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->3","2->1","2->0","3->4","4->6","5->2"],"reference_code":"class PullOutCreditCardOutOfPaymentPad:\n\n    title = \"pull out credit card out of payment pad\"\n    steps = 7\n\n    def step0(self):\n        return \"select accept on the payment pad\"\n\n    def step1(self):\n        return \"ensure accept was detected\"\n\n    def step2(self):\n        return \"follow remaining prompts\"\n\n    def step3(self):\n        return \"wait for instruction\"\n\n    def step4(self):\n        return \"grip onto card\"\n\n    def step5(self):\n        return \"pull card from slot\"\n\n    def step6(self):\n        return \"pull out credit card out of payment pad\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullOutCreditCardOutOfPaymentPad:\n\n    title = \"pull out credit card out of payment pad\"\n    steps = 7\n\n","reference_graph":{"title":"pull out credit card out of payment pad","num_steps":7,"schema":["step0: select accept on the payment pad","step1: ensure accept was detected","step2: follow remaining prompts","step3: wait for instruction","step4: grip onto card","step5: pull card from slot","step6: pull out credit card out of payment pad"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pay for parking.","events":{"0":"drive towards guard","1":"give guard money","2":"take out money","3":"receive the parking slip","4":"wait in line","5":"Pull into fair parking lot.","6":"Pay for parking."},"context":"Pull into fair parking lot.","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.1666666667,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: drive towards guard; step1: give guard money; step2: take out money; step3: receive the parking slip; step4: wait in line; step5: Pull into fair parking lot.; step6: Pay for parking.","flatten_input_for_script_generation":"You want to Pay for parking.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step0 -> step4; step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Pull into fair parking lot.; step1: drive towards guard; step2: wait in line; step3: give guard money; step4: receive the parking slip; step5: take out money; step6: Pay for parking.; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->4","0->2","1->3","2->1","3->6","4->1","5->0"],"reference_code":"class PayForParking:\n\n    title = \"Pay for parking.\"\n    steps = 7\n\n    def step0(self):\n        return \"Pull into fair parking lot.\"\n\n    def step1(self):\n        return \"drive towards guard\"\n\n    def step2(self):\n        return \"wait in line\"\n\n    def step3(self):\n        return \"give guard money\"\n\n    def step4(self):\n        return \"receive the parking slip\"\n\n    def step5(self):\n        return \"take out money\"\n\n    def step6(self):\n        return \"Pay for parking.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PayForParking:\n\n    title = \"Pay for parking.\"\n    steps = 7\n\n","reference_graph":{"title":"Pay for parking.","num_steps":7,"schema":["step0: Pull into fair parking lot.","step1: drive towards guard","step2: wait in line","step3: give guard money","step4: receive the parking slip","step5: take out money","step6: Pay for parking."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"walk towards the store doors","events":{"0":"turn towards exit","1":"put wallet back in pocket","2":"reach for bag","3":"put credit card back in wallet","4":"wait for cashier to bag purchases","5":"pick up bag","6":"thank the cashier","7":"walk towards the store doors"},"context":"thank the cashier","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.1666666667,"4":2.0,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: turn towards exit; step1: put wallet back in pocket; step2: reach for bag; step3: put credit card back in wallet; step4: wait for cashier to bag purchases; step5: pick up bag; step6: thank the cashier; step7: walk towards the store doors","flatten_input_for_script_generation":"You want to walk towards the store doors. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step4 -> step2; step2 -> step5; step5 -> step0; step0 -> step7; step6 -> step3; step6 -> step4","flatten_output_for_script_generation":"step0: thank the cashier; step1: wait for cashier to bag purchases; step2: put credit card back in wallet; step3: put wallet back in pocket; step4: reach for bag; step5: pick up bag; step6: turn towards exit; step7: walk towards the store doors; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step4; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->2","2->5","3->1","4->2","5->0","6->3","6->4"],"reference_code":"class WalkTowardsTheStoreDoors:\n\n    title = \"walk towards the store doors\"\n    steps = 8\n\n    def step0(self):\n        return \"thank the cashier\"\n\n    def step1(self):\n        return \"wait for cashier to bag purchases\"\n\n    def step2(self):\n        return \"put credit card back in wallet\"\n\n    def step3(self):\n        return \"put wallet back in pocket\"\n\n    def step4(self):\n        return \"reach for bag\"\n\n    def step5(self):\n        return \"pick up bag\"\n\n    def step6(self):\n        return \"turn towards exit\"\n\n    def step7(self):\n        return \"walk towards the store doors\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkTowardsTheStoreDoors:\n\n    title = \"walk towards the store doors\"\n    steps = 8\n\n","reference_graph":{"title":"walk towards the store doors","num_steps":8,"schema":["step0: thank the cashier","step1: wait for cashier to bag purchases","step2: put credit card back in wallet","step3: put wallet back in pocket","step4: reach for bag","step5: pick up bag","step6: turn towards exit","step7: walk towards the store doors"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step4","step5 -> step6","step6 -> step7"]}}
{"scenario":"Pull into the entrance for school","events":{"0":"Locate school entrance","1":"Straighten steering wheel","2":"Accelerate slightly with gas","3":"Push on brakes","4":"Signal towards entrance","5":"Look out for pedestrians","6":"Turn steering wheel","7":"drive to school","8":"Pull into the entrance for school"},"context":"drive to school","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.0166666667,"5":0.1666666667,"6":0.05},"flatten_input_for_edge_prediction":"step0: Locate school entrance; step1: Straighten steering wheel; step2: Accelerate slightly with gas; step3: Push on brakes; step4: Signal towards entrance; step5: Look out for pedestrians; step6: Turn steering wheel; step7: drive to school; step8: Pull into the entrance for school","flatten_input_for_script_generation":"You want to Pull into the entrance for school. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step0 -> step5; step4 -> step3; step3 -> step6; step6 -> step2; step2 -> step1; step1 -> step8; step5 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: drive to school; step1: Locate school entrance; step2: Signal towards entrance; step3: Look out for pedestrians; step4: Push on brakes; step5: Pull into the entrance for school; step6: Turn steering wheel; step7: Accelerate slightly with gas; step8: Straighten steering wheel; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step6 -> step7; step7 -> step8; step8 -> step5","gold_edges_for_prediction":["0->4","0->5","1->8","2->1","3->6","4->3","5->8","6->2","7->0"],"reference_code":"class PullIntoTheEntranceForSchool:\n\n    title = \"Pull into the entrance for school\"\n    steps = 9\n\n    def step0(self):\n        return \"drive to school\"\n\n    def step1(self):\n        return \"Locate school entrance\"\n\n    def step2(self):\n        return \"Signal towards entrance\"\n\n    def step3(self):\n        return \"Look out for pedestrians\"\n\n    def step4(self):\n        return \"Push on brakes\"\n\n    def step5(self):\n        return \"Pull into the entrance for school\"\n\n    def step6(self):\n        return \"Turn steering wheel\"\n\n    def step7(self):\n        return \"Accelerate slightly with gas\"\n\n    def step8(self):\n        return \"Straighten steering wheel\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n            \"step8 -> step5\",\n        ]\n","input_prompt_code":"class PullIntoTheEntranceForSchool:\n\n    title = \"Pull into the entrance for school\"\n    steps = 9\n\n","reference_graph":{"title":"Pull into the entrance for school","num_steps":9,"schema":["step0: drive to school","step1: Locate school entrance","step2: Signal towards entrance","step3: Look out for pedestrians","step4: Push on brakes","step5: Pull into the entrance for school","step6: Turn steering wheel","step7: Accelerate slightly with gas","step8: Straighten steering wheel"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step6 -> step7","step7 -> step8","step8 -> step5"]}}
{"scenario":"Make the food.","events":{"0":"take meat out of refrigerator","1":"throw in the oven","2":"mix vegetables in with seared meat","3":"take vegetables out of refrigerator","4":"sear meat in pan","5":"chop and prep meat and vegetables","6":"Preheat the oven.","7":"Make the food."},"context":"Preheat the oven.","minutes":30.0,"events_minutes":{"0":1.0,"1":30.0,"2":1.0,"3":1.0,"4":3.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: take meat out of refrigerator; step1: throw in the oven; step2: mix vegetables in with seared meat; step3: take vegetables out of refrigerator; step4: sear meat in pan; step5: chop and prep meat and vegetables; step6: Preheat the oven.; step7: Make the food.","flatten_input_for_script_generation":"You want to Make the food.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step3 -> step5; step5 -> step4; step4 -> step2; step2 -> step1; step1 -> step7; step6 -> step0; step6 -> step3","flatten_output_for_script_generation":"step0: Preheat the oven.; step1: take vegetables out of refrigerator; step2: take meat out of refrigerator; step3: chop and prep meat and vegetables; step4: sear meat in pan; step5: mix vegetables in with seared meat; step6: throw in the oven; step7: Make the food.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->7","2->1","3->5","4->2","5->4","6->0","6->3"],"reference_code":"class MakeTheFood:\n\n    title = \"Make the food.\"\n    steps = 8\n\n    def step0(self):\n        return \"Preheat the oven.\"\n\n    def step1(self):\n        return \"take vegetables out of refrigerator\"\n\n    def step2(self):\n        return \"take meat out of refrigerator\"\n\n    def step3(self):\n        return \"chop and prep meat and vegetables\"\n\n    def step4(self):\n        return \"sear meat in pan\"\n\n    def step5(self):\n        return \"mix vegetables in with seared meat\"\n\n    def step6(self):\n        return \"throw in the oven\"\n\n    def step7(self):\n        return \"Make the food.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MakeTheFood:\n\n    title = \"Make the food.\"\n    steps = 8\n\n","reference_graph":{"title":"Make the food.","num_steps":8,"schema":["step0: Preheat the oven.","step1: take vegetables out of refrigerator","step2: take meat out of refrigerator","step3: chop and prep meat and vegetables","step4: sear meat in pan","step5: mix vegetables in with seared meat","step6: throw in the oven","step7: Make the food."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"narrow down choices","events":{"0":"remember the criteria","1":"eliminate worst matches","2":"find best matches","3":"match descriptions to criteria","4":"decide on criteria","5":"read through descriptions","6":"narrow down choices"},"context":"read through descriptions","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: remember the criteria; step1: eliminate worst matches; step2: find best matches; step3: match descriptions to criteria; step4: decide on criteria; step5: read through descriptions; step6: narrow down choices","flatten_input_for_script_generation":"You want to narrow down choices. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step3 -> step1; step2 -> step6; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: read through descriptions; step1: decide on criteria; step2: remember the criteria; step3: match descriptions to criteria; step4: find best matches; step5: eliminate worst matches; step6: narrow down choices; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->6","3->2","3->1","4->0","5->4"],"reference_code":"class NarrowDownChoices:\n\n    title = \"narrow down choices\"\n    steps = 7\n\n    def step0(self):\n        return \"read through descriptions\"\n\n    def step1(self):\n        return \"decide on criteria\"\n\n    def step2(self):\n        return \"remember the criteria\"\n\n    def step3(self):\n        return \"match descriptions to criteria\"\n\n    def step4(self):\n        return \"find best matches\"\n\n    def step5(self):\n        return \"eliminate worst matches\"\n\n    def step6(self):\n        return \"narrow down choices\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class NarrowDownChoices:\n\n    title = \"narrow down choices\"\n    steps = 7\n\n","reference_graph":{"title":"narrow down choices","num_steps":7,"schema":["step0: read through descriptions","step1: decide on criteria","step2: remember the criteria","step3: match descriptions to criteria","step4: find best matches","step5: eliminate worst matches","step6: narrow down choices"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"enter the building","events":{"0":"pull the door open","1":"continue walking to the entrance","2":"walk through the entrance","3":"grab the door handle","4":"stop in front of the entrance door","5":"begin walking towards entrance","6":"enter the building"},"context":"begin walking towards entrance","minutes":2.0,"events_minutes":{"0":0.05,"1":0.6666666667,"2":0.0333333333,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: pull the door open; step1: continue walking to the entrance; step2: walk through the entrance; step3: grab the door handle; step4: stop in front of the entrance door; step5: begin walking towards entrance; step6: enter the building","flatten_input_for_script_generation":"You want to enter the building. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: begin walking towards entrance; step1: continue walking to the entrance; step2: stop in front of the entrance door; step3: grab the door handle; step4: pull the door open; step5: walk through the entrance; step6: enter the building; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class EnterTheBuilding:\n\n    title = \"enter the building\"\n    steps = 7\n\n    def step0(self):\n        return \"begin walking towards entrance\"\n\n    def step1(self):\n        return \"continue walking to the entrance\"\n\n    def step2(self):\n        return \"stop in front of the entrance door\"\n\n    def step3(self):\n        return \"grab the door handle\"\n\n    def step4(self):\n        return \"pull the door open\"\n\n    def step5(self):\n        return \"walk through the entrance\"\n\n    def step6(self):\n        return \"enter the building\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheBuilding:\n\n    title = \"enter the building\"\n    steps = 7\n\n","reference_graph":{"title":"enter the building","num_steps":7,"schema":["step0: begin walking towards entrance","step1: continue walking to the entrance","step2: stop in front of the entrance door","step3: grab the door handle","step4: pull the door open","step5: walk through the entrance","step6: enter the building"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of car","events":{"0":"Push out of car with foot still in car","1":"Move body out of car door","2":"Stand outside car.","3":"unlock car door","4":"Put one foot out of car door","5":"Close car door","6":"open car door","7":"parked the car","8":"get out of car"},"context":"parked the car","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.0333333333,"5":0.0333333333,"6":0.05},"flatten_input_for_edge_prediction":"step0: Push out of car with foot still in car; step1: Move body out of car door; step2: Stand outside car.; step3: unlock car door; step4: Put one foot out of car door; step5: Close car door; step6: open car door; step7: parked the car; step8: get out of car","flatten_input_for_script_generation":"You want to get out of car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step6; step6 -> step4; step4 -> step0; step1 -> step2; step0 -> step1; step2 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: parked the car; step1: unlock car door; step2: open car door; step3: Put one foot out of car door; step4: Push out of car with foot still in car; step5: Move body out of car door; step6: Stand outside car.; step7: Close car door; step8: get out of car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->2","2->5","3->6","4->0","5->8","6->4","7->3"],"reference_code":"class GetOutOfCar:\n\n    title = \"get out of car\"\n    steps = 9\n\n    def step0(self):\n        return \"parked the car\"\n\n    def step1(self):\n        return \"unlock car door\"\n\n    def step2(self):\n        return \"open car door\"\n\n    def step3(self):\n        return \"Put one foot out of car door\"\n\n    def step4(self):\n        return \"Push out of car with foot still in car\"\n\n    def step5(self):\n        return \"Move body out of car door\"\n\n    def step6(self):\n        return \"Stand outside car.\"\n\n    def step7(self):\n        return \"Close car door\"\n\n    def step8(self):\n        return \"get out of car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetOutOfCar:\n\n    title = \"get out of car\"\n    steps = 9\n\n","reference_graph":{"title":"get out of car","num_steps":9,"schema":["step0: parked the car","step1: unlock car door","step2: open car door","step3: Put one foot out of car door","step4: Push out of car with foot still in car","step5: Move body out of car door","step6: Stand outside car.","step7: Close car door","step8: get out of car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"talk with the child","events":{"0":"ask child's name","1":"introduce yourself to child","2":"tell the child a joke","3":"ask child what child's favorite things are","4":"ask child about school","5":"sit down with the child","6":"talk with the child"},"context":"sit down with the child","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":1.0,"2":1.0,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: ask child's name; step1: introduce yourself to child; step2: tell the child a joke; step3: ask child what child's favorite things are; step4: ask child about school; step5: sit down with the child; step6: talk with the child","flatten_input_for_script_generation":"You want to talk with the child. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step1 -> step4; step1 -> step2; step0 -> step3; step0 -> step4; step0 -> step2; step3 -> step6; step4 -> step6; step2 -> step6; step5 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: sit down with the child; step1: ask child's name; step2: introduce yourself to child; step3: ask child what child's favorite things are; step4: ask child about school; step5: tell the child a joke; step6: talk with the child; step0 -> step1; step0 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step6; step5 -> step6; step1 -> step3; step1 -> step4; step1 -> step5","gold_edges_for_prediction":["0->3","0->4","0->2","1->3","1->4","1->2","2->6","3->6","4->6","5->1","5->0"],"reference_code":"class TalkWithTheChild:\n\n    title = \"talk with the child\"\n    steps = 7\n\n    def step0(self):\n        return \"sit down with the child\"\n\n    def step1(self):\n        return \"ask child's name\"\n\n    def step2(self):\n        return \"introduce yourself to child\"\n\n    def step3(self):\n        return \"ask child what child's favorite things are\"\n\n    def step4(self):\n        return \"ask child about school\"\n\n    def step5(self):\n        return \"tell the child a joke\"\n\n    def step6(self):\n        return \"talk with the child\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n        ]\n","input_prompt_code":"class TalkWithTheChild:\n\n    title = \"talk with the child\"\n    steps = 7\n\n","reference_graph":{"title":"talk with the child","num_steps":7,"schema":["step0: sit down with the child","step1: ask child's name","step2: introduce yourself to child","step3: ask child what child's favorite things are","step4: ask child about school","step5: tell the child a joke","step6: talk with the child"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step6","step5 -> step6","step1 -> step3","step1 -> step4","step1 -> step5"]}}
{"scenario":"close the door.","events":{"0":"Extend arm to the side","1":"Listen for sound indicating door is securely shut","2":"Pull door quickly all the way towards the car","3":"Grab door handle","4":"Focus eyes on door handle","5":"sit down in the car.","6":"close the door."},"context":"sit down in the car.","minutes":0.5,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.0833333333,"3":0.05,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: Extend arm to the side; step1: Listen for sound indicating door is securely shut; step2: Pull door quickly all the way towards the car; step3: Grab door handle; step4: Focus eyes on door handle; step5: sit down in the car.; step6: close the door.","flatten_input_for_script_generation":"You want to close the door.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step4 -> step0; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: sit down in the car.; step1: Focus eyes on door handle; step2: Extend arm to the side; step3: Grab door handle; step4: Pull door quickly all the way towards the car; step5: Listen for sound indicating door is securely shut; step6: close the door.; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class CloseTheDoor:\n\n    title = \"close the door.\"\n    steps = 7\n\n    def step0(self):\n        return \"sit down in the car.\"\n\n    def step1(self):\n        return \"Focus eyes on door handle\"\n\n    def step2(self):\n        return \"Extend arm to the side\"\n\n    def step3(self):\n        return \"Grab door handle\"\n\n    def step4(self):\n        return \"Pull door quickly all the way towards the car\"\n\n    def step5(self):\n        return \"Listen for sound indicating door is securely shut\"\n\n    def step6(self):\n        return \"close the door.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CloseTheDoor:\n\n    title = \"close the door.\"\n    steps = 7\n\n","reference_graph":{"title":"close the door.","num_steps":7,"schema":["step0: sit down in the car.","step1: Focus eyes on door handle","step2: Extend arm to the side","step3: Grab door handle","step4: Pull door quickly all the way towards the car","step5: Listen for sound indicating door is securely shut","step6: close the door."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"adjust to standing up position","events":{"0":"Push up with hands from floor","1":"Check to see nothing is in the way","2":"Straighten up both legs","3":"Look up and around","4":"Balance on both feet","5":"make sure all wires are connected correctly","6":"adjust to standing up position"},"context":"make sure all wires are connected correctly","minutes":0.5,"events_minutes":{"0":0.3333333333,"1":0.25,"2":0.5,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Push up with hands from floor; step1: Check to see nothing is in the way; step2: Straighten up both legs; step3: Look up and around; step4: Balance on both feet; step5: make sure all wires are connected correctly; step6: adjust to standing up position","flatten_input_for_script_generation":"You want to adjust to standing up position. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step4 -> step6; step0 -> step2; step3 -> step1; step2 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: make sure all wires are connected correctly; step1: Look up and around; step2: Check to see nothing is in the way; step3: Push up with hands from floor; step4: Straighten up both legs; step5: Balance on both feet; step6: adjust to standing up position; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step6; step4 -> step5; step1 -> step2","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class AdjustToStandingUpPosition:\n\n    title = \"adjust to standing up position\"\n    steps = 7\n\n    def step0(self):\n        return \"make sure all wires are connected correctly\"\n\n    def step1(self):\n        return \"Look up and around\"\n\n    def step2(self):\n        return \"Check to see nothing is in the way\"\n\n    def step3(self):\n        return \"Push up with hands from floor\"\n\n    def step4(self):\n        return \"Straighten up both legs\"\n\n    def step5(self):\n        return \"Balance on both feet\"\n\n    def step6(self):\n        return \"adjust to standing up position\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class AdjustToStandingUpPosition:\n\n    title = \"adjust to standing up position\"\n    steps = 7\n\n","reference_graph":{"title":"adjust to standing up position","num_steps":7,"schema":["step0: make sure all wires are connected correctly","step1: Look up and around","step2: Check to see nothing is in the way","step3: Push up with hands from floor","step4: Straighten up both legs","step5: Balance on both feet","step6: adjust to standing up position"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step6","step4 -> step5","step1 -> step2"]}}
{"scenario":"Walk into bedroom.","events":{"0":"walk down the hall","1":"grab the door knob","2":"turn the door knob","3":"push the door open","4":"step through the doorway","5":"Put towel around waist","6":"Walk into bedroom."},"context":"Put towel around waist","minutes":1.0,"events_minutes":{"0":0.0666666667,"1":0.0333333333,"2":0.0333333333,"3":0.0166666667,"4":0.05},"flatten_input_for_edge_prediction":"step0: walk down the hall; step1: grab the door knob; step2: turn the door knob; step3: push the door open; step4: step through the doorway; step5: Put towel around waist; step6: Walk into bedroom.","flatten_input_for_script_generation":"You want to Walk into bedroom.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Put towel around waist; step1: grab the door knob; step2: turn the door knob; step3: push the door open; step4: step through the doorway; step5: walk down the hall; step6: Walk into bedroom.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->4","4->0","5->1"],"reference_code":"class WalkIntoBedroom:\n\n    title = \"Walk into bedroom.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put towel around waist\"\n\n    def step1(self):\n        return \"grab the door knob\"\n\n    def step2(self):\n        return \"turn the door knob\"\n\n    def step3(self):\n        return \"push the door open\"\n\n    def step4(self):\n        return \"step through the doorway\"\n\n    def step5(self):\n        return \"walk down the hall\"\n\n    def step6(self):\n        return \"Walk into bedroom.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkIntoBedroom:\n\n    title = \"Walk into bedroom.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk into bedroom.","num_steps":7,"schema":["step0: Put towel around waist","step1: grab the door knob","step2: turn the door knob","step3: push the door open","step4: step through the doorway","step5: walk down the hall","step6: Walk into bedroom."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"retrieve running clothes","events":{"0":"Pull running clothes to self.","1":"Reach out with arm towards running clothes.","2":"Turn away from closet with clothes.","3":"Grasp running clothes with hand.","4":"Spot running clothes by sight.","5":"walk to the closet","6":"retrieve running clothes"},"context":"walk to the closet","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0333333333,"3":0.0333333333,"4":0.1166666667},"flatten_input_for_edge_prediction":"step0: Pull running clothes to self.; step1: Reach out with arm towards running clothes.; step2: Turn away from closet with clothes.; step3: Grasp running clothes with hand.; step4: Spot running clothes by sight.; step5: walk to the closet; step6: retrieve running clothes","flatten_input_for_script_generation":"You want to retrieve running clothes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: walk to the closet; step1: Spot running clothes by sight.; step2: Reach out with arm towards running clothes.; step3: Grasp running clothes with hand.; step4: Pull running clothes to self.; step5: Turn away from closet with clothes.; step6: retrieve running clothes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->0","4->1","5->4"],"reference_code":"class RetrieveRunningClothes:\n\n    title = \"retrieve running clothes\"\n    steps = 7\n\n    def step0(self):\n        return \"walk to the closet\"\n\n    def step1(self):\n        return \"Spot running clothes by sight.\"\n\n    def step2(self):\n        return \"Reach out with arm towards running clothes.\"\n\n    def step3(self):\n        return \"Grasp running clothes with hand.\"\n\n    def step4(self):\n        return \"Pull running clothes to self.\"\n\n    def step5(self):\n        return \"Turn away from closet with clothes.\"\n\n    def step6(self):\n        return \"retrieve running clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RetrieveRunningClothes:\n\n    title = \"retrieve running clothes\"\n    steps = 7\n\n","reference_graph":{"title":"retrieve running clothes","num_steps":7,"schema":["step0: walk to the closet","step1: Spot running clothes by sight.","step2: Reach out with arm towards running clothes.","step3: Grasp running clothes with hand.","step4: Pull running clothes to self.","step5: Turn away from closet with clothes.","step6: retrieve running clothes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of the car","events":{"0":"stand up from seat","1":"turn body towards outside","2":"place right foot outside car","3":"open car door","4":"place left foot outside car","5":"switch off the engine.","6":"get out of the car"},"context":"switch off the engine.","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0333333333,"3":0.0833333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: stand up from seat; step1: turn body towards outside; step2: place right foot outside car; step3: open car door; step4: place left foot outside car; step5: switch off the engine.; step6: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step4 -> step0; step1 -> step2; step1 -> step4; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: switch off the engine.; step1: open car door; step2: turn body towards outside; step3: place right foot outside car; step4: place left foot outside car; step5: stand up from seat; step6: get out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step4 -> step5; step5 -> step6; step3 -> step5","gold_edges_for_prediction":["0->6","1->2","1->4","2->0","3->1","4->0","5->3"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"switch off the engine.\"\n\n    def step1(self):\n        return \"open car door\"\n\n    def step2(self):\n        return \"turn body towards outside\"\n\n    def step3(self):\n        return \"place right foot outside car\"\n\n    def step4(self):\n        return \"place left foot outside car\"\n\n    def step5(self):\n        return \"stand up from seat\"\n\n    def step6(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step3 -> step5\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n","reference_graph":{"title":"get out of the car","num_steps":7,"schema":["step0: switch off the engine.","step1: open car door","step2: turn body towards outside","step3: place right foot outside car","step4: place left foot outside car","step5: stand up from seat","step6: get out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step4 -> step5","step5 -> step6","step3 -> step5"]}}
{"scenario":"go on the computer","events":{"0":"Turn on the computer monitor","1":"Sit at the computer desk","2":"View computer screen","3":"Grasp mouse with hand","4":"Turn on the computer","5":"determine how to gain muscle","6":"go on the computer"},"context":"determine how to gain muscle","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0833333333,"2":0.0333333333,"3":0.0333333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: Turn on the computer monitor; step1: Sit at the computer desk; step2: View computer screen; step3: Grasp mouse with hand; step4: Turn on the computer; step5: determine how to gain muscle; step6: go on the computer","flatten_input_for_script_generation":"You want to go on the computer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step1 -> step0; step4 -> step3; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: determine how to gain muscle; step1: Sit at the computer desk; step2: Turn on the computer; step3: Turn on the computer monitor; step4: Grasp mouse with hand; step5: View computer screen; step6: go on the computer; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","1->0","2->6","3->2","4->3","5->1"],"reference_code":"class GoOnTheComputer:\n\n    title = \"go on the computer\"\n    steps = 7\n\n    def step0(self):\n        return \"determine how to gain muscle\"\n\n    def step1(self):\n        return \"Sit at the computer desk\"\n\n    def step2(self):\n        return \"Turn on the computer\"\n\n    def step3(self):\n        return \"Turn on the computer monitor\"\n\n    def step4(self):\n        return \"Grasp mouse with hand\"\n\n    def step5(self):\n        return \"View computer screen\"\n\n    def step6(self):\n        return \"go on the computer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoOnTheComputer:\n\n    title = \"go on the computer\"\n    steps = 7\n\n","reference_graph":{"title":"go on the computer","num_steps":7,"schema":["step0: determine how to gain muscle","step1: Sit at the computer desk","step2: Turn on the computer","step3: Turn on the computer monitor","step4: Grasp mouse with hand","step5: View computer screen","step6: go on the computer"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Buy a ticket from the conductor","events":{"0":"enter the bus","1":"take wallet out of pocket","2":"take payment out of wallet","3":"ask conductor for ticket price","4":"wait for bus door to ope","5":"Wait for bus to arrive","6":"Buy a ticket from the conductor"},"context":"Wait for bus to arrive","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: enter the bus; step1: take wallet out of pocket; step2: take payment out of wallet; step3: ask conductor for ticket price; step4: wait for bus door to ope; step5: Wait for bus to arrive; step6: Buy a ticket from the conductor","flatten_input_for_script_generation":"You want to Buy a ticket from the conductor. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Wait for bus to arrive; step1: wait for bus door to ope; step2: enter the bus; step3: ask conductor for ticket price; step4: take wallet out of pocket; step5: take payment out of wallet; step6: Buy a ticket from the conductor; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->1","4->0","5->4"],"reference_code":"class BuyATicketFromTheConductor:\n\n    title = \"Buy a ticket from the conductor\"\n    steps = 7\n\n    def step0(self):\n        return \"Wait for bus to arrive\"\n\n    def step1(self):\n        return \"wait for bus door to ope\"\n\n    def step2(self):\n        return \"enter the bus\"\n\n    def step3(self):\n        return \"ask conductor for ticket price\"\n\n    def step4(self):\n        return \"take wallet out of pocket\"\n\n    def step5(self):\n        return \"take payment out of wallet\"\n\n    def step6(self):\n        return \"Buy a ticket from the conductor\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyATicketFromTheConductor:\n\n    title = \"Buy a ticket from the conductor\"\n    steps = 7\n\n","reference_graph":{"title":"Buy a ticket from the conductor","num_steps":7,"schema":["step0: Wait for bus to arrive","step1: wait for bus door to ope","step2: enter the bus","step3: ask conductor for ticket price","step4: take wallet out of pocket","step5: take payment out of wallet","step6: Buy a ticket from the conductor"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"write down any private info","events":{"0":"remember private info","1":"look for a pen","2":"put hand on pen","3":"find a pen","4":"put pen to paper","5":"Check tax return for errors","6":"write down any private info"},"context":"Check tax return for errors","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: remember private info; step1: look for a pen; step2: put hand on pen; step3: find a pen; step4: put pen to paper; step5: Check tax return for errors; step6: write down any private info","flatten_input_for_script_generation":"You want to write down any private info. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: Check tax return for errors; step1: look for a pen; step2: remember private info; step3: put pen to paper; step4: write down any private info; step5: find a pen; step6: put hand on pen; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->4","1->3","2->4","3->2","4->6","5->0","5->1"],"reference_code":"class WriteDownAnyPrivateInfo:\n\n    title = \"write down any private info\"\n    steps = 7\n\n    def step0(self):\n        return \"Check tax return for errors\"\n\n    def step1(self):\n        return \"look for a pen\"\n\n    def step2(self):\n        return \"remember private info\"\n\n    def step3(self):\n        return \"put pen to paper\"\n\n    def step4(self):\n        return \"write down any private info\"\n\n    def step5(self):\n        return \"find a pen\"\n\n    def step6(self):\n        return \"put hand on pen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class WriteDownAnyPrivateInfo:\n\n    title = \"write down any private info\"\n    steps = 7\n\n","reference_graph":{"title":"write down any private info","num_steps":7,"schema":["step0: Check tax return for errors","step1: look for a pen","step2: remember private info","step3: put pen to paper","step4: write down any private info","step5: find a pen","step6: put hand on pen"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"Continue to alternate between feet.","events":{"0":"Start moving right leg","1":"Choose where to move toward.","2":"Start moving left leg.","3":"Move entire right leg forward including foot.","4":"Go in chosen direction.","5":"Put left foot forward.","6":"Continue to alternate between feet."},"context":"Put left foot forward.","minutes":1.0,"events_minutes":{"0":0.25,"1":0.5,"2":0.25,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: Start moving right leg; step1: Choose where to move toward.; step2: Start moving left leg.; step3: Move entire right leg forward including foot.; step4: Go in chosen direction.; step5: Put left foot forward.; step6: Continue to alternate between feet.","flatten_input_for_script_generation":"You want to Continue to alternate between feet.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Put left foot forward.; step1: Choose where to move toward.; step2: Go in chosen direction.; step3: Start moving right leg; step4: Move entire right leg forward including foot.; step5: Start moving left leg.; step6: Continue to alternate between feet.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->2","4->0","5->1"],"reference_code":"class ContinueToAlternateBetweenFeet:\n\n    title = \"Continue to alternate between feet.\"\n    steps = 7\n\n    def step0(self):\n        return \"Put left foot forward.\"\n\n    def step1(self):\n        return \"Choose where to move toward.\"\n\n    def step2(self):\n        return \"Go in chosen direction.\"\n\n    def step3(self):\n        return \"Start moving right leg\"\n\n    def step4(self):\n        return \"Move entire right leg forward including foot.\"\n\n    def step5(self):\n        return \"Start moving left leg.\"\n\n    def step6(self):\n        return \"Continue to alternate between feet.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ContinueToAlternateBetweenFeet:\n\n    title = \"Continue to alternate between feet.\"\n    steps = 7\n\n","reference_graph":{"title":"Continue to alternate between feet.","num_steps":7,"schema":["step0: Put left foot forward.","step1: Choose where to move toward.","step2: Go in chosen direction.","step3: Start moving right leg","step4: Move entire right leg forward including foot.","step5: Start moving left leg.","step6: Continue to alternate between feet."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Select the desired ticket option","events":{"0":"narrow down ticket options","1":"find ticket options","2":"look for ticket options","3":"click on that option","4":"decide best option","5":"Input departure location","6":"Select the desired ticket option"},"context":"Input departure location","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: narrow down ticket options; step1: find ticket options; step2: look for ticket options; step3: click on that option; step4: decide best option; step5: Input departure location; step6: Select the desired ticket option","flatten_input_for_script_generation":"You want to Select the desired ticket option. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Input departure location; step1: look for ticket options; step2: find ticket options; step3: narrow down ticket options; step4: decide best option; step5: click on that option; step6: Select the desired ticket option; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->6","4->3","5->2"],"reference_code":"class SelectTheDesiredTicketOption:\n\n    title = \"Select the desired ticket option\"\n    steps = 7\n\n    def step0(self):\n        return \"Input departure location\"\n\n    def step1(self):\n        return \"look for ticket options\"\n\n    def step2(self):\n        return \"find ticket options\"\n\n    def step3(self):\n        return \"narrow down ticket options\"\n\n    def step4(self):\n        return \"decide best option\"\n\n    def step5(self):\n        return \"click on that option\"\n\n    def step6(self):\n        return \"Select the desired ticket option\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SelectTheDesiredTicketOption:\n\n    title = \"Select the desired ticket option\"\n    steps = 7\n\n","reference_graph":{"title":"Select the desired ticket option","num_steps":7,"schema":["step0: Input departure location","step1: look for ticket options","step2: find ticket options","step3: narrow down ticket options","step4: decide best option","step5: click on that option","step6: Select the desired ticket option"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Spot a car leaving the space.","events":{"0":"keep hands on wheel","1":"move eyes around parking lot","2":"slow down speed","3":"look for cars flashing lights","4":"look for cars moving","5":"Drive around parking lot looking for a spot.","6":"Spot a car leaving the space."},"context":"Drive around parking lot looking for a spot.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: keep hands on wheel; step1: move eyes around parking lot; step2: slow down speed; step3: look for cars flashing lights; step4: look for cars moving; step5: Drive around parking lot looking for a spot.; step6: Spot a car leaving the space.","flatten_input_for_script_generation":"You want to Spot a car leaving the space.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step3 -> step6; step1 -> step4; step1 -> step3; step0 -> step2; step2 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: Drive around parking lot looking for a spot.; step1: keep hands on wheel; step2: look for cars moving; step3: Spot a car leaving the space.; step4: look for cars flashing lights; step5: move eyes around parking lot; step6: slow down speed; step0 -> step1; step2 -> step3; step4 -> step3; step5 -> step2; step5 -> step4; step1 -> step6; step6 -> step5","gold_edges_for_prediction":["0->2","1->4","1->3","2->1","3->6","4->6","5->0"],"reference_code":"class SpotACarLeavingTheSpace:\n\n    title = \"Spot a car leaving the space.\"\n    steps = 7\n\n    def step0(self):\n        return \"Drive around parking lot looking for a spot.\"\n\n    def step1(self):\n        return \"keep hands on wheel\"\n\n    def step2(self):\n        return \"look for cars moving\"\n\n    def step3(self):\n        return \"Spot a car leaving the space.\"\n\n    def step4(self):\n        return \"look for cars flashing lights\"\n\n    def step5(self):\n        return \"move eyes around parking lot\"\n\n    def step6(self):\n        return \"slow down speed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step5 -> step2\",\n            \"step5 -> step4\",\n            \"step1 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class SpotACarLeavingTheSpace:\n\n    title = \"Spot a car leaving the space.\"\n    steps = 7\n\n","reference_graph":{"title":"Spot a car leaving the space.","num_steps":7,"schema":["step0: Drive around parking lot looking for a spot.","step1: keep hands on wheel","step2: look for cars moving","step3: Spot a car leaving the space.","step4: look for cars flashing lights","step5: move eyes around parking lot","step6: slow down speed"],"relations":["step0 -> step1","step2 -> step3","step4 -> step3","step5 -> step2","step5 -> step4","step1 -> step6","step6 -> step5"]}}
{"scenario":"apply to several jobs","events":{"0":"Open job applications","1":"Read job descriptions","2":"Click on job links","3":"Attach resume to applications","4":"Fill out applications","5":"look online for postings","6":"apply to several jobs"},"context":"look online for postings","minutes":2880.0,"events_minutes":{"0":2.0,"1":45.0,"2":10.0,"3":5.0,"4":30.0},"flatten_input_for_edge_prediction":"step0: Open job applications; step1: Read job descriptions; step2: Click on job links; step3: Attach resume to applications; step4: Fill out applications; step5: look online for postings; step6: apply to several jobs","flatten_input_for_script_generation":"You want to apply to several jobs. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: look online for postings; step1: Click on job links; step2: Read job descriptions; step3: Open job applications; step4: Fill out applications; step5: Attach resume to applications; step6: apply to several jobs; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->6","4->3","5->2"],"reference_code":"class ApplyToSeveralJobs:\n\n    title = \"apply to several jobs\"\n    steps = 7\n\n    def step0(self):\n        return \"look online for postings\"\n\n    def step1(self):\n        return \"Click on job links\"\n\n    def step2(self):\n        return \"Read job descriptions\"\n\n    def step3(self):\n        return \"Open job applications\"\n\n    def step4(self):\n        return \"Fill out applications\"\n\n    def step5(self):\n        return \"Attach resume to applications\"\n\n    def step6(self):\n        return \"apply to several jobs\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ApplyToSeveralJobs:\n\n    title = \"apply to several jobs\"\n    steps = 7\n\n","reference_graph":{"title":"apply to several jobs","num_steps":7,"schema":["step0: look online for postings","step1: Click on job links","step2: Read job descriptions","step3: Open job applications","step4: Fill out applications","step5: Attach resume to applications","step6: apply to several jobs"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Confer with colleagues.","events":{"0":"meet with colleagues","1":"receive feedback and collaborate","2":"contact all colleagues","3":"make final decision","4":"tell colleagues about interviews","5":"Spend time with each interviewee","6":"Confer with colleagues."},"context":"Spend time with each interviewee","minutes":60.0,"events_minutes":{"0":10.0,"1":60.0,"2":10.0,"3":30.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: meet with colleagues; step1: receive feedback and collaborate; step2: contact all colleagues; step3: make final decision; step4: tell colleagues about interviews; step5: Spend time with each interviewee; step6: Confer with colleagues.","flatten_input_for_script_generation":"You want to Confer with colleagues.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step4; step0 -> step1; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Spend time with each interviewee; step1: contact all colleagues; step2: meet with colleagues; step3: tell colleagues about interviews; step4: receive feedback and collaborate; step5: make final decision; step6: Confer with colleagues.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","2->4","3->6","4->1","5->2"],"reference_code":"class ConferWithColleagues:\n\n    title = \"Confer with colleagues.\"\n    steps = 7\n\n    def step0(self):\n        return \"Spend time with each interviewee\"\n\n    def step1(self):\n        return \"contact all colleagues\"\n\n    def step2(self):\n        return \"meet with colleagues\"\n\n    def step3(self):\n        return \"tell colleagues about interviews\"\n\n    def step4(self):\n        return \"receive feedback and collaborate\"\n\n    def step5(self):\n        return \"make final decision\"\n\n    def step6(self):\n        return \"Confer with colleagues.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ConferWithColleagues:\n\n    title = \"Confer with colleagues.\"\n    steps = 7\n\n","reference_graph":{"title":"Confer with colleagues.","num_steps":7,"schema":["step0: Spend time with each interviewee","step1: contact all colleagues","step2: meet with colleagues","step3: tell colleagues about interviews","step4: receive feedback and collaborate","step5: make final decision","step6: Confer with colleagues."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Book lessons with the instructor.","events":{"0":"Assess the pros and cons of the third available time.","1":"Choose the most appealing time.","2":"Plot out three available times","3":"Assess the pros and cons of the second available time.","4":"Assess the pros and cons of the first available time.","5":"Discuss schedule availability with instructor.","6":"Book lessons with the instructor."},"context":"Discuss schedule availability with instructor.","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":3.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Assess the pros and cons of the third available time.; step1: Choose the most appealing time.; step2: Plot out three available times; step3: Assess the pros and cons of the second available time.; step4: Assess the pros and cons of the first available time.; step5: Discuss schedule availability with instructor.; step6: Book lessons with the instructor.","flatten_input_for_script_generation":"You want to Book lessons with the instructor.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Discuss schedule availability with instructor.; step1: Plot out three available times; step2: Assess the pros and cons of the first available time.; step3: Assess the pros and cons of the second available time.; step4: Assess the pros and cons of the third available time.; step5: Choose the most appealing time.; step6: Book lessons with the instructor.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class BookLessonsWithTheInstructor:\n\n    title = \"Book lessons with the instructor.\"\n    steps = 7\n\n    def step0(self):\n        return \"Discuss schedule availability with instructor.\"\n\n    def step1(self):\n        return \"Plot out three available times\"\n\n    def step2(self):\n        return \"Assess the pros and cons of the first available time.\"\n\n    def step3(self):\n        return \"Assess the pros and cons of the second available time.\"\n\n    def step4(self):\n        return \"Assess the pros and cons of the third available time.\"\n\n    def step5(self):\n        return \"Choose the most appealing time.\"\n\n    def step6(self):\n        return \"Book lessons with the instructor.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BookLessonsWithTheInstructor:\n\n    title = \"Book lessons with the instructor.\"\n    steps = 7\n\n","reference_graph":{"title":"Book lessons with the instructor.","num_steps":7,"schema":["step0: Discuss schedule availability with instructor.","step1: Plot out three available times","step2: Assess the pros and cons of the first available time.","step3: Assess the pros and cons of the second available time.","step4: Assess the pros and cons of the third available time.","step5: Choose the most appealing time.","step6: Book lessons with the instructor."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to locker room","events":{"0":"Move right foot forward","1":"Lift right foot up","2":"Look for locker room","3":"Continue to locker room","4":"Move left foot forward","5":"Lift left foot up","6":"Turn towards locker room","7":"show front desk gym pass","8":"walk to locker room"},"context":"show front desk gym pass","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0833333333,"3":0.1666666667,"4":0.0166666667,"5":0.0166666667,"6":0.0333333333},"flatten_input_for_edge_prediction":"step0: Move right foot forward; step1: Lift right foot up; step2: Look for locker room; step3: Continue to locker room; step4: Move left foot forward; step5: Lift left foot up; step6: Turn towards locker room; step7: show front desk gym pass; step8: walk to locker room","flatten_input_for_script_generation":"You want to walk to locker room. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step6 -> step5; step6 -> step1; step5 -> step4; step1 -> step0; step4 -> step3; step0 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: show front desk gym pass; step1: Look for locker room; step2: Turn towards locker room; step3: Lift left foot up; step4: Lift right foot up; step5: Move left foot forward; step6: Move right foot forward; step7: Continue to locker room; step8: walk to locker room; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","1->0","2->6","3->8","4->3","5->4","6->5","6->1","7->2"],"reference_code":"class WalkToLockerRoom:\n\n    title = \"walk to locker room\"\n    steps = 9\n\n    def step0(self):\n        return \"show front desk gym pass\"\n\n    def step1(self):\n        return \"Look for locker room\"\n\n    def step2(self):\n        return \"Turn towards locker room\"\n\n    def step3(self):\n        return \"Lift left foot up\"\n\n    def step4(self):\n        return \"Lift right foot up\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Continue to locker room\"\n\n    def step8(self):\n        return \"walk to locker room\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WalkToLockerRoom:\n\n    title = \"walk to locker room\"\n    steps = 9\n\n","reference_graph":{"title":"walk to locker room","num_steps":9,"schema":["step0: show front desk gym pass","step1: Look for locker room","step2: Turn towards locker room","step3: Lift left foot up","step4: Lift right foot up","step5: Move left foot forward","step6: Move right foot forward","step7: Continue to locker room","step8: walk to locker room"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"Set the alarm.","events":{"0":"open the clock app on a cell phone","1":"tap to set a new alarm","2":"make sure am\/pm is set correctly","3":"set time for alarm","4":"set the alarm sound to be used","5":"Decide on an alarm time.","6":"Set the alarm."},"context":"Decide on an alarm time.","minutes":0.5,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0333333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the clock app on a cell phone; step1: tap to set a new alarm; step2: make sure am\/pm is set correctly; step3: set time for alarm; step4: set the alarm sound to be used; step5: Decide on an alarm time.; step6: Set the alarm.","flatten_input_for_script_generation":"You want to Set the alarm.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step1 -> step2; step1 -> step4; step3 -> step6; step2 -> step6; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Decide on an alarm time.; step1: open the clock app on a cell phone; step2: tap to set a new alarm; step3: set time for alarm; step4: make sure am\/pm is set correctly; step5: set the alarm sound to be used; step6: Set the alarm.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","1->2","1->4","2->6","3->6","4->6","5->0"],"reference_code":"class SetTheAlarm:\n\n    title = \"Set the alarm.\"\n    steps = 7\n\n    def step0(self):\n        return \"Decide on an alarm time.\"\n\n    def step1(self):\n        return \"open the clock app on a cell phone\"\n\n    def step2(self):\n        return \"tap to set a new alarm\"\n\n    def step3(self):\n        return \"set time for alarm\"\n\n    def step4(self):\n        return \"make sure am\/pm is set correctly\"\n\n    def step5(self):\n        return \"set the alarm sound to be used\"\n\n    def step6(self):\n        return \"Set the alarm.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SetTheAlarm:\n\n    title = \"Set the alarm.\"\n    steps = 7\n\n","reference_graph":{"title":"Set the alarm.","num_steps":7,"schema":["step0: Decide on an alarm time.","step1: open the clock app on a cell phone","step2: tap to set a new alarm","step3: set time for alarm","step4: make sure am\/pm is set correctly","step5: set the alarm sound to be used","step6: Set the alarm."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step6","step5 -> step6"]}}
{"scenario":"walk to the bathroom","events":{"0":"turn on the light","1":"walk to light switch","2":"open the door","3":"put on slippers","4":"start to walk","5":"get out of bed","6":"walk to the bathroom"},"context":"get out of bed","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0833333333,"2":0.05,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: turn on the light; step1: walk to light switch; step2: open the door; step3: put on slippers; step4: start to walk; step5: get out of bed; step6: walk to the bathroom","flatten_input_for_script_generation":"You want to walk to the bathroom. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step1 -> step0; step0 -> step2; step2 -> step6; step4 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: get out of bed; step1: put on slippers; step2: start to walk; step3: walk to light switch; step4: turn on the light; step5: open the door; step6: walk to the bathroom; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","4->1","5->3"],"reference_code":"class WalkToTheBathroom:\n\n    title = \"walk to the bathroom\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of bed\"\n\n    def step1(self):\n        return \"put on slippers\"\n\n    def step2(self):\n        return \"start to walk\"\n\n    def step3(self):\n        return \"walk to light switch\"\n\n    def step4(self):\n        return \"turn on the light\"\n\n    def step5(self):\n        return \"open the door\"\n\n    def step6(self):\n        return \"walk to the bathroom\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheBathroom:\n\n    title = \"walk to the bathroom\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the bathroom","num_steps":7,"schema":["step0: get out of bed","step1: put on slippers","step2: start to walk","step3: walk to light switch","step4: turn on the light","step5: open the door","step6: walk to the bathroom"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"stand in line","events":{"0":"walk to the end of the line","1":"look around place","2":"stay in place","3":"locate the line","4":"walk towards the line","5":"go to ticket location","6":"stand in line"},"context":"go to ticket location","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.0333333333,"3":0.0333333333,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: walk to the end of the line; step1: look around place; step2: stay in place; step3: locate the line; step4: walk towards the line; step5: go to ticket location; step6: stand in line","flatten_input_for_script_generation":"You want to stand in line. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go to ticket location; step1: look around place; step2: locate the line; step3: walk towards the line; step4: walk to the end of the line; step5: stay in place; step6: stand in line; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->6","3->4","4->0","5->1"],"reference_code":"class StandInLine:\n\n    title = \"stand in line\"\n    steps = 7\n\n    def step0(self):\n        return \"go to ticket location\"\n\n    def step1(self):\n        return \"look around place\"\n\n    def step2(self):\n        return \"locate the line\"\n\n    def step3(self):\n        return \"walk towards the line\"\n\n    def step4(self):\n        return \"walk to the end of the line\"\n\n    def step5(self):\n        return \"stay in place\"\n\n    def step6(self):\n        return \"stand in line\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StandInLine:\n\n    title = \"stand in line\"\n    steps = 7\n\n","reference_graph":{"title":"stand in line","num_steps":7,"schema":["step0: go to ticket location","step1: look around place","step2: locate the line","step3: walk towards the line","step4: walk to the end of the line","step5: stay in place","step6: stand in line"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make a preliminary design","events":{"0":"read important info","1":"sketch a mental outline","2":"write down design","3":"review notes and adjust","4":"take notes as needed","5":"look up more information","6":"make a preliminary design"},"context":"look up more information","minutes":2880.0,"events_minutes":{"0":20.0,"1":2.0,"2":30.0,"3":3.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: read important info; step1: sketch a mental outline; step2: write down design; step3: review notes and adjust; step4: take notes as needed; step5: look up more information; step6: make a preliminary design","flatten_input_for_script_generation":"You want to make a preliminary design. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step0; step5 -> step4","flatten_output_for_script_generation":"step0: look up more information; step1: take notes as needed; step2: read important info; step3: sketch a mental outline; step4: write down design; step5: review notes and adjust; step6: make a preliminary design; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->1","4->3","5->0","5->4"],"reference_code":"class MakeAPreliminaryDesign:\n\n    title = \"make a preliminary design\"\n    steps = 7\n\n    def step0(self):\n        return \"look up more information\"\n\n    def step1(self):\n        return \"take notes as needed\"\n\n    def step2(self):\n        return \"read important info\"\n\n    def step3(self):\n        return \"sketch a mental outline\"\n\n    def step4(self):\n        return \"write down design\"\n\n    def step5(self):\n        return \"review notes and adjust\"\n\n    def step6(self):\n        return \"make a preliminary design\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class MakeAPreliminaryDesign:\n\n    title = \"make a preliminary design\"\n    steps = 7\n\n","reference_graph":{"title":"make a preliminary design","num_steps":7,"schema":["step0: look up more information","step1: take notes as needed","step2: read important info","step3: sketch a mental outline","step4: write down design","step5: review notes and adjust","step6: make a preliminary design"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"pull into parking lot","events":{"0":"drive to destination","1":"drive to parking lot","2":"find signs for parking","3":"look for signs for parking","4":"wait for traffic to clear","5":"get stuck in traffic","6":"pull into parking lot"},"context":"get stuck in traffic","minutes":4.0,"events_minutes":{"0":60.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: drive to destination; step1: drive to parking lot; step2: find signs for parking; step3: look for signs for parking; step4: wait for traffic to clear; step5: get stuck in traffic; step6: pull into parking lot","flatten_input_for_script_generation":"You want to pull into parking lot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step0 -> step3; step3 -> step2; step2 -> step6; step1 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: get stuck in traffic; step1: wait for traffic to clear; step2: drive to destination; step3: drive to parking lot; step4: look for signs for parking; step5: find signs for parking; step6: pull into parking lot; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->3","1->2","2->6","3->2","4->0","5->4"],"reference_code":"class PullIntoParkingLot:\n\n    title = \"pull into parking lot\"\n    steps = 7\n\n    def step0(self):\n        return \"get stuck in traffic\"\n\n    def step1(self):\n        return \"wait for traffic to clear\"\n\n    def step2(self):\n        return \"drive to destination\"\n\n    def step3(self):\n        return \"drive to parking lot\"\n\n    def step4(self):\n        return \"look for signs for parking\"\n\n    def step5(self):\n        return \"find signs for parking\"\n\n    def step6(self):\n        return \"pull into parking lot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullIntoParkingLot:\n\n    title = \"pull into parking lot\"\n    steps = 7\n\n","reference_graph":{"title":"pull into parking lot","num_steps":7,"schema":["step0: get stuck in traffic","step1: wait for traffic to clear","step2: drive to destination","step3: drive to parking lot","step4: look for signs for parking","step5: find signs for parking","step6: pull into parking lot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk towards the zoo.","events":{"0":"turn body towards zoo","1":"find the zoo","2":"put left foot forward","3":"look for the zoo","4":"put right foot forward","5":"close the door.","6":"walk towards the zoo."},"context":"close the door.","minutes":3.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn body towards zoo; step1: find the zoo; step2: put left foot forward; step3: look for the zoo; step4: put right foot forward; step5: close the door.; step6: walk towards the zoo.","flatten_input_for_script_generation":"You want to walk towards the zoo.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step0 -> step4; step2 -> step6; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: close the door.; step1: look for the zoo; step2: find the zoo; step3: turn body towards zoo; step4: put left foot forward; step5: put right foot forward; step6: walk towards the zoo.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","0->4","1->0","2->6","3->1","4->6","5->3"],"reference_code":"class WalkTowardsTheZoo:\n\n    title = \"walk towards the zoo.\"\n    steps = 7\n\n    def step0(self):\n        return \"close the door.\"\n\n    def step1(self):\n        return \"look for the zoo\"\n\n    def step2(self):\n        return \"find the zoo\"\n\n    def step3(self):\n        return \"turn body towards zoo\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"walk towards the zoo.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkTowardsTheZoo:\n\n    title = \"walk towards the zoo.\"\n    steps = 7\n\n","reference_graph":{"title":"walk towards the zoo.","num_steps":7,"schema":["step0: close the door.","step1: look for the zoo","step2: find the zoo","step3: turn body towards zoo","step4: put left foot forward","step5: put right foot forward","step6: walk towards the zoo."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"order charcuterie and wine","events":{"0":"pick a charcuterie","1":"look for wines","2":"look for charcuterie","3":"ask for a recipe","4":"pick a wine","5":"get in line at the wine and cheese counter","6":"order charcuterie and wine"},"context":"get in line at the wine and cheese counter","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: pick a charcuterie; step1: look for wines; step2: look for charcuterie; step3: ask for a recipe; step4: pick a wine; step5: get in line at the wine and cheese counter; step6: order charcuterie and wine","flatten_input_for_script_generation":"You want to order charcuterie and wine. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step3 -> step1; step2 -> step0; step0 -> step6; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: get in line at the wine and cheese counter; step1: ask for a recipe; step2: look for charcuterie; step3: look for wines; step4: pick a charcuterie; step5: pick a wine; step6: order charcuterie and wine; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","3->1","4->6","5->3"],"reference_code":"class OrderCharcuterieAndWine:\n\n    title = \"order charcuterie and wine\"\n    steps = 7\n\n    def step0(self):\n        return \"get in line at the wine and cheese counter\"\n\n    def step1(self):\n        return \"ask for a recipe\"\n\n    def step2(self):\n        return \"look for charcuterie\"\n\n    def step3(self):\n        return \"look for wines\"\n\n    def step4(self):\n        return \"pick a charcuterie\"\n\n    def step5(self):\n        return \"pick a wine\"\n\n    def step6(self):\n        return \"order charcuterie and wine\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrderCharcuterieAndWine:\n\n    title = \"order charcuterie and wine\"\n    steps = 7\n\n","reference_graph":{"title":"order charcuterie and wine","num_steps":7,"schema":["step0: get in line at the wine and cheese counter","step1: ask for a recipe","step2: look for charcuterie","step3: look for wines","step4: pick a charcuterie","step5: pick a wine","step6: order charcuterie and wine"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"try out for the spot","events":{"0":"announce intention to try out","1":"look for tryout spot","2":"walk to tryout spot","3":"find tryout spot","4":"enter tryout spot","5":"go to the gym","6":"try out for the spot"},"context":"go to the gym","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: announce intention to try out; step1: look for tryout spot; step2: walk to tryout spot; step3: find tryout spot; step4: enter tryout spot; step5: go to the gym; step6: try out for the spot","flatten_input_for_script_generation":"You want to try out for the spot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go to the gym; step1: look for tryout spot; step2: find tryout spot; step3: walk to tryout spot; step4: enter tryout spot; step5: announce intention to try out; step6: try out for the spot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class TryOutForTheSpot:\n\n    title = \"try out for the spot\"\n    steps = 7\n\n    def step0(self):\n        return \"go to the gym\"\n\n    def step1(self):\n        return \"look for tryout spot\"\n\n    def step2(self):\n        return \"find tryout spot\"\n\n    def step3(self):\n        return \"walk to tryout spot\"\n\n    def step4(self):\n        return \"enter tryout spot\"\n\n    def step5(self):\n        return \"announce intention to try out\"\n\n    def step6(self):\n        return \"try out for the spot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TryOutForTheSpot:\n\n    title = \"try out for the spot\"\n    steps = 7\n\n","reference_graph":{"title":"try out for the spot","num_steps":7,"schema":["step0: go to the gym","step1: look for tryout spot","step2: find tryout spot","step3: walk to tryout spot","step4: enter tryout spot","step5: announce intention to try out","step6: try out for the spot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"turn off car when set.","events":{"0":"turn the key","1":"grab the key","2":"make sure car is completely in parking spot","3":"put the cart on park","4":"extend a hand","5":"move car between the lines","6":"turn off car when set."},"context":"move car between the lines","minutes":1.0,"events_minutes":{"0":0.05,"1":0.05,"2":0.5,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: turn the key; step1: grab the key; step2: make sure car is completely in parking spot; step3: put the cart on park; step4: extend a hand; step5: move car between the lines; step6: turn off car when set.","flatten_input_for_script_generation":"You want to turn off car when set.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: move car between the lines; step1: make sure car is completely in parking spot; step2: put the cart on park; step3: extend a hand; step4: grab the key; step5: turn the key; step6: turn off car when set.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->4","4->1","5->2"],"reference_code":"class TurnOffCarWhenSet:\n\n    title = \"turn off car when set.\"\n    steps = 7\n\n    def step0(self):\n        return \"move car between the lines\"\n\n    def step1(self):\n        return \"make sure car is completely in parking spot\"\n\n    def step2(self):\n        return \"put the cart on park\"\n\n    def step3(self):\n        return \"extend a hand\"\n\n    def step4(self):\n        return \"grab the key\"\n\n    def step5(self):\n        return \"turn the key\"\n\n    def step6(self):\n        return \"turn off car when set.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TurnOffCarWhenSet:\n\n    title = \"turn off car when set.\"\n    steps = 7\n\n","reference_graph":{"title":"turn off car when set.","num_steps":7,"schema":["step0: move car between the lines","step1: make sure car is completely in parking spot","step2: put the cart on park","step3: extend a hand","step4: grab the key","step5: turn the key","step6: turn off car when set."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"brush teeth in bathroom","events":{"0":"turn on sink","1":"pick up the toothpaste","2":"pick up the toothbrush","3":"brush teeth and spit into sink","4":"squeeze toothpaste onto brush","5":"dry off body","6":"brush teeth in bathroom"},"context":"dry off body","minutes":2.0,"events_minutes":{"0":0.05,"1":0.0666666667,"2":0.05,"3":4.0,"4":0.05},"flatten_input_for_edge_prediction":"step0: turn on sink; step1: pick up the toothpaste; step2: pick up the toothbrush; step3: brush teeth and spit into sink; step4: squeeze toothpaste onto brush; step5: dry off body; step6: brush teeth in bathroom","flatten_input_for_script_generation":"You want to brush teeth in bathroom. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: dry off body; step1: pick up the toothbrush; step2: pick up the toothpaste; step3: squeeze toothpaste onto brush; step4: turn on sink; step5: brush teeth and spit into sink; step6: brush teeth in bathroom; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->6","4->0","5->2"],"reference_code":"class BrushTeethInBathroom:\n\n    title = \"brush teeth in bathroom\"\n    steps = 7\n\n    def step0(self):\n        return \"dry off body\"\n\n    def step1(self):\n        return \"pick up the toothbrush\"\n\n    def step2(self):\n        return \"pick up the toothpaste\"\n\n    def step3(self):\n        return \"squeeze toothpaste onto brush\"\n\n    def step4(self):\n        return \"turn on sink\"\n\n    def step5(self):\n        return \"brush teeth and spit into sink\"\n\n    def step6(self):\n        return \"brush teeth in bathroom\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BrushTeethInBathroom:\n\n    title = \"brush teeth in bathroom\"\n    steps = 7\n\n","reference_graph":{"title":"brush teeth in bathroom","num_steps":7,"schema":["step0: dry off body","step1: pick up the toothbrush","step2: pick up the toothpaste","step3: squeeze toothpaste onto brush","step4: turn on sink","step5: brush teeth and spit into sink","step6: brush teeth in bathroom"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put clothing on.","events":{"0":"turn body towards clothing","1":"find the clothing","2":"look for clothing","3":"put right foot forward","4":"put left foot forward","5":"dry water from hair","6":"put clothing on."},"context":"dry water from hair","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn body towards clothing; step1: find the clothing; step2: look for clothing; step3: put right foot forward; step4: put left foot forward; step5: dry water from hair; step6: put clothing on.","flatten_input_for_script_generation":"You want to put clothing on.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step0 -> step3; step4 -> step6; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: dry water from hair; step1: look for clothing; step2: find the clothing; step3: turn body towards clothing; step4: put left foot forward; step5: put right foot forward; step6: put clothing on.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","0->3","1->0","2->1","3->6","4->6","5->2"],"reference_code":"class PutClothingOn:\n\n    title = \"put clothing on.\"\n    steps = 7\n\n    def step0(self):\n        return \"dry water from hair\"\n\n    def step1(self):\n        return \"look for clothing\"\n\n    def step2(self):\n        return \"find the clothing\"\n\n    def step3(self):\n        return \"turn body towards clothing\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"put clothing on.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutClothingOn:\n\n    title = \"put clothing on.\"\n    steps = 7\n\n","reference_graph":{"title":"put clothing on.","num_steps":7,"schema":["step0: dry water from hair","step1: look for clothing","step2: find the clothing","step3: turn body towards clothing","step4: put left foot forward","step5: put right foot forward","step6: put clothing on."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"thank the cashier","events":{"0":"receive the receipt from the cashier.","1":"wait for the payment to be processed.","2":"pick up the items that were bought.","3":"wait for the receipt to be printed out.","4":"listen to cashier if receipt should be printed.","5":"pull out credit card out of payment pad","6":"thank the cashier"},"context":"pull out credit card out of payment pad","minutes":1.0,"events_minutes":{"0":0.5,"1":0.25,"2":0.3333333333,"3":0.5,"4":0.25},"flatten_input_for_edge_prediction":"step0: receive the receipt from the cashier.; step1: wait for the payment to be processed.; step2: pick up the items that were bought.; step3: wait for the receipt to be printed out.; step4: listen to cashier if receipt should be printed.; step5: pull out credit card out of payment pad; step6: thank the cashier","flatten_input_for_script_generation":"You want to thank the cashier. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step6; step1 -> step4; step4 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: pull out credit card out of payment pad; step1: wait for the payment to be processed.; step2: wait for the receipt to be printed out.; step3: receive the receipt from the cashier.; step4: pick up the items that were bought.; step5: thank the cashier; step6: listen to cashier if receipt should be printed.; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step2","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class ThankTheCashier:\n\n    title = \"thank the cashier\"\n    steps = 7\n\n    def step0(self):\n        return \"pull out credit card out of payment pad\"\n\n    def step1(self):\n        return \"wait for the payment to be processed.\"\n\n    def step2(self):\n        return \"wait for the receipt to be printed out.\"\n\n    def step3(self):\n        return \"receive the receipt from the cashier.\"\n\n    def step4(self):\n        return \"pick up the items that were bought.\"\n\n    def step5(self):\n        return \"thank the cashier\"\n\n    def step6(self):\n        return \"listen to cashier if receipt should be printed.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ThankTheCashier:\n\n    title = \"thank the cashier\"\n    steps = 7\n\n","reference_graph":{"title":"thank the cashier","num_steps":7,"schema":["step0: pull out credit card out of payment pad","step1: wait for the payment to be processed.","step2: wait for the receipt to be printed out.","step3: receive the receipt from the cashier.","step4: pick up the items that were bought.","step5: thank the cashier","step6: listen to cashier if receipt should be printed."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step2"]}}
{"scenario":"Complete the final paperwork.","events":{"0":"Pick up pen with hand","1":"Sign paperwork with personal signature","2":"Make a copy of paperwork","3":"Submit final paperwork to office","4":"Read lines in the paperwork","5":"Pass the last identity checks","6":"Complete the final paperwork."},"context":"Pass the last identity checks","minutes":10.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":4.0,"3":15.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: Pick up pen with hand; step1: Sign paperwork with personal signature; step2: Make a copy of paperwork; step3: Submit final paperwork to office; step4: Read lines in the paperwork; step5: Pass the last identity checks; step6: Complete the final paperwork.","flatten_input_for_script_generation":"You want to Complete the final paperwork.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Pass the last identity checks; step1: Read lines in the paperwork; step2: Pick up pen with hand; step3: Sign paperwork with personal signature; step4: Make a copy of paperwork; step5: Submit final paperwork to office; step6: Complete the final paperwork.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class CompleteTheFinalPaperwork:\n\n    title = \"Complete the final paperwork.\"\n    steps = 7\n\n    def step0(self):\n        return \"Pass the last identity checks\"\n\n    def step1(self):\n        return \"Read lines in the paperwork\"\n\n    def step2(self):\n        return \"Pick up pen with hand\"\n\n    def step3(self):\n        return \"Sign paperwork with personal signature\"\n\n    def step4(self):\n        return \"Make a copy of paperwork\"\n\n    def step5(self):\n        return \"Submit final paperwork to office\"\n\n    def step6(self):\n        return \"Complete the final paperwork.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CompleteTheFinalPaperwork:\n\n    title = \"Complete the final paperwork.\"\n    steps = 7\n\n","reference_graph":{"title":"Complete the final paperwork.","num_steps":7,"schema":["step0: Pass the last identity checks","step1: Read lines in the paperwork","step2: Pick up pen with hand","step3: Sign paperwork with personal signature","step4: Make a copy of paperwork","step5: Submit final paperwork to office","step6: Complete the final paperwork."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pick a time to meet.","events":{"0":"confirm time with everyone","1":"ask friends for available times","2":"narrow down available times","3":"pick best available times","4":"list available times","5":"Pick the two best ideas.","6":"Pick a time to meet."},"context":"Pick the two best ideas.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: confirm time with everyone; step1: ask friends for available times; step2: narrow down available times; step3: pick best available times; step4: list available times; step5: Pick the two best ideas.; step6: Pick a time to meet.","flatten_input_for_script_generation":"You want to Pick a time to meet.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Pick the two best ideas.; step1: ask friends for available times; step2: list available times; step3: narrow down available times; step4: pick best available times; step5: confirm time with everyone; step6: Pick a time to meet.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->0","4->2","5->1"],"reference_code":"class PickATimeToMeet:\n\n    title = \"Pick a time to meet.\"\n    steps = 7\n\n    def step0(self):\n        return \"Pick the two best ideas.\"\n\n    def step1(self):\n        return \"ask friends for available times\"\n\n    def step2(self):\n        return \"list available times\"\n\n    def step3(self):\n        return \"narrow down available times\"\n\n    def step4(self):\n        return \"pick best available times\"\n\n    def step5(self):\n        return \"confirm time with everyone\"\n\n    def step6(self):\n        return \"Pick a time to meet.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickATimeToMeet:\n\n    title = \"Pick a time to meet.\"\n    steps = 7\n\n","reference_graph":{"title":"Pick a time to meet.","num_steps":7,"schema":["step0: Pick the two best ideas.","step1: ask friends for available times","step2: list available times","step3: narrow down available times","step4: pick best available times","step5: confirm time with everyone","step6: Pick a time to meet."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on training gear","events":{"0":"turn towards gear","1":"arrive at gear","2":"look for training gear","3":"find the gear","4":"walk towards gear","5":"determine training routine","6":"put on training gear"},"context":"determine training routine","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn towards gear; step1: arrive at gear; step2: look for training gear; step3: find the gear; step4: walk towards gear; step5: determine training routine; step6: put on training gear","flatten_input_for_script_generation":"You want to put on training gear. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: determine training routine; step1: look for training gear; step2: find the gear; step3: turn towards gear; step4: walk towards gear; step5: arrive at gear; step6: put on training gear; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class PutOnTrainingGear:\n\n    title = \"put on training gear\"\n    steps = 7\n\n    def step0(self):\n        return \"determine training routine\"\n\n    def step1(self):\n        return \"look for training gear\"\n\n    def step2(self):\n        return \"find the gear\"\n\n    def step3(self):\n        return \"turn towards gear\"\n\n    def step4(self):\n        return \"walk towards gear\"\n\n    def step5(self):\n        return \"arrive at gear\"\n\n    def step6(self):\n        return \"put on training gear\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnTrainingGear:\n\n    title = \"put on training gear\"\n    steps = 7\n\n","reference_graph":{"title":"put on training gear","num_steps":7,"schema":["step0: determine training routine","step1: look for training gear","step2: find the gear","step3: turn towards gear","step4: walk towards gear","step5: arrive at gear","step6: put on training gear"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pay the fee","events":{"0":"look up fee","1":"take payment out of wallet","2":"put hand inside pocket","3":"take wallet out of pocket","4":"find the fee","5":"sign in at entrance","6":"pay the fee"},"context":"sign in at entrance","minutes":2.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look up fee; step1: take payment out of wallet; step2: put hand inside pocket; step3: take wallet out of pocket; step4: find the fee; step5: sign in at entrance; step6: pay the fee","flatten_input_for_script_generation":"You want to pay the fee. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step2 -> step3; step3 -> step1; step1 -> step6; step4 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: sign in at entrance; step1: look up fee; step2: find the fee; step3: put hand inside pocket; step4: take wallet out of pocket; step5: take payment out of wallet; step6: pay the fee; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class PayTheFee:\n\n    title = \"pay the fee\"\n    steps = 7\n\n    def step0(self):\n        return \"sign in at entrance\"\n\n    def step1(self):\n        return \"look up fee\"\n\n    def step2(self):\n        return \"find the fee\"\n\n    def step3(self):\n        return \"put hand inside pocket\"\n\n    def step4(self):\n        return \"take wallet out of pocket\"\n\n    def step5(self):\n        return \"take payment out of wallet\"\n\n    def step6(self):\n        return \"pay the fee\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PayTheFee:\n\n    title = \"pay the fee\"\n    steps = 7\n\n","reference_graph":{"title":"pay the fee","num_steps":7,"schema":["step0: sign in at entrance","step1: look up fee","step2: find the fee","step3: put hand inside pocket","step4: take wallet out of pocket","step5: take payment out of wallet","step6: pay the fee"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"show front desk gym pass","events":{"0":"pull out gym pass","1":"sift through wallet to find pass","2":"pull wallet out from pocket","3":"reach hand into pocket","4":"grab onto the wallet","5":"walk inside gym","6":"show front desk gym pass"},"context":"walk inside gym","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.1666666667,"2":0.05,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: pull out gym pass; step1: sift through wallet to find pass; step2: pull wallet out from pocket; step3: reach hand into pocket; step4: grab onto the wallet; step5: walk inside gym; step6: show front desk gym pass","flatten_input_for_script_generation":"You want to show front desk gym pass. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: walk inside gym; step1: reach hand into pocket; step2: grab onto the wallet; step3: pull wallet out from pocket; step4: sift through wallet to find pass; step5: pull out gym pass; step6: show front desk gym pass; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->4","4->2","5->3"],"reference_code":"class ShowFrontDeskGymPass:\n\n    title = \"show front desk gym pass\"\n    steps = 7\n\n    def step0(self):\n        return \"walk inside gym\"\n\n    def step1(self):\n        return \"reach hand into pocket\"\n\n    def step2(self):\n        return \"grab onto the wallet\"\n\n    def step3(self):\n        return \"pull wallet out from pocket\"\n\n    def step4(self):\n        return \"sift through wallet to find pass\"\n\n    def step5(self):\n        return \"pull out gym pass\"\n\n    def step6(self):\n        return \"show front desk gym pass\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ShowFrontDeskGymPass:\n\n    title = \"show front desk gym pass\"\n    steps = 7\n\n","reference_graph":{"title":"show front desk gym pass","num_steps":7,"schema":["step0: walk inside gym","step1: reach hand into pocket","step2: grab onto the wallet","step3: pull wallet out from pocket","step4: sift through wallet to find pass","step5: pull out gym pass","step6: show front desk gym pass"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"order an Uber.","events":{"0":"navigate to the Uber website","1":"open the web browser","2":"pay for the ride","3":"turn on the computer","4":"select time for the ride","5":"pack a backpack with toiletries.","6":"order an Uber."},"context":"pack a backpack with toiletries.","minutes":3.0,"events_minutes":{"0":0.1666666667,"1":0.25,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: navigate to the Uber website; step1: open the web browser; step2: pay for the ride; step3: turn on the computer; step4: select time for the ride; step5: pack a backpack with toiletries.; step6: order an Uber.","flatten_input_for_script_generation":"You want to order an Uber.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: pack a backpack with toiletries.; step1: turn on the computer; step2: open the web browser; step3: navigate to the Uber website; step4: select time for the ride; step5: pay for the ride; step6: order an Uber.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->2","5->3"],"reference_code":"class OrderAnUber:\n\n    title = \"order an Uber.\"\n    steps = 7\n\n    def step0(self):\n        return \"pack a backpack with toiletries.\"\n\n    def step1(self):\n        return \"turn on the computer\"\n\n    def step2(self):\n        return \"open the web browser\"\n\n    def step3(self):\n        return \"navigate to the Uber website\"\n\n    def step4(self):\n        return \"select time for the ride\"\n\n    def step5(self):\n        return \"pay for the ride\"\n\n    def step6(self):\n        return \"order an Uber.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrderAnUber:\n\n    title = \"order an Uber.\"\n    steps = 7\n\n","reference_graph":{"title":"order an Uber.","num_steps":7,"schema":["step0: pack a backpack with toiletries.","step1: turn on the computer","step2: open the web browser","step3: navigate to the Uber website","step4: select time for the ride","step5: pay for the ride","step6: order an Uber."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"watch a movie on the couch","events":{"0":"turn on TV","1":"look for couch","2":"sit down on couch","3":"choose a movie","4":"find a couch","5":"NONE","6":"watch a movie on the couch"},"context":"NONE","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn on TV; step1: look for couch; step2: sit down on couch; step3: choose a movie; step4: find a couch; step5: decided to watch a movie on the couch; step6: watch a movie on the couch","flatten_input_for_script_generation":"You want to watch a movie on the couch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to watch a movie on the couch; step1: look for couch; step2: find a couch; step3: sit down on couch; step4: turn on TV; step5: choose a movie; step6: watch a movie on the couch; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class WatchAMovieOnTheCouch:\n\n    title = \"watch a movie on the couch\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to watch a movie on the couch\"\n\n    def step1(self):\n        return \"look for couch\"\n\n    def step2(self):\n        return \"find a couch\"\n\n    def step3(self):\n        return \"sit down on couch\"\n\n    def step4(self):\n        return \"turn on TV\"\n\n    def step5(self):\n        return \"choose a movie\"\n\n    def step6(self):\n        return \"watch a movie on the couch\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WatchAMovieOnTheCouch:\n\n    title = \"watch a movie on the couch\"\n    steps = 7\n\n","reference_graph":{"title":"watch a movie on the couch","num_steps":7,"schema":["step0: decided to watch a movie on the couch","step1: look for couch","step2: find a couch","step3: sit down on couch","step4: turn on TV","step5: choose a movie","step6: watch a movie on the couch"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"narrow down to 1 recipe","events":{"0":"weigh the pros and cons of each","1":"look which ingredients are available","2":"read the ingredients list","3":"read the recipe reviews","4":"find out each recipe's difficulty","5":"decide on top 3","6":"narrow down to 1 recipe"},"context":"decide on top 3","minutes":1.0,"events_minutes":{"0":5.0,"1":5.0,"2":5.0,"3":10.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: weigh the pros and cons of each; step1: look which ingredients are available; step2: read the ingredients list; step3: read the recipe reviews; step4: find out each recipe's difficulty; step5: decide on top 3; step6: narrow down to 1 recipe","flatten_input_for_script_generation":"You want to narrow down to 1 recipe. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step6; step3 -> step2; step3 -> step4; step2 -> step1; step1 -> step6; step4 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: decide on top 3; step1: read the recipe reviews; step2: weigh the pros and cons of each; step3: narrow down to 1 recipe; step4: read the ingredients list; step5: find out each recipe's difficulty; step6: look which ingredients are available; step0 -> step1; step2 -> step3; step1 -> step4; step1 -> step5; step4 -> step6; step5 -> step2; step6 -> step3","gold_edges_for_prediction":["0->6","1->6","2->1","3->2","3->4","4->0","5->3"],"reference_code":"class NarrowDownTo1Recipe:\n\n    title = \"narrow down to 1 recipe\"\n    steps = 7\n\n    def step0(self):\n        return \"decide on top 3\"\n\n    def step1(self):\n        return \"read the recipe reviews\"\n\n    def step2(self):\n        return \"weigh the pros and cons of each\"\n\n    def step3(self):\n        return \"narrow down to 1 recipe\"\n\n    def step4(self):\n        return \"read the ingredients list\"\n\n    def step5(self):\n        return \"find out each recipe's difficulty\"\n\n    def step6(self):\n        return \"look which ingredients are available\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step2\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class NarrowDownTo1Recipe:\n\n    title = \"narrow down to 1 recipe\"\n    steps = 7\n\n","reference_graph":{"title":"narrow down to 1 recipe","num_steps":7,"schema":["step0: decide on top 3","step1: read the recipe reviews","step2: weigh the pros and cons of each","step3: narrow down to 1 recipe","step4: read the ingredients list","step5: find out each recipe's difficulty","step6: look which ingredients are available"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step1 -> step5","step4 -> step6","step5 -> step2","step6 -> step3"]}}
{"scenario":"walk to ticket counter","events":{"0":"close car door","1":"turn towards counter","2":"lock car door","3":"look for ticket counter","4":"start walking to counter","5":"get out of car","6":"walk to ticket counter"},"context":"get out of car","minutes":3.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.0833333333,"3":0.1666666667,"4":0.5},"flatten_input_for_edge_prediction":"step0: close car door; step1: turn towards counter; step2: lock car door; step3: look for ticket counter; step4: start walking to counter; step5: get out of car; step6: walk to ticket counter","flatten_input_for_script_generation":"You want to walk to ticket counter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step2 -> step1; step3 -> step4; step1 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get out of car; step1: close car door; step2: lock car door; step3: look for ticket counter; step4: turn towards counter; step5: start walking to counter; step6: walk to ticket counter; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","2->1","3->4","4->6","5->0"],"reference_code":"class WalkToTicketCounter:\n\n    title = \"walk to ticket counter\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of car\"\n\n    def step1(self):\n        return \"close car door\"\n\n    def step2(self):\n        return \"lock car door\"\n\n    def step3(self):\n        return \"look for ticket counter\"\n\n    def step4(self):\n        return \"turn towards counter\"\n\n    def step5(self):\n        return \"start walking to counter\"\n\n    def step6(self):\n        return \"walk to ticket counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTicketCounter:\n\n    title = \"walk to ticket counter\"\n    steps = 7\n\n","reference_graph":{"title":"walk to ticket counter","num_steps":7,"schema":["step0: get out of car","step1: close car door","step2: lock car door","step3: look for ticket counter","step4: turn towards counter","step5: start walking to counter","step6: walk to ticket counter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"turn off computer","events":{"0":"click on menu","1":"locate the shut down option","2":"move the mouse","3":"wait for computer to unfreeze","4":"click on shut down","5":"notice computer having problems","6":"turn off computer"},"context":"notice computer having problems","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.05,"2":0.0333333333,"3":2.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: click on menu; step1: locate the shut down option; step2: move the mouse; step3: wait for computer to unfreeze; step4: click on shut down; step5: notice computer having problems; step6: turn off computer","flatten_input_for_script_generation":"You want to turn off computer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step0 -> step1; step3 -> step2; step2 -> step0; step1 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: notice computer having problems; step1: wait for computer to unfreeze; step2: click on shut down; step3: turn off computer; step4: click on menu; step5: locate the shut down option; step6: move the mouse; step0 -> step1; step2 -> step3; step4 -> step5; step5 -> step2; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class TurnOffComputer:\n\n    title = \"turn off computer\"\n    steps = 7\n\n    def step0(self):\n        return \"notice computer having problems\"\n\n    def step1(self):\n        return \"wait for computer to unfreeze\"\n\n    def step2(self):\n        return \"click on shut down\"\n\n    def step3(self):\n        return \"turn off computer\"\n\n    def step4(self):\n        return \"click on menu\"\n\n    def step5(self):\n        return \"locate the shut down option\"\n\n    def step6(self):\n        return \"move the mouse\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class TurnOffComputer:\n\n    title = \"turn off computer\"\n    steps = 7\n\n","reference_graph":{"title":"turn off computer","num_steps":7,"schema":["step0: notice computer having problems","step1: wait for computer to unfreeze","step2: click on shut down","step3: turn off computer","step4: click on menu","step5: locate the shut down option","step6: move the mouse"],"relations":["step0 -> step1","step2 -> step3","step4 -> step5","step5 -> step2","step1 -> step6","step6 -> step4"]}}
{"scenario":"gather up some sand","events":{"0":"find the sand","1":"look for sand","2":"move right foot towards sand","3":"get out of car","4":"move left foot towards sand","5":"drive to the beach","6":"gather up some sand"},"context":"drive to the beach","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the sand; step1: look for sand; step2: move right foot towards sand; step3: get out of car; step4: move left foot towards sand; step5: drive to the beach; step6: gather up some sand","flatten_input_for_script_generation":"You want to gather up some sand. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step4; step0 -> step2; step4 -> step6; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to the beach; step1: get out of car; step2: look for sand; step3: find the sand; step4: move left foot towards sand; step5: move right foot towards sand; step6: gather up some sand; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","0->2","1->0","2->6","3->1","4->6","5->3"],"reference_code":"class GatherUpSomeSand:\n\n    title = \"gather up some sand\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the beach\"\n\n    def step1(self):\n        return \"get out of car\"\n\n    def step2(self):\n        return \"look for sand\"\n\n    def step3(self):\n        return \"find the sand\"\n\n    def step4(self):\n        return \"move left foot towards sand\"\n\n    def step5(self):\n        return \"move right foot towards sand\"\n\n    def step6(self):\n        return \"gather up some sand\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GatherUpSomeSand:\n\n    title = \"gather up some sand\"\n    steps = 7\n\n","reference_graph":{"title":"gather up some sand","num_steps":7,"schema":["step0: drive to the beach","step1: get out of car","step2: look for sand","step3: find the sand","step4: move left foot towards sand","step5: move right foot towards sand","step6: gather up some sand"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"Walk to the store.","events":{"0":"put the key back in a pocket","1":"look towards the store entrance","2":"make sure the key is actually in the pocket","3":"turn way from the car","4":"take the key out of the lock","5":"Lock the car.","6":"Walk to the store."},"context":"Lock the car.","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: put the key back in a pocket; step1: look towards the store entrance; step2: make sure the key is actually in the pocket; step3: turn way from the car; step4: take the key out of the lock; step5: Lock the car.; step6: Walk to the store.","flatten_input_for_script_generation":"You want to Walk to the store.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Lock the car.; step1: take the key out of the lock; step2: put the key back in a pocket; step3: make sure the key is actually in the pocket; step4: turn way from the car; step5: look towards the store entrance; step6: Walk to the store.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->1","4->0","5->4"],"reference_code":"class WalkToTheStore:\n\n    title = \"Walk to the store.\"\n    steps = 7\n\n    def step0(self):\n        return \"Lock the car.\"\n\n    def step1(self):\n        return \"take the key out of the lock\"\n\n    def step2(self):\n        return \"put the key back in a pocket\"\n\n    def step3(self):\n        return \"make sure the key is actually in the pocket\"\n\n    def step4(self):\n        return \"turn way from the car\"\n\n    def step5(self):\n        return \"look towards the store entrance\"\n\n    def step6(self):\n        return \"Walk to the store.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheStore:\n\n    title = \"Walk to the store.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk to the store.","num_steps":7,"schema":["step0: Lock the car.","step1: take the key out of the lock","step2: put the key back in a pocket","step3: make sure the key is actually in the pocket","step4: turn way from the car","step5: look towards the store entrance","step6: Walk to the store."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"do hair and makeup","events":{"0":"put makeup on face","1":"find makeup bag","2":"stand in front of the bathroom mirror","3":"fix and style hair with hairspray","4":"go to the bathroom with the makeup bag","5":"put on outfit","6":"do hair and makeup"},"context":"put on outfit","minutes":20.0,"events_minutes":{"0":10.0,"1":0.3333333333,"2":0.0833333333,"3":10.0,"4":0.25},"flatten_input_for_edge_prediction":"step0: put makeup on face; step1: find makeup bag; step2: stand in front of the bathroom mirror; step3: fix and style hair with hairspray; step4: go to the bathroom with the makeup bag; step5: put on outfit; step6: do hair and makeup","flatten_input_for_script_generation":"You want to do hair and makeup. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step0 -> step6; step3 -> step6; step2 -> step0; step2 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: put on outfit; step1: find makeup bag; step2: go to the bathroom with the makeup bag; step3: stand in front of the bathroom mirror; step4: put makeup on face; step5: fix and style hair with hairspray; step6: do hair and makeup; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","2->3","3->6","4->2","5->1"],"reference_code":"class DoHairAndMakeup:\n\n    title = \"do hair and makeup\"\n    steps = 7\n\n    def step0(self):\n        return \"put on outfit\"\n\n    def step1(self):\n        return \"find makeup bag\"\n\n    def step2(self):\n        return \"go to the bathroom with the makeup bag\"\n\n    def step3(self):\n        return \"stand in front of the bathroom mirror\"\n\n    def step4(self):\n        return \"put makeup on face\"\n\n    def step5(self):\n        return \"fix and style hair with hairspray\"\n\n    def step6(self):\n        return \"do hair and makeup\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DoHairAndMakeup:\n\n    title = \"do hair and makeup\"\n    steps = 7\n\n","reference_graph":{"title":"do hair and makeup","num_steps":7,"schema":["step0: put on outfit","step1: find makeup bag","step2: go to the bathroom with the makeup bag","step3: stand in front of the bathroom mirror","step4: put makeup on face","step5: fix and style hair with hairspray","step6: do hair and makeup"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"show up on wedding date","events":{"0":"drive to the location","1":"wait for the wedding day","2":"verify that officiant is available on wedding day","3":"get dressed in wedding clothes","4":"pay the officiant in advance","5":"get a person to perform wedding ceremony","6":"show up on wedding date"},"context":"get a person to perform wedding ceremony","minutes":60.0,"events_minutes":{"0":10.0,"1":259200.0,"2":5.0,"3":120.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: drive to the location; step1: wait for the wedding day; step2: verify that officiant is available on wedding day; step3: get dressed in wedding clothes; step4: pay the officiant in advance; step5: get a person to perform wedding ceremony; step6: show up on wedding date","flatten_input_for_script_generation":"You want to show up on wedding date. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: get a person to perform wedding ceremony; step1: wait for the wedding day; step2: verify that officiant is available on wedding day; step3: pay the officiant in advance; step4: get dressed in wedding clothes; step5: drive to the location; step6: show up on wedding date; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step4; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->3","5->2","5->1"],"reference_code":"class ShowUpOnWeddingDate:\n\n    title = \"show up on wedding date\"\n    steps = 7\n\n    def step0(self):\n        return \"get a person to perform wedding ceremony\"\n\n    def step1(self):\n        return \"wait for the wedding day\"\n\n    def step2(self):\n        return \"verify that officiant is available on wedding day\"\n\n    def step3(self):\n        return \"pay the officiant in advance\"\n\n    def step4(self):\n        return \"get dressed in wedding clothes\"\n\n    def step5(self):\n        return \"drive to the location\"\n\n    def step6(self):\n        return \"show up on wedding date\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step4\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ShowUpOnWeddingDate:\n\n    title = \"show up on wedding date\"\n    steps = 7\n\n","reference_graph":{"title":"show up on wedding date","num_steps":7,"schema":["step0: get a person to perform wedding ceremony","step1: wait for the wedding day","step2: verify that officiant is available on wedding day","step3: pay the officiant in advance","step4: get dressed in wedding clothes","step5: drive to the location","step6: show up on wedding date"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step4","step5 -> step6"]}}
{"scenario":"get measuring cup","events":{"0":"look for measuring cup","1":"walk to cupboard","2":"find measuring cup","3":"put hand on measuring cup","4":"open the cupboard","5":"mix the dry ingredients","6":"get measuring cup"},"context":"mix the dry ingredients","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for measuring cup; step1: walk to cupboard; step2: find measuring cup; step3: put hand on measuring cup; step4: open the cupboard; step5: mix the dry ingredients; step6: get measuring cup","flatten_input_for_script_generation":"You want to get measuring cup. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: mix the dry ingredients; step1: walk to cupboard; step2: open the cupboard; step3: look for measuring cup; step4: find measuring cup; step5: put hand on measuring cup; step6: get measuring cup; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class GetMeasuringCup:\n\n    title = \"get measuring cup\"\n    steps = 7\n\n    def step0(self):\n        return \"mix the dry ingredients\"\n\n    def step1(self):\n        return \"walk to cupboard\"\n\n    def step2(self):\n        return \"open the cupboard\"\n\n    def step3(self):\n        return \"look for measuring cup\"\n\n    def step4(self):\n        return \"find measuring cup\"\n\n    def step5(self):\n        return \"put hand on measuring cup\"\n\n    def step6(self):\n        return \"get measuring cup\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetMeasuringCup:\n\n    title = \"get measuring cup\"\n    steps = 7\n\n","reference_graph":{"title":"get measuring cup","num_steps":7,"schema":["step0: mix the dry ingredients","step1: walk to cupboard","step2: open the cupboard","step3: look for measuring cup","step4: find measuring cup","step5: put hand on measuring cup","step6: get measuring cup"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"head to party store","events":{"0":"unlock the car","1":"start the car","2":"close the door of the car","3":"sit down in the car","4":"back out of the driveway","5":"pick up wallet","6":"head to party store"},"context":"pick up wallet","minutes":10.0,"events_minutes":{"0":0.0666666667,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.1166666667},"flatten_input_for_edge_prediction":"step0: unlock the car; step1: start the car; step2: close the door of the car; step3: sit down in the car; step4: back out of the driveway; step5: pick up wallet; step6: head to party store","flatten_input_for_script_generation":"You want to head to party store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: pick up wallet; step1: unlock the car; step2: sit down in the car; step3: close the door of the car; step4: start the car; step5: back out of the driveway; step6: head to party store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->2","4->6","5->0"],"reference_code":"class HeadToPartyStore:\n\n    title = \"head to party store\"\n    steps = 7\n\n    def step0(self):\n        return \"pick up wallet\"\n\n    def step1(self):\n        return \"unlock the car\"\n\n    def step2(self):\n        return \"sit down in the car\"\n\n    def step3(self):\n        return \"close the door of the car\"\n\n    def step4(self):\n        return \"start the car\"\n\n    def step5(self):\n        return \"back out of the driveway\"\n\n    def step6(self):\n        return \"head to party store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HeadToPartyStore:\n\n    title = \"head to party store\"\n    steps = 7\n\n","reference_graph":{"title":"head to party store","num_steps":7,"schema":["step0: pick up wallet","step1: unlock the car","step2: sit down in the car","step3: close the door of the car","step4: start the car","step5: back out of the driveway","step6: head to party store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab some socks and put the socks on","events":{"0":"Set down in a suitable location","1":"Put the second sock over the other foot","2":"Decide which socks is needed","3":"Grab the socks from the drawer","4":"Slip the first sock over one foot","5":"go find the clothes","6":"grab some socks and put the socks on"},"context":"go find the clothes","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.9166666667,"2":0.5,"3":0.5,"4":0.9166666667},"flatten_input_for_edge_prediction":"step0: Set down in a suitable location; step1: Put the second sock over the other foot; step2: Decide which socks is needed; step3: Grab the socks from the drawer; step4: Slip the first sock over one foot; step5: go find the clothes; step6: grab some socks and put the socks on","flatten_input_for_script_generation":"You want to grab some socks and put the socks on. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step0 -> step1; step4 -> step6; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go find the clothes; step1: Decide which socks is needed; step2: Grab the socks from the drawer; step3: Set down in a suitable location; step4: Slip the first sock over one foot; step5: Put the second sock over the other foot; step6: grab some socks and put the socks on; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","0->1","1->6","2->3","3->0","4->6","5->2"],"reference_code":"class GrabSomeSocksAndPutTheSocksOn:\n\n    title = \"grab some socks and put the socks on\"\n    steps = 7\n\n    def step0(self):\n        return \"go find the clothes\"\n\n    def step1(self):\n        return \"Decide which socks is needed\"\n\n    def step2(self):\n        return \"Grab the socks from the drawer\"\n\n    def step3(self):\n        return \"Set down in a suitable location\"\n\n    def step4(self):\n        return \"Slip the first sock over one foot\"\n\n    def step5(self):\n        return \"Put the second sock over the other foot\"\n\n    def step6(self):\n        return \"grab some socks and put the socks on\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabSomeSocksAndPutTheSocksOn:\n\n    title = \"grab some socks and put the socks on\"\n    steps = 7\n\n","reference_graph":{"title":"grab some socks and put the socks on","num_steps":7,"schema":["step0: go find the clothes","step1: Decide which socks is needed","step2: Grab the socks from the drawer","step3: Set down in a suitable location","step4: Slip the first sock over one foot","step5: Put the second sock over the other foot","step6: grab some socks and put the socks on"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"open up car door","events":{"0":"stop in front of car door","1":"take car key out of pocket","2":"unlock car door","3":"grab and pull on car door handle","4":"keep walking towards the car","5":"walk outside to the car","6":"open up car door"},"context":"walk outside to the car","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.05,"2":0.05,"3":0.0333333333,"4":0.25},"flatten_input_for_edge_prediction":"step0: stop in front of car door; step1: take car key out of pocket; step2: unlock car door; step3: grab and pull on car door handle; step4: keep walking towards the car; step5: walk outside to the car; step6: open up car door","flatten_input_for_script_generation":"You want to open up car door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step1 -> step2; step0 -> step1; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: walk outside to the car; step1: keep walking towards the car; step2: stop in front of car door; step3: take car key out of pocket; step4: unlock car door; step5: grab and pull on car door handle; step6: open up car door; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class OpenUpCarDoor:\n\n    title = \"open up car door\"\n    steps = 7\n\n    def step0(self):\n        return \"walk outside to the car\"\n\n    def step1(self):\n        return \"keep walking towards the car\"\n\n    def step2(self):\n        return \"stop in front of car door\"\n\n    def step3(self):\n        return \"take car key out of pocket\"\n\n    def step4(self):\n        return \"unlock car door\"\n\n    def step5(self):\n        return \"grab and pull on car door handle\"\n\n    def step6(self):\n        return \"open up car door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenUpCarDoor:\n\n    title = \"open up car door\"\n    steps = 7\n\n","reference_graph":{"title":"open up car door","num_steps":7,"schema":["step0: walk outside to the car","step1: keep walking towards the car","step2: stop in front of car door","step3: take car key out of pocket","step4: unlock car door","step5: grab and pull on car door handle","step6: open up car door"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sit and watch tv","events":{"0":"find the couch","1":"find remote control","2":"sit down on couch","3":"look for couch","4":"click remote control","5":"NONE","6":"sit and watch tv"},"context":"NONE","minutes":4.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the couch; step1: find remote control; step2: sit down on couch; step3: look for couch; step4: click remote control; step5: decided to sit and watch tv; step6: sit and watch tv","flatten_input_for_script_generation":"You want to sit and watch tv. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to sit and watch tv; step1: look for couch; step2: find the couch; step3: sit down on couch; step4: find remote control; step5: click remote control; step6: sit and watch tv; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->1","3->0","4->6","5->3"],"reference_code":"class SitAndWatchTv:\n\n    title = \"sit and watch tv\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to sit and watch tv\"\n\n    def step1(self):\n        return \"look for couch\"\n\n    def step2(self):\n        return \"find the couch\"\n\n    def step3(self):\n        return \"sit down on couch\"\n\n    def step4(self):\n        return \"find remote control\"\n\n    def step5(self):\n        return \"click remote control\"\n\n    def step6(self):\n        return \"sit and watch tv\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SitAndWatchTv:\n\n    title = \"sit and watch tv\"\n    steps = 7\n\n","reference_graph":{"title":"sit and watch tv","num_steps":7,"schema":["step0: decided to sit and watch tv","step1: look for couch","step2: find the couch","step3: sit down on couch","step4: find remote control","step5: click remote control","step6: sit and watch tv"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"answer cell phone","events":{"0":"tap on the cell phone screen","1":"hear the cell phone ring","2":"pick up the cell phone","3":"reach towards the cell phone","4":"locate the cell phone","5":"landlord calls the tenant","6":"answer cell phone"},"context":"landlord calls the tenant","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0333333333,"2":0.0333333333,"3":0.0333333333,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: tap on the cell phone screen; step1: hear the cell phone ring; step2: pick up the cell phone; step3: reach towards the cell phone; step4: locate the cell phone; step5: landlord calls the tenant; step6: answer cell phone","flatten_input_for_script_generation":"You want to answer cell phone. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: landlord calls the tenant; step1: hear the cell phone ring; step2: locate the cell phone; step3: reach towards the cell phone; step4: pick up the cell phone; step5: tap on the cell phone screen; step6: answer cell phone; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class AnswerCellPhone:\n\n    title = \"answer cell phone\"\n    steps = 7\n\n    def step0(self):\n        return \"landlord calls the tenant\"\n\n    def step1(self):\n        return \"hear the cell phone ring\"\n\n    def step2(self):\n        return \"locate the cell phone\"\n\n    def step3(self):\n        return \"reach towards the cell phone\"\n\n    def step4(self):\n        return \"pick up the cell phone\"\n\n    def step5(self):\n        return \"tap on the cell phone screen\"\n\n    def step6(self):\n        return \"answer cell phone\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AnswerCellPhone:\n\n    title = \"answer cell phone\"\n    steps = 7\n\n","reference_graph":{"title":"answer cell phone","num_steps":7,"schema":["step0: landlord calls the tenant","step1: hear the cell phone ring","step2: locate the cell phone","step3: reach towards the cell phone","step4: pick up the cell phone","step5: tap on the cell phone screen","step6: answer cell phone"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put on the running gear","events":{"0":"search for running gear","1":"wait for running gear to arrive","2":"decide to buy a new fitness outfit","3":"sit down at computer","4":"Turn on computer","5":"open web browser","6":"order running gear","7":"Plan out training regiment.","8":"Put on the running gear"},"context":"Plan out training regiment.","minutes":5.0,"events_minutes":{"0":5.0,"1":4320.0,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333,"5":0.0833333333,"6":1.0},"flatten_input_for_edge_prediction":"step0: search for running gear; step1: wait for running gear to arrive; step2: decide to buy a new fitness outfit; step3: sit down at computer; step4: Turn on computer; step5: open web browser; step6: order running gear; step7: Plan out training regiment.; step8: Put on the running gear","flatten_input_for_script_generation":"You want to Put on the running gear. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step0; step0 -> step6; step6 -> step1; step1 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: Plan out training regiment.; step1: decide to buy a new fitness outfit; step2: sit down at computer; step3: Turn on computer; step4: open web browser; step5: search for running gear; step6: order running gear; step7: wait for running gear to arrive; step8: Put on the running gear; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->8","2->3","2->4","3->5","4->5","5->0","6->1","7->2"],"reference_code":"class PutOnTheRunningGear:\n\n    title = \"Put on the running gear\"\n    steps = 9\n\n    def step0(self):\n        return \"Plan out training regiment.\"\n\n    def step1(self):\n        return \"decide to buy a new fitness outfit\"\n\n    def step2(self):\n        return \"sit down at computer\"\n\n    def step3(self):\n        return \"Turn on computer\"\n\n    def step4(self):\n        return \"open web browser\"\n\n    def step5(self):\n        return \"search for running gear\"\n\n    def step6(self):\n        return \"order running gear\"\n\n    def step7(self):\n        return \"wait for running gear to arrive\"\n\n    def step8(self):\n        return \"Put on the running gear\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PutOnTheRunningGear:\n\n    title = \"Put on the running gear\"\n    steps = 9\n\n","reference_graph":{"title":"Put on the running gear","num_steps":9,"schema":["step0: Plan out training regiment.","step1: decide to buy a new fitness outfit","step2: sit down at computer","step3: Turn on computer","step4: open web browser","step5: search for running gear","step6: order running gear","step7: wait for running gear to arrive","step8: Put on the running gear"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"write down activity one","events":{"0":"sit down somewhere","1":"finish writing idea","2":"bring pen to paper","3":"start to write","4":"think about idea","5":"get a pen and paper","6":"write down activity one"},"context":"get a pen and paper","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0333333333,"3":0.0833333333,"4":0.25},"flatten_input_for_edge_prediction":"step0: sit down somewhere; step1: finish writing idea; step2: bring pen to paper; step3: start to write; step4: think about idea; step5: get a pen and paper; step6: write down activity one","flatten_input_for_script_generation":"You want to write down activity one. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get a pen and paper; step1: sit down somewhere; step2: think about idea; step3: bring pen to paper; step4: start to write; step5: finish writing idea; step6: write down activity one; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class WriteDownActivityOne:\n\n    title = \"write down activity one\"\n    steps = 7\n\n    def step0(self):\n        return \"get a pen and paper\"\n\n    def step1(self):\n        return \"sit down somewhere\"\n\n    def step2(self):\n        return \"think about idea\"\n\n    def step3(self):\n        return \"bring pen to paper\"\n\n    def step4(self):\n        return \"start to write\"\n\n    def step5(self):\n        return \"finish writing idea\"\n\n    def step6(self):\n        return \"write down activity one\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WriteDownActivityOne:\n\n    title = \"write down activity one\"\n    steps = 7\n\n","reference_graph":{"title":"write down activity one","num_steps":7,"schema":["step0: get a pen and paper","step1: sit down somewhere","step2: think about idea","step3: bring pen to paper","step4: start to write","step5: finish writing idea","step6: write down activity one"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"receive yes, hang up","events":{"0":"put down phone","1":"write down the person's name under attending","2":"turn on computer","3":"switch off phone","4":"open the event document","5":"ask if first person is attending","6":"receive yes, hang up"},"context":"ask if first person is attending","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.6666666667,"2":0.1666666667,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: put down phone; step1: write down the person's name under attending; step2: turn on computer; step3: switch off phone; step4: open the event document; step5: ask if first person is attending; step6: receive yes, hang up","flatten_input_for_script_generation":"You want to receive yes, hang up. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step6; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: ask if first person is attending; step1: turn on computer; step2: switch off phone; step3: put down phone; step4: receive yes, hang up; step5: open the event document; step6: write down the person's name under attending; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step4","gold_edges_for_prediction":["0->6","1->6","2->4","3->0","4->1","5->3","5->2"],"reference_code":"class ReceiveYesHangUp:\n\n    title = \"receive yes, hang up\"\n    steps = 7\n\n    def step0(self):\n        return \"ask if first person is attending\"\n\n    def step1(self):\n        return \"turn on computer\"\n\n    def step2(self):\n        return \"switch off phone\"\n\n    def step3(self):\n        return \"put down phone\"\n\n    def step4(self):\n        return \"receive yes, hang up\"\n\n    def step5(self):\n        return \"open the event document\"\n\n    def step6(self):\n        return \"write down the person's name under attending\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class ReceiveYesHangUp:\n\n    title = \"receive yes, hang up\"\n    steps = 7\n\n","reference_graph":{"title":"receive yes, hang up","num_steps":7,"schema":["step0: ask if first person is attending","step1: turn on computer","step2: switch off phone","step3: put down phone","step4: receive yes, hang up","step5: open the event document","step6: write down the person's name under attending"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step4"]}}
{"scenario":"Pack all suitcases and bags","events":{"0":"close the  suitcases","1":"open the suitcases","2":"Collect the clothes","3":"put clothes into suitcases","4":"Collect the suitcases","5":"Purchase plan ticket","6":"Pack all suitcases and bags"},"context":"Purchase plan ticket","minutes":120.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":60.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: close the  suitcases; step1: open the suitcases; step2: Collect the clothes; step3: put clothes into suitcases; step4: Collect the suitcases; step5: Purchase plan ticket; step6: Pack all suitcases and bags","flatten_input_for_script_generation":"You want to Pack all suitcases and bags. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step4 -> step1; step3 -> step0; step1 -> step3; step0 -> step6; step5 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: Purchase plan ticket; step1: Collect the suitcases; step2: Collect the clothes; step3: put clothes into suitcases; step4: close the  suitcases; step5: open the suitcases; step6: Pack all suitcases and bags; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->6","1->3","2->3","3->0","4->1","5->2","5->4"],"reference_code":"class PackAllSuitcasesAndBags:\n\n    title = \"Pack all suitcases and bags\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase plan ticket\"\n\n    def step1(self):\n        return \"Collect the suitcases\"\n\n    def step2(self):\n        return \"Collect the clothes\"\n\n    def step3(self):\n        return \"put clothes into suitcases\"\n\n    def step4(self):\n        return \"close the  suitcases\"\n\n    def step5(self):\n        return \"open the suitcases\"\n\n    def step6(self):\n        return \"Pack all suitcases and bags\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PackAllSuitcasesAndBags:\n\n    title = \"Pack all suitcases and bags\"\n    steps = 7\n\n","reference_graph":{"title":"Pack all suitcases and bags","num_steps":7,"schema":["step0: Purchase plan ticket","step1: Collect the suitcases","step2: Collect the clothes","step3: put clothes into suitcases","step4: close the  suitcases","step5: open the suitcases","step6: Pack all suitcases and bags"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"get sign up sheet","events":{"0":"walk towards sheet","1":"look for sheet","2":"ask where signup sheet is","3":"put hand on sheet","4":"find the sheet","5":"ask about balloon lessons","6":"get sign up sheet"},"context":"ask about balloon lessons","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: walk towards sheet; step1: look for sheet; step2: ask where signup sheet is; step3: put hand on sheet; step4: find the sheet; step5: ask about balloon lessons; step6: get sign up sheet","flatten_input_for_script_generation":"You want to get sign up sheet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: ask about balloon lessons; step1: ask where signup sheet is; step2: look for sheet; step3: find the sheet; step4: walk towards sheet; step5: put hand on sheet; step6: get sign up sheet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->6","4->0","5->2"],"reference_code":"class GetSignUpSheet:\n\n    title = \"get sign up sheet\"\n    steps = 7\n\n    def step0(self):\n        return \"ask about balloon lessons\"\n\n    def step1(self):\n        return \"ask where signup sheet is\"\n\n    def step2(self):\n        return \"look for sheet\"\n\n    def step3(self):\n        return \"find the sheet\"\n\n    def step4(self):\n        return \"walk towards sheet\"\n\n    def step5(self):\n        return \"put hand on sheet\"\n\n    def step6(self):\n        return \"get sign up sheet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetSignUpSheet:\n\n    title = \"get sign up sheet\"\n    steps = 7\n\n","reference_graph":{"title":"get sign up sheet","num_steps":7,"schema":["step0: ask about balloon lessons","step1: ask where signup sheet is","step2: look for sheet","step3: find the sheet","step4: walk towards sheet","step5: put hand on sheet","step6: get sign up sheet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Editor edits the draft","events":{"0":"looks at draft","1":"click on places","2":"begin typing edits","3":"reads the draft","4":"finds places to edit","5":"Give the draft to the editor","6":"Editor edits the draft"},"context":"Give the draft to the editor","minutes":20.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: looks at draft; step1: click on places; step2: begin typing edits; step3: reads the draft; step4: finds places to edit; step5: Give the draft to the editor; step6: Editor edits the draft","flatten_input_for_script_generation":"You want to Editor edits the draft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Give the draft to the editor; step1: looks at draft; step2: reads the draft; step3: finds places to edit; step4: click on places; step5: begin typing edits; step6: Editor edits the draft; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->4","4->1","5->0"],"reference_code":"class EditorEditsTheDraft:\n\n    title = \"Editor edits the draft\"\n    steps = 7\n\n    def step0(self):\n        return \"Give the draft to the editor\"\n\n    def step1(self):\n        return \"looks at draft\"\n\n    def step2(self):\n        return \"reads the draft\"\n\n    def step3(self):\n        return \"finds places to edit\"\n\n    def step4(self):\n        return \"click on places\"\n\n    def step5(self):\n        return \"begin typing edits\"\n\n    def step6(self):\n        return \"Editor edits the draft\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EditorEditsTheDraft:\n\n    title = \"Editor edits the draft\"\n    steps = 7\n\n","reference_graph":{"title":"Editor edits the draft","num_steps":7,"schema":["step0: Give the draft to the editor","step1: looks at draft","step2: reads the draft","step3: finds places to edit","step4: click on places","step5: begin typing edits","step6: Editor edits the draft"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read descriptions and mark possibilities","events":{"0":"Bookmark interesting jobs","1":"Click on links on page","2":"Close pages that are not interesting","3":"Read information on page","4":"Decide if job is interesting","5":"type in location and search","6":"read descriptions and mark possibilities"},"context":"type in location and search","minutes":60.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0333333333,"3":3.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: Bookmark interesting jobs; step1: Click on links on page; step2: Close pages that are not interesting; step3: Read information on page; step4: Decide if job is interesting; step5: type in location and search; step6: read descriptions and mark possibilities","flatten_input_for_script_generation":"You want to read descriptions and mark possibilities. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step0; step4 -> step2; step0 -> step6; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: type in location and search; step1: Click on links on page; step2: Read information on page; step3: Decide if job is interesting; step4: Bookmark interesting jobs; step5: Close pages that are not interesting; step6: read descriptions and mark possibilities; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->6","3->4","4->0","4->2","5->1"],"reference_code":"class ReadDescriptionsAndMarkPossibilities:\n\n    title = \"read descriptions and mark possibilities\"\n    steps = 7\n\n    def step0(self):\n        return \"type in location and search\"\n\n    def step1(self):\n        return \"Click on links on page\"\n\n    def step2(self):\n        return \"Read information on page\"\n\n    def step3(self):\n        return \"Decide if job is interesting\"\n\n    def step4(self):\n        return \"Bookmark interesting jobs\"\n\n    def step5(self):\n        return \"Close pages that are not interesting\"\n\n    def step6(self):\n        return \"read descriptions and mark possibilities\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadDescriptionsAndMarkPossibilities:\n\n    title = \"read descriptions and mark possibilities\"\n    steps = 7\n\n","reference_graph":{"title":"read descriptions and mark possibilities","num_steps":7,"schema":["step0: type in location and search","step1: Click on links on page","step2: Read information on page","step3: Decide if job is interesting","step4: Bookmark interesting jobs","step5: Close pages that are not interesting","step6: read descriptions and mark possibilities"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"practice with friends","events":{"0":"remember the skills","1":"go to preseason game","2":"enter preseason game","3":"impress everyone there","4":"use skills in preseason game","5":"practice every day","6":"practice with friends"},"context":"practice every day","minutes":21600.0,"events_minutes":{"0":1440.0,"1":1.0,"2":1.0,"3":60.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: remember the skills; step1: go to preseason game; step2: enter preseason game; step3: impress everyone there; step4: use skills in preseason game; step5: practice every day; step6: practice with friends","flatten_input_for_script_generation":"You want to practice with friends. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: practice every day; step1: go to preseason game; step2: remember the skills; step3: use skills in preseason game; step4: impress everyone there; step5: enter preseason game; step6: practice with friends; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->4","1->2","2->4","3->6","4->3","5->0","5->1"],"reference_code":"class PracticeWithFriends:\n\n    title = \"practice with friends\"\n    steps = 7\n\n    def step0(self):\n        return \"practice every day\"\n\n    def step1(self):\n        return \"go to preseason game\"\n\n    def step2(self):\n        return \"remember the skills\"\n\n    def step3(self):\n        return \"use skills in preseason game\"\n\n    def step4(self):\n        return \"impress everyone there\"\n\n    def step5(self):\n        return \"enter preseason game\"\n\n    def step6(self):\n        return \"practice with friends\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PracticeWithFriends:\n\n    title = \"practice with friends\"\n    steps = 7\n\n","reference_graph":{"title":"practice with friends","num_steps":7,"schema":["step0: practice every day","step1: go to preseason game","step2: remember the skills","step3: use skills in preseason game","step4: impress everyone there","step5: enter preseason game","step6: practice with friends"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"write the last activity","events":{"0":"think how to do a fourth activity","1":"write the activity down","2":"sharpen broken lead pencil","3":"think about the next activity logically","4":"write the third activity down","5":"listen to a colleague about the final wrap up","6":"write down activity 2","7":"write the last activity"},"context":"write down activity 2","minutes":0.5,"events_minutes":{"0":10.0,"1":5.0,"2":2.0,"3":5.0,"4":10.0,"5":12.0},"flatten_input_for_edge_prediction":"step0: think how to do a fourth activity; step1: write the activity down; step2: sharpen broken lead pencil; step3: think about the next activity logically; step4: write the third activity down; step5: listen to a colleague about the final wrap up; step6: write down activity 2; step7: write the last activity","flatten_input_for_script_generation":"You want to write the last activity. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step3 -> step4; step4 -> step0; step0 -> step5; step1 -> step3; step5 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: write down activity 2; step1: sharpen broken lead pencil; step2: write the activity down; step3: think about the next activity logically; step4: write the third activity down; step5: think how to do a fourth activity; step6: listen to a colleague about the final wrap up; step7: write the last activity; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->3","2->1","3->4","4->0","5->7","6->2"],"reference_code":"class WriteTheLastActivity:\n\n    title = \"write the last activity\"\n    steps = 8\n\n    def step0(self):\n        return \"write down activity 2\"\n\n    def step1(self):\n        return \"sharpen broken lead pencil\"\n\n    def step2(self):\n        return \"write the activity down\"\n\n    def step3(self):\n        return \"think about the next activity logically\"\n\n    def step4(self):\n        return \"write the third activity down\"\n\n    def step5(self):\n        return \"think how to do a fourth activity\"\n\n    def step6(self):\n        return \"listen to a colleague about the final wrap up\"\n\n    def step7(self):\n        return \"write the last activity\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WriteTheLastActivity:\n\n    title = \"write the last activity\"\n    steps = 8\n\n","reference_graph":{"title":"write the last activity","num_steps":8,"schema":["step0: write down activity 2","step1: sharpen broken lead pencil","step2: write the activity down","step3: think about the next activity logically","step4: write the third activity down","step5: think how to do a fourth activity","step6: listen to a colleague about the final wrap up","step7: write the last activity"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"practice running techniques","events":{"0":"Put on running shoes","1":"Warm up exercise","2":"Walk to track field","3":"Get advice from coach","4":"Put on running clothes","5":"ask coach about training program","6":"practice running techniques"},"context":"ask coach about training program","minutes":259200.0,"events_minutes":{"0":3.0,"1":10.0,"2":5.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Put on running shoes; step1: Warm up exercise; step2: Walk to track field; step3: Get advice from coach; step4: Put on running clothes; step5: ask coach about training program; step6: practice running techniques","flatten_input_for_script_generation":"You want to practice running techniques. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: ask coach about training program; step1: Get advice from coach; step2: Put on running clothes; step3: Put on running shoes; step4: Walk to track field; step5: Warm up exercise; step6: practice running techniques; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->4","4->0","5->3"],"reference_code":"class PracticeRunningTechniques:\n\n    title = \"practice running techniques\"\n    steps = 7\n\n    def step0(self):\n        return \"ask coach about training program\"\n\n    def step1(self):\n        return \"Get advice from coach\"\n\n    def step2(self):\n        return \"Put on running clothes\"\n\n    def step3(self):\n        return \"Put on running shoes\"\n\n    def step4(self):\n        return \"Walk to track field\"\n\n    def step5(self):\n        return \"Warm up exercise\"\n\n    def step6(self):\n        return \"practice running techniques\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PracticeRunningTechniques:\n\n    title = \"practice running techniques\"\n    steps = 7\n\n","reference_graph":{"title":"practice running techniques","num_steps":7,"schema":["step0: ask coach about training program","step1: Get advice from coach","step2: Put on running clothes","step3: Put on running shoes","step4: Walk to track field","step5: Warm up exercise","step6: practice running techniques"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make a plan to run.","events":{"0":"sit down at computer","1":"turn on computer","2":"open web browser","3":"decide to search for running plans online","4":"search for running plans","5":"Sign up for race","6":"Make a plan to run."},"context":"Sign up for race","minutes":15.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.1666666667,"4":2.0},"flatten_input_for_edge_prediction":"step0: sit down at computer; step1: turn on computer; step2: open web browser; step3: decide to search for running plans online; step4: search for running plans; step5: Sign up for race; step6: Make a plan to run.","flatten_input_for_script_generation":"You want to Make a plan to run.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step1; step0 -> step2; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Sign up for race; step1: decide to search for running plans online; step2: sit down at computer; step3: turn on computer; step4: open web browser; step5: search for running plans; step6: Make a plan to run.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->4","3->0","3->1","4->6","5->3"],"reference_code":"class MakeAPlanToRun:\n\n    title = \"Make a plan to run.\"\n    steps = 7\n\n    def step0(self):\n        return \"Sign up for race\"\n\n    def step1(self):\n        return \"decide to search for running plans online\"\n\n    def step2(self):\n        return \"sit down at computer\"\n\n    def step3(self):\n        return \"turn on computer\"\n\n    def step4(self):\n        return \"open web browser\"\n\n    def step5(self):\n        return \"search for running plans\"\n\n    def step6(self):\n        return \"Make a plan to run.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeAPlanToRun:\n\n    title = \"Make a plan to run.\"\n    steps = 7\n\n","reference_graph":{"title":"Make a plan to run.","num_steps":7,"schema":["step0: Sign up for race","step1: decide to search for running plans online","step2: sit down at computer","step3: turn on computer","step4: open web browser","step5: search for running plans","step6: Make a plan to run."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"download the program","events":{"0":"Click on download icon","1":"Wait for download to complete","2":"Look for download icon on screen","3":"Hold mouse with hand","4":"Move mouse to download icon","5":"Purchase an affordable e-file program","6":"download the program"},"context":"Purchase an affordable e-file program","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":5.0,"2":0.0666666667,"3":0.05,"4":0.1},"flatten_input_for_edge_prediction":"step0: Click on download icon; step1: Wait for download to complete; step2: Look for download icon on screen; step3: Hold mouse with hand; step4: Move mouse to download icon; step5: Purchase an affordable e-file program; step6: download the program","flatten_input_for_script_generation":"You want to download the program. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: Purchase an affordable e-file program; step1: Look for download icon on screen; step2: Hold mouse with hand; step3: Move mouse to download icon; step4: Click on download icon; step5: Wait for download to complete; step6: download the program; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->4","4->0","5->3","5->2"],"reference_code":"class DownloadTheProgram:\n\n    title = \"download the program\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase an affordable e-file program\"\n\n    def step1(self):\n        return \"Look for download icon on screen\"\n\n    def step2(self):\n        return \"Hold mouse with hand\"\n\n    def step3(self):\n        return \"Move mouse to download icon\"\n\n    def step4(self):\n        return \"Click on download icon\"\n\n    def step5(self):\n        return \"Wait for download to complete\"\n\n    def step6(self):\n        return \"download the program\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DownloadTheProgram:\n\n    title = \"download the program\"\n    steps = 7\n\n","reference_graph":{"title":"download the program","num_steps":7,"schema":["step0: Purchase an affordable e-file program","step1: Look for download icon on screen","step2: Hold mouse with hand","step3: Move mouse to download icon","step4: Click on download icon","step5: Wait for download to complete","step6: download the program"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"get cookies to correct consistency","events":{"0":"lift the whisk to check thickness","1":"tap the whisk on the bowl","2":"watch the thickness of the mixture","3":"move the whisk in circles","4":"grip onto the whisk tightly","5":"Mix the ingredients.","6":"get cookies to correct consistency"},"context":"Mix the ingredients.","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.05,"2":3.0,"3":1.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: lift the whisk to check thickness; step1: tap the whisk on the bowl; step2: watch the thickness of the mixture; step3: move the whisk in circles; step4: grip onto the whisk tightly; step5: Mix the ingredients.; step6: get cookies to correct consistency","flatten_input_for_script_generation":"You want to get cookies to correct consistency. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Mix the ingredients.; step1: grip onto the whisk tightly; step2: move the whisk in circles; step3: watch the thickness of the mixture; step4: lift the whisk to check thickness; step5: tap the whisk on the bowl; step6: get cookies to correct consistency; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->2","4->3","5->4"],"reference_code":"class GetCookiesToCorrectConsistency:\n\n    title = \"get cookies to correct consistency\"\n    steps = 7\n\n    def step0(self):\n        return \"Mix the ingredients.\"\n\n    def step1(self):\n        return \"grip onto the whisk tightly\"\n\n    def step2(self):\n        return \"move the whisk in circles\"\n\n    def step3(self):\n        return \"watch the thickness of the mixture\"\n\n    def step4(self):\n        return \"lift the whisk to check thickness\"\n\n    def step5(self):\n        return \"tap the whisk on the bowl\"\n\n    def step6(self):\n        return \"get cookies to correct consistency\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetCookiesToCorrectConsistency:\n\n    title = \"get cookies to correct consistency\"\n    steps = 7\n\n","reference_graph":{"title":"get cookies to correct consistency","num_steps":7,"schema":["step0: Mix the ingredients.","step1: grip onto the whisk tightly","step2: move the whisk in circles","step3: watch the thickness of the mixture","step4: lift the whisk to check thickness","step5: tap the whisk on the bowl","step6: get cookies to correct consistency"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"submit the order","events":{"0":"wait for page to load","1":"click confirm button","2":"move cursor on confirm button","3":"look for confirm button","4":"find confirm button","5":"enter payment information","6":"submit the order"},"context":"enter payment information","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: wait for page to load; step1: click confirm button; step2: move cursor on confirm button; step3: look for confirm button; step4: find confirm button; step5: enter payment information; step6: submit the order","flatten_input_for_script_generation":"You want to submit the order. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step0 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: enter payment information; step1: wait for page to load; step2: look for confirm button; step3: find confirm button; step4: move cursor on confirm button; step5: click confirm button; step6: submit the order; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->2","5->0"],"reference_code":"class SubmitTheOrder:\n\n    title = \"submit the order\"\n    steps = 7\n\n    def step0(self):\n        return \"enter payment information\"\n\n    def step1(self):\n        return \"wait for page to load\"\n\n    def step2(self):\n        return \"look for confirm button\"\n\n    def step3(self):\n        return \"find confirm button\"\n\n    def step4(self):\n        return \"move cursor on confirm button\"\n\n    def step5(self):\n        return \"click confirm button\"\n\n    def step6(self):\n        return \"submit the order\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class SubmitTheOrder:\n\n    title = \"submit the order\"\n    steps = 7\n\n","reference_graph":{"title":"submit the order","num_steps":7,"schema":["step0: enter payment information","step1: wait for page to load","step2: look for confirm button","step3: find confirm button","step4: move cursor on confirm button","step5: click confirm button","step6: submit the order"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"Grab a shopping cart.","events":{"0":"look around for a shopping cart","1":"put both hands on the shopping cart handle","2":"walk towards the shopping cart","3":"find a shopping cart","4":"stop in front of the shopping cart","5":"Walk into pet store.","6":"Grab a shopping cart."},"context":"Walk into pet store.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.1666666667,"3":0.0833333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: look around for a shopping cart; step1: put both hands on the shopping cart handle; step2: walk towards the shopping cart; step3: find a shopping cart; step4: stop in front of the shopping cart; step5: Walk into pet store.; step6: Grab a shopping cart.","flatten_input_for_script_generation":"You want to Grab a shopping cart.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Walk into pet store.; step1: look around for a shopping cart; step2: find a shopping cart; step3: walk towards the shopping cart; step4: stop in front of the shopping cart; step5: put both hands on the shopping cart handle; step6: Grab a shopping cart.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class GrabAShoppingCart:\n\n    title = \"Grab a shopping cart.\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk into pet store.\"\n\n    def step1(self):\n        return \"look around for a shopping cart\"\n\n    def step2(self):\n        return \"find a shopping cart\"\n\n    def step3(self):\n        return \"walk towards the shopping cart\"\n\n    def step4(self):\n        return \"stop in front of the shopping cart\"\n\n    def step5(self):\n        return \"put both hands on the shopping cart handle\"\n\n    def step6(self):\n        return \"Grab a shopping cart.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabAShoppingCart:\n\n    title = \"Grab a shopping cart.\"\n    steps = 7\n\n","reference_graph":{"title":"Grab a shopping cart.","num_steps":7,"schema":["step0: Walk into pet store.","step1: look around for a shopping cart","step2: find a shopping cart","step3: walk towards the shopping cart","step4: stop in front of the shopping cart","step5: put both hands on the shopping cart handle","step6: Grab a shopping cart."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sit on the bench","events":{"0":"turn towards the bus stop","1":"stop moving feet at bus stop","2":"continue moving feet","3":"pick up left foot","4":"pick up right foot","5":"Walk down sidewalk toward bus station","6":"Sit on the bench"},"context":"Walk down sidewalk toward bus station","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0166666667,"2":10.0,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: turn towards the bus stop; step1: stop moving feet at bus stop; step2: continue moving feet; step3: pick up left foot; step4: pick up right foot; step5: Walk down sidewalk toward bus station; step6: Sit on the bench","flatten_input_for_script_generation":"You want to Sit on the bench. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step0 -> step3; step4 -> step2; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Walk down sidewalk toward bus station; step1: turn towards the bus stop; step2: pick up right foot; step3: pick up left foot; step4: continue moving feet; step5: stop moving feet at bus stop; step6: Sit on the bench; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","0->3","1->6","2->1","3->2","4->2","5->0"],"reference_code":"class SitOnTheBench:\n\n    title = \"Sit on the bench\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk down sidewalk toward bus station\"\n\n    def step1(self):\n        return \"turn towards the bus stop\"\n\n    def step2(self):\n        return \"pick up right foot\"\n\n    def step3(self):\n        return \"pick up left foot\"\n\n    def step4(self):\n        return \"continue moving feet\"\n\n    def step5(self):\n        return \"stop moving feet at bus stop\"\n\n    def step6(self):\n        return \"Sit on the bench\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SitOnTheBench:\n\n    title = \"Sit on the bench\"\n    steps = 7\n\n","reference_graph":{"title":"Sit on the bench","num_steps":7,"schema":["step0: Walk down sidewalk toward bus station","step1: turn towards the bus stop","step2: pick up right foot","step3: pick up left foot","step4: continue moving feet","step5: stop moving feet at bus stop","step6: Sit on the bench"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get into the car","events":{"0":"move left foot towards car","1":"turn towards car","2":"find the car","3":"look for car","4":"move right foot towards car","5":"get out of the house","6":"get into the car"},"context":"get out of the house","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move left foot towards car; step1: turn towards car; step2: find the car; step3: look for car; step4: move right foot towards car; step5: get out of the house; step6: get into the car","flatten_input_for_script_generation":"You want to get into the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step1 -> step0; step1 -> step4; step0 -> step6; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: get out of the house; step1: look for car; step2: find the car; step3: turn towards car; step4: move left foot towards car; step5: move right foot towards car; step6: get into the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","1->4","2->1","3->2","4->6","5->3"],"reference_code":"class GetIntoTheCar:\n\n    title = \"get into the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the house\"\n\n    def step1(self):\n        return \"look for car\"\n\n    def step2(self):\n        return \"find the car\"\n\n    def step3(self):\n        return \"turn towards car\"\n\n    def step4(self):\n        return \"move left foot towards car\"\n\n    def step5(self):\n        return \"move right foot towards car\"\n\n    def step6(self):\n        return \"get into the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetIntoTheCar:\n\n    title = \"get into the car\"\n    steps = 7\n\n","reference_graph":{"title":"get into the car","num_steps":7,"schema":["step0: get out of the house","step1: look for car","step2: find the car","step3: turn towards car","step4: move left foot towards car","step5: move right foot towards car","step6: get into the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"pack a suitcase with clothes.","events":{"0":"take the suitcase out of the closet","1":"open the suitcase","2":"pack the clothes into the suitcase","3":"take clothes out of the closet","4":"walk to the closet","5":"close the suitcase","6":"wake up on the day of the trip.","7":"pack a suitcase with clothes."},"context":"wake up on the day of the trip.","minutes":20.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":8.0,"3":10.0,"4":0.25,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: take the suitcase out of the closet; step1: open the suitcase; step2: pack the clothes into the suitcase; step3: take clothes out of the closet; step4: walk to the closet; step5: close the suitcase; step6: wake up on the day of the trip.; step7: pack a suitcase with clothes.","flatten_input_for_script_generation":"You want to pack a suitcase with clothes.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step0 -> step3; step1 -> step2; step3 -> step2; step2 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: wake up on the day of the trip.; step1: walk to the closet; step2: take the suitcase out of the closet; step3: open the suitcase; step4: take clothes out of the closet; step5: pack the clothes into the suitcase; step6: close the suitcase; step7: pack a suitcase with clothes.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","0->3","1->2","2->5","3->2","4->0","5->7","6->4"],"reference_code":"class PackASuitcaseWithClothes:\n\n    title = \"pack a suitcase with clothes.\"\n    steps = 8\n\n    def step0(self):\n        return \"wake up on the day of the trip.\"\n\n    def step1(self):\n        return \"walk to the closet\"\n\n    def step2(self):\n        return \"take the suitcase out of the closet\"\n\n    def step3(self):\n        return \"open the suitcase\"\n\n    def step4(self):\n        return \"take clothes out of the closet\"\n\n    def step5(self):\n        return \"pack the clothes into the suitcase\"\n\n    def step6(self):\n        return \"close the suitcase\"\n\n    def step7(self):\n        return \"pack a suitcase with clothes.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PackASuitcaseWithClothes:\n\n    title = \"pack a suitcase with clothes.\"\n    steps = 8\n\n","reference_graph":{"title":"pack a suitcase with clothes.","num_steps":8,"schema":["step0: wake up on the day of the trip.","step1: walk to the closet","step2: take the suitcase out of the closet","step3: open the suitcase","step4: take clothes out of the closet","step5: pack the clothes into the suitcase","step6: close the suitcase","step7: pack a suitcase with clothes."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"race into kitchen for quick meal","events":{"0":"close room door","1":"think about what to eat","2":"exit the room","3":"grab anything needed","4":"walk towards the kitchen","5":"rush to put on clothes","6":"race into kitchen for quick meal"},"context":"rush to put on clothes","minutes":6.0,"events_minutes":{"0":0.05,"1":1.0,"2":0.05,"3":0.1666666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: close room door; step1: think about what to eat; step2: exit the room; step3: grab anything needed; step4: walk towards the kitchen; step5: rush to put on clothes; step6: race into kitchen for quick meal","flatten_input_for_script_generation":"You want to race into kitchen for quick meal. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step0 -> step1; step4 -> step6; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: rush to put on clothes; step1: grab anything needed; step2: exit the room; step3: close room door; step4: walk towards the kitchen; step5: think about what to eat; step6: race into kitchen for quick meal; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","0->1","1->6","2->0","3->2","4->6","5->3"],"reference_code":"class RaceIntoKitchenForQuickMeal:\n\n    title = \"race into kitchen for quick meal\"\n    steps = 7\n\n    def step0(self):\n        return \"rush to put on clothes\"\n\n    def step1(self):\n        return \"grab anything needed\"\n\n    def step2(self):\n        return \"exit the room\"\n\n    def step3(self):\n        return \"close room door\"\n\n    def step4(self):\n        return \"walk towards the kitchen\"\n\n    def step5(self):\n        return \"think about what to eat\"\n\n    def step6(self):\n        return \"race into kitchen for quick meal\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RaceIntoKitchenForQuickMeal:\n\n    title = \"race into kitchen for quick meal\"\n    steps = 7\n\n","reference_graph":{"title":"race into kitchen for quick meal","num_steps":7,"schema":["step0: rush to put on clothes","step1: grab anything needed","step2: exit the room","step3: close room door","step4: walk towards the kitchen","step5: think about what to eat","step6: race into kitchen for quick meal"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"get to the car","events":{"0":"Put one foot in front of the other","1":"Look in the desired direction","2":"Make sure no obstacles are in the way","3":"Stop walking when car is close enough","4":"Take another step toward the car","5":"get up and get dressed","6":"get to the car"},"context":"get up and get dressed","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.0833333333,"3":0.25,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: Put one foot in front of the other; step1: Look in the desired direction; step2: Make sure no obstacles are in the way; step3: Stop walking when car is close enough; step4: Take another step toward the car; step5: get up and get dressed; step6: get to the car","flatten_input_for_script_generation":"You want to get to the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get up and get dressed; step1: Look in the desired direction; step2: Make sure no obstacles are in the way; step3: Put one foot in front of the other; step4: Take another step toward the car; step5: Stop walking when car is close enough; step6: get to the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class GetToTheCar:\n\n    title = \"get to the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get up and get dressed\"\n\n    def step1(self):\n        return \"Look in the desired direction\"\n\n    def step2(self):\n        return \"Make sure no obstacles are in the way\"\n\n    def step3(self):\n        return \"Put one foot in front of the other\"\n\n    def step4(self):\n        return \"Take another step toward the car\"\n\n    def step5(self):\n        return \"Stop walking when car is close enough\"\n\n    def step6(self):\n        return \"get to the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetToTheCar:\n\n    title = \"get to the car\"\n    steps = 7\n\n","reference_graph":{"title":"get to the car","num_steps":7,"schema":["step0: get up and get dressed","step1: Look in the desired direction","step2: Make sure no obstacles are in the way","step3: Put one foot in front of the other","step4: Take another step toward the car","step5: Stop walking when car is close enough","step6: get to the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull the closet doors apart","events":{"0":"pull back with right hand","1":"pull back with left hand","2":"grab closet handle with left hand","3":"reach out to closet with right hand","4":"reach out to closet with left hand","5":"grab closet handle with right hand","6":"unlock the closet doors","7":"pull the closet doors apart"},"context":"unlock the closet doors","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0333333333,"3":0.0333333333,"4":0.0333333333,"5":0.0333333333},"flatten_input_for_edge_prediction":"step0: pull back with right hand; step1: pull back with left hand; step2: grab closet handle with left hand; step3: reach out to closet with right hand; step4: reach out to closet with left hand; step5: grab closet handle with right hand; step6: unlock the closet doors; step7: pull the closet doors apart","flatten_input_for_script_generation":"You want to pull the closet doors apart. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step3 -> step5; step2 -> step1; step5 -> step0; step1 -> step7; step0 -> step7; step6 -> step4; step6 -> step3","flatten_output_for_script_generation":"step0: unlock the closet doors; step1: reach out to closet with right hand; step2: reach out to closet with left hand; step3: grab closet handle with left hand; step4: pull back with left hand; step5: grab closet handle with right hand; step6: pull back with right hand; step7: pull the closet doors apart; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step4 -> step7; step6 -> step7","gold_edges_for_prediction":["0->7","1->7","2->1","3->5","4->2","5->0","6->4","6->3"],"reference_code":"class PullTheClosetDoorsApart:\n\n    title = \"pull the closet doors apart\"\n    steps = 8\n\n    def step0(self):\n        return \"unlock the closet doors\"\n\n    def step1(self):\n        return \"reach out to closet with right hand\"\n\n    def step2(self):\n        return \"reach out to closet with left hand\"\n\n    def step3(self):\n        return \"grab closet handle with left hand\"\n\n    def step4(self):\n        return \"pull back with left hand\"\n\n    def step5(self):\n        return \"grab closet handle with right hand\"\n\n    def step6(self):\n        return \"pull back with right hand\"\n\n    def step7(self):\n        return \"pull the closet doors apart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step7\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PullTheClosetDoorsApart:\n\n    title = \"pull the closet doors apart\"\n    steps = 8\n\n","reference_graph":{"title":"pull the closet doors apart","num_steps":8,"schema":["step0: unlock the closet doors","step1: reach out to closet with right hand","step2: reach out to closet with left hand","step3: grab closet handle with left hand","step4: pull back with left hand","step5: grab closet handle with right hand","step6: pull back with right hand","step7: pull the closet doors apart"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step4 -> step7","step6 -> step7"]}}
{"scenario":"enter personal information","events":{"0":"Fill out name line","1":"Click on next button","2":"Fill out address line","3":"Fill out contact information line","4":"Read site for what info is needed","5":"add cruise to cart","6":"enter personal information"},"context":"add cruise to cart","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.1666666667,"3":0.1666666667,"4":0.25},"flatten_input_for_edge_prediction":"step0: Fill out name line; step1: Click on next button; step2: Fill out address line; step3: Fill out contact information line; step4: Read site for what info is needed; step5: add cruise to cart; step6: enter personal information","flatten_input_for_script_generation":"You want to enter personal information. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step2; step4 -> step3; step0 -> step1; step2 -> step1; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: add cruise to cart; step1: Read site for what info is needed; step2: Fill out name line; step3: Fill out address line; step4: Fill out contact information line; step5: Click on next button; step6: enter personal information; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->1","3->1","4->0","4->2","4->3","5->4"],"reference_code":"class EnterPersonalInformation:\n\n    title = \"enter personal information\"\n    steps = 7\n\n    def step0(self):\n        return \"add cruise to cart\"\n\n    def step1(self):\n        return \"Read site for what info is needed\"\n\n    def step2(self):\n        return \"Fill out name line\"\n\n    def step3(self):\n        return \"Fill out address line\"\n\n    def step4(self):\n        return \"Fill out contact information line\"\n\n    def step5(self):\n        return \"Click on next button\"\n\n    def step6(self):\n        return \"enter personal information\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterPersonalInformation:\n\n    title = \"enter personal information\"\n    steps = 7\n\n","reference_graph":{"title":"enter personal information","num_steps":7,"schema":["step0: add cruise to cart","step1: Read site for what info is needed","step2: Fill out name line","step3: Fill out address line","step4: Fill out contact information line","step5: Click on next button","step6: enter personal information"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"once at front greet attendant","events":{"0":"keep moving in line","1":"smile and greet","2":"engage in small talk","3":"look attendant in the eyes","4":"wait for attendant's attention","5":"wait in the line","6":"once at front greet attendant"},"context":"wait in the line","minutes":1.0,"events_minutes":{"0":3.0,"1":0.1666666667,"2":4.0,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: keep moving in line; step1: smile and greet; step2: engage in small talk; step3: look attendant in the eyes; step4: wait for attendant's attention; step5: wait in the line; step6: once at front greet attendant","flatten_input_for_script_generation":"You want to once at front greet attendant. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step0 -> step4; step0 -> step3; step3 -> step1; step1 -> step2; step4 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: wait in the line; step1: keep moving in line; step2: engage in small talk; step3: once at front greet attendant; step4: wait for attendant's attention; step5: look attendant in the eyes; step6: smile and greet; step0 -> step1; step2 -> step3; step1 -> step4; step1 -> step5; step4 -> step6; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->4","0->3","1->2","2->6","3->1","4->1","5->0"],"reference_code":"class OnceAtFrontGreetAttendant:\n\n    title = \"once at front greet attendant\"\n    steps = 7\n\n    def step0(self):\n        return \"wait in the line\"\n\n    def step1(self):\n        return \"keep moving in line\"\n\n    def step2(self):\n        return \"engage in small talk\"\n\n    def step3(self):\n        return \"once at front greet attendant\"\n\n    def step4(self):\n        return \"wait for attendant's attention\"\n\n    def step5(self):\n        return \"look attendant in the eyes\"\n\n    def step6(self):\n        return \"smile and greet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step1 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class OnceAtFrontGreetAttendant:\n\n    title = \"once at front greet attendant\"\n    steps = 7\n\n","reference_graph":{"title":"once at front greet attendant","num_steps":7,"schema":["step0: wait in the line","step1: keep moving in line","step2: engage in small talk","step3: once at front greet attendant","step4: wait for attendant's attention","step5: look attendant in the eyes","step6: smile and greet"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step1 -> step5","step4 -> step6","step5 -> step6","step6 -> step2"]}}
{"scenario":"scroll through results displayed","events":{"0":"locate compurter mouse","1":"hold down right mouse button","2":"pull mouse down","3":"move pointer to scrollbar","4":"put hand on mouse","5":"type employment in the search box","6":"scroll through results displayed"},"context":"type employment in the search box","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":4.0,"2":0.0333333333,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: locate compurter mouse; step1: hold down right mouse button; step2: pull mouse down; step3: move pointer to scrollbar; step4: put hand on mouse; step5: type employment in the search box; step6: scroll through results displayed","flatten_input_for_script_generation":"You want to scroll through results displayed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: type employment in the search box; step1: locate compurter mouse; step2: put hand on mouse; step3: move pointer to scrollbar; step4: hold down right mouse button; step5: pull mouse down; step6: scroll through results displayed; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->1","4->3","5->0"],"reference_code":"class ScrollThroughResultsDisplayed:\n\n    title = \"scroll through results displayed\"\n    steps = 7\n\n    def step0(self):\n        return \"type employment in the search box\"\n\n    def step1(self):\n        return \"locate compurter mouse\"\n\n    def step2(self):\n        return \"put hand on mouse\"\n\n    def step3(self):\n        return \"move pointer to scrollbar\"\n\n    def step4(self):\n        return \"hold down right mouse button\"\n\n    def step5(self):\n        return \"pull mouse down\"\n\n    def step6(self):\n        return \"scroll through results displayed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ScrollThroughResultsDisplayed:\n\n    title = \"scroll through results displayed\"\n    steps = 7\n\n","reference_graph":{"title":"scroll through results displayed","num_steps":7,"schema":["step0: type employment in the search box","step1: locate compurter mouse","step2: put hand on mouse","step3: move pointer to scrollbar","step4: hold down right mouse button","step5: pull mouse down","step6: scroll through results displayed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put laptop into the backpack.","events":{"0":"Lift up laptop","1":"Close opening of backpack","2":"Insert laptop into backpack","3":"Open up backpack","4":"Make space in backpack","5":"wake up on the day of the trip.","6":"put laptop into the backpack."},"context":"wake up on the day of the trip.","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.05,"2":0.1166666667,"3":0.05,"4":0.2},"flatten_input_for_edge_prediction":"step0: Lift up laptop; step1: Close opening of backpack; step2: Insert laptop into backpack; step3: Open up backpack; step4: Make space in backpack; step5: wake up on the day of the trip.; step6: put laptop into the backpack.","flatten_input_for_script_generation":"You want to put laptop into the backpack.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: wake up on the day of the trip.; step1: Open up backpack; step2: Make space in backpack; step3: Lift up laptop; step4: Insert laptop into backpack; step5: Close opening of backpack; step6: put laptop into the backpack.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->4","4->0","5->3"],"reference_code":"class PutLaptopIntoTheBackpack:\n\n    title = \"put laptop into the backpack.\"\n    steps = 7\n\n    def step0(self):\n        return \"wake up on the day of the trip.\"\n\n    def step1(self):\n        return \"Open up backpack\"\n\n    def step2(self):\n        return \"Make space in backpack\"\n\n    def step3(self):\n        return \"Lift up laptop\"\n\n    def step4(self):\n        return \"Insert laptop into backpack\"\n\n    def step5(self):\n        return \"Close opening of backpack\"\n\n    def step6(self):\n        return \"put laptop into the backpack.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutLaptopIntoTheBackpack:\n\n    title = \"put laptop into the backpack.\"\n    steps = 7\n\n","reference_graph":{"title":"put laptop into the backpack.","num_steps":7,"schema":["step0: wake up on the day of the trip.","step1: Open up backpack","step2: Make space in backpack","step3: Lift up laptop","step4: Insert laptop into backpack","step5: Close opening of backpack","step6: put laptop into the backpack."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"apply for jobs","events":{"0":"find websites for job applications","1":"find good jobs","2":"decide which jobs to apply for","3":"click apply link","4":"make list of jobs","5":"NONE","6":"apply for jobs"},"context":"NONE","minutes":4320.0,"events_minutes":{"0":1.0,"1":60.0,"2":0.0166666667,"3":0.0166666667,"4":60.0},"flatten_input_for_edge_prediction":"step0: find websites for job applications; step1: find good jobs; step2: decide which jobs to apply for; step3: click apply link; step4: make list of jobs; step5: decided to apply for jobs; step6: apply for jobs","flatten_input_for_script_generation":"You want to apply for jobs. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step0 -> step1; step2 -> step3; step3 -> step6; step5 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: decided to apply for jobs; step1: find websites for job applications; step2: make list of jobs; step3: find good jobs; step4: decide which jobs to apply for; step5: click apply link; step6: apply for jobs; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->1","5->4","5->0"],"reference_code":"class ApplyForJobs:\n\n    title = \"apply for jobs\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to apply for jobs\"\n\n    def step1(self):\n        return \"find websites for job applications\"\n\n    def step2(self):\n        return \"make list of jobs\"\n\n    def step3(self):\n        return \"find good jobs\"\n\n    def step4(self):\n        return \"decide which jobs to apply for\"\n\n    def step5(self):\n        return \"click apply link\"\n\n    def step6(self):\n        return \"apply for jobs\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ApplyForJobs:\n\n    title = \"apply for jobs\"\n    steps = 7\n\n","reference_graph":{"title":"apply for jobs","num_steps":7,"schema":["step0: decided to apply for jobs","step1: find websites for job applications","step2: make list of jobs","step3: find good jobs","step4: decide which jobs to apply for","step5: click apply link","step6: apply for jobs"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step5 -> step6"]}}
{"scenario":"Input travel destination","events":{"0":"hit enter key","1":"click on link","2":"decide on destination","3":"type in destination","4":"find link to input destination","5":"Access a travel website","6":"Input travel destination"},"context":"Access a travel website","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: hit enter key; step1: click on link; step2: decide on destination; step3: type in destination; step4: find link to input destination; step5: Access a travel website; step6: Input travel destination","flatten_input_for_script_generation":"You want to Input travel destination. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Access a travel website; step1: decide on destination; step2: find link to input destination; step3: click on link; step4: type in destination; step5: hit enter key; step6: Input travel destination; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class InputTravelDestination:\n\n    title = \"Input travel destination\"\n    steps = 7\n\n    def step0(self):\n        return \"Access a travel website\"\n\n    def step1(self):\n        return \"decide on destination\"\n\n    def step2(self):\n        return \"find link to input destination\"\n\n    def step3(self):\n        return \"click on link\"\n\n    def step4(self):\n        return \"type in destination\"\n\n    def step5(self):\n        return \"hit enter key\"\n\n    def step6(self):\n        return \"Input travel destination\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class InputTravelDestination:\n\n    title = \"Input travel destination\"\n    steps = 7\n\n","reference_graph":{"title":"Input travel destination","num_steps":7,"schema":["step0: Access a travel website","step1: decide on destination","step2: find link to input destination","step3: click on link","step4: type in destination","step5: hit enter key","step6: Input travel destination"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pick a room","events":{"0":"sort rooms by criteria","1":"decide on criteria","2":"look for rooms","3":"find the rooms","4":"narrow down list","5":"go to cruise website","6":"pick a room"},"context":"go to cruise website","minutes":5.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: sort rooms by criteria; step1: decide on criteria; step2: look for rooms; step3: find the rooms; step4: narrow down list; step5: go to cruise website; step6: pick a room","flatten_input_for_script_generation":"You want to pick a room. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: go to cruise website; step1: look for rooms; step2: decide on criteria; step3: sort rooms by criteria; step4: narrow down list; step5: find the rooms; step6: pick a room; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->0","4->6","5->1","5->2"],"reference_code":"class PickARoom:\n\n    title = \"pick a room\"\n    steps = 7\n\n    def step0(self):\n        return \"go to cruise website\"\n\n    def step1(self):\n        return \"look for rooms\"\n\n    def step2(self):\n        return \"decide on criteria\"\n\n    def step3(self):\n        return \"sort rooms by criteria\"\n\n    def step4(self):\n        return \"narrow down list\"\n\n    def step5(self):\n        return \"find the rooms\"\n\n    def step6(self):\n        return \"pick a room\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PickARoom:\n\n    title = \"pick a room\"\n    steps = 7\n\n","reference_graph":{"title":"pick a room","num_steps":7,"schema":["step0: go to cruise website","step1: look for rooms","step2: decide on criteria","step3: sort rooms by criteria","step4: narrow down list","step5: find the rooms","step6: pick a room"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"Negotiate the contract with the interviewer.","events":{"0":"Keep trying until an agreement is reached","1":"Lower the amount wanted","2":"Make an offer higher than what is wanted","3":"Decide on an amount wanted","4":"Listen to the counter offer","5":"Receive the job offer from the interviewer.","6":"Negotiate the contract with the interviewer."},"context":"Receive the job offer from the interviewer.","minutes":20.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Keep trying until an agreement is reached; step1: Lower the amount wanted; step2: Make an offer higher than what is wanted; step3: Decide on an amount wanted; step4: Listen to the counter offer; step5: Receive the job offer from the interviewer.; step6: Negotiate the contract with the interviewer.","flatten_input_for_script_generation":"You want to Negotiate the contract with the interviewer.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Receive the job offer from the interviewer.; step1: Decide on an amount wanted; step2: Make an offer higher than what is wanted; step3: Listen to the counter offer; step4: Lower the amount wanted; step5: Keep trying until an agreement is reached; step6: Negotiate the contract with the interviewer.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->3"],"reference_code":"class NegotiateTheContractWithTheInterviewer:\n\n    title = \"Negotiate the contract with the interviewer.\"\n    steps = 7\n\n    def step0(self):\n        return \"Receive the job offer from the interviewer.\"\n\n    def step1(self):\n        return \"Decide on an amount wanted\"\n\n    def step2(self):\n        return \"Make an offer higher than what is wanted\"\n\n    def step3(self):\n        return \"Listen to the counter offer\"\n\n    def step4(self):\n        return \"Lower the amount wanted\"\n\n    def step5(self):\n        return \"Keep trying until an agreement is reached\"\n\n    def step6(self):\n        return \"Negotiate the contract with the interviewer.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class NegotiateTheContractWithTheInterviewer:\n\n    title = \"Negotiate the contract with the interviewer.\"\n    steps = 7\n\n","reference_graph":{"title":"Negotiate the contract with the interviewer.","num_steps":7,"schema":["step0: Receive the job offer from the interviewer.","step1: Decide on an amount wanted","step2: Make an offer higher than what is wanted","step3: Listen to the counter offer","step4: Lower the amount wanted","step5: Keep trying until an agreement is reached","step6: Negotiate the contract with the interviewer."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk around the area","events":{"0":"Lift right foot","1":"Move left foot forward","2":"Look around the area","3":"Decide on a path to go on","4":"Move right foot forward","5":"Lift left foot","6":"line the hole with rocks","7":"walk around the area"},"context":"line the hole with rocks","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.5,"3":0.5,"4":0.0166666667,"5":0.0166666667},"flatten_input_for_edge_prediction":"step0: Lift right foot; step1: Move left foot forward; step2: Look around the area; step3: Decide on a path to go on; step4: Move right foot forward; step5: Lift left foot; step6: line the hole with rocks; step7: walk around the area","flatten_input_for_script_generation":"You want to walk around the area. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step5; step3 -> step0; step5 -> step1; step1 -> step7; step0 -> step4; step4 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: line the hole with rocks; step1: Look around the area; step2: Decide on a path to go on; step3: Lift left foot; step4: Lift right foot; step5: Move left foot forward; step6: Move right foot forward; step7: walk around the area; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step7","gold_edges_for_prediction":["0->4","1->7","2->3","3->5","3->0","4->7","5->1","6->2"],"reference_code":"class WalkAroundTheArea:\n\n    title = \"walk around the area\"\n    steps = 8\n\n    def step0(self):\n        return \"line the hole with rocks\"\n\n    def step1(self):\n        return \"Look around the area\"\n\n    def step2(self):\n        return \"Decide on a path to go on\"\n\n    def step3(self):\n        return \"Lift left foot\"\n\n    def step4(self):\n        return \"Lift right foot\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"walk around the area\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkAroundTheArea:\n\n    title = \"walk around the area\"\n    steps = 8\n\n","reference_graph":{"title":"walk around the area","num_steps":8,"schema":["step0: line the hole with rocks","step1: Look around the area","step2: Decide on a path to go on","step3: Lift left foot","step4: Lift right foot","step5: Move left foot forward","step6: Move right foot forward","step7: walk around the area"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step7"]}}
{"scenario":"put plate on counter","events":{"0":"Walk toward counter.","1":"Locate the counter.","2":"Move plate above counter.","3":"Ensure that plate is securely in hand.","4":"Let go of plate.","5":"take out a plate","6":"put plate on counter"},"context":"take out a plate","minutes":2.0,"events_minutes":{"0":1.0,"1":0.75,"2":0.5,"3":0.25,"4":0.5},"flatten_input_for_edge_prediction":"step0: Walk toward counter.; step1: Locate the counter.; step2: Move plate above counter.; step3: Ensure that plate is securely in hand.; step4: Let go of plate.; step5: take out a plate; step6: put plate on counter","flatten_input_for_script_generation":"You want to put plate on counter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: take out a plate; step1: Ensure that plate is securely in hand.; step2: Locate the counter.; step3: Walk toward counter.; step4: Move plate above counter.; step5: Let go of plate.; step6: put plate on counter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class PutPlateOnCounter:\n\n    title = \"put plate on counter\"\n    steps = 7\n\n    def step0(self):\n        return \"take out a plate\"\n\n    def step1(self):\n        return \"Ensure that plate is securely in hand.\"\n\n    def step2(self):\n        return \"Locate the counter.\"\n\n    def step3(self):\n        return \"Walk toward counter.\"\n\n    def step4(self):\n        return \"Move plate above counter.\"\n\n    def step5(self):\n        return \"Let go of plate.\"\n\n    def step6(self):\n        return \"put plate on counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutPlateOnCounter:\n\n    title = \"put plate on counter\"\n    steps = 7\n\n","reference_graph":{"title":"put plate on counter","num_steps":7,"schema":["step0: take out a plate","step1: Ensure that plate is securely in hand.","step2: Locate the counter.","step3: Walk toward counter.","step4: Move plate above counter.","step5: Let go of plate.","step6: put plate on counter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Carry the child to the vehicle.","events":{"0":"close the door","1":"open the door","2":"move child toward vehicle","3":"find the vehicle","4":"move child outside","5":"Complete the final paperwork.","6":"Carry the child to the vehicle."},"context":"Complete the final paperwork.","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":1.0,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: close the door; step1: open the door; step2: move child toward vehicle; step3: find the vehicle; step4: move child outside; step5: Complete the final paperwork.; step6: Carry the child to the vehicle.","flatten_input_for_script_generation":"You want to Carry the child to the vehicle.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Complete the final paperwork.; step1: open the door; step2: move child outside; step3: close the door; step4: find the vehicle; step5: move child toward vehicle; step6: Carry the child to the vehicle.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->2","4->0","5->1"],"reference_code":"class CarryTheChildToTheVehicle:\n\n    title = \"Carry the child to the vehicle.\"\n    steps = 7\n\n    def step0(self):\n        return \"Complete the final paperwork.\"\n\n    def step1(self):\n        return \"open the door\"\n\n    def step2(self):\n        return \"move child outside\"\n\n    def step3(self):\n        return \"close the door\"\n\n    def step4(self):\n        return \"find the vehicle\"\n\n    def step5(self):\n        return \"move child toward vehicle\"\n\n    def step6(self):\n        return \"Carry the child to the vehicle.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CarryTheChildToTheVehicle:\n\n    title = \"Carry the child to the vehicle.\"\n    steps = 7\n\n","reference_graph":{"title":"Carry the child to the vehicle.","num_steps":7,"schema":["step0: Complete the final paperwork.","step1: open the door","step2: move child outside","step3: close the door","step4: find the vehicle","step5: move child toward vehicle","step6: Carry the child to the vehicle."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"lock the door.","events":{"0":"put hand in pocket","1":"find the keyhole","2":"take key out of pocket","3":"walk to door","4":"put key in keyhole","5":"prepare and get dressed.","6":"lock the door."},"context":"prepare and get dressed.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put hand in pocket; step1: find the keyhole; step2: take key out of pocket; step3: walk to door; step4: put key in keyhole; step5: prepare and get dressed.; step6: lock the door.","flatten_input_for_script_generation":"You want to lock the door.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step3 -> step0; step1 -> step4; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: prepare and get dressed.; step1: walk to door; step2: find the keyhole; step3: put hand in pocket; step4: put key in keyhole; step5: take key out of pocket; step6: lock the door.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step4","gold_edges_for_prediction":["0->2","1->4","2->4","3->1","3->0","4->6","5->3"],"reference_code":"class LockTheDoor:\n\n    title = \"lock the door.\"\n    steps = 7\n\n    def step0(self):\n        return \"prepare and get dressed.\"\n\n    def step1(self):\n        return \"walk to door\"\n\n    def step2(self):\n        return \"find the keyhole\"\n\n    def step3(self):\n        return \"put hand in pocket\"\n\n    def step4(self):\n        return \"put key in keyhole\"\n\n    def step5(self):\n        return \"take key out of pocket\"\n\n    def step6(self):\n        return \"lock the door.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step4\",\n        ]\n","input_prompt_code":"class LockTheDoor:\n\n    title = \"lock the door.\"\n    steps = 7\n\n","reference_graph":{"title":"lock the door.","num_steps":7,"schema":["step0: prepare and get dressed.","step1: walk to door","step2: find the keyhole","step3: put hand in pocket","step4: put key in keyhole","step5: take key out of pocket","step6: lock the door."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step4"]}}
{"scenario":"Put ingredients in bowl together one by one.","events":{"0":"Locate the ingredients.","1":"Pick up ingredients.","2":"Move ingredients toward bowl.","3":"Walk toward ingredients.","4":"Walk back to the bowl.","5":"Grab a bowl to put ingredients in.","6":"Put ingredients in bowl together one by one."},"context":"Grab a bowl to put ingredients in.","minutes":1.0,"events_minutes":{"0":3.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Locate the ingredients.; step1: Pick up ingredients.; step2: Move ingredients toward bowl.; step3: Walk toward ingredients.; step4: Walk back to the bowl.; step5: Grab a bowl to put ingredients in.; step6: Put ingredients in bowl together one by one.","flatten_input_for_script_generation":"You want to Put ingredients in bowl together one by one.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Grab a bowl to put ingredients in.; step1: Locate the ingredients.; step2: Walk toward ingredients.; step3: Pick up ingredients.; step4: Walk back to the bowl.; step5: Move ingredients toward bowl.; step6: Put ingredients in bowl together one by one.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->6","3->1","4->2","5->0"],"reference_code":"class PutIngredientsInBowlTogetherOneByOne:\n\n    title = \"Put ingredients in bowl together one by one.\"\n    steps = 7\n\n    def step0(self):\n        return \"Grab a bowl to put ingredients in.\"\n\n    def step1(self):\n        return \"Locate the ingredients.\"\n\n    def step2(self):\n        return \"Walk toward ingredients.\"\n\n    def step3(self):\n        return \"Pick up ingredients.\"\n\n    def step4(self):\n        return \"Walk back to the bowl.\"\n\n    def step5(self):\n        return \"Move ingredients toward bowl.\"\n\n    def step6(self):\n        return \"Put ingredients in bowl together one by one.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutIngredientsInBowlTogetherOneByOne:\n\n    title = \"Put ingredients in bowl together one by one.\"\n    steps = 7\n\n","reference_graph":{"title":"Put ingredients in bowl together one by one.","num_steps":7,"schema":["step0: Grab a bowl to put ingredients in.","step1: Locate the ingredients.","step2: Walk toward ingredients.","step3: Pick up ingredients.","step4: Walk back to the bowl.","step5: Move ingredients toward bowl.","step6: Put ingredients in bowl together one by one."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"attend preschool at age four and five","events":{"0":"Repeat for two years","1":"Perform what was taught","2":"Listen to the teacher","3":"Go home in the afternoon","4":"Socialize with peers","5":"Go to school in the morning","6":"have  parents choose a school","7":"attend preschool at age four and five"},"context":"have  parents choose a school","minutes":1051200.0,"events_minutes":{"0":1051200.0,"1":60.0,"2":60.0,"3":15.0,"4":60.0,"5":15.0},"flatten_input_for_edge_prediction":"step0: Repeat for two years; step1: Perform what was taught; step2: Listen to the teacher; step3: Go home in the afternoon; step4: Socialize with peers; step5: Go to school in the morning; step6: have  parents choose a school; step7: attend preschool at age four and five","flatten_input_for_script_generation":"You want to attend preschool at age four and five. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step5 -> step4; step2 -> step1; step1 -> step3; step4 -> step3; step3 -> step0; step0 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: have  parents choose a school; step1: Go to school in the morning; step2: Listen to the teacher; step3: Socialize with peers; step4: Perform what was taught; step5: Go home in the afternoon; step6: Repeat for two years; step7: attend preschool at age four and five; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->1","3->0","4->3","5->2","5->4","6->5"],"reference_code":"class AttendPreschoolAtAgeFourAndFive:\n\n    title = \"attend preschool at age four and five\"\n    steps = 8\n\n    def step0(self):\n        return \"have  parents choose a school\"\n\n    def step1(self):\n        return \"Go to school in the morning\"\n\n    def step2(self):\n        return \"Listen to the teacher\"\n\n    def step3(self):\n        return \"Socialize with peers\"\n\n    def step4(self):\n        return \"Perform what was taught\"\n\n    def step5(self):\n        return \"Go home in the afternoon\"\n\n    def step6(self):\n        return \"Repeat for two years\"\n\n    def step7(self):\n        return \"attend preschool at age four and five\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class AttendPreschoolAtAgeFourAndFive:\n\n    title = \"attend preschool at age four and five\"\n    steps = 8\n\n","reference_graph":{"title":"attend preschool at age four and five","num_steps":8,"schema":["step0: have  parents choose a school","step1: Go to school in the morning","step2: Listen to the teacher","step3: Socialize with peers","step4: Perform what was taught","step5: Go home in the afternoon","step6: Repeat for two years","step7: attend preschool at age four and five"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Leave house when rain stops","events":{"0":"grab the doorknob","1":"turn the doorknob","2":"grab the lock of the door","3":"turn the lock to unlock","4":"open the door","5":"look out the window to see if the rain stopped","6":"Leave house when rain stops"},"context":"look out the window to see if the rain stopped","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0333333333,"2":0.0333333333,"3":0.0166666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: grab the doorknob; step1: turn the doorknob; step2: grab the lock of the door; step3: turn the lock to unlock; step4: open the door; step5: look out the window to see if the rain stopped; step6: Leave house when rain stops","flatten_input_for_script_generation":"You want to Leave house when rain stops. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: look out the window to see if the rain stopped; step1: grab the lock of the door; step2: turn the lock to unlock; step3: grab the doorknob; step4: turn the doorknob; step5: open the door; step6: Leave house when rain stops; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->3","3->0","4->6","5->2"],"reference_code":"class LeaveHouseWhenRainStops:\n\n    title = \"Leave house when rain stops\"\n    steps = 7\n\n    def step0(self):\n        return \"look out the window to see if the rain stopped\"\n\n    def step1(self):\n        return \"grab the lock of the door\"\n\n    def step2(self):\n        return \"turn the lock to unlock\"\n\n    def step3(self):\n        return \"grab the doorknob\"\n\n    def step4(self):\n        return \"turn the doorknob\"\n\n    def step5(self):\n        return \"open the door\"\n\n    def step6(self):\n        return \"Leave house when rain stops\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LeaveHouseWhenRainStops:\n\n    title = \"Leave house when rain stops\"\n    steps = 7\n\n","reference_graph":{"title":"Leave house when rain stops","num_steps":7,"schema":["step0: look out the window to see if the rain stopped","step1: grab the lock of the door","step2: turn the lock to unlock","step3: grab the doorknob","step4: turn the doorknob","step5: open the door","step6: Leave house when rain stops"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on the left rain boot","events":{"0":"put left foot into left boot opening","1":"pick up left rain boot","2":"place right hand on right side of boot thumb inside","3":"locate rain boots","4":"pinch thumbs into hands","5":"pull boot until boot is on left foot","6":"place left hand on left side of boot thumb inside","7":"grab some socks and put the socks on","8":"put on the left rain boot"},"context":"grab some socks and put the socks on","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.05,"3":1.0,"4":0.0833333333,"5":0.5,"6":0.05},"flatten_input_for_edge_prediction":"step0: put left foot into left boot opening; step1: pick up left rain boot; step2: place right hand on right side of boot thumb inside; step3: locate rain boots; step4: pinch thumbs into hands; step5: pull boot until boot is on left foot; step6: place left hand on left side of boot thumb inside; step7: grab some socks and put the socks on; step8: put on the left rain boot","flatten_input_for_script_generation":"You want to put on the left rain boot. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step6; step1 -> step2; step6 -> step4; step2 -> step4; step4 -> step0; step0 -> step5; step5 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: grab some socks and put the socks on; step1: locate rain boots; step2: pick up left rain boot; step3: place left hand on left side of boot thumb inside; step4: place right hand on right side of boot thumb inside; step5: pinch thumbs into hands; step6: put left foot into left boot opening; step7: pull boot until boot is on left foot; step8: put on the left rain boot; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->5","1->6","1->2","2->4","3->1","4->0","5->8","6->4","7->3"],"reference_code":"class PutOnTheLeftRainBoot:\n\n    title = \"put on the left rain boot\"\n    steps = 9\n\n    def step0(self):\n        return \"grab some socks and put the socks on\"\n\n    def step1(self):\n        return \"locate rain boots\"\n\n    def step2(self):\n        return \"pick up left rain boot\"\n\n    def step3(self):\n        return \"place left hand on left side of boot thumb inside\"\n\n    def step4(self):\n        return \"place right hand on right side of boot thumb inside\"\n\n    def step5(self):\n        return \"pinch thumbs into hands\"\n\n    def step6(self):\n        return \"put left foot into left boot opening\"\n\n    def step7(self):\n        return \"pull boot until boot is on left foot\"\n\n    def step8(self):\n        return \"put on the left rain boot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class PutOnTheLeftRainBoot:\n\n    title = \"put on the left rain boot\"\n    steps = 9\n\n","reference_graph":{"title":"put on the left rain boot","num_steps":9,"schema":["step0: grab some socks and put the socks on","step1: locate rain boots","step2: pick up left rain boot","step3: place left hand on left side of boot thumb inside","step4: place right hand on right side of boot thumb inside","step5: pinch thumbs into hands","step6: put left foot into left boot opening","step7: pull boot until boot is on left foot","step8: put on the left rain boot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"input payment amount on website","events":{"0":"find payment website","1":"begin typing amount","2":"look for payment website","3":"open payment website","4":"remember payment amount","5":"calculate if enough for payment","6":"input payment amount on website"},"context":"calculate if enough for payment","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find payment website; step1: begin typing amount; step2: look for payment website; step3: open payment website; step4: remember payment amount; step5: calculate if enough for payment; step6: input payment amount on website","flatten_input_for_script_generation":"You want to input payment amount on website. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step4 -> step1; step3 -> step1; step1 -> step6; step5 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: calculate if enough for payment; step1: remember payment amount; step2: look for payment website; step3: find payment website; step4: open payment website; step5: begin typing amount; step6: input payment amount on website; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->1","5->2","5->4"],"reference_code":"class InputPaymentAmountOnWebsite:\n\n    title = \"input payment amount on website\"\n    steps = 7\n\n    def step0(self):\n        return \"calculate if enough for payment\"\n\n    def step1(self):\n        return \"remember payment amount\"\n\n    def step2(self):\n        return \"look for payment website\"\n\n    def step3(self):\n        return \"find payment website\"\n\n    def step4(self):\n        return \"open payment website\"\n\n    def step5(self):\n        return \"begin typing amount\"\n\n    def step6(self):\n        return \"input payment amount on website\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class InputPaymentAmountOnWebsite:\n\n    title = \"input payment amount on website\"\n    steps = 7\n\n","reference_graph":{"title":"input payment amount on website","num_steps":7,"schema":["step0: calculate if enough for payment","step1: remember payment amount","step2: look for payment website","step3: find payment website","step4: open payment website","step5: begin typing amount","step6: input payment amount on website"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step5","step5 -> step6"]}}
{"scenario":"cut the sod","events":{"0":"find the scissors","1":"move scissors towards sod","2":"find the sod","3":"look for sod","4":"look for scissors","5":"dig up rocks from soil","6":"cut the sod"},"context":"dig up rocks from soil","minutes":10.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the scissors; step1: move scissors towards sod; step2: find the sod; step3: look for sod; step4: look for scissors; step5: dig up rocks from soil; step6: cut the sod","flatten_input_for_script_generation":"You want to cut the sod. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: dig up rocks from soil; step1: look for sod; step2: look for scissors; step3: find the scissors; step4: move scissors towards sod; step5: cut the sod; step6: find the sod; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->1","1->6","2->1","3->2","4->0","5->4","5->3"],"reference_code":"class CutTheSod:\n\n    title = \"cut the sod\"\n    steps = 7\n\n    def step0(self):\n        return \"dig up rocks from soil\"\n\n    def step1(self):\n        return \"look for sod\"\n\n    def step2(self):\n        return \"look for scissors\"\n\n    def step3(self):\n        return \"find the scissors\"\n\n    def step4(self):\n        return \"move scissors towards sod\"\n\n    def step5(self):\n        return \"cut the sod\"\n\n    def step6(self):\n        return \"find the sod\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class CutTheSod:\n\n    title = \"cut the sod\"\n    steps = 7\n\n","reference_graph":{"title":"cut the sod","num_steps":7,"schema":["step0: dig up rocks from soil","step1: look for sod","step2: look for scissors","step3: find the scissors","step4: move scissors towards sod","step5: cut the sod","step6: find the sod"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"Purchase new uniform.","events":{"0":"purchase the items selected","1":"sit down at the desk","2":"browse through different websites","3":"select the items wanted","4":"add everything to cart","5":"Agree on first work day.","6":"Purchase new uniform."},"context":"Agree on first work day.","minutes":30.0,"events_minutes":{"0":1.0,"1":0.1833333333,"2":10.0,"3":5.0,"4":4.0},"flatten_input_for_edge_prediction":"step0: purchase the items selected; step1: sit down at the desk; step2: browse through different websites; step3: select the items wanted; step4: add everything to cart; step5: Agree on first work day.; step6: Purchase new uniform.","flatten_input_for_script_generation":"You want to Purchase new uniform.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Agree on first work day.; step1: sit down at the desk; step2: browse through different websites; step3: select the items wanted; step4: add everything to cart; step5: purchase the items selected; step6: Purchase new uniform.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->4","4->0","5->1"],"reference_code":"class PurchaseNewUniform:\n\n    title = \"Purchase new uniform.\"\n    steps = 7\n\n    def step0(self):\n        return \"Agree on first work day.\"\n\n    def step1(self):\n        return \"sit down at the desk\"\n\n    def step2(self):\n        return \"browse through different websites\"\n\n    def step3(self):\n        return \"select the items wanted\"\n\n    def step4(self):\n        return \"add everything to cart\"\n\n    def step5(self):\n        return \"purchase the items selected\"\n\n    def step6(self):\n        return \"Purchase new uniform.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseNewUniform:\n\n    title = \"Purchase new uniform.\"\n    steps = 7\n\n","reference_graph":{"title":"Purchase new uniform.","num_steps":7,"schema":["step0: Agree on first work day.","step1: sit down at the desk","step2: browse through different websites","step3: select the items wanted","step4: add everything to cart","step5: purchase the items selected","step6: Purchase new uniform."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start to move arms and legs.","events":{"0":"swing right arm forward","1":"lift right foot and step forward","2":"lift left foot and step forward","3":"glance toward destination","4":"swing left arm forward","5":"get up and in position.","6":"start to move arms and legs."},"context":"get up and in position.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: swing right arm forward; step1: lift right foot and step forward; step2: lift left foot and step forward; step3: glance toward destination; step4: swing left arm forward; step5: get up and in position.; step6: start to move arms and legs.","flatten_input_for_script_generation":"You want to start to move arms and legs.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step3 -> step1; step2 -> step0; step0 -> step6; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: get up and in position.; step1: glance toward destination; step2: lift left foot and step forward; step3: lift right foot and step forward; step4: swing right arm forward; step5: swing left arm forward; step6: start to move arms and legs.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","3->1","4->6","5->3"],"reference_code":"class StartToMoveArmsAndLegs:\n\n    title = \"start to move arms and legs.\"\n    steps = 7\n\n    def step0(self):\n        return \"get up and in position.\"\n\n    def step1(self):\n        return \"glance toward destination\"\n\n    def step2(self):\n        return \"lift left foot and step forward\"\n\n    def step3(self):\n        return \"lift right foot and step forward\"\n\n    def step4(self):\n        return \"swing right arm forward\"\n\n    def step5(self):\n        return \"swing left arm forward\"\n\n    def step6(self):\n        return \"start to move arms and legs.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartToMoveArmsAndLegs:\n\n    title = \"start to move arms and legs.\"\n    steps = 7\n\n","reference_graph":{"title":"start to move arms and legs.","num_steps":7,"schema":["step0: get up and in position.","step1: glance toward destination","step2: lift left foot and step forward","step3: lift right foot and step forward","step4: swing right arm forward","step5: swing left arm forward","step6: start to move arms and legs."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"stop eating out as much","events":{"0":"Determine what is left.","1":"Buy cost effective food.","2":"Allocate these to cover necessary expenses.","3":"Refer to the budget when making purchases.","4":"Consider the resources available.","5":"come up with a strict budget.","6":"stop eating out as much"},"context":"come up with a strict budget.","minutes":86400.0,"events_minutes":{"0":3.0,"1":3.0,"2":4.0,"3":3.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: Determine what is left.; step1: Buy cost effective food.; step2: Allocate these to cover necessary expenses.; step3: Refer to the budget when making purchases.; step4: Consider the resources available.; step5: come up with a strict budget.; step6: stop eating out as much","flatten_input_for_script_generation":"You want to stop eating out as much. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step2; step2 -> step0; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: come up with a strict budget.; step1: Refer to the budget when making purchases.; step2: Consider the resources available.; step3: Allocate these to cover necessary expenses.; step4: Determine what is left.; step5: Buy cost effective food.; step6: stop eating out as much; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->4","4->2","5->3"],"reference_code":"class StopEatingOutAsMuch:\n\n    title = \"stop eating out as much\"\n    steps = 7\n\n    def step0(self):\n        return \"come up with a strict budget.\"\n\n    def step1(self):\n        return \"Refer to the budget when making purchases.\"\n\n    def step2(self):\n        return \"Consider the resources available.\"\n\n    def step3(self):\n        return \"Allocate these to cover necessary expenses.\"\n\n    def step4(self):\n        return \"Determine what is left.\"\n\n    def step5(self):\n        return \"Buy cost effective food.\"\n\n    def step6(self):\n        return \"stop eating out as much\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StopEatingOutAsMuch:\n\n    title = \"stop eating out as much\"\n    steps = 7\n\n","reference_graph":{"title":"stop eating out as much","num_steps":7,"schema":["step0: come up with a strict budget.","step1: Refer to the budget when making purchases.","step2: Consider the resources available.","step3: Allocate these to cover necessary expenses.","step4: Determine what is left.","step5: Buy cost effective food.","step6: stop eating out as much"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"slowly direct yourself to the location.","events":{"0":"move left leg forward","1":"lift up right leg","2":"move right leg forward","3":"move body  forward","4":"lift up left leg","5":"get up and in position.","6":"slowly direct yourself to the location."},"context":"get up and in position.","minutes":1.0,"events_minutes":{"0":0.5,"1":0.5,"2":0.5,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: move left leg forward; step1: lift up right leg; step2: move right leg forward; step3: move body  forward; step4: lift up left leg; step5: get up and in position.; step6: slowly direct yourself to the location.","flatten_input_for_script_generation":"You want to slowly direct yourself to the location.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step1 -> step2; step0 -> step3; step2 -> step3; step3 -> step6; step5 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: get up and in position.; step1: lift up right leg; step2: lift up left leg; step3: move left leg forward; step4: move body  forward; step5: move right leg forward; step6: slowly direct yourself to the location.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step4; step4 -> step6","gold_edges_for_prediction":["0->3","1->2","2->3","3->6","4->0","5->4","5->1"],"reference_code":"class SlowlyDirectYourselfToTheLocation:\n\n    title = \"slowly direct yourself to the location.\"\n    steps = 7\n\n    def step0(self):\n        return \"get up and in position.\"\n\n    def step1(self):\n        return \"lift up right leg\"\n\n    def step2(self):\n        return \"lift up left leg\"\n\n    def step3(self):\n        return \"move left leg forward\"\n\n    def step4(self):\n        return \"move body  forward\"\n\n    def step5(self):\n        return \"move right leg forward\"\n\n    def step6(self):\n        return \"slowly direct yourself to the location.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step4\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class SlowlyDirectYourselfToTheLocation:\n\n    title = \"slowly direct yourself to the location.\"\n    steps = 7\n\n","reference_graph":{"title":"slowly direct yourself to the location.","num_steps":7,"schema":["step0: get up and in position.","step1: lift up right leg","step2: lift up left leg","step3: move left leg forward","step4: move body  forward","step5: move right leg forward","step6: slowly direct yourself to the location."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step4","step4 -> step6"]}}
{"scenario":"put parking pass in window","events":{"0":"grab parking pass","1":"put hand on parking pass","2":"find a spot","3":"move pass towards open spot","4":"look for spot on window","5":"get a parking pass","6":"put parking pass in window"},"context":"get a parking pass","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: grab parking pass; step1: put hand on parking pass; step2: find a spot; step3: move pass towards open spot; step4: look for spot on window; step5: get a parking pass; step6: put parking pass in window","flatten_input_for_script_generation":"You want to put parking pass in window. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: get a parking pass; step1: put hand on parking pass; step2: look for spot on window; step3: find a spot; step4: move pass towards open spot; step5: put parking pass in window; step6: grab parking pass; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->3","1->0","2->3","3->6","4->2","5->4","5->1"],"reference_code":"class PutParkingPassInWindow:\n\n    title = \"put parking pass in window\"\n    steps = 7\n\n    def step0(self):\n        return \"get a parking pass\"\n\n    def step1(self):\n        return \"put hand on parking pass\"\n\n    def step2(self):\n        return \"look for spot on window\"\n\n    def step3(self):\n        return \"find a spot\"\n\n    def step4(self):\n        return \"move pass towards open spot\"\n\n    def step5(self):\n        return \"put parking pass in window\"\n\n    def step6(self):\n        return \"grab parking pass\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class PutParkingPassInWindow:\n\n    title = \"put parking pass in window\"\n    steps = 7\n\n","reference_graph":{"title":"put parking pass in window","num_steps":7,"schema":["step0: get a parking pass","step1: put hand on parking pass","step2: look for spot on window","step3: find a spot","step4: move pass towards open spot","step5: put parking pass in window","step6: grab parking pass"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"turn off the car","events":{"0":"move hand towards key","1":"look for key in ignition","2":"put hand on key","3":"take key out of ignition","4":"find the key","5":"maneuver car in spot","6":"turn off the car"},"context":"maneuver car in spot","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move hand towards key; step1: look for key in ignition; step2: put hand on key; step3: take key out of ignition; step4: find the key; step5: maneuver car in spot; step6: turn off the car","flatten_input_for_script_generation":"You want to turn off the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: maneuver car in spot; step1: look for key in ignition; step2: find the key; step3: move hand towards key; step4: put hand on key; step5: take key out of ignition; step6: turn off the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->6","4->0","5->1"],"reference_code":"class TurnOffTheCar:\n\n    title = \"turn off the car\"\n    steps = 7\n\n    def step0(self):\n        return \"maneuver car in spot\"\n\n    def step1(self):\n        return \"look for key in ignition\"\n\n    def step2(self):\n        return \"find the key\"\n\n    def step3(self):\n        return \"move hand towards key\"\n\n    def step4(self):\n        return \"put hand on key\"\n\n    def step5(self):\n        return \"take key out of ignition\"\n\n    def step6(self):\n        return \"turn off the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TurnOffTheCar:\n\n    title = \"turn off the car\"\n    steps = 7\n\n","reference_graph":{"title":"turn off the car","num_steps":7,"schema":["step0: maneuver car in spot","step1: look for key in ignition","step2: find the key","step3: move hand towards key","step4: put hand on key","step5: take key out of ignition","step6: turn off the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Park the car.","events":{"0":"find parking spot","1":"drive car inside parking spot","2":"make sure car fits inside lines","3":"look for parking spot","4":"turn off car","5":"drive to tryout location","6":"Park the car."},"context":"drive to tryout location","minutes":0.4166666667,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find parking spot; step1: drive car inside parking spot; step2: make sure car fits inside lines; step3: look for parking spot; step4: turn off car; step5: drive to tryout location; step6: Park the car.","flatten_input_for_script_generation":"You want to Park the car.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to tryout location; step1: look for parking spot; step2: find parking spot; step3: drive car inside parking spot; step4: make sure car fits inside lines; step5: turn off car; step6: Park the car.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->0","4->6","5->3"],"reference_code":"class ParkTheCar:\n\n    title = \"Park the car.\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to tryout location\"\n\n    def step1(self):\n        return \"look for parking spot\"\n\n    def step2(self):\n        return \"find parking spot\"\n\n    def step3(self):\n        return \"drive car inside parking spot\"\n\n    def step4(self):\n        return \"make sure car fits inside lines\"\n\n    def step5(self):\n        return \"turn off car\"\n\n    def step6(self):\n        return \"Park the car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"Park the car.\"\n    steps = 7\n\n","reference_graph":{"title":"Park the car.","num_steps":7,"schema":["step0: drive to tryout location","step1: look for parking spot","step2: find parking spot","step3: drive car inside parking spot","step4: make sure car fits inside lines","step5: turn off car","step6: Park the car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get the tiller","events":{"0":"look for tiller","1":"reach out to tiller","2":"walk to the tiller","3":"put hand on tiller","4":"find the tiller","5":"kill any weeds","6":"get the tiller"},"context":"kill any weeds","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for tiller; step1: reach out to tiller; step2: walk to the tiller; step3: put hand on tiller; step4: find the tiller; step5: kill any weeds; step6: get the tiller","flatten_input_for_script_generation":"You want to get the tiller. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: kill any weeds; step1: look for tiller; step2: find the tiller; step3: walk to the tiller; step4: reach out to tiller; step5: put hand on tiller; step6: get the tiller; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->6","4->2","5->0"],"reference_code":"class GetTheTiller:\n\n    title = \"get the tiller\"\n    steps = 7\n\n    def step0(self):\n        return \"kill any weeds\"\n\n    def step1(self):\n        return \"look for tiller\"\n\n    def step2(self):\n        return \"find the tiller\"\n\n    def step3(self):\n        return \"walk to the tiller\"\n\n    def step4(self):\n        return \"reach out to tiller\"\n\n    def step5(self):\n        return \"put hand on tiller\"\n\n    def step6(self):\n        return \"get the tiller\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetTheTiller:\n\n    title = \"get the tiller\"\n    steps = 7\n\n","reference_graph":{"title":"get the tiller","num_steps":7,"schema":["step0: kill any weeds","step1: look for tiller","step2: find the tiller","step3: walk to the tiller","step4: reach out to tiller","step5: put hand on tiller","step6: get the tiller"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to the grill","events":{"0":"close door after going through","1":"continue moving until standing in front of grill","2":"lift left foot","3":"lift right foot","4":"turn towards grill","5":"walk through the door","6":"walk to the grill"},"context":"walk through the door","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.0833333333,"3":0.0833333333,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: close door after going through; step1: continue moving until standing in front of grill; step2: lift left foot; step3: lift right foot; step4: turn towards grill; step5: walk through the door; step6: walk to the grill","flatten_input_for_script_generation":"You want to walk to the grill. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step4 -> step2; step3 -> step1; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: walk through the door; step1: close door after going through; step2: turn towards grill; step3: lift right foot; step4: lift left foot; step5: continue moving until standing in front of grill; step6: walk to the grill; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->1","4->3","4->2","5->0"],"reference_code":"class WalkToTheGrill:\n\n    title = \"walk to the grill\"\n    steps = 7\n\n    def step0(self):\n        return \"walk through the door\"\n\n    def step1(self):\n        return \"close door after going through\"\n\n    def step2(self):\n        return \"turn towards grill\"\n\n    def step3(self):\n        return \"lift right foot\"\n\n    def step4(self):\n        return \"lift left foot\"\n\n    def step5(self):\n        return \"continue moving until standing in front of grill\"\n\n    def step6(self):\n        return \"walk to the grill\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheGrill:\n\n    title = \"walk to the grill\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the grill","num_steps":7,"schema":["step0: walk through the door","step1: close door after going through","step2: turn towards grill","step3: lift right foot","step4: lift left foot","step5: continue moving until standing in front of grill","step6: walk to the grill"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"put a table in chosen space","events":{"0":"pick up table","1":"walk table into hobby space","2":"walk out to garage","3":"fold right leg of table up","4":"fold left leg of table up","5":"find area with enough space to do hobby","6":"put a table in chosen space"},"context":"find area with enough space to do hobby","minutes":3.0,"events_minutes":{"0":0.25,"1":2.0,"2":1.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: pick up table; step1: walk table into hobby space; step2: walk out to garage; step3: fold right leg of table up; step4: fold left leg of table up; step5: find area with enough space to do hobby; step6: put a table in chosen space","flatten_input_for_script_generation":"You want to put a table in chosen space. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step2 -> step3; step4 -> step0; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: find area with enough space to do hobby; step1: walk out to garage; step2: fold left leg of table up; step3: fold right leg of table up; step4: pick up table; step5: walk table into hobby space; step6: put a table in chosen space; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","2->3","3->0","4->0","5->2"],"reference_code":"class PutATableInChosenSpace:\n\n    title = \"put a table in chosen space\"\n    steps = 7\n\n    def step0(self):\n        return \"find area with enough space to do hobby\"\n\n    def step1(self):\n        return \"walk out to garage\"\n\n    def step2(self):\n        return \"fold left leg of table up\"\n\n    def step3(self):\n        return \"fold right leg of table up\"\n\n    def step4(self):\n        return \"pick up table\"\n\n    def step5(self):\n        return \"walk table into hobby space\"\n\n    def step6(self):\n        return \"put a table in chosen space\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutATableInChosenSpace:\n\n    title = \"put a table in chosen space\"\n    steps = 7\n\n","reference_graph":{"title":"put a table in chosen space","num_steps":7,"schema":["step0: find area with enough space to do hobby","step1: walk out to garage","step2: fold left leg of table up","step3: fold right leg of table up","step4: pick up table","step5: walk table into hobby space","step6: put a table in chosen space"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"close vehicle door","events":{"0":"push door towards car","1":"look for vehicle door","2":"put hand on door","3":"remember vehicle door","4":"find vehicle door","5":"exit the vehicle","6":"close vehicle door"},"context":"exit the vehicle","minutes":0.4166666667,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: push door towards car; step1: look for vehicle door; step2: put hand on door; step3: remember vehicle door; step4: find vehicle door; step5: exit the vehicle; step6: close vehicle door","flatten_input_for_script_generation":"You want to close vehicle door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step3 -> step1; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: exit the vehicle; step1: remember vehicle door; step2: look for vehicle door; step3: find vehicle door; step4: put hand on door; step5: push door towards car; step6: close vehicle door; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step2; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->1","4->2","5->3"],"reference_code":"class CloseVehicleDoor:\n\n    title = \"close vehicle door\"\n    steps = 7\n\n    def step0(self):\n        return \"exit the vehicle\"\n\n    def step1(self):\n        return \"remember vehicle door\"\n\n    def step2(self):\n        return \"look for vehicle door\"\n\n    def step3(self):\n        return \"find vehicle door\"\n\n    def step4(self):\n        return \"put hand on door\"\n\n    def step5(self):\n        return \"push door towards car\"\n\n    def step6(self):\n        return \"close vehicle door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step2\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CloseVehicleDoor:\n\n    title = \"close vehicle door\"\n    steps = 7\n\n","reference_graph":{"title":"close vehicle door","num_steps":7,"schema":["step0: exit the vehicle","step1: remember vehicle door","step2: look for vehicle door","step3: find vehicle door","step4: put hand on door","step5: push door towards car","step6: close vehicle door"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step2","step5 -> step6"]}}
{"scenario":"cross off items already in possession","events":{"0":"uncap the pen","1":"grab a pen","2":"write down the items to inventory","3":"check to see if any of the items are owned","4":"pull out a whiteboard","5":"go home to check inventory","6":"cross off items already in possession"},"context":"go home to check inventory","minutes":2.0,"events_minutes":{"0":0.5,"1":0.5833333333,"2":0.0166666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: uncap the pen; step1: grab a pen; step2: write down the items to inventory; step3: check to see if any of the items are owned; step4: pull out a whiteboard; step5: go home to check inventory; step6: cross off items already in possession","flatten_input_for_script_generation":"You want to cross off items already in possession. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step6; step1 -> step0; step0 -> step2; step5 -> step4; step5 -> step1","flatten_output_for_script_generation":"step0: go home to check inventory; step1: grab a pen; step2: pull out a whiteboard; step3: write down the items to inventory; step4: check to see if any of the items are owned; step5: cross off items already in possession; step6: uncap the pen; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step3","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->2","5->4","5->1"],"reference_code":"class CrossOffItemsAlreadyInPossession:\n\n    title = \"cross off items already in possession\"\n    steps = 7\n\n    def step0(self):\n        return \"go home to check inventory\"\n\n    def step1(self):\n        return \"grab a pen\"\n\n    def step2(self):\n        return \"pull out a whiteboard\"\n\n    def step3(self):\n        return \"write down the items to inventory\"\n\n    def step4(self):\n        return \"check to see if any of the items are owned\"\n\n    def step5(self):\n        return \"cross off items already in possession\"\n\n    def step6(self):\n        return \"uncap the pen\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class CrossOffItemsAlreadyInPossession:\n\n    title = \"cross off items already in possession\"\n    steps = 7\n\n","reference_graph":{"title":"cross off items already in possession","num_steps":7,"schema":["step0: go home to check inventory","step1: grab a pen","step2: pull out a whiteboard","step3: write down the items to inventory","step4: check to see if any of the items are owned","step5: cross off items already in possession","step6: uncap the pen"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step3"]}}
{"scenario":"walk to the closet","events":{"0":"Look toward the direction of movement","1":"Do the same thing with the other foot.","2":"Repeat the process until standing near closet.","3":"Lift one foot","4":"Set the foot down in front of the other","5":"turn off alarm","6":"walk to the closet"},"context":"turn off alarm","minutes":1.0,"events_minutes":{"0":0.1333333333,"1":0.0333333333,"2":0.3,"3":0.2,"4":0.25},"flatten_input_for_edge_prediction":"step0: Look toward the direction of movement; step1: Do the same thing with the other foot.; step2: Repeat the process until standing near closet.; step3: Lift one foot; step4: Set the foot down in front of the other; step5: turn off alarm; step6: walk to the closet","flatten_input_for_script_generation":"You want to walk to the closet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: turn off alarm; step1: Look toward the direction of movement; step2: Lift one foot; step3: Set the foot down in front of the other; step4: Do the same thing with the other foot.; step5: Repeat the process until standing near closet.; step6: walk to the closet; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->4","4->1","5->0"],"reference_code":"class WalkToTheCloset:\n\n    title = \"walk to the closet\"\n    steps = 7\n\n    def step0(self):\n        return \"turn off alarm\"\n\n    def step1(self):\n        return \"Look toward the direction of movement\"\n\n    def step2(self):\n        return \"Lift one foot\"\n\n    def step3(self):\n        return \"Set the foot down in front of the other\"\n\n    def step4(self):\n        return \"Do the same thing with the other foot.\"\n\n    def step5(self):\n        return \"Repeat the process until standing near closet.\"\n\n    def step6(self):\n        return \"walk to the closet\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheCloset:\n\n    title = \"walk to the closet\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the closet","num_steps":7,"schema":["step0: turn off alarm","step1: Look toward the direction of movement","step2: Lift one foot","step3: Set the foot down in front of the other","step4: Do the same thing with the other foot.","step5: Repeat the process until standing near closet.","step6: walk to the closet"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"dry off body","events":{"0":"use towel to absorb wetness","1":"put down towel","2":"grab onto the towel","3":"move towel around body","4":"put towel onto body","5":"get out of the shower","6":"dry off body"},"context":"get out of the shower","minutes":2.0,"events_minutes":{"0":1.0,"1":0.0333333333,"2":0.05,"3":1.0,"4":0.05},"flatten_input_for_edge_prediction":"step0: use towel to absorb wetness; step1: put down towel; step2: grab onto the towel; step3: move towel around body; step4: put towel onto body; step5: get out of the shower; step6: dry off body","flatten_input_for_script_generation":"You want to dry off body. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: get out of the shower; step1: grab onto the towel; step2: put towel onto body; step3: move towel around body; step4: use towel to absorb wetness; step5: put down towel; step6: dry off body; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class DryOffBody:\n\n    title = \"dry off body\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the shower\"\n\n    def step1(self):\n        return \"grab onto the towel\"\n\n    def step2(self):\n        return \"put towel onto body\"\n\n    def step3(self):\n        return \"move towel around body\"\n\n    def step4(self):\n        return \"use towel to absorb wetness\"\n\n    def step5(self):\n        return \"put down towel\"\n\n    def step6(self):\n        return \"dry off body\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DryOffBody:\n\n    title = \"dry off body\"\n    steps = 7\n\n","reference_graph":{"title":"dry off body","num_steps":7,"schema":["step0: get out of the shower","step1: grab onto the towel","step2: put towel onto body","step3: move towel around body","step4: use towel to absorb wetness","step5: put down towel","step6: dry off body"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"locate the sunscreen section of the store","events":{"0":"Look for aisle number\/sunscreen aisle","1":"Find store associate","2":"Go to main aisle","3":"Ask associate where sunscreen is","4":"Walk down main aisle","5":"go inside the store","6":"locate the sunscreen section of the store"},"context":"go inside the store","minutes":2.0,"events_minutes":{"0":0.5,"1":1.0,"2":0.0833333333,"3":1.0,"4":0.5},"flatten_input_for_edge_prediction":"step0: Look for aisle number\/sunscreen aisle; step1: Find store associate; step2: Go to main aisle; step3: Ask associate where sunscreen is; step4: Walk down main aisle; step5: go inside the store; step6: locate the sunscreen section of the store","flatten_input_for_script_generation":"You want to locate the sunscreen section of the store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step1 -> step3; step3 -> step2; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go inside the store; step1: Find store associate; step2: Go to main aisle; step3: Walk down main aisle; step4: Look for aisle number\/sunscreen aisle; step5: Ask associate where sunscreen is; step6: locate the sunscreen section of the store; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->2","4->0","5->1"],"reference_code":"class LocateTheSunscreenSectionOfTheStore:\n\n    title = \"locate the sunscreen section of the store\"\n    steps = 7\n\n    def step0(self):\n        return \"go inside the store\"\n\n    def step1(self):\n        return \"Find store associate\"\n\n    def step2(self):\n        return \"Go to main aisle\"\n\n    def step3(self):\n        return \"Walk down main aisle\"\n\n    def step4(self):\n        return \"Look for aisle number\/sunscreen aisle\"\n\n    def step5(self):\n        return \"Ask associate where sunscreen is\"\n\n    def step6(self):\n        return \"locate the sunscreen section of the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class LocateTheSunscreenSectionOfTheStore:\n\n    title = \"locate the sunscreen section of the store\"\n    steps = 7\n\n","reference_graph":{"title":"locate the sunscreen section of the store","num_steps":7,"schema":["step0: go inside the store","step1: Find store associate","step2: Go to main aisle","step3: Walk down main aisle","step4: Look for aisle number\/sunscreen aisle","step5: Ask associate where sunscreen is","step6: locate the sunscreen section of the store"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6"]}}
{"scenario":"enter parking lot","events":{"0":"Look for parking lot entrance","1":"Turn steering wheel","2":"Press on brakes to slow down","3":"Signal toward parking lot entrance","4":"Regulate gas pedal","5":"drove to grocery store","6":"enter parking lot"},"context":"drove to grocery store","minutes":1.0,"events_minutes":{"0":0.05,"1":0.05,"2":0.05,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: Look for parking lot entrance; step1: Turn steering wheel; step2: Press on brakes to slow down; step3: Signal toward parking lot entrance; step4: Regulate gas pedal; step5: drove to grocery store; step6: enter parking lot","flatten_input_for_script_generation":"You want to enter parking lot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step3 -> step4; step4 -> step1; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: drove to grocery store; step1: Look for parking lot entrance; step2: Signal toward parking lot entrance; step3: Press on brakes to slow down; step4: Regulate gas pedal; step5: Turn steering wheel; step6: enter parking lot; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","3->4","4->1","5->0"],"reference_code":"class EnterParkingLot:\n\n    title = \"enter parking lot\"\n    steps = 7\n\n    def step0(self):\n        return \"drove to grocery store\"\n\n    def step1(self):\n        return \"Look for parking lot entrance\"\n\n    def step2(self):\n        return \"Signal toward parking lot entrance\"\n\n    def step3(self):\n        return \"Press on brakes to slow down\"\n\n    def step4(self):\n        return \"Regulate gas pedal\"\n\n    def step5(self):\n        return \"Turn steering wheel\"\n\n    def step6(self):\n        return \"enter parking lot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterParkingLot:\n\n    title = \"enter parking lot\"\n    steps = 7\n\n","reference_graph":{"title":"enter parking lot","num_steps":7,"schema":["step0: drove to grocery store","step1: Look for parking lot entrance","step2: Signal toward parking lot entrance","step3: Press on brakes to slow down","step4: Regulate gas pedal","step5: Turn steering wheel","step6: enter parking lot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"get tired after a while","events":{"0":"do that something","1":"find something to do","2":"finish doing that something","3":"get bored of something","4":"run out of energy","5":"go and get dressed","6":"get tired after a while"},"context":"go and get dressed","minutes":5.0,"events_minutes":{"0":60.0,"1":0.0166666667,"2":1.0,"3":0.0166666667,"4":60.0},"flatten_input_for_edge_prediction":"step0: do that something; step1: find something to do; step2: finish doing that something; step3: get bored of something; step4: run out of energy; step5: go and get dressed; step6: get tired after a while","flatten_input_for_script_generation":"You want to get tired after a while. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step2 -> step4; step3 -> step2; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: go and get dressed; step1: find something to do; step2: do that something; step3: get bored of something; step4: finish doing that something; step5: run out of energy; step6: get tired after a while; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->2","4->6","5->1"],"reference_code":"class GetTiredAfterAWhile:\n\n    title = \"get tired after a while\"\n    steps = 7\n\n    def step0(self):\n        return \"go and get dressed\"\n\n    def step1(self):\n        return \"find something to do\"\n\n    def step2(self):\n        return \"do that something\"\n\n    def step3(self):\n        return \"get bored of something\"\n\n    def step4(self):\n        return \"finish doing that something\"\n\n    def step5(self):\n        return \"run out of energy\"\n\n    def step6(self):\n        return \"get tired after a while\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetTiredAfterAWhile:\n\n    title = \"get tired after a while\"\n    steps = 7\n\n","reference_graph":{"title":"get tired after a while","num_steps":7,"schema":["step0: go and get dressed","step1: find something to do","step2: do that something","step3: get bored of something","step4: finish doing that something","step5: run out of energy","step6: get tired after a while"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk the rest of the way home","events":{"0":"realize bus stopped at the wrong bus stop","1":"decide that the exercise would be good","2":"watch the driver pull away","3":"bend down to tie shoes","4":"turn around to tell driver","5":"get off school bus","6":"walk the rest of the way home"},"context":"get off school bus","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.3333333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: realize bus stopped at the wrong bus stop; step1: decide that the exercise would be good; step2: watch the driver pull away; step3: bend down to tie shoes; step4: turn around to tell driver; step5: get off school bus; step6: walk the rest of the way home","flatten_input_for_script_generation":"You want to walk the rest of the way home. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get off school bus; step1: realize bus stopped at the wrong bus stop; step2: turn around to tell driver; step3: watch the driver pull away; step4: decide that the exercise would be good; step5: bend down to tie shoes; step6: walk the rest of the way home; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->6","4->2","5->0"],"reference_code":"class WalkTheRestOfTheWayHome:\n\n    title = \"walk the rest of the way home\"\n    steps = 7\n\n    def step0(self):\n        return \"get off school bus\"\n\n    def step1(self):\n        return \"realize bus stopped at the wrong bus stop\"\n\n    def step2(self):\n        return \"turn around to tell driver\"\n\n    def step3(self):\n        return \"watch the driver pull away\"\n\n    def step4(self):\n        return \"decide that the exercise would be good\"\n\n    def step5(self):\n        return \"bend down to tie shoes\"\n\n    def step6(self):\n        return \"walk the rest of the way home\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkTheRestOfTheWayHome:\n\n    title = \"walk the rest of the way home\"\n    steps = 7\n\n","reference_graph":{"title":"walk the rest of the way home","num_steps":7,"schema":["step0: get off school bus","step1: realize bus stopped at the wrong bus stop","step2: turn around to tell driver","step3: watch the driver pull away","step4: decide that the exercise would be good","step5: bend down to tie shoes","step6: walk the rest of the way home"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"add the condiments","events":{"0":"put hand on condimentss","1":"decide what condiments to put on","2":"find hot dog","3":"look for hot dog","4":"move condiments towards hot dog","5":"grab the condiments","6":"add the condiments"},"context":"grab the condiments","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put hand on condimentss; step1: decide what condiments to put on; step2: find hot dog; step3: look for hot dog; step4: move condiments towards hot dog; step5: grab the condiments; step6: add the condiments","flatten_input_for_script_generation":"You want to add the condiments. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: grab the condiments; step1: decide what condiments to put on; step2: look for hot dog; step3: find hot dog; step4: move condiments towards hot dog; step5: add the condiments; step6: put hand on condimentss; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->4","1->0","2->4","3->2","4->6","5->3","5->1"],"reference_code":"class AddTheCondiments:\n\n    title = \"add the condiments\"\n    steps = 7\n\n    def step0(self):\n        return \"grab the condiments\"\n\n    def step1(self):\n        return \"decide what condiments to put on\"\n\n    def step2(self):\n        return \"look for hot dog\"\n\n    def step3(self):\n        return \"find hot dog\"\n\n    def step4(self):\n        return \"move condiments towards hot dog\"\n\n    def step5(self):\n        return \"add the condiments\"\n\n    def step6(self):\n        return \"put hand on condimentss\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class AddTheCondiments:\n\n    title = \"add the condiments\"\n    steps = 7\n\n","reference_graph":{"title":"add the condiments","num_steps":7,"schema":["step0: grab the condiments","step1: decide what condiments to put on","step2: look for hot dog","step3: find hot dog","step4: move condiments towards hot dog","step5: add the condiments","step6: put hand on condimentss"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"Fill out personal information on sign up sheet.","events":{"0":"hit enter key","1":"type in the information","2":"look for space to enter information","3":"click on space","4":"find space to enter information","5":"Choose a class that fits both criteria.","6":"Fill out personal information on sign up sheet."},"context":"Choose a class that fits both criteria.","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":0.0166666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: hit enter key; step1: type in the information; step2: look for space to enter information; step3: click on space; step4: find space to enter information; step5: Choose a class that fits both criteria.; step6: Fill out personal information on sign up sheet.","flatten_input_for_script_generation":"You want to Fill out personal information on sign up sheet.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Choose a class that fits both criteria.; step1: look for space to enter information; step2: find space to enter information; step3: click on space; step4: type in the information; step5: hit enter key; step6: Fill out personal information on sign up sheet.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->1","4->3","5->2"],"reference_code":"class FillOutPersonalInformationOnSignUpSheet:\n\n    title = \"Fill out personal information on sign up sheet.\"\n    steps = 7\n\n    def step0(self):\n        return \"Choose a class that fits both criteria.\"\n\n    def step1(self):\n        return \"look for space to enter information\"\n\n    def step2(self):\n        return \"find space to enter information\"\n\n    def step3(self):\n        return \"click on space\"\n\n    def step4(self):\n        return \"type in the information\"\n\n    def step5(self):\n        return \"hit enter key\"\n\n    def step6(self):\n        return \"Fill out personal information on sign up sheet.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutPersonalInformationOnSignUpSheet:\n\n    title = \"Fill out personal information on sign up sheet.\"\n    steps = 7\n\n","reference_graph":{"title":"Fill out personal information on sign up sheet.","num_steps":7,"schema":["step0: Choose a class that fits both criteria.","step1: look for space to enter information","step2: find space to enter information","step3: click on space","step4: type in the information","step5: hit enter key","step6: Fill out personal information on sign up sheet."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Put right foot forward.","events":{"0":"affirm intent to walk","1":"scan the path","2":"initiate right foot movement","3":"think about intentions","4":"find the entrance","5":"Turn toward building.","6":"Put right foot forward."},"context":"Turn toward building.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0333333333,"2":0.0166666667,"3":0.05,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: affirm intent to walk; step1: scan the path; step2: initiate right foot movement; step3: think about intentions; step4: find the entrance; step5: Turn toward building.; step6: Put right foot forward.","flatten_input_for_script_generation":"You want to Put right foot forward.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step1 -> step0; step4 -> step3; step4 -> step1; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Turn toward building.; step1: find the entrance; step2: think about intentions; step3: affirm intent to walk; step4: initiate right foot movement; step5: scan the path; step6: Put right foot forward.; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step2; step1 -> step5; step4 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->0","4->3","4->1","5->4"],"reference_code":"class PutRightFootForward:\n\n    title = \"Put right foot forward.\"\n    steps = 7\n\n    def step0(self):\n        return \"Turn toward building.\"\n\n    def step1(self):\n        return \"find the entrance\"\n\n    def step2(self):\n        return \"think about intentions\"\n\n    def step3(self):\n        return \"affirm intent to walk\"\n\n    def step4(self):\n        return \"initiate right foot movement\"\n\n    def step5(self):\n        return \"scan the path\"\n\n    def step6(self):\n        return \"Put right foot forward.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class PutRightFootForward:\n\n    title = \"Put right foot forward.\"\n    steps = 7\n\n","reference_graph":{"title":"Put right foot forward.","num_steps":7,"schema":["step0: Turn toward building.","step1: find the entrance","step2: think about intentions","step3: affirm intent to walk","step4: initiate right foot movement","step5: scan the path","step6: Put right foot forward."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step2","step1 -> step5","step4 -> step6"]}}
{"scenario":"fill out the application","events":{"0":"Assess what information needs to be entered.","1":"Enter the information in the empty fields.","2":"Locate the application.","3":"Click to open the application.","4":"Locate the empty fields.","5":"login into financial aid website","6":"fill out the application"},"context":"login into financial aid website","minutes":60.0,"events_minutes":{"0":2.0,"1":4.0,"2":0.5,"3":0.5,"4":1.0},"flatten_input_for_edge_prediction":"step0: Assess what information needs to be entered.; step1: Enter the information in the empty fields.; step2: Locate the application.; step3: Click to open the application.; step4: Locate the empty fields.; step5: login into financial aid website; step6: fill out the application","flatten_input_for_script_generation":"You want to fill out the application. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: login into financial aid website; step1: Locate the application.; step2: Click to open the application.; step3: Locate the empty fields.; step4: Assess what information needs to be entered.; step5: Enter the information in the empty fields.; step6: fill out the application; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class FillOutTheApplication:\n\n    title = \"fill out the application\"\n    steps = 7\n\n    def step0(self):\n        return \"login into financial aid website\"\n\n    def step1(self):\n        return \"Locate the application.\"\n\n    def step2(self):\n        return \"Click to open the application.\"\n\n    def step3(self):\n        return \"Locate the empty fields.\"\n\n    def step4(self):\n        return \"Assess what information needs to be entered.\"\n\n    def step5(self):\n        return \"Enter the information in the empty fields.\"\n\n    def step6(self):\n        return \"fill out the application\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutTheApplication:\n\n    title = \"fill out the application\"\n    steps = 7\n\n","reference_graph":{"title":"fill out the application","num_steps":7,"schema":["step0: login into financial aid website","step1: Locate the application.","step2: Click to open the application.","step3: Locate the empty fields.","step4: Assess what information needs to be entered.","step5: Enter the information in the empty fields.","step6: fill out the application"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to mailbox","events":{"0":"put shoes on","1":"open front door","2":"get up and dressed","3":"swing legs towards mailbox","4":"exit the house","5":"NONE","6":"walk to mailbox"},"context":"NONE","minutes":0.5,"events_minutes":{"0":0.5,"1":0.1666666667,"2":1.0,"3":0.2,"4":0.05},"flatten_input_for_edge_prediction":"step0: put shoes on; step1: open front door; step2: get up and dressed; step3: swing legs towards mailbox; step4: exit the house; step5: decided to walk to mailbox; step6: walk to mailbox","flatten_input_for_script_generation":"You want to walk to mailbox. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to walk to mailbox; step1: get up and dressed; step2: put shoes on; step3: open front door; step4: exit the house; step5: swing legs towards mailbox; step6: walk to mailbox; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->6","4->3","5->2"],"reference_code":"class WalkToMailbox:\n\n    title = \"walk to mailbox\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to walk to mailbox\"\n\n    def step1(self):\n        return \"get up and dressed\"\n\n    def step2(self):\n        return \"put shoes on\"\n\n    def step3(self):\n        return \"open front door\"\n\n    def step4(self):\n        return \"exit the house\"\n\n    def step5(self):\n        return \"swing legs towards mailbox\"\n\n    def step6(self):\n        return \"walk to mailbox\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToMailbox:\n\n    title = \"walk to mailbox\"\n    steps = 7\n\n","reference_graph":{"title":"walk to mailbox","num_steps":7,"schema":["step0: decided to walk to mailbox","step1: get up and dressed","step2: put shoes on","step3: open front door","step4: exit the house","step5: swing legs towards mailbox","step6: walk to mailbox"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"jot down recipe on paper","events":{"0":"put piece of paper on desk","1":"grab a piece of paper","2":"sit down at desk","3":"pull desk chair out","4":"grab a pen","5":"find a recipe for cookies","6":"jot down recipe on paper"},"context":"find a recipe for cookies","minutes":6.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: put piece of paper on desk; step1: grab a piece of paper; step2: sit down at desk; step3: pull desk chair out; step4: grab a pen; step5: find a recipe for cookies; step6: jot down recipe on paper","flatten_input_for_script_generation":"You want to jot down recipe on paper. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step6; step1 -> step0; step3 -> step2; step2 -> step1; step0 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: find a recipe for cookies; step1: pull desk chair out; step2: grab a pen; step3: jot down recipe on paper; step4: grab a piece of paper; step5: put piece of paper on desk; step6: sit down at desk; step0 -> step1; step2 -> step3; step4 -> step5; step5 -> step2; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->4","1->0","2->1","3->2","4->6","5->3"],"reference_code":"class JotDownRecipeOnPaper:\n\n    title = \"jot down recipe on paper\"\n    steps = 7\n\n    def step0(self):\n        return \"find a recipe for cookies\"\n\n    def step1(self):\n        return \"pull desk chair out\"\n\n    def step2(self):\n        return \"grab a pen\"\n\n    def step3(self):\n        return \"jot down recipe on paper\"\n\n    def step4(self):\n        return \"grab a piece of paper\"\n\n    def step5(self):\n        return \"put piece of paper on desk\"\n\n    def step6(self):\n        return \"sit down at desk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class JotDownRecipeOnPaper:\n\n    title = \"jot down recipe on paper\"\n    steps = 7\n\n","reference_graph":{"title":"jot down recipe on paper","num_steps":7,"schema":["step0: find a recipe for cookies","step1: pull desk chair out","step2: grab a pen","step3: jot down recipe on paper","step4: grab a piece of paper","step5: put piece of paper on desk","step6: sit down at desk"],"relations":["step0 -> step1","step2 -> step3","step4 -> step5","step5 -> step2","step1 -> step6","step6 -> step4"]}}
{"scenario":"start cleaning up room","events":{"0":"open the door to the room","1":"sweep eyes over the mess","2":"move left foot towards room","3":"move right foot towards room","4":"continue walking towards room","5":"decide to clean room first","6":"start cleaning up room"},"context":"decide to clean room first","minutes":17.0,"events_minutes":{"0":0.0833333333,"1":0.5,"2":0.0833333333,"3":0.0833333333,"4":0.5},"flatten_input_for_edge_prediction":"step0: open the door to the room; step1: sweep eyes over the mess; step2: move left foot towards room; step3: move right foot towards room; step4: continue walking towards room; step5: decide to clean room first; step6: start cleaning up room","flatten_input_for_script_generation":"You want to start cleaning up room. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: decide to clean room first; step1: move right foot towards room; step2: move left foot towards room; step3: continue walking towards room; step4: open the door to the room; step5: sweep eyes over the mess; step6: start cleaning up room; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->4","4->0","5->2","5->3"],"reference_code":"class StartCleaningUpRoom:\n\n    title = \"start cleaning up room\"\n    steps = 7\n\n    def step0(self):\n        return \"decide to clean room first\"\n\n    def step1(self):\n        return \"move right foot towards room\"\n\n    def step2(self):\n        return \"move left foot towards room\"\n\n    def step3(self):\n        return \"continue walking towards room\"\n\n    def step4(self):\n        return \"open the door to the room\"\n\n    def step5(self):\n        return \"sweep eyes over the mess\"\n\n    def step6(self):\n        return \"start cleaning up room\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartCleaningUpRoom:\n\n    title = \"start cleaning up room\"\n    steps = 7\n\n","reference_graph":{"title":"start cleaning up room","num_steps":7,"schema":["step0: decide to clean room first","step1: move right foot towards room","step2: move left foot towards room","step3: continue walking towards room","step4: open the door to the room","step5: sweep eyes over the mess","step6: start cleaning up room"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"request an application to fill out","events":{"0":"listen for the manager to say yes","1":"use mouth to form words","2":"wait for manager to hand over application","3":"open mouth to speak","4":"lift hand to take application","5":"ask the manager if any jobs are available","6":"request an application to fill out"},"context":"ask the manager if any jobs are available","minutes":5.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.1666666667,"3":0.0166666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: listen for the manager to say yes; step1: use mouth to form words; step2: wait for manager to hand over application; step3: open mouth to speak; step4: lift hand to take application; step5: ask the manager if any jobs are available; step6: request an application to fill out","flatten_input_for_script_generation":"You want to request an application to fill out. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step3 -> step1; step1 -> step0; step4 -> step6; step2 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: ask the manager if any jobs are available; step1: open mouth to speak; step2: listen for the manager to say yes; step3: wait for manager to hand over application; step4: lift hand to take application; step5: use mouth to form words; step6: request an application to fill out; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->1","4->6","5->3"],"reference_code":"class RequestAnApplicationToFillOut:\n\n    title = \"request an application to fill out\"\n    steps = 7\n\n    def step0(self):\n        return \"ask the manager if any jobs are available\"\n\n    def step1(self):\n        return \"open mouth to speak\"\n\n    def step2(self):\n        return \"listen for the manager to say yes\"\n\n    def step3(self):\n        return \"wait for manager to hand over application\"\n\n    def step4(self):\n        return \"lift hand to take application\"\n\n    def step5(self):\n        return \"use mouth to form words\"\n\n    def step6(self):\n        return \"request an application to fill out\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class RequestAnApplicationToFillOut:\n\n    title = \"request an application to fill out\"\n    steps = 7\n\n","reference_graph":{"title":"request an application to fill out","num_steps":7,"schema":["step0: ask the manager if any jobs are available","step1: open mouth to speak","step2: listen for the manager to say yes","step3: wait for manager to hand over application","step4: lift hand to take application","step5: use mouth to form words","step6: request an application to fill out"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6"]}}
{"scenario":"read the draft","events":{"0":"put cursor on document","1":"look for document of draft","2":"find the document","3":"wait for document to load","4":"click on document","5":"write a rough draft","6":"read the draft"},"context":"write a rough draft","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put cursor on document; step1: look for document of draft; step2: find the document; step3: wait for document to load; step4: click on document; step5: write a rough draft; step6: read the draft","flatten_input_for_script_generation":"You want to read the draft. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: write a rough draft; step1: look for document of draft; step2: find the document; step3: put cursor on document; step4: click on document; step5: wait for document to load; step6: read the draft; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class ReadTheDraft:\n\n    title = \"read the draft\"\n    steps = 7\n\n    def step0(self):\n        return \"write a rough draft\"\n\n    def step1(self):\n        return \"look for document of draft\"\n\n    def step2(self):\n        return \"find the document\"\n\n    def step3(self):\n        return \"put cursor on document\"\n\n    def step4(self):\n        return \"click on document\"\n\n    def step5(self):\n        return \"wait for document to load\"\n\n    def step6(self):\n        return \"read the draft\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadTheDraft:\n\n    title = \"read the draft\"\n    steps = 7\n\n","reference_graph":{"title":"read the draft","num_steps":7,"schema":["step0: write a rough draft","step1: look for document of draft","step2: find the document","step3: put cursor on document","step4: click on document","step5: wait for document to load","step6: read the draft"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"cut the sod","events":{"0":"get out a shovel or sod cutter","1":"place markers to define the area","2":"measure out the area","3":"start to dig within the markers","4":"dig until all grass is removed","5":"clean lawn of debris","6":"cut the sod"},"context":"clean lawn of debris","minutes":10.0,"events_minutes":{"0":5.0,"1":10.0,"2":10.0,"3":2.0,"4":180.0},"flatten_input_for_edge_prediction":"step0: get out a shovel or sod cutter; step1: place markers to define the area; step2: measure out the area; step3: start to dig within the markers; step4: dig until all grass is removed; step5: clean lawn of debris; step6: cut the sod","flatten_input_for_script_generation":"You want to cut the sod. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: clean lawn of debris; step1: measure out the area; step2: place markers to define the area; step3: get out a shovel or sod cutter; step4: start to dig within the markers; step5: dig until all grass is removed; step6: cut the sod; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class CutTheSod:\n\n    title = \"cut the sod\"\n    steps = 7\n\n    def step0(self):\n        return \"clean lawn of debris\"\n\n    def step1(self):\n        return \"measure out the area\"\n\n    def step2(self):\n        return \"place markers to define the area\"\n\n    def step3(self):\n        return \"get out a shovel or sod cutter\"\n\n    def step4(self):\n        return \"start to dig within the markers\"\n\n    def step5(self):\n        return \"dig until all grass is removed\"\n\n    def step6(self):\n        return \"cut the sod\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CutTheSod:\n\n    title = \"cut the sod\"\n    steps = 7\n\n","reference_graph":{"title":"cut the sod","num_steps":7,"schema":["step0: clean lawn of debris","step1: measure out the area","step2: place markers to define the area","step3: get out a shovel or sod cutter","step4: start to dig within the markers","step5: dig until all grass is removed","step6: cut the sod"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"coach hands paperwork over","events":{"0":"extend left arm toward the coach","1":"lift left arm","2":"stand up in front of coach","3":"watch coach get paperwork","4":"open left hand","5":"wait for coach to respond","6":"coach hands paperwork over"},"context":"wait for coach to respond","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: extend left arm toward the coach; step1: lift left arm; step2: stand up in front of coach; step3: watch coach get paperwork; step4: open left hand; step5: wait for coach to respond; step6: coach hands paperwork over","flatten_input_for_script_generation":"You want to coach hands paperwork over. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step2 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: wait for coach to respond; step1: watch coach get paperwork; step2: stand up in front of coach; step3: lift left arm; step4: extend left arm toward the coach; step5: open left hand; step6: coach hands paperwork over; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->0","3->2","3->1","4->6","5->3"],"reference_code":"class CoachHandsPaperworkOver:\n\n    title = \"coach hands paperwork over\"\n    steps = 7\n\n    def step0(self):\n        return \"wait for coach to respond\"\n\n    def step1(self):\n        return \"watch coach get paperwork\"\n\n    def step2(self):\n        return \"stand up in front of coach\"\n\n    def step3(self):\n        return \"lift left arm\"\n\n    def step4(self):\n        return \"extend left arm toward the coach\"\n\n    def step5(self):\n        return \"open left hand\"\n\n    def step6(self):\n        return \"coach hands paperwork over\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CoachHandsPaperworkOver:\n\n    title = \"coach hands paperwork over\"\n    steps = 7\n\n","reference_graph":{"title":"coach hands paperwork over","num_steps":7,"schema":["step0: wait for coach to respond","step1: watch coach get paperwork","step2: stand up in front of coach","step3: lift left arm","step4: extend left arm toward the coach","step5: open left hand","step6: coach hands paperwork over"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on squash jersey.","events":{"0":"dry off with a towel","1":"take a shower","2":"turn on shower","3":"take clothes off","4":"put lotion on skin","5":"NONE","6":"put on squash jersey."},"context":"NONE","minutes":1.0,"events_minutes":{"0":1.0,"1":10.0,"2":0.0833333333,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: dry off with a towel; step1: take a shower; step2: turn on shower; step3: take clothes off; step4: put lotion on skin; step5: decided to put on squash jersey.; step6: put on squash jersey.","flatten_input_for_script_generation":"You want to put on squash jersey.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: decided to put on squash jersey.; step1: take clothes off; step2: turn on shower; step3: take a shower; step4: dry off with a towel; step5: put lotion on skin; step6: put on squash jersey.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->1","4->6","5->2","5->3"],"reference_code":"class PutOnSquashJersey:\n\n    title = \"put on squash jersey.\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to put on squash jersey.\"\n\n    def step1(self):\n        return \"take clothes off\"\n\n    def step2(self):\n        return \"turn on shower\"\n\n    def step3(self):\n        return \"take a shower\"\n\n    def step4(self):\n        return \"dry off with a towel\"\n\n    def step5(self):\n        return \"put lotion on skin\"\n\n    def step6(self):\n        return \"put on squash jersey.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnSquashJersey:\n\n    title = \"put on squash jersey.\"\n    steps = 7\n\n","reference_graph":{"title":"put on squash jersey.","num_steps":7,"schema":["step0: decided to put on squash jersey.","step1: take clothes off","step2: turn on shower","step3: take a shower","step4: dry off with a towel","step5: put lotion on skin","step6: put on squash jersey."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"drop bags on ground near car","events":{"0":"point body at car","1":"alternate feet until car is reached","2":"look at car","3":"release right hand's grip on bag","4":"release left hand's grip on bag","5":"move left foot forward","6":"move right foot forward","7":"take bags outside","8":"drop bags on ground near car"},"context":"take bags outside","minutes":1.0,"events_minutes":{"0":0.05,"1":2.0,"2":0.0333333333,"3":0.1666666667,"4":0.1666666667,"5":0.0833333333,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: point body at car; step1: alternate feet until car is reached; step2: look at car; step3: release right hand's grip on bag; step4: release left hand's grip on bag; step5: move left foot forward; step6: move right foot forward; step7: take bags outside; step8: drop bags on ground near car","flatten_input_for_script_generation":"You want to drop bags on ground near car. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step6; step0 -> step5; step6 -> step1; step5 -> step1; step1 -> step3; step1 -> step4; step3 -> step8; step4 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: take bags outside; step1: look at car; step2: point body at car; step3: move right foot forward; step4: move left foot forward; step5: alternate feet until car is reached; step6: release right hand's grip on bag; step7: release left hand's grip on bag; step8: drop bags on ground near car; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step5 -> step7; step6 -> step8; step7 -> step8","gold_edges_for_prediction":["0->6","0->5","1->3","1->4","2->0","3->8","4->8","5->1","6->1","7->2"],"reference_code":"class DropBagsOnGroundNearCar:\n\n    title = \"drop bags on ground near car\"\n    steps = 9\n\n    def step0(self):\n        return \"take bags outside\"\n\n    def step1(self):\n        return \"look at car\"\n\n    def step2(self):\n        return \"point body at car\"\n\n    def step3(self):\n        return \"move right foot forward\"\n\n    def step4(self):\n        return \"move left foot forward\"\n\n    def step5(self):\n        return \"alternate feet until car is reached\"\n\n    def step6(self):\n        return \"release right hand's grip on bag\"\n\n    def step7(self):\n        return \"release left hand's grip on bag\"\n\n    def step8(self):\n        return \"drop bags on ground near car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step8\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class DropBagsOnGroundNearCar:\n\n    title = \"drop bags on ground near car\"\n    steps = 9\n\n","reference_graph":{"title":"drop bags on ground near car","num_steps":9,"schema":["step0: take bags outside","step1: look at car","step2: point body at car","step3: move right foot forward","step4: move left foot forward","step5: alternate feet until car is reached","step6: release right hand's grip on bag","step7: release left hand's grip on bag","step8: drop bags on ground near car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step5 -> step7","step6 -> step8","step7 -> step8"]}}
{"scenario":"Pick out clothes.","events":{"0":"Take bottoms off of hanger","1":"Look through clothes for a top to wear","2":"Set bottoms down","3":"Look through clothes for bottoms to wear","4":"Set top down","5":"Take top off of hanger","6":"Open the closet.","7":"Pick out clothes."},"context":"Open the closet.","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":3.0,"2":0.0833333333,"3":3.0,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: Take bottoms off of hanger; step1: Look through clothes for a top to wear; step2: Set bottoms down; step3: Look through clothes for bottoms to wear; step4: Set top down; step5: Take top off of hanger; step6: Open the closet.; step7: Pick out clothes.","flatten_input_for_script_generation":"You want to Pick out clothes.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step4; step4 -> step7; step3 -> step0; step0 -> step2; step2 -> step7; step6 -> step1; step6 -> step3","flatten_output_for_script_generation":"step0: Open the closet.; step1: Look through clothes for bottoms to wear; step2: Look through clothes for a top to wear; step3: Take top off of hanger; step4: Set top down; step5: Pick out clothes.; step6: Take bottoms off of hanger; step7: Set bottoms down; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step7; step7 -> step5","gold_edges_for_prediction":["0->2","1->5","2->7","3->0","4->7","5->4","6->1","6->3"],"reference_code":"class PickOutClothes:\n\n    title = \"Pick out clothes.\"\n    steps = 8\n\n    def step0(self):\n        return \"Open the closet.\"\n\n    def step1(self):\n        return \"Look through clothes for bottoms to wear\"\n\n    def step2(self):\n        return \"Look through clothes for a top to wear\"\n\n    def step3(self):\n        return \"Take top off of hanger\"\n\n    def step4(self):\n        return \"Set top down\"\n\n    def step5(self):\n        return \"Pick out clothes.\"\n\n    def step6(self):\n        return \"Take bottoms off of hanger\"\n\n    def step7(self):\n        return \"Set bottoms down\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step5\",\n        ]\n","input_prompt_code":"class PickOutClothes:\n\n    title = \"Pick out clothes.\"\n    steps = 8\n\n","reference_graph":{"title":"Pick out clothes.","num_steps":8,"schema":["step0: Open the closet.","step1: Look through clothes for bottoms to wear","step2: Look through clothes for a top to wear","step3: Take top off of hanger","step4: Set top down","step5: Pick out clothes.","step6: Take bottoms off of hanger","step7: Set bottoms down"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step7","step7 -> step5"]}}
{"scenario":"walk to the entrance","events":{"0":"Position body facing entrance","1":"Lift left foot","2":"Move left foot forward","3":"Lift right foot","4":"Spot entrance through sight","5":"Stop when entrance is reached","6":"Move right foot forward","7":"take out tickets","8":"walk to the entrance"},"context":"take out tickets","minutes":2.0,"events_minutes":{"0":0.0333333333,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0833333333,"5":0.0333333333,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Position body facing entrance; step1: Lift left foot; step2: Move left foot forward; step3: Lift right foot; step4: Spot entrance through sight; step5: Stop when entrance is reached; step6: Move right foot forward; step7: take out tickets; step8: walk to the entrance","flatten_input_for_script_generation":"You want to walk to the entrance. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step0 -> step3; step1 -> step2; step2 -> step5; step3 -> step6; step6 -> step5; step5 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: take out tickets; step1: Spot entrance through sight; step2: Position body facing entrance; step3: Lift left foot; step4: Lift right foot; step5: Move left foot forward; step6: Move right foot forward; step7: Stop when entrance is reached; step8: walk to the entrance; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step7 -> step8; step6 -> step7","gold_edges_for_prediction":["0->1","0->3","1->2","2->5","3->6","4->0","5->8","6->5","7->4"],"reference_code":"class WalkToTheEntrance:\n\n    title = \"walk to the entrance\"\n    steps = 9\n\n    def step0(self):\n        return \"take out tickets\"\n\n    def step1(self):\n        return \"Spot entrance through sight\"\n\n    def step2(self):\n        return \"Position body facing entrance\"\n\n    def step3(self):\n        return \"Lift left foot\"\n\n    def step4(self):\n        return \"Lift right foot\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Stop when entrance is reached\"\n\n    def step8(self):\n        return \"walk to the entrance\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkToTheEntrance:\n\n    title = \"walk to the entrance\"\n    steps = 9\n\n","reference_graph":{"title":"walk to the entrance","num_steps":9,"schema":["step0: take out tickets","step1: Spot entrance through sight","step2: Position body facing entrance","step3: Lift left foot","step4: Lift right foot","step5: Move left foot forward","step6: Move right foot forward","step7: Stop when entrance is reached","step8: walk to the entrance"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step7 -> step8","step6 -> step7"]}}
{"scenario":"locate the line","events":{"0":"move finger towards line","1":"remember the line","2":"find the line","3":"put finger on line","4":"look for the line","5":"look at map for directions","6":"locate the line"},"context":"look at map for directions","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move finger towards line; step1: remember the line; step2: find the line; step3: put finger on line; step4: look for the line; step5: look at map for directions; step6: locate the line","flatten_input_for_script_generation":"You want to locate the line. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step0; step1 -> step6; step0 -> step3; step3 -> step1; step5 -> step4","flatten_output_for_script_generation":"step0: look at map for directions; step1: look for the line; step2: find the line; step3: move finger towards line; step4: put finger on line; step5: remember the line; step6: locate the line; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->3","1->6","2->0","3->1","4->2","5->4"],"reference_code":"class LocateTheLine:\n\n    title = \"locate the line\"\n    steps = 7\n\n    def step0(self):\n        return \"look at map for directions\"\n\n    def step1(self):\n        return \"look for the line\"\n\n    def step2(self):\n        return \"find the line\"\n\n    def step3(self):\n        return \"move finger towards line\"\n\n    def step4(self):\n        return \"put finger on line\"\n\n    def step5(self):\n        return \"remember the line\"\n\n    def step6(self):\n        return \"locate the line\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class LocateTheLine:\n\n    title = \"locate the line\"\n    steps = 7\n\n","reference_graph":{"title":"locate the line","num_steps":7,"schema":["step0: look at map for directions","step1: look for the line","step2: find the line","step3: move finger towards line","step4: put finger on line","step5: remember the line","step6: locate the line"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step5 -> step6","step4 -> step5"]}}
{"scenario":"place a lid on the pot","events":{"0":"walk back toward stove","1":"stop in front of stove","2":"place spoon next to stove","3":"walk toward sink","4":"grab pot lid from sink","5":"add salt to the water and stir","6":"place a lid on the pot"},"context":"add salt to the water and stir","minutes":2.0,"events_minutes":{"0":0.5,"1":0.5,"2":1.0,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: walk back toward stove; step1: stop in front of stove; step2: place spoon next to stove; step3: walk toward sink; step4: grab pot lid from sink; step5: add salt to the water and stir; step6: place a lid on the pot","flatten_input_for_script_generation":"You want to place a lid on the pot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: add salt to the water and stir; step1: place spoon next to stove; step2: walk toward sink; step3: grab pot lid from sink; step4: walk back toward stove; step5: stop in front of stove; step6: place a lid on the pot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->3","3->4","4->0","5->2"],"reference_code":"class PlaceALidOnThePot:\n\n    title = \"place a lid on the pot\"\n    steps = 7\n\n    def step0(self):\n        return \"add salt to the water and stir\"\n\n    def step1(self):\n        return \"place spoon next to stove\"\n\n    def step2(self):\n        return \"walk toward sink\"\n\n    def step3(self):\n        return \"grab pot lid from sink\"\n\n    def step4(self):\n        return \"walk back toward stove\"\n\n    def step5(self):\n        return \"stop in front of stove\"\n\n    def step6(self):\n        return \"place a lid on the pot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceALidOnThePot:\n\n    title = \"place a lid on the pot\"\n    steps = 7\n\n","reference_graph":{"title":"place a lid on the pot","num_steps":7,"schema":["step0: add salt to the water and stir","step1: place spoon next to stove","step2: walk toward sink","step3: grab pot lid from sink","step4: walk back toward stove","step5: stop in front of stove","step6: place a lid on the pot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter breeders house","events":{"0":"walk up the driveway","1":"walk up the sidewalk","2":"press the doorbell","3":"step onto the porch","4":"place hand on the doorbell","5":"turn off vehicle","6":"enter breeders house"},"context":"turn off vehicle","minutes":5.0,"events_minutes":{"0":0.25,"1":0.1666666667,"2":0.0166666667,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: walk up the driveway; step1: walk up the sidewalk; step2: press the doorbell; step3: step onto the porch; step4: place hand on the doorbell; step5: turn off vehicle; step6: enter breeders house","flatten_input_for_script_generation":"You want to enter breeders house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: turn off vehicle; step1: walk up the driveway; step2: walk up the sidewalk; step3: step onto the porch; step4: place hand on the doorbell; step5: press the doorbell; step6: enter breeders house; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->6","3->4","4->2","5->0"],"reference_code":"class EnterBreedersHouse:\n\n    title = \"enter breeders house\"\n    steps = 7\n\n    def step0(self):\n        return \"turn off vehicle\"\n\n    def step1(self):\n        return \"walk up the driveway\"\n\n    def step2(self):\n        return \"walk up the sidewalk\"\n\n    def step3(self):\n        return \"step onto the porch\"\n\n    def step4(self):\n        return \"place hand on the doorbell\"\n\n    def step5(self):\n        return \"press the doorbell\"\n\n    def step6(self):\n        return \"enter breeders house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterBreedersHouse:\n\n    title = \"enter breeders house\"\n    steps = 7\n\n","reference_graph":{"title":"enter breeders house","num_steps":7,"schema":["step0: turn off vehicle","step1: walk up the driveway","step2: walk up the sidewalk","step3: step onto the porch","step4: place hand on the doorbell","step5: press the doorbell","step6: enter breeders house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put on right shoe","events":{"0":"Slip right foot in shoe","1":"Lace up shoe","2":"Grab shoe with hands","3":"Lift up right foot","4":"Open up shoe withhands","5":"put on right sock","6":"put on right shoe"},"context":"put on right sock","minutes":0.4166666667,"events_minutes":{"0":0.05,"1":0.05,"2":0.05,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: Slip right foot in shoe; step1: Lace up shoe; step2: Grab shoe with hands; step3: Lift up right foot; step4: Open up shoe withhands; step5: put on right sock; step6: put on right shoe","flatten_input_for_script_generation":"You want to put on right shoe. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step3 -> step0; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: put on right sock; step1: Grab shoe with hands; step2: Open up shoe withhands; step3: Slip right foot in shoe; step4: Lift up right foot; step5: Lace up shoe; step6: put on right shoe; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step3; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->0","5->3","5->2"],"reference_code":"class PutOnRightShoe:\n\n    title = \"put on right shoe\"\n    steps = 7\n\n    def step0(self):\n        return \"put on right sock\"\n\n    def step1(self):\n        return \"Grab shoe with hands\"\n\n    def step2(self):\n        return \"Open up shoe withhands\"\n\n    def step3(self):\n        return \"Slip right foot in shoe\"\n\n    def step4(self):\n        return \"Lift up right foot\"\n\n    def step5(self):\n        return \"Lace up shoe\"\n\n    def step6(self):\n        return \"put on right shoe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step3\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnRightShoe:\n\n    title = \"put on right shoe\"\n    steps = 7\n\n","reference_graph":{"title":"put on right shoe","num_steps":7,"schema":["step0: put on right sock","step1: Grab shoe with hands","step2: Open up shoe withhands","step3: Slip right foot in shoe","step4: Lift up right foot","step5: Lace up shoe","step6: put on right shoe"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step3","step3 -> step5","step5 -> step6"]}}
{"scenario":"fill out application","events":{"0":"start filling application","1":"put pen to paper","2":"skim through application","3":"grab a pen","4":"print the application","5":"find application for entry","6":"fill out application"},"context":"find application for entry","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.05,"2":1.0,"3":0.05,"4":1.0},"flatten_input_for_edge_prediction":"step0: start filling application; step1: put pen to paper; step2: skim through application; step3: grab a pen; step4: print the application; step5: find application for entry; step6: fill out application","flatten_input_for_script_generation":"You want to fill out application. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step3 -> step1; step2 -> step1; step1 -> step0; step0 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: find application for entry; step1: grab a pen; step2: print the application; step3: skim through application; step4: put pen to paper; step5: start filling application; step6: fill out application; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","3->1","4->2","5->4","5->3"],"reference_code":"class FillOutApplication:\n\n    title = \"fill out application\"\n    steps = 7\n\n    def step0(self):\n        return \"find application for entry\"\n\n    def step1(self):\n        return \"grab a pen\"\n\n    def step2(self):\n        return \"print the application\"\n\n    def step3(self):\n        return \"skim through application\"\n\n    def step4(self):\n        return \"put pen to paper\"\n\n    def step5(self):\n        return \"start filling application\"\n\n    def step6(self):\n        return \"fill out application\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutApplication:\n\n    title = \"fill out application\"\n    steps = 7\n\n","reference_graph":{"title":"fill out application","num_steps":7,"schema":["step0: find application for entry","step1: grab a pen","step2: print the application","step3: skim through application","step4: put pen to paper","step5: start filling application","step6: fill out application"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull into the parking spot","events":{"0":"drive to parking spot","1":"drive towards the parking lot","2":"locate empty spot","3":"enter the parking lot","4":"look around for empty spot","5":"look both ways for other cars","6":"pull into the parking spot"},"context":"look both ways for other cars","minutes":1.0,"events_minutes":{"0":0.3333333333,"1":0.25,"2":0.0833333333,"3":0.1666666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: drive to parking spot; step1: drive towards the parking lot; step2: locate empty spot; step3: enter the parking lot; step4: look around for empty spot; step5: look both ways for other cars; step6: pull into the parking spot","flatten_input_for_script_generation":"You want to pull into the parking spot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step4 -> step2; step2 -> step0; step3 -> step4; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: look both ways for other cars; step1: drive towards the parking lot; step2: enter the parking lot; step3: look around for empty spot; step4: locate empty spot; step5: drive to parking spot; step6: pull into the parking spot; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->4","4->2","5->1"],"reference_code":"class PullIntoTheParkingSpot:\n\n    title = \"pull into the parking spot\"\n    steps = 7\n\n    def step0(self):\n        return \"look both ways for other cars\"\n\n    def step1(self):\n        return \"drive towards the parking lot\"\n\n    def step2(self):\n        return \"enter the parking lot\"\n\n    def step3(self):\n        return \"look around for empty spot\"\n\n    def step4(self):\n        return \"locate empty spot\"\n\n    def step5(self):\n        return \"drive to parking spot\"\n\n    def step6(self):\n        return \"pull into the parking spot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullIntoTheParkingSpot:\n\n    title = \"pull into the parking spot\"\n    steps = 7\n\n","reference_graph":{"title":"pull into the parking spot","num_steps":7,"schema":["step0: look both ways for other cars","step1: drive towards the parking lot","step2: enter the parking lot","step3: look around for empty spot","step4: locate empty spot","step5: drive to parking spot","step6: pull into the parking spot"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Make some drinks.","events":{"0":"open the cabinet","1":"grab the ingredients","2":"pour ingredients into cups","3":"put cups on counter","4":"take out some cups","5":"Preheat the oven.","6":"Make some drinks."},"context":"Preheat the oven.","minutes":10.0,"events_minutes":{"0":0.0333333333,"1":0.1833333333,"2":2.0,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the cabinet; step1: grab the ingredients; step2: pour ingredients into cups; step3: put cups on counter; step4: take out some cups; step5: Preheat the oven.; step6: Make some drinks.","flatten_input_for_script_generation":"You want to Make some drinks.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step0 -> step1; step4 -> step3; step3 -> step2; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Preheat the oven.; step1: open the cabinet; step2: take out some cups; step3: grab the ingredients; step4: put cups on counter; step5: pour ingredients into cups; step6: Make some drinks.; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","0->1","1->2","2->6","3->2","4->3","5->0"],"reference_code":"class MakeSomeDrinks:\n\n    title = \"Make some drinks.\"\n    steps = 7\n\n    def step0(self):\n        return \"Preheat the oven.\"\n\n    def step1(self):\n        return \"open the cabinet\"\n\n    def step2(self):\n        return \"take out some cups\"\n\n    def step3(self):\n        return \"grab the ingredients\"\n\n    def step4(self):\n        return \"put cups on counter\"\n\n    def step5(self):\n        return \"pour ingredients into cups\"\n\n    def step6(self):\n        return \"Make some drinks.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MakeSomeDrinks:\n\n    title = \"Make some drinks.\"\n    steps = 7\n\n","reference_graph":{"title":"Make some drinks.","num_steps":7,"schema":["step0: Preheat the oven.","step1: open the cabinet","step2: take out some cups","step3: grab the ingredients","step4: put cups on counter","step5: pour ingredients into cups","step6: Make some drinks."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"take bags outside","events":{"0":"open the door","1":"walk towards trash bin","2":"walk towards door","3":"lift bags from trashcan","4":"place bags in trash bin","5":"pick up bags","6":"take bags outside"},"context":"pick up bags","minutes":1.0,"events_minutes":{"0":0.05,"1":0.1666666667,"2":0.1666666667,"3":0.05,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open the door; step1: walk towards trash bin; step2: walk towards door; step3: lift bags from trashcan; step4: place bags in trash bin; step5: pick up bags; step6: take bags outside","flatten_input_for_script_generation":"You want to take bags outside. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: pick up bags; step1: lift bags from trashcan; step2: walk towards door; step3: open the door; step4: walk towards trash bin; step5: place bags in trash bin; step6: take bags outside; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class TakeBagsOutside:\n\n    title = \"take bags outside\"\n    steps = 7\n\n    def step0(self):\n        return \"pick up bags\"\n\n    def step1(self):\n        return \"lift bags from trashcan\"\n\n    def step2(self):\n        return \"walk towards door\"\n\n    def step3(self):\n        return \"open the door\"\n\n    def step4(self):\n        return \"walk towards trash bin\"\n\n    def step5(self):\n        return \"place bags in trash bin\"\n\n    def step6(self):\n        return \"take bags outside\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeBagsOutside:\n\n    title = \"take bags outside\"\n    steps = 7\n\n","reference_graph":{"title":"take bags outside","num_steps":7,"schema":["step0: pick up bags","step1: lift bags from trashcan","step2: walk towards door","step3: open the door","step4: walk towards trash bin","step5: place bags in trash bin","step6: take bags outside"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"set laptop on desk","events":{"0":"grab the laptop","1":"walk towards desk","2":"place the laptop down","3":"face towards desk","4":"secure laptop with arm","5":"pull out laptop","6":"set laptop on desk"},"context":"pull out laptop","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":0.05,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: grab the laptop; step1: walk towards desk; step2: place the laptop down; step3: face towards desk; step4: secure laptop with arm; step5: pull out laptop; step6: set laptop on desk","flatten_input_for_script_generation":"You want to set laptop on desk. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step4 -> step3; step0 -> step4; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: pull out laptop; step1: grab the laptop; step2: face towards desk; step3: walk towards desk; step4: place the laptop down; step5: set laptop on desk; step6: secure laptop with arm; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step2; step1 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->1","4->3","5->0"],"reference_code":"class SetLaptopOnDesk:\n\n    title = \"set laptop on desk\"\n    steps = 7\n\n    def step0(self):\n        return \"pull out laptop\"\n\n    def step1(self):\n        return \"grab the laptop\"\n\n    def step2(self):\n        return \"face towards desk\"\n\n    def step3(self):\n        return \"walk towards desk\"\n\n    def step4(self):\n        return \"place the laptop down\"\n\n    def step5(self):\n        return \"set laptop on desk\"\n\n    def step6(self):\n        return \"secure laptop with arm\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n            \"step1 -> step6\",\n        ]\n","input_prompt_code":"class SetLaptopOnDesk:\n\n    title = \"set laptop on desk\"\n    steps = 7\n\n","reference_graph":{"title":"set laptop on desk","num_steps":7,"schema":["step0: pull out laptop","step1: grab the laptop","step2: face towards desk","step3: walk towards desk","step4: place the laptop down","step5: set laptop on desk","step6: secure laptop with arm"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step2","step1 -> step6"]}}
{"scenario":"walk towards the door of the store.","events":{"0":"walk towards the shopping carts area","1":"face the door","2":"grab shopping cart","3":"park the shopping cart","4":"grab bags from cart","5":"pick up the grocery bag with the chicken.","6":"walk towards the door of the store."},"context":"pick up the grocery bag with the chicken.","minutes":0.5,"events_minutes":{"0":0.5,"1":0.0333333333,"2":0.0333333333,"3":0.25,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: walk towards the shopping carts area; step1: face the door; step2: grab shopping cart; step3: park the shopping cart; step4: grab bags from cart; step5: pick up the grocery bag with the chicken.; step6: walk towards the door of the store.","flatten_input_for_script_generation":"You want to walk towards the door of the store.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: pick up the grocery bag with the chicken.; step1: grab shopping cart; step2: walk towards the shopping carts area; step3: park the shopping cart; step4: grab bags from cart; step5: face the door; step6: walk towards the door of the store.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class WalkTowardsTheDoorOfTheStore:\n\n    title = \"walk towards the door of the store.\"\n    steps = 7\n\n    def step0(self):\n        return \"pick up the grocery bag with the chicken.\"\n\n    def step1(self):\n        return \"grab shopping cart\"\n\n    def step2(self):\n        return \"walk towards the shopping carts area\"\n\n    def step3(self):\n        return \"park the shopping cart\"\n\n    def step4(self):\n        return \"grab bags from cart\"\n\n    def step5(self):\n        return \"face the door\"\n\n    def step6(self):\n        return \"walk towards the door of the store.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkTowardsTheDoorOfTheStore:\n\n    title = \"walk towards the door of the store.\"\n    steps = 7\n\n","reference_graph":{"title":"walk towards the door of the store.","num_steps":7,"schema":["step0: pick up the grocery bag with the chicken.","step1: grab shopping cart","step2: walk towards the shopping carts area","step3: park the shopping cart","step4: grab bags from cart","step5: face the door","step6: walk towards the door of the store."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"switch off the engine","events":{"0":"look for key inside ignition","1":"take key out of ignition","2":"find the key","3":"make sure car is parked correctly","4":"put hand on key","5":"park the car","6":"switch off the engine"},"context":"park the car","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for key inside ignition; step1: take key out of ignition; step2: find the key; step3: make sure car is parked correctly; step4: put hand on key; step5: park the car; step6: switch off the engine","flatten_input_for_script_generation":"You want to switch off the engine. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: park the car; step1: make sure car is parked correctly; step2: look for key inside ignition; step3: find the key; step4: put hand on key; step5: take key out of ignition; step6: switch off the engine; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->4","3->0","4->1","5->3"],"reference_code":"class SwitchOffTheEngine:\n\n    title = \"switch off the engine\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"make sure car is parked correctly\"\n\n    def step2(self):\n        return \"look for key inside ignition\"\n\n    def step3(self):\n        return \"find the key\"\n\n    def step4(self):\n        return \"put hand on key\"\n\n    def step5(self):\n        return \"take key out of ignition\"\n\n    def step6(self):\n        return \"switch off the engine\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SwitchOffTheEngine:\n\n    title = \"switch off the engine\"\n    steps = 7\n\n","reference_graph":{"title":"switch off the engine","num_steps":7,"schema":["step0: park the car","step1: make sure car is parked correctly","step2: look for key inside ignition","step3: find the key","step4: put hand on key","step5: take key out of ignition","step6: switch off the engine"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read what friends wrote","events":{"0":"start reading the second email","1":"finish reading the first email","2":"finish reading the third email","3":"start reading the third email","4":"finish reading the second email","5":"start reading the first email","6":"open emails from friends to see responses","7":"read what friends wrote"},"context":"open emails from friends to see responses","minutes":5.0,"events_minutes":{"0":0.0333333333,"1":1.0,"2":1.0,"3":0.0333333333,"4":1.0,"5":0.0333333333},"flatten_input_for_edge_prediction":"step0: start reading the second email; step1: finish reading the first email; step2: finish reading the third email; step3: start reading the third email; step4: finish reading the second email; step5: start reading the first email; step6: open emails from friends to see responses; step7: read what friends wrote","flatten_input_for_script_generation":"You want to read what friends wrote. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step1; step1 -> step7; step0 -> step4; step4 -> step7; step3 -> step2; step2 -> step7; step6 -> step5; step6 -> step0; step6 -> step3","flatten_output_for_script_generation":"step0: open emails from friends to see responses; step1: start reading the third email; step2: start reading the first email; step3: finish reading the first email; step4: read what friends wrote; step5: start reading the second email; step6: finish reading the second email; step7: finish reading the third email; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step4; step1 -> step7; step7 -> step4","gold_edges_for_prediction":["0->4","1->7","2->7","3->2","4->7","5->1","6->5","6->0","6->3"],"reference_code":"class ReadWhatFriendsWrote:\n\n    title = \"read what friends wrote\"\n    steps = 8\n\n    def step0(self):\n        return \"open emails from friends to see responses\"\n\n    def step1(self):\n        return \"start reading the third email\"\n\n    def step2(self):\n        return \"start reading the first email\"\n\n    def step3(self):\n        return \"finish reading the first email\"\n\n    def step4(self):\n        return \"read what friends wrote\"\n\n    def step5(self):\n        return \"start reading the second email\"\n\n    def step6(self):\n        return \"finish reading the second email\"\n\n    def step7(self):\n        return \"finish reading the third email\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n            \"step1 -> step7\",\n            \"step7 -> step4\",\n        ]\n","input_prompt_code":"class ReadWhatFriendsWrote:\n\n    title = \"read what friends wrote\"\n    steps = 8\n\n","reference_graph":{"title":"read what friends wrote","num_steps":8,"schema":["step0: open emails from friends to see responses","step1: start reading the third email","step2: start reading the first email","step3: finish reading the first email","step4: read what friends wrote","step5: start reading the second email","step6: finish reading the second email","step7: finish reading the third email"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step4","step1 -> step7","step7 -> step4"]}}
{"scenario":"walk back inside house","events":{"0":"look for house","1":"turn body towards house","2":"find the house","3":"put right foot forward","4":"put left foot forward","5":"grab mail out of mailbox","6":"walk back inside house"},"context":"grab mail out of mailbox","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for house; step1: turn body towards house; step2: find the house; step3: put right foot forward; step4: put left foot forward; step5: grab mail out of mailbox; step6: walk back inside house","flatten_input_for_script_generation":"You want to walk back inside house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step1 -> step4; step1 -> step3; step4 -> step6; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: grab mail out of mailbox; step1: look for house; step2: find the house; step3: turn body towards house; step4: put left foot forward; step5: put right foot forward; step6: walk back inside house; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","1->3","2->1","3->6","4->6","5->0"],"reference_code":"class WalkBackInsideHouse:\n\n    title = \"walk back inside house\"\n    steps = 7\n\n    def step0(self):\n        return \"grab mail out of mailbox\"\n\n    def step1(self):\n        return \"look for house\"\n\n    def step2(self):\n        return \"find the house\"\n\n    def step3(self):\n        return \"turn body towards house\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"walk back inside house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkBackInsideHouse:\n\n    title = \"walk back inside house\"\n    steps = 7\n\n","reference_graph":{"title":"walk back inside house","num_steps":7,"schema":["step0: grab mail out of mailbox","step1: look for house","step2: find the house","step3: turn body towards house","step4: put left foot forward","step5: put right foot forward","step6: walk back inside house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"walk outside of the door","events":{"0":"put right foot outside","1":"put left foot outside","2":"put hand on front door handle","3":"open the front door","4":"turn front door handle","5":"go to the front door","6":"walk outside of the door"},"context":"go to the front door","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put right foot outside; step1: put left foot outside; step2: put hand on front door handle; step3: open the front door; step4: turn front door handle; step5: go to the front door; step6: walk outside of the door","flatten_input_for_script_generation":"You want to walk outside of the door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step1; step3 -> step0; step1 -> step6; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go to the front door; step1: put hand on front door handle; step2: turn front door handle; step3: open the front door; step4: put left foot outside; step5: put right foot outside; step6: walk outside of the door; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->6","2->4","3->1","3->0","4->3","5->2"],"reference_code":"class WalkOutsideOfTheDoor:\n\n    title = \"walk outside of the door\"\n    steps = 7\n\n    def step0(self):\n        return \"go to the front door\"\n\n    def step1(self):\n        return \"put hand on front door handle\"\n\n    def step2(self):\n        return \"turn front door handle\"\n\n    def step3(self):\n        return \"open the front door\"\n\n    def step4(self):\n        return \"put left foot outside\"\n\n    def step5(self):\n        return \"put right foot outside\"\n\n    def step6(self):\n        return \"walk outside of the door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkOutsideOfTheDoor:\n\n    title = \"walk outside of the door\"\n    steps = 7\n\n","reference_graph":{"title":"walk outside of the door","num_steps":7,"schema":["step0: go to the front door","step1: put hand on front door handle","step2: turn front door handle","step3: open the front door","step4: put left foot outside","step5: put right foot outside","step6: walk outside of the door"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"get up and get dressed","events":{"0":"put the clothes on","1":"open closet door","2":"browse through the clothes","3":"remove clothes from closet","4":"walk over to the closet","5":"get out of bed","6":"get up and get dressed"},"context":"get out of bed","minutes":5.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":0.5,"3":0.55,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: put the clothes on; step1: open closet door; step2: browse through the clothes; step3: remove clothes from closet; step4: walk over to the closet; step5: get out of bed; step6: get up and get dressed","flatten_input_for_script_generation":"You want to get up and get dressed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get out of bed; step1: walk over to the closet; step2: open closet door; step3: browse through the clothes; step4: remove clothes from closet; step5: put the clothes on; step6: get up and get dressed; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->1","5->4"],"reference_code":"class GetUpAndGetDressed:\n\n    title = \"get up and get dressed\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of bed\"\n\n    def step1(self):\n        return \"walk over to the closet\"\n\n    def step2(self):\n        return \"open closet door\"\n\n    def step3(self):\n        return \"browse through the clothes\"\n\n    def step4(self):\n        return \"remove clothes from closet\"\n\n    def step5(self):\n        return \"put the clothes on\"\n\n    def step6(self):\n        return \"get up and get dressed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetUpAndGetDressed:\n\n    title = \"get up and get dressed\"\n    steps = 7\n\n","reference_graph":{"title":"get up and get dressed","num_steps":7,"schema":["step0: get out of bed","step1: walk over to the closet","step2: open closet door","step3: browse through the clothes","step4: remove clothes from closet","step5: put the clothes on","step6: get up and get dressed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pay for the lessons upfront.","events":{"0":"obtain a receipt","1":"calculate total cost","2":"decide on payment method","3":"wait for processing","4":"enter payment information","5":"Book lessons with the instructor.","6":"Pay for the lessons upfront."},"context":"Book lessons with the instructor.","minutes":5.0,"events_minutes":{"0":0.1666666667,"1":2.0,"2":1.0,"3":0.1666666667,"4":2.0},"flatten_input_for_edge_prediction":"step0: obtain a receipt; step1: calculate total cost; step2: decide on payment method; step3: wait for processing; step4: enter payment information; step5: Book lessons with the instructor.; step6: Pay for the lessons upfront.","flatten_input_for_script_generation":"You want to Pay for the lessons upfront.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Book lessons with the instructor.; step1: calculate total cost; step2: decide on payment method; step3: enter payment information; step4: wait for processing; step5: obtain a receipt; step6: Pay for the lessons upfront.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->0","4->3","5->1"],"reference_code":"class PayForTheLessonsUpfront:\n\n    title = \"Pay for the lessons upfront.\"\n    steps = 7\n\n    def step0(self):\n        return \"Book lessons with the instructor.\"\n\n    def step1(self):\n        return \"calculate total cost\"\n\n    def step2(self):\n        return \"decide on payment method\"\n\n    def step3(self):\n        return \"enter payment information\"\n\n    def step4(self):\n        return \"wait for processing\"\n\n    def step5(self):\n        return \"obtain a receipt\"\n\n    def step6(self):\n        return \"Pay for the lessons upfront.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PayForTheLessonsUpfront:\n\n    title = \"Pay for the lessons upfront.\"\n    steps = 7\n\n","reference_graph":{"title":"Pay for the lessons upfront.","num_steps":7,"schema":["step0: Book lessons with the instructor.","step1: calculate total cost","step2: decide on payment method","step3: enter payment information","step4: wait for processing","step5: obtain a receipt","step6: Pay for the lessons upfront."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull out money","events":{"0":"Find the wallet","1":"Choose which bills to use","2":"Sift through bills","3":"Open the wallet","4":"Unzip the bag","5":"Place bag down on counter","6":"go to the checkout","7":"pull out money"},"context":"go to the checkout","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.05,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: Find the wallet; step1: Choose which bills to use; step2: Sift through bills; step3: Open the wallet; step4: Unzip the bag; step5: Place bag down on counter; step6: go to the checkout; step7: pull out money","flatten_input_for_script_generation":"You want to pull out money. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step4; step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: go to the checkout; step1: Place bag down on counter; step2: Unzip the bag; step3: Find the wallet; step4: Open the wallet; step5: Sift through bills; step6: Choose which bills to use; step7: pull out money; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->7","2->1","3->2","4->0","5->4","6->5"],"reference_code":"class PullOutMoney:\n\n    title = \"pull out money\"\n    steps = 8\n\n    def step0(self):\n        return \"go to the checkout\"\n\n    def step1(self):\n        return \"Place bag down on counter\"\n\n    def step2(self):\n        return \"Unzip the bag\"\n\n    def step3(self):\n        return \"Find the wallet\"\n\n    def step4(self):\n        return \"Open the wallet\"\n\n    def step5(self):\n        return \"Sift through bills\"\n\n    def step6(self):\n        return \"Choose which bills to use\"\n\n    def step7(self):\n        return \"pull out money\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PullOutMoney:\n\n    title = \"pull out money\"\n    steps = 8\n\n","reference_graph":{"title":"pull out money","num_steps":8,"schema":["step0: go to the checkout","step1: Place bag down on counter","step2: Unzip the bag","step3: Find the wallet","step4: Open the wallet","step5: Sift through bills","step6: Choose which bills to use","step7: pull out money"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Confer with colleagues.","events":{"0":"Compare candidates qualities","1":"Tell colleagues to meet","2":"Ask questions about candidates","3":"Sit down with colleagues","4":"Give opinions about candidates","5":"Ask quality questions.","6":"Confer with colleagues."},"context":"Ask quality questions.","minutes":60.0,"events_minutes":{"0":20.0,"1":5.0,"2":20.0,"3":5.0,"4":20.0},"flatten_input_for_edge_prediction":"step0: Compare candidates qualities; step1: Tell colleagues to meet; step2: Ask questions about candidates; step3: Sit down with colleagues; step4: Give opinions about candidates; step5: Ask quality questions.; step6: Confer with colleagues.","flatten_input_for_script_generation":"You want to Confer with colleagues.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step3 -> step4; step2 -> step0; step4 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Ask quality questions.; step1: Tell colleagues to meet; step2: Sit down with colleagues; step3: Ask questions about candidates; step4: Give opinions about candidates; step5: Compare candidates qualities; step6: Confer with colleagues.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->2","3->4","4->0","5->1"],"reference_code":"class ConferWithColleagues:\n\n    title = \"Confer with colleagues.\"\n    steps = 7\n\n    def step0(self):\n        return \"Ask quality questions.\"\n\n    def step1(self):\n        return \"Tell colleagues to meet\"\n\n    def step2(self):\n        return \"Sit down with colleagues\"\n\n    def step3(self):\n        return \"Ask questions about candidates\"\n\n    def step4(self):\n        return \"Give opinions about candidates\"\n\n    def step5(self):\n        return \"Compare candidates qualities\"\n\n    def step6(self):\n        return \"Confer with colleagues.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ConferWithColleagues:\n\n    title = \"Confer with colleagues.\"\n    steps = 7\n\n","reference_graph":{"title":"Confer with colleagues.","num_steps":7,"schema":["step0: Ask quality questions.","step1: Tell colleagues to meet","step2: Sit down with colleagues","step3: Ask questions about candidates","step4: Give opinions about candidates","step5: Compare candidates qualities","step6: Confer with colleagues."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"read reviews for the books","events":{"0":"click to expand list of reviews","1":"scroll through the reviews","2":"skip through to avoid spam reviews or filler","3":"navigate to where the reviews are","4":"locate what seem to be legitimate reviews to read","5":"read samples of books","6":"read reviews for the books"},"context":"read samples of books","minutes":3.0,"events_minutes":{"0":0.0333333333,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: click to expand list of reviews; step1: scroll through the reviews; step2: skip through to avoid spam reviews or filler; step3: navigate to where the reviews are; step4: locate what seem to be legitimate reviews to read; step5: read samples of books; step6: read reviews for the books","flatten_input_for_script_generation":"You want to read reviews for the books. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: read samples of books; step1: navigate to where the reviews are; step2: click to expand list of reviews; step3: scroll through the reviews; step4: skip through to avoid spam reviews or filler; step5: locate what seem to be legitimate reviews to read; step6: read reviews for the books; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->0","4->6","5->3"],"reference_code":"class ReadReviewsForTheBooks:\n\n    title = \"read reviews for the books\"\n    steps = 7\n\n    def step0(self):\n        return \"read samples of books\"\n\n    def step1(self):\n        return \"navigate to where the reviews are\"\n\n    def step2(self):\n        return \"click to expand list of reviews\"\n\n    def step3(self):\n        return \"scroll through the reviews\"\n\n    def step4(self):\n        return \"skip through to avoid spam reviews or filler\"\n\n    def step5(self):\n        return \"locate what seem to be legitimate reviews to read\"\n\n    def step6(self):\n        return \"read reviews for the books\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadReviewsForTheBooks:\n\n    title = \"read reviews for the books\"\n    steps = 7\n\n","reference_graph":{"title":"read reviews for the books","num_steps":7,"schema":["step0: read samples of books","step1: navigate to where the reviews are","step2: click to expand list of reviews","step3: scroll through the reviews","step4: skip through to avoid spam reviews or filler","step5: locate what seem to be legitimate reviews to read","step6: read reviews for the books"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sign the form at the end","events":{"0":"put pen to paper","1":"locate signature line","2":"start signing form","3":"grab a pen","4":"re-read the form","5":"Do not skip any lines","6":"Sign the form at the end"},"context":"Do not skip any lines","minutes":2.0,"events_minutes":{"0":0.05,"1":0.1666666667,"2":0.0166666667,"3":0.05,"4":1.0},"flatten_input_for_edge_prediction":"step0: put pen to paper; step1: locate signature line; step2: start signing form; step3: grab a pen; step4: re-read the form; step5: Do not skip any lines; step6: Sign the form at the end","flatten_input_for_script_generation":"You want to Sign the form at the end. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step4 -> step3; step4 -> step1; step0 -> step2; step2 -> step6; step1 -> step2; step5 -> step4","flatten_output_for_script_generation":"step0: Do not skip any lines; step1: re-read the form; step2: grab a pen; step3: put pen to paper; step4: start signing form; step5: locate signature line; step6: Sign the form at the end; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step1 -> step5; step5 -> step4; step4 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->0","4->3","4->1","5->4"],"reference_code":"class SignTheFormAtTheEnd:\n\n    title = \"Sign the form at the end\"\n    steps = 7\n\n    def step0(self):\n        return \"Do not skip any lines\"\n\n    def step1(self):\n        return \"re-read the form\"\n\n    def step2(self):\n        return \"grab a pen\"\n\n    def step3(self):\n        return \"put pen to paper\"\n\n    def step4(self):\n        return \"start signing form\"\n\n    def step5(self):\n        return \"locate signature line\"\n\n    def step6(self):\n        return \"Sign the form at the end\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step5 -> step4\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class SignTheFormAtTheEnd:\n\n    title = \"Sign the form at the end\"\n    steps = 7\n\n","reference_graph":{"title":"Sign the form at the end","num_steps":7,"schema":["step0: Do not skip any lines","step1: re-read the form","step2: grab a pen","step3: put pen to paper","step4: start signing form","step5: locate signature line","step6: Sign the form at the end"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step1 -> step5","step5 -> step4","step4 -> step6"]}}
{"scenario":"take seat in front of mirror","events":{"0":"move right foot","1":"walk to barber chair","2":"move left foot","3":"turn towards the barber","4":"get up from waiting room","5":"get called up to barber chair","6":"take seat in front of mirror"},"context":"get called up to barber chair","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.1666666667,"2":0.0166666667,"3":0.0166666667,"4":0.25},"flatten_input_for_edge_prediction":"step0: move right foot; step1: walk to barber chair; step2: move left foot; step3: turn towards the barber; step4: get up from waiting room; step5: get called up to barber chair; step6: take seat in front of mirror","flatten_input_for_script_generation":"You want to take seat in front of mirror. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step3 -> step2; step0 -> step1; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get called up to barber chair; step1: get up from waiting room; step2: turn towards the barber; step3: move right foot; step4: move left foot; step5: walk to barber chair; step6: take seat in front of mirror; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->1","3->0","3->2","4->3","5->4"],"reference_code":"class TakeSeatInFrontOfMirror:\n\n    title = \"take seat in front of mirror\"\n    steps = 7\n\n    def step0(self):\n        return \"get called up to barber chair\"\n\n    def step1(self):\n        return \"get up from waiting room\"\n\n    def step2(self):\n        return \"turn towards the barber\"\n\n    def step3(self):\n        return \"move right foot\"\n\n    def step4(self):\n        return \"move left foot\"\n\n    def step5(self):\n        return \"walk to barber chair\"\n\n    def step6(self):\n        return \"take seat in front of mirror\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeSeatInFrontOfMirror:\n\n    title = \"take seat in front of mirror\"\n    steps = 7\n\n","reference_graph":{"title":"take seat in front of mirror","num_steps":7,"schema":["step0: get called up to barber chair","step1: get up from waiting room","step2: turn towards the barber","step3: move right foot","step4: move left foot","step5: walk to barber chair","step6: take seat in front of mirror"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"turn into the shelter's parking lot","events":{"0":"slow down while approaching","1":"turn into entrance","2":"wait for traffic","3":"flick turn signal on","4":"locate the entranceway","5":"drive to the animal shelter","6":"turn into the shelter's parking lot"},"context":"drive to the animal shelter","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.1666666667,"3":0.0166666667,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: slow down while approaching; step1: turn into entrance; step2: wait for traffic; step3: flick turn signal on; step4: locate the entranceway; step5: drive to the animal shelter; step6: turn into the shelter's parking lot","flatten_input_for_script_generation":"You want to turn into the shelter's parking lot. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step4 -> step3; step0 -> step1; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: drive to the animal shelter; step1: locate the entranceway; step2: slow down while approaching; step3: flick turn signal on; step4: turn into entrance; step5: wait for traffic; step6: turn into the shelter's parking lot; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step4","gold_edges_for_prediction":["0->1","1->6","2->1","3->2","4->0","4->3","5->4"],"reference_code":"class TurnIntoTheSheltersParkingLot:\n\n    title = \"turn into the shelter's parking lot\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the animal shelter\"\n\n    def step1(self):\n        return \"locate the entranceway\"\n\n    def step2(self):\n        return \"slow down while approaching\"\n\n    def step3(self):\n        return \"flick turn signal on\"\n\n    def step4(self):\n        return \"turn into entrance\"\n\n    def step5(self):\n        return \"wait for traffic\"\n\n    def step6(self):\n        return \"turn into the shelter's parking lot\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step4\",\n        ]\n","input_prompt_code":"class TurnIntoTheSheltersParkingLot:\n\n    title = \"turn into the shelter's parking lot\"\n    steps = 7\n\n","reference_graph":{"title":"turn into the shelter's parking lot","num_steps":7,"schema":["step0: drive to the animal shelter","step1: locate the entranceway","step2: slow down while approaching","step3: flick turn signal on","step4: turn into entrance","step5: wait for traffic","step6: turn into the shelter's parking lot"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step4"]}}
{"scenario":"call people to invite","events":{"0":"press the call button","1":"hold the phone next to ear","2":"type in the phone number","3":"bring up the keypad","4":"open the calling app","5":"unlock the screen","6":"call people to invite"},"context":"unlock the screen","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0833333333,"2":0.0833333333,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: press the call button; step1: hold the phone next to ear; step2: type in the phone number; step3: bring up the keypad; step4: open the calling app; step5: unlock the screen; step6: call people to invite","flatten_input_for_script_generation":"You want to call people to invite. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step2; step2 -> step0; step1 -> step6; step0 -> step1; step5 -> step4","flatten_output_for_script_generation":"step0: unlock the screen; step1: open the calling app; step2: bring up the keypad; step3: type in the phone number; step4: press the call button; step5: hold the phone next to ear; step6: call people to invite; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->0","3->2","4->3","5->4"],"reference_code":"class CallPeopleToInvite:\n\n    title = \"call people to invite\"\n    steps = 7\n\n    def step0(self):\n        return \"unlock the screen\"\n\n    def step1(self):\n        return \"open the calling app\"\n\n    def step2(self):\n        return \"bring up the keypad\"\n\n    def step3(self):\n        return \"type in the phone number\"\n\n    def step4(self):\n        return \"press the call button\"\n\n    def step5(self):\n        return \"hold the phone next to ear\"\n\n    def step6(self):\n        return \"call people to invite\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CallPeopleToInvite:\n\n    title = \"call people to invite\"\n    steps = 7\n\n","reference_graph":{"title":"call people to invite","num_steps":7,"schema":["step0: unlock the screen","step1: open the calling app","step2: bring up the keypad","step3: type in the phone number","step4: press the call button","step5: hold the phone next to ear","step6: call people to invite"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Help the crew lay out a plan","events":{"0":"schedule meeting with crew","1":"outline project to crew","2":"redraw plan as needed","3":"receive feedback from members","4":"meet with crew","5":"Hire a construction crew","6":"Help the crew lay out a plan"},"context":"Hire a construction crew","minutes":1440.0,"events_minutes":{"0":1440.0,"1":30.0,"2":480.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: schedule meeting with crew; step1: outline project to crew; step2: redraw plan as needed; step3: receive feedback from members; step4: meet with crew; step5: Hire a construction crew; step6: Help the crew lay out a plan","flatten_input_for_script_generation":"You want to Help the crew lay out a plan. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Hire a construction crew; step1: schedule meeting with crew; step2: meet with crew; step3: outline project to crew; step4: receive feedback from members; step5: redraw plan as needed; step6: Help the crew lay out a plan; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->6","3->2","4->1","5->0"],"reference_code":"class HelpTheCrewLayOutAPlan:\n\n    title = \"Help the crew lay out a plan\"\n    steps = 7\n\n    def step0(self):\n        return \"Hire a construction crew\"\n\n    def step1(self):\n        return \"schedule meeting with crew\"\n\n    def step2(self):\n        return \"meet with crew\"\n\n    def step3(self):\n        return \"outline project to crew\"\n\n    def step4(self):\n        return \"receive feedback from members\"\n\n    def step5(self):\n        return \"redraw plan as needed\"\n\n    def step6(self):\n        return \"Help the crew lay out a plan\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HelpTheCrewLayOutAPlan:\n\n    title = \"Help the crew lay out a plan\"\n    steps = 7\n\n","reference_graph":{"title":"Help the crew lay out a plan","num_steps":7,"schema":["step0: Hire a construction crew","step1: schedule meeting with crew","step2: meet with crew","step3: outline project to crew","step4: receive feedback from members","step5: redraw plan as needed","step6: Help the crew lay out a plan"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"book the camping site","events":{"0":"find the website","1":"look for confirm button","2":"click confirm button","3":"look for camping site website","4":"find confirm button","5":"select a desirable option","6":"book the camping site"},"context":"select a desirable option","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the website; step1: look for confirm button; step2: click confirm button; step3: look for camping site website; step4: find confirm button; step5: select a desirable option; step6: book the camping site","flatten_input_for_script_generation":"You want to book the camping site. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: select a desirable option; step1: look for camping site website; step2: find the website; step3: look for confirm button; step4: find confirm button; step5: click confirm button; step6: book the camping site; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->6","3->0","4->2","5->3"],"reference_code":"class BookTheCampingSite:\n\n    title = \"book the camping site\"\n    steps = 7\n\n    def step0(self):\n        return \"select a desirable option\"\n\n    def step1(self):\n        return \"look for camping site website\"\n\n    def step2(self):\n        return \"find the website\"\n\n    def step3(self):\n        return \"look for confirm button\"\n\n    def step4(self):\n        return \"find confirm button\"\n\n    def step5(self):\n        return \"click confirm button\"\n\n    def step6(self):\n        return \"book the camping site\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BookTheCampingSite:\n\n    title = \"book the camping site\"\n    steps = 7\n\n","reference_graph":{"title":"book the camping site","num_steps":7,"schema":["step0: select a desirable option","step1: look for camping site website","step2: find the website","step3: look for confirm button","step4: find confirm button","step5: click confirm button","step6: book the camping site"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"purchase items from the store","events":{"0":"grab onto item from the shelf","1":"grab a shopping cart","2":"place items in cart","3":"browse the asiles","4":"push cart into store","5":"find some missing and need to go to store","6":"purchase items from the store"},"context":"find some missing and need to go to store","minutes":5.0,"events_minutes":{"0":0.05,"1":0.1166666667,"2":0.0666666667,"3":13.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab onto item from the shelf; step1: grab a shopping cart; step2: place items in cart; step3: browse the asiles; step4: push cart into store; step5: find some missing and need to go to store; step6: purchase items from the store","flatten_input_for_script_generation":"You want to purchase items from the store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step0; step0 -> step2; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: find some missing and need to go to store; step1: grab a shopping cart; step2: push cart into store; step3: browse the asiles; step4: grab onto item from the shelf; step5: place items in cart; step6: purchase items from the store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->6","3->0","4->3","5->1"],"reference_code":"class PurchaseItemsFromTheStore:\n\n    title = \"purchase items from the store\"\n    steps = 7\n\n    def step0(self):\n        return \"find some missing and need to go to store\"\n\n    def step1(self):\n        return \"grab a shopping cart\"\n\n    def step2(self):\n        return \"push cart into store\"\n\n    def step3(self):\n        return \"browse the asiles\"\n\n    def step4(self):\n        return \"grab onto item from the shelf\"\n\n    def step5(self):\n        return \"place items in cart\"\n\n    def step6(self):\n        return \"purchase items from the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PurchaseItemsFromTheStore:\n\n    title = \"purchase items from the store\"\n    steps = 7\n\n","reference_graph":{"title":"purchase items from the store","num_steps":7,"schema":["step0: find some missing and need to go to store","step1: grab a shopping cart","step2: push cart into store","step3: browse the asiles","step4: grab onto item from the shelf","step5: place items in cart","step6: purchase items from the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"read the recipe","events":{"0":"move eyes down page","1":"start processing info","2":"find start of recipe","3":"scroll to top of recipe page","4":"look for start of recipe","5":"Find the recipe for best pie.","6":"read the recipe"},"context":"Find the recipe for best pie.","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move eyes down page; step1: start processing info; step2: find start of recipe; step3: scroll to top of recipe page; step4: look for start of recipe; step5: Find the recipe for best pie.; step6: read the recipe","flatten_input_for_script_generation":"You want to read the recipe. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Find the recipe for best pie.; step1: scroll to top of recipe page; step2: move eyes down page; step3: look for start of recipe; step4: find start of recipe; step5: start processing info; step6: read the recipe; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->0","4->2","5->3"],"reference_code":"class ReadTheRecipe:\n\n    title = \"read the recipe\"\n    steps = 7\n\n    def step0(self):\n        return \"Find the recipe for best pie.\"\n\n    def step1(self):\n        return \"scroll to top of recipe page\"\n\n    def step2(self):\n        return \"move eyes down page\"\n\n    def step3(self):\n        return \"look for start of recipe\"\n\n    def step4(self):\n        return \"find start of recipe\"\n\n    def step5(self):\n        return \"start processing info\"\n\n    def step6(self):\n        return \"read the recipe\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReadTheRecipe:\n\n    title = \"read the recipe\"\n    steps = 7\n\n","reference_graph":{"title":"read the recipe","num_steps":7,"schema":["step0: Find the recipe for best pie.","step1: scroll to top of recipe page","step2: move eyes down page","step3: look for start of recipe","step4: find start of recipe","step5: start processing info","step6: read the recipe"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put the guitar in the car","events":{"0":"grab keys from pocket","1":"put car key in keyhole","2":"turn key to unlock","3":"pull handle to open car door","4":"grab car door handle","5":"walk to the car","6":"put the guitar in the car"},"context":"walk to the car","minutes":3.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.05,"3":0.0833333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: grab keys from pocket; step1: put car key in keyhole; step2: turn key to unlock; step3: pull handle to open car door; step4: grab car door handle; step5: walk to the car; step6: put the guitar in the car","flatten_input_for_script_generation":"You want to put the guitar in the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: walk to the car; step1: grab keys from pocket; step2: put car key in keyhole; step3: turn key to unlock; step4: grab car door handle; step5: pull handle to open car door; step6: put the guitar in the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->6","4->3","5->0"],"reference_code":"class PutTheGuitarInTheCar:\n\n    title = \"put the guitar in the car\"\n    steps = 7\n\n    def step0(self):\n        return \"walk to the car\"\n\n    def step1(self):\n        return \"grab keys from pocket\"\n\n    def step2(self):\n        return \"put car key in keyhole\"\n\n    def step3(self):\n        return \"turn key to unlock\"\n\n    def step4(self):\n        return \"grab car door handle\"\n\n    def step5(self):\n        return \"pull handle to open car door\"\n\n    def step6(self):\n        return \"put the guitar in the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutTheGuitarInTheCar:\n\n    title = \"put the guitar in the car\"\n    steps = 7\n\n","reference_graph":{"title":"put the guitar in the car","num_steps":7,"schema":["step0: walk to the car","step1: grab keys from pocket","step2: put car key in keyhole","step3: turn key to unlock","step4: grab car door handle","step5: pull handle to open car door","step6: put the guitar in the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put clothing on.","events":{"0":"go through drawers for underwear and socks","1":"walk into bedroom","2":"grab a pair of pants from another drawer","3":"put right leg through underwear","4":"go through closet to find shirt","5":"put left leg through underwear","6":"dry off body","7":"put clothing on."},"context":"dry off body","minutes":2.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":0.5833333333,"4":2.0,"5":0.5833333333},"flatten_input_for_edge_prediction":"step0: go through drawers for underwear and socks; step1: walk into bedroom; step2: grab a pair of pants from another drawer; step3: put right leg through underwear; step4: go through closet to find shirt; step5: put left leg through underwear; step6: dry off body; step7: put clothing on.","flatten_input_for_script_generation":"You want to put clothing on.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step1 -> step0; step4 -> step7; step0 -> step2; step2 -> step5; step5 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: dry off body; step1: walk into bedroom; step2: go through closet to find shirt; step3: go through drawers for underwear and socks; step4: put clothing on.; step5: grab a pair of pants from another drawer; step6: put left leg through underwear; step7: put right leg through underwear; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step5 -> step6; step6 -> step7; step7 -> step4","gold_edges_for_prediction":["0->2","1->4","1->0","2->5","3->7","4->7","5->3","6->1"],"reference_code":"class PutClothingOn:\n\n    title = \"put clothing on.\"\n    steps = 8\n\n    def step0(self):\n        return \"dry off body\"\n\n    def step1(self):\n        return \"walk into bedroom\"\n\n    def step2(self):\n        return \"go through closet to find shirt\"\n\n    def step3(self):\n        return \"go through drawers for underwear and socks\"\n\n    def step4(self):\n        return \"put clothing on.\"\n\n    def step5(self):\n        return \"grab a pair of pants from another drawer\"\n\n    def step6(self):\n        return \"put left leg through underwear\"\n\n    def step7(self):\n        return \"put right leg through underwear\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step4\",\n        ]\n","input_prompt_code":"class PutClothingOn:\n\n    title = \"put clothing on.\"\n    steps = 8\n\n","reference_graph":{"title":"put clothing on.","num_steps":8,"schema":["step0: dry off body","step1: walk into bedroom","step2: go through closet to find shirt","step3: go through drawers for underwear and socks","step4: put clothing on.","step5: grab a pair of pants from another drawer","step6: put left leg through underwear","step7: put right leg through underwear"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step5 -> step6","step6 -> step7","step7 -> step4"]}}
{"scenario":"get out of the car","events":{"0":"drive into the parking lot","1":"take off the seat belt","2":"open the car door","3":"park the car","4":"turn off the car","5":"find a parking spot","6":"drive to class","7":"get out of the car"},"context":"drive to class","minutes":1.0,"events_minutes":{"0":30.0,"1":0.0833333333,"2":0.0833333333,"3":0.6666666667,"4":0.1666666667,"5":0.3333333333},"flatten_input_for_edge_prediction":"step0: drive into the parking lot; step1: take off the seat belt; step2: open the car door; step3: park the car; step4: turn off the car; step5: find a parking spot; step6: drive to class; step7: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step5; step5 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: drive to class; step1: drive into the parking lot; step2: find a parking spot; step3: park the car; step4: turn off the car; step5: take off the seat belt; step6: open the car door; step7: get out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->2","2->7","3->4","4->1","5->3","6->0"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 8\n\n    def step0(self):\n        return \"drive to class\"\n\n    def step1(self):\n        return \"drive into the parking lot\"\n\n    def step2(self):\n        return \"find a parking spot\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"turn off the car\"\n\n    def step5(self):\n        return \"take off the seat belt\"\n\n    def step6(self):\n        return \"open the car door\"\n\n    def step7(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 8\n\n","reference_graph":{"title":"get out of the car","num_steps":8,"schema":["step0: drive to class","step1: drive into the parking lot","step2: find a parking spot","step3: park the car","step4: turn off the car","step5: take off the seat belt","step6: open the car door","step7: get out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"let baking pan rest on counter","events":{"0":"pull out left leg of cooling rack","1":"set cooling rack on a table","2":"get cooked food out of the oven","3":"set food on cooling rack","4":"pull out right leg of cooling rack","5":"get cooling rack out of cabinet","6":"let baking pan rest on counter"},"context":"get cooling rack out of cabinet","minutes":5.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":1.0,"3":0.0833333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: pull out left leg of cooling rack; step1: set cooling rack on a table; step2: get cooked food out of the oven; step3: set food on cooling rack; step4: pull out right leg of cooling rack; step5: get cooling rack out of cabinet; step6: let baking pan rest on counter","flatten_input_for_script_generation":"You want to let baking pan rest on counter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: get cooling rack out of cabinet; step1: pull out left leg of cooling rack; step2: pull out right leg of cooling rack; step3: set cooling rack on a table; step4: get cooked food out of the oven; step5: set food on cooling rack; step6: let baking pan rest on counter; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->1","5->4","5->0"],"reference_code":"class LetBakingPanRestOnCounter:\n\n    title = \"let baking pan rest on counter\"\n    steps = 7\n\n    def step0(self):\n        return \"get cooling rack out of cabinet\"\n\n    def step1(self):\n        return \"pull out left leg of cooling rack\"\n\n    def step2(self):\n        return \"pull out right leg of cooling rack\"\n\n    def step3(self):\n        return \"set cooling rack on a table\"\n\n    def step4(self):\n        return \"get cooked food out of the oven\"\n\n    def step5(self):\n        return \"set food on cooling rack\"\n\n    def step6(self):\n        return \"let baking pan rest on counter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LetBakingPanRestOnCounter:\n\n    title = \"let baking pan rest on counter\"\n    steps = 7\n\n","reference_graph":{"title":"let baking pan rest on counter","num_steps":7,"schema":["step0: get cooling rack out of cabinet","step1: pull out left leg of cooling rack","step2: pull out right leg of cooling rack","step3: set cooling rack on a table","step4: get cooked food out of the oven","step5: set food on cooling rack","step6: let baking pan rest on counter"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"get inline at the ticket sales desk","events":{"0":"look at building map","1":"walk towards line","2":"arrive to where tickets are sold","3":"locate where the tickets are sold","4":"walk towards where tickets are sold","5":"enter the building","6":"get inline at the ticket sales desk"},"context":"enter the building","minutes":1.0,"events_minutes":{"0":2.0,"1":0.0833333333,"2":0.05,"3":0.1666666667,"4":2.0},"flatten_input_for_edge_prediction":"step0: look at building map; step1: walk towards line; step2: arrive to where tickets are sold; step3: locate where the tickets are sold; step4: walk towards where tickets are sold; step5: enter the building; step6: get inline at the ticket sales desk","flatten_input_for_script_generation":"You want to get inline at the ticket sales desk. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: enter the building; step1: look at building map; step2: locate where the tickets are sold; step3: walk towards where tickets are sold; step4: arrive to where tickets are sold; step5: walk towards line; step6: get inline at the ticket sales desk; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->2","5->0"],"reference_code":"class GetInlineAtTheTicketSalesDesk:\n\n    title = \"get inline at the ticket sales desk\"\n    steps = 7\n\n    def step0(self):\n        return \"enter the building\"\n\n    def step1(self):\n        return \"look at building map\"\n\n    def step2(self):\n        return \"locate where the tickets are sold\"\n\n    def step3(self):\n        return \"walk towards where tickets are sold\"\n\n    def step4(self):\n        return \"arrive to where tickets are sold\"\n\n    def step5(self):\n        return \"walk towards line\"\n\n    def step6(self):\n        return \"get inline at the ticket sales desk\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetInlineAtTheTicketSalesDesk:\n\n    title = \"get inline at the ticket sales desk\"\n    steps = 7\n\n","reference_graph":{"title":"get inline at the ticket sales desk","num_steps":7,"schema":["step0: enter the building","step1: look at building map","step2: locate where the tickets are sold","step3: walk towards where tickets are sold","step4: arrive to where tickets are sold","step5: walk towards line","step6: get inline at the ticket sales desk"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk inside store","events":{"0":"continue walking to store","1":"shut off vehicle","2":"move left foot towards store","3":"open door to the store","4":"get out of vehicle","5":"move right foot towards store","6":"exit the vehicle","7":"walk inside store"},"context":"exit the vehicle","minutes":1.0,"events_minutes":{"0":0.4166666667,"1":0.3333333333,"2":0.0833333333,"3":0.25,"4":0.1666666667,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: continue walking to store; step1: shut off vehicle; step2: move left foot towards store; step3: open door to the store; step4: get out of vehicle; step5: move right foot towards store; step6: exit the vehicle; step7: walk inside store","flatten_input_for_script_generation":"You want to walk inside store. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step4 -> step5; step2 -> step0; step5 -> step0; step0 -> step3; step3 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: exit the vehicle; step1: shut off vehicle; step2: get out of vehicle; step3: move left foot towards store; step4: move right foot towards store; step5: continue walking to store; step6: open door to the store; step7: walk inside store; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->3","1->4","2->0","3->7","4->2","4->5","5->0","6->1"],"reference_code":"class WalkInsideStore:\n\n    title = \"walk inside store\"\n    steps = 8\n\n    def step0(self):\n        return \"exit the vehicle\"\n\n    def step1(self):\n        return \"shut off vehicle\"\n\n    def step2(self):\n        return \"get out of vehicle\"\n\n    def step3(self):\n        return \"move left foot towards store\"\n\n    def step4(self):\n        return \"move right foot towards store\"\n\n    def step5(self):\n        return \"continue walking to store\"\n\n    def step6(self):\n        return \"open door to the store\"\n\n    def step7(self):\n        return \"walk inside store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkInsideStore:\n\n    title = \"walk inside store\"\n    steps = 8\n\n","reference_graph":{"title":"walk inside store","num_steps":8,"schema":["step0: exit the vehicle","step1: shut off vehicle","step2: get out of vehicle","step3: move left foot towards store","step4: move right foot towards store","step5: continue walking to store","step6: open door to the store","step7: walk inside store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make sure details are correct","events":{"0":"scroll to top of page","1":"look for the details","2":"remember facts of details","3":"find the details","4":"compare facts with what is written","5":"write down any private info","6":"make sure details are correct"},"context":"write down any private info","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: scroll to top of page; step1: look for the details; step2: remember facts of details; step3: find the details; step4: compare facts with what is written; step5: write down any private info; step6: make sure details are correct","flatten_input_for_script_generation":"You want to make sure details are correct. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step0 -> step1; step5 -> step0","flatten_output_for_script_generation":"step0: write down any private info; step1: scroll to top of page; step2: look for the details; step3: find the details; step4: remember facts of details; step5: compare facts with what is written; step6: make sure details are correct; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->1","1->3","2->4","3->2","4->6","5->0"],"reference_code":"class MakeSureDetailsAreCorrect:\n\n    title = \"make sure details are correct\"\n    steps = 7\n\n    def step0(self):\n        return \"write down any private info\"\n\n    def step1(self):\n        return \"scroll to top of page\"\n\n    def step2(self):\n        return \"look for the details\"\n\n    def step3(self):\n        return \"find the details\"\n\n    def step4(self):\n        return \"remember facts of details\"\n\n    def step5(self):\n        return \"compare facts with what is written\"\n\n    def step6(self):\n        return \"make sure details are correct\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class MakeSureDetailsAreCorrect:\n\n    title = \"make sure details are correct\"\n    steps = 7\n\n","reference_graph":{"title":"make sure details are correct","num_steps":7,"schema":["step0: write down any private info","step1: scroll to top of page","step2: look for the details","step3: find the details","step4: remember facts of details","step5: compare facts with what is written","step6: make sure details are correct"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
{"scenario":"start a group text thread","events":{"0":"Look for messaging app","1":"Turn on phone screen","2":"Start new group text","3":"Open messaging app","4":"Pick up phone","5":"NONE","6":"start a group text thread"},"context":"NONE","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0333333333,"2":0.0833333333,"3":0.05,"4":3.0},"flatten_input_for_edge_prediction":"step0: Look for messaging app; step1: Turn on phone screen; step2: Start new group text; step3: Open messaging app; step4: Pick up phone; step5: decided to start a group text thread; step6: start a group text thread","flatten_input_for_script_generation":"You want to start a group text thread. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to start a group text thread; step1: Pick up phone; step2: Turn on phone screen; step3: Look for messaging app; step4: Open messaging app; step5: Start new group text; step6: start a group text thread; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->4"],"reference_code":"class StartAGroupTextThread:\n\n    title = \"start a group text thread\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to start a group text thread\"\n\n    def step1(self):\n        return \"Pick up phone\"\n\n    def step2(self):\n        return \"Turn on phone screen\"\n\n    def step3(self):\n        return \"Look for messaging app\"\n\n    def step4(self):\n        return \"Open messaging app\"\n\n    def step5(self):\n        return \"Start new group text\"\n\n    def step6(self):\n        return \"start a group text thread\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartAGroupTextThread:\n\n    title = \"start a group text thread\"\n    steps = 7\n\n","reference_graph":{"title":"start a group text thread","num_steps":7,"schema":["step0: decided to start a group text thread","step1: Pick up phone","step2: Turn on phone screen","step3: Look for messaging app","step4: Open messaging app","step5: Start new group text","step6: start a group text thread"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"head to computer store","events":{"0":"walk to car","1":"get inside car","2":"open car door","3":"turn on ignition","4":"drive towards store","5":"decide to upgrade parts","6":"head to computer store"},"context":"decide to upgrade parts","minutes":27.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: walk to car; step1: get inside car; step2: open car door; step3: turn on ignition; step4: drive towards store; step5: decide to upgrade parts; step6: head to computer store","flatten_input_for_script_generation":"You want to head to computer store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: decide to upgrade parts; step1: walk to car; step2: open car door; step3: get inside car; step4: turn on ignition; step5: drive towards store; step6: head to computer store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->4","4->6","5->0"],"reference_code":"class HeadToComputerStore:\n\n    title = \"head to computer store\"\n    steps = 7\n\n    def step0(self):\n        return \"decide to upgrade parts\"\n\n    def step1(self):\n        return \"walk to car\"\n\n    def step2(self):\n        return \"open car door\"\n\n    def step3(self):\n        return \"get inside car\"\n\n    def step4(self):\n        return \"turn on ignition\"\n\n    def step5(self):\n        return \"drive towards store\"\n\n    def step6(self):\n        return \"head to computer store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HeadToComputerStore:\n\n    title = \"head to computer store\"\n    steps = 7\n\n","reference_graph":{"title":"head to computer store","num_steps":7,"schema":["step0: decide to upgrade parts","step1: walk to car","step2: open car door","step3: get inside car","step4: turn on ignition","step5: drive towards store","step6: head to computer store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk to fire pit.","events":{"0":"grab keys from pocket","1":"lock the door with keys","2":"face away from door","3":"put keys in pocket","4":"face in the direction of fire pit","5":"Close the door.","6":"Walk to fire pit."},"context":"Close the door.","minutes":7.0,"events_minutes":{"0":0.5,"1":0.5,"2":0.5,"3":0.5,"4":0.5},"flatten_input_for_edge_prediction":"step0: grab keys from pocket; step1: lock the door with keys; step2: face away from door; step3: put keys in pocket; step4: face in the direction of fire pit; step5: Close the door.; step6: Walk to fire pit.","flatten_input_for_script_generation":"You want to Walk to fire pit.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step3; step2 -> step4; step3 -> step2; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Close the door.; step1: grab keys from pocket; step2: lock the door with keys; step3: put keys in pocket; step4: face away from door; step5: face in the direction of fire pit; step6: Walk to fire pit.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->4","3->2","4->6","5->0"],"reference_code":"class WalkToFirePit:\n\n    title = \"Walk to fire pit.\"\n    steps = 7\n\n    def step0(self):\n        return \"Close the door.\"\n\n    def step1(self):\n        return \"grab keys from pocket\"\n\n    def step2(self):\n        return \"lock the door with keys\"\n\n    def step3(self):\n        return \"put keys in pocket\"\n\n    def step4(self):\n        return \"face away from door\"\n\n    def step5(self):\n        return \"face in the direction of fire pit\"\n\n    def step6(self):\n        return \"Walk to fire pit.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToFirePit:\n\n    title = \"Walk to fire pit.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk to fire pit.","num_steps":7,"schema":["step0: Close the door.","step1: grab keys from pocket","step2: lock the door with keys","step3: put keys in pocket","step4: face away from door","step5: face in the direction of fire pit","step6: Walk to fire pit."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab gear from the car","events":{"0":"open trunk and back door","1":"reach into trunk","2":"place items on ground","3":"pull out items","4":"reach into back seat","5":"get out of the car","6":"grab gear from the car"},"context":"get out of the car","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.3333333333,"3":0.5,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: open trunk and back door; step1: reach into trunk; step2: place items on ground; step3: pull out items; step4: reach into back seat; step5: get out of the car; step6: grab gear from the car","flatten_input_for_script_generation":"You want to grab gear from the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step4; step1 -> step3; step3 -> step2; step2 -> step6; step4 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: get out of the car; step1: open trunk and back door; step2: reach into trunk; step3: reach into back seat; step4: pull out items; step5: place items on ground; step6: grab gear from the car; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","0->4","1->3","2->6","3->2","4->3","5->0"],"reference_code":"class GrabGearFromTheCar:\n\n    title = \"grab gear from the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the car\"\n\n    def step1(self):\n        return \"open trunk and back door\"\n\n    def step2(self):\n        return \"reach into trunk\"\n\n    def step3(self):\n        return \"reach into back seat\"\n\n    def step4(self):\n        return \"pull out items\"\n\n    def step5(self):\n        return \"place items on ground\"\n\n    def step6(self):\n        return \"grab gear from the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabGearFromTheCar:\n\n    title = \"grab gear from the car\"\n    steps = 7\n\n","reference_graph":{"title":"grab gear from the car","num_steps":7,"schema":["step0: get out of the car","step1: open trunk and back door","step2: reach into trunk","step3: reach into back seat","step4: pull out items","step5: place items on ground","step6: grab gear from the car"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Walk to the car.","events":{"0":"put left foot forward","1":"look for car","2":"put right foot forward","3":"find the car","4":"turn body towards car","5":"Close the front door.","6":"Walk to the car."},"context":"Close the front door.","minutes":3.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put left foot forward; step1: look for car; step2: put right foot forward; step3: find the car; step4: turn body towards car; step5: Close the front door.; step6: Walk to the car.","flatten_input_for_script_generation":"You want to Walk to the car.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step0; step4 -> step2; step0 -> step6; step2 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Close the front door.; step1: look for car; step2: find the car; step3: turn body towards car; step4: put left foot forward; step5: put right foot forward; step6: Walk to the car.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->6","3->4","4->0","4->2","5->1"],"reference_code":"class WalkToTheCar:\n\n    title = \"Walk to the car.\"\n    steps = 7\n\n    def step0(self):\n        return \"Close the front door.\"\n\n    def step1(self):\n        return \"look for car\"\n\n    def step2(self):\n        return \"find the car\"\n\n    def step3(self):\n        return \"turn body towards car\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"Walk to the car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToTheCar:\n\n    title = \"Walk to the car.\"\n    steps = 7\n\n","reference_graph":{"title":"Walk to the car.","num_steps":7,"schema":["step0: Close the front door.","step1: look for car","step2: find the car","step3: turn body towards car","step4: put left foot forward","step5: put right foot forward","step6: Walk to the car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"invite guests to wedding","events":{"0":"make a list of invitees","1":"paste invite to email or mail","2":"find invitees contact info","3":"write up a wedding invite","4":"send out the invites","5":"ask person to get married","6":"invite guests to wedding"},"context":"ask person to get married","minutes":30.0,"events_minutes":{"0":10.0,"1":3.0,"2":25.0,"3":25.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: make a list of invitees; step1: paste invite to email or mail; step2: find invitees contact info; step3: write up a wedding invite; step4: send out the invites; step5: ask person to get married; step6: invite guests to wedding","flatten_input_for_script_generation":"You want to invite guests to wedding. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: ask person to get married; step1: make a list of invitees; step2: find invitees contact info; step3: write up a wedding invite; step4: paste invite to email or mail; step5: send out the invites; step6: invite guests to wedding; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->3","3->1","4->6","5->0"],"reference_code":"class InviteGuestsToWedding:\n\n    title = \"invite guests to wedding\"\n    steps = 7\n\n    def step0(self):\n        return \"ask person to get married\"\n\n    def step1(self):\n        return \"make a list of invitees\"\n\n    def step2(self):\n        return \"find invitees contact info\"\n\n    def step3(self):\n        return \"write up a wedding invite\"\n\n    def step4(self):\n        return \"paste invite to email or mail\"\n\n    def step5(self):\n        return \"send out the invites\"\n\n    def step6(self):\n        return \"invite guests to wedding\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class InviteGuestsToWedding:\n\n    title = \"invite guests to wedding\"\n    steps = 7\n\n","reference_graph":{"title":"invite guests to wedding","num_steps":7,"schema":["step0: ask person to get married","step1: make a list of invitees","step2: find invitees contact info","step3: write up a wedding invite","step4: paste invite to email or mail","step5: send out the invites","step6: invite guests to wedding"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"carry xbox to the car","events":{"0":"find the car","1":"take xbox out of cart","2":"walk towards car","3":"leave the store","4":"push cart towards car","5":"Pay for Xbox","6":"carry xbox to the car"},"context":"Pay for Xbox","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the car; step1: take xbox out of cart; step2: walk towards car; step3: leave the store; step4: push cart towards car; step5: Pay for Xbox; step6: carry xbox to the car","flatten_input_for_script_generation":"You want to carry xbox to the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step0 -> step4; step4 -> step1; step1 -> step6; step2 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: Pay for Xbox; step1: leave the store; step2: find the car; step3: walk towards car; step4: push cart towards car; step5: take xbox out of cart; step6: carry xbox to the car; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","0->4","1->6","2->1","3->0","4->1","5->3"],"reference_code":"class CarryXboxToTheCar:\n\n    title = \"carry xbox to the car\"\n    steps = 7\n\n    def step0(self):\n        return \"Pay for Xbox\"\n\n    def step1(self):\n        return \"leave the store\"\n\n    def step2(self):\n        return \"find the car\"\n\n    def step3(self):\n        return \"walk towards car\"\n\n    def step4(self):\n        return \"push cart towards car\"\n\n    def step5(self):\n        return \"take xbox out of cart\"\n\n    def step6(self):\n        return \"carry xbox to the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class CarryXboxToTheCar:\n\n    title = \"carry xbox to the car\"\n    steps = 7\n\n","reference_graph":{"title":"carry xbox to the car","num_steps":7,"schema":["step0: Pay for Xbox","step1: leave the store","step2: find the car","step3: walk towards car","step4: push cart towards car","step5: take xbox out of cart","step6: carry xbox to the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"get a pen and paper","events":{"0":"look for pen","1":"get the pen","2":"look for paper","3":"remember the activity","4":"get the paper","5":"decide the activity","6":"get a pen and paper"},"context":"decide the activity","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for pen; step1: get the pen; step2: look for paper; step3: remember the activity; step4: get the paper; step5: decide the activity; step6: get a pen and paper","flatten_input_for_script_generation":"You want to get a pen and paper. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step2; step0 -> step1; step1 -> step6; step2 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decide the activity; step1: remember the activity; step2: look for pen; step3: look for paper; step4: get the pen; step5: get the paper; step6: get a pen and paper; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","3->2","4->6","5->3"],"reference_code":"class GetAPenAndPaper:\n\n    title = \"get a pen and paper\"\n    steps = 7\n\n    def step0(self):\n        return \"decide the activity\"\n\n    def step1(self):\n        return \"remember the activity\"\n\n    def step2(self):\n        return \"look for pen\"\n\n    def step3(self):\n        return \"look for paper\"\n\n    def step4(self):\n        return \"get the pen\"\n\n    def step5(self):\n        return \"get the paper\"\n\n    def step6(self):\n        return \"get a pen and paper\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetAPenAndPaper:\n\n    title = \"get a pen and paper\"\n    steps = 7\n\n","reference_graph":{"title":"get a pen and paper","num_steps":7,"schema":["step0: decide the activity","step1: remember the activity","step2: look for pen","step3: look for paper","step4: get the pen","step5: get the paper","step6: get a pen and paper"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"dig up rocks from soil","events":{"0":"move shovel up","1":"grab a shovel","2":"put shovel under rock","3":"find the rocks","4":"look for rocks","5":"Take the seeds home","6":"dig up rocks from soil"},"context":"Take the seeds home","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: move shovel up; step1: grab a shovel; step2: put shovel under rock; step3: find the rocks; step4: look for rocks; step5: Take the seeds home; step6: dig up rocks from soil","flatten_input_for_script_generation":"You want to dig up rocks from soil. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Take the seeds home; step1: grab a shovel; step2: look for rocks; step3: find the rocks; step4: put shovel under rock; step5: move shovel up; step6: dig up rocks from soil; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class DigUpRocksFromSoil:\n\n    title = \"dig up rocks from soil\"\n    steps = 7\n\n    def step0(self):\n        return \"Take the seeds home\"\n\n    def step1(self):\n        return \"grab a shovel\"\n\n    def step2(self):\n        return \"look for rocks\"\n\n    def step3(self):\n        return \"find the rocks\"\n\n    def step4(self):\n        return \"put shovel under rock\"\n\n    def step5(self):\n        return \"move shovel up\"\n\n    def step6(self):\n        return \"dig up rocks from soil\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DigUpRocksFromSoil:\n\n    title = \"dig up rocks from soil\"\n    steps = 7\n\n","reference_graph":{"title":"dig up rocks from soil","num_steps":7,"schema":["step0: Take the seeds home","step1: grab a shovel","step2: look for rocks","step3: find the rocks","step4: put shovel under rock","step5: move shovel up","step6: dig up rocks from soil"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put coals on grill","events":{"0":"look for grill","1":"move coal towards grill","2":"put hand in bag of coal","3":"find the grill","4":"take coal out of bag","5":"grab bag of coal","6":"put coals on grill"},"context":"grab bag of coal","minutes":1.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for grill; step1: move coal towards grill; step2: put hand in bag of coal; step3: find the grill; step4: take coal out of bag; step5: grab bag of coal; step6: put coals on grill","flatten_input_for_script_generation":"You want to put coals on grill. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step1; step4 -> step1; step1 -> step6; step2 -> step4; step5 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: grab bag of coal; step1: put hand in bag of coal; step2: look for grill; step3: find the grill; step4: move coal towards grill; step5: put coals on grill; step6: take coal out of bag; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step6 -> step4; step1 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->1","4->1","5->0","5->2"],"reference_code":"class PutCoalsOnGrill:\n\n    title = \"put coals on grill\"\n    steps = 7\n\n    def step0(self):\n        return \"grab bag of coal\"\n\n    def step1(self):\n        return \"put hand in bag of coal\"\n\n    def step2(self):\n        return \"look for grill\"\n\n    def step3(self):\n        return \"find the grill\"\n\n    def step4(self):\n        return \"move coal towards grill\"\n\n    def step5(self):\n        return \"put coals on grill\"\n\n    def step6(self):\n        return \"take coal out of bag\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step6 -> step4\",\n            \"step1 -> step6\",\n        ]\n","input_prompt_code":"class PutCoalsOnGrill:\n\n    title = \"put coals on grill\"\n    steps = 7\n\n","reference_graph":{"title":"put coals on grill","num_steps":7,"schema":["step0: grab bag of coal","step1: put hand in bag of coal","step2: look for grill","step3: find the grill","step4: move coal towards grill","step5: put coals on grill","step6: take coal out of bag"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step6 -> step4","step1 -> step6"]}}
{"scenario":"throw out trash","events":{"0":"pick up the trash bag","1":"open the door","2":"walk out the door to the trash can","3":"carry the trash bag","4":"grab the trash bag","5":"dust everything off","6":"throw out trash"},"context":"dust everything off","minutes":18.0,"events_minutes":{"0":0.0333333333,"1":0.05,"2":0.5,"3":2.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: pick up the trash bag; step1: open the door; step2: walk out the door to the trash can; step3: carry the trash bag; step4: grab the trash bag; step5: dust everything off; step6: throw out trash","flatten_input_for_script_generation":"You want to throw out trash. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: dust everything off; step1: grab the trash bag; step2: pick up the trash bag; step3: carry the trash bag; step4: open the door; step5: walk out the door to the trash can; step6: throw out trash; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->1","4->0","5->4"],"reference_code":"class ThrowOutTrash:\n\n    title = \"throw out trash\"\n    steps = 7\n\n    def step0(self):\n        return \"dust everything off\"\n\n    def step1(self):\n        return \"grab the trash bag\"\n\n    def step2(self):\n        return \"pick up the trash bag\"\n\n    def step3(self):\n        return \"carry the trash bag\"\n\n    def step4(self):\n        return \"open the door\"\n\n    def step5(self):\n        return \"walk out the door to the trash can\"\n\n    def step6(self):\n        return \"throw out trash\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ThrowOutTrash:\n\n    title = \"throw out trash\"\n    steps = 7\n\n","reference_graph":{"title":"throw out trash","num_steps":7,"schema":["step0: dust everything off","step1: grab the trash bag","step2: pick up the trash bag","step3: carry the trash bag","step4: open the door","step5: walk out the door to the trash can","step6: throw out trash"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab grocery bags and lock door","events":{"0":"close car door","1":"look for grocery bags","2":"take grocery bags","3":"exit the car","4":"find grocery bags","5":"get out of car","6":"grab grocery bags and lock door"},"context":"get out of car","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: close car door; step1: look for grocery bags; step2: take grocery bags; step3: exit the car; step4: find grocery bags; step5: get out of car; step6: grab grocery bags and lock door","flatten_input_for_script_generation":"You want to grab grocery bags and lock door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get out of car; step1: look for grocery bags; step2: find grocery bags; step3: take grocery bags; step4: exit the car; step5: close car door; step6: grab grocery bags and lock door; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->0","4->2","5->1"],"reference_code":"class GrabGroceryBagsAndLockDoor:\n\n    title = \"grab grocery bags and lock door\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of car\"\n\n    def step1(self):\n        return \"look for grocery bags\"\n\n    def step2(self):\n        return \"find grocery bags\"\n\n    def step3(self):\n        return \"take grocery bags\"\n\n    def step4(self):\n        return \"exit the car\"\n\n    def step5(self):\n        return \"close car door\"\n\n    def step6(self):\n        return \"grab grocery bags and lock door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabGroceryBagsAndLockDoor:\n\n    title = \"grab grocery bags and lock door\"\n    steps = 7\n\n","reference_graph":{"title":"grab grocery bags and lock door","num_steps":7,"schema":["step0: get out of car","step1: look for grocery bags","step2: find grocery bags","step3: take grocery bags","step4: exit the car","step5: close car door","step6: grab grocery bags and lock door"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get dressed in the outfit","events":{"0":"put on pants","1":"put on a jacket","2":"take the outfit out of the closet","3":"put on a shirt","4":"put on socks","5":"pick out an outfit","6":"get dressed in the outfit"},"context":"pick out an outfit","minutes":2.0,"events_minutes":{"0":0.5,"1":0.25,"2":0.3333333333,"3":0.3333333333,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: put on pants; step1: put on a jacket; step2: take the outfit out of the closet; step3: put on a shirt; step4: put on socks; step5: pick out an outfit; step6: get dressed in the outfit","flatten_input_for_script_generation":"You want to get dressed in the outfit. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step2 -> step4; step2 -> step3; step0 -> step6; step4 -> step6; step3 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: pick out an outfit; step1: take the outfit out of the closet; step2: put on pants; step3: put on socks; step4: put on a shirt; step5: get dressed in the outfit; step6: put on a jacket; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step6; step6 -> step5","gold_edges_for_prediction":["0->6","1->6","2->0","2->4","2->3","3->1","4->6","5->2"],"reference_code":"class GetDressedInTheOutfit:\n\n    title = \"get dressed in the outfit\"\n    steps = 7\n\n    def step0(self):\n        return \"pick out an outfit\"\n\n    def step1(self):\n        return \"take the outfit out of the closet\"\n\n    def step2(self):\n        return \"put on pants\"\n\n    def step3(self):\n        return \"put on socks\"\n\n    def step4(self):\n        return \"put on a shirt\"\n\n    def step5(self):\n        return \"get dressed in the outfit\"\n\n    def step6(self):\n        return \"put on a jacket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step6 -> step5\",\n        ]\n","input_prompt_code":"class GetDressedInTheOutfit:\n\n    title = \"get dressed in the outfit\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed in the outfit","num_steps":7,"schema":["step0: pick out an outfit","step1: take the outfit out of the closet","step2: put on pants","step3: put on socks","step4: put on a shirt","step5: get dressed in the outfit","step6: put on a jacket"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step6","step6 -> step5"]}}
{"scenario":"grab a cart on the way","events":{"0":"grab onto cart","1":"walk over to the carts","2":"look for the carts storage","3":"push the cart away","4":"pull cart away from other carts","5":"start walking to entrance","6":"grab a cart on the way"},"context":"start walking to entrance","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":0.25,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab onto cart; step1: walk over to the carts; step2: look for the carts storage; step3: push the cart away; step4: pull cart away from other carts; step5: start walking to entrance; step6: grab a cart on the way","flatten_input_for_script_generation":"You want to grab a cart on the way. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: start walking to entrance; step1: look for the carts storage; step2: walk over to the carts; step3: grab onto cart; step4: pull cart away from other carts; step5: push the cart away; step6: grab a cart on the way; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->1","3->6","4->3","5->2"],"reference_code":"class GrabACartOnTheWay:\n\n    title = \"grab a cart on the way\"\n    steps = 7\n\n    def step0(self):\n        return \"start walking to entrance\"\n\n    def step1(self):\n        return \"look for the carts storage\"\n\n    def step2(self):\n        return \"walk over to the carts\"\n\n    def step3(self):\n        return \"grab onto cart\"\n\n    def step4(self):\n        return \"pull cart away from other carts\"\n\n    def step5(self):\n        return \"push the cart away\"\n\n    def step6(self):\n        return \"grab a cart on the way\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabACartOnTheWay:\n\n    title = \"grab a cart on the way\"\n    steps = 7\n\n","reference_graph":{"title":"grab a cart on the way","num_steps":7,"schema":["step0: start walking to entrance","step1: look for the carts storage","step2: walk over to the carts","step3: grab onto cart","step4: pull cart away from other carts","step5: push the cart away","step6: grab a cart on the way"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to the bedroom.","events":{"0":"put towel up","1":"open the door","2":"grab the clothes","3":"put on clothes","4":"start to walk","5":"grab the door knob","6":"dry off with a towel.","7":"walk to the bedroom."},"context":"dry off with a towel.","minutes":0.5,"events_minutes":{"0":0.05,"1":0.05,"2":0.05,"3":1.0,"4":0.05,"5":0.05},"flatten_input_for_edge_prediction":"step0: put towel up; step1: open the door; step2: grab the clothes; step3: put on clothes; step4: start to walk; step5: grab the door knob; step6: dry off with a towel.; step7: walk to the bedroom.","flatten_input_for_script_generation":"You want to walk to the bedroom.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step3 -> step4; step5 -> step1; step1 -> step7; step4 -> step5; step6 -> step0","flatten_output_for_script_generation":"step0: dry off with a towel.; step1: put towel up; step2: grab the clothes; step3: put on clothes; step4: start to walk; step5: grab the door knob; step6: open the door; step7: walk to the bedroom.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->7","2->3","3->4","4->5","5->1","6->0"],"reference_code":"class WalkToTheBedroom:\n\n    title = \"walk to the bedroom.\"\n    steps = 8\n\n    def step0(self):\n        return \"dry off with a towel.\"\n\n    def step1(self):\n        return \"put towel up\"\n\n    def step2(self):\n        return \"grab the clothes\"\n\n    def step3(self):\n        return \"put on clothes\"\n\n    def step4(self):\n        return \"start to walk\"\n\n    def step5(self):\n        return \"grab the door knob\"\n\n    def step6(self):\n        return \"open the door\"\n\n    def step7(self):\n        return \"walk to the bedroom.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkToTheBedroom:\n\n    title = \"walk to the bedroom.\"\n    steps = 8\n\n","reference_graph":{"title":"walk to the bedroom.","num_steps":8,"schema":["step0: dry off with a towel.","step1: put towel up","step2: grab the clothes","step3: put on clothes","step4: start to walk","step5: grab the door knob","step6: open the door","step7: walk to the bedroom."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"fill out paperwork","events":{"0":"Locate writing utensil.","1":"Begin writing the needed information using the writing utensil.","2":"Assess what information must go in each spot.","3":"Read information corresponding to each space.","4":"Locate empty spaces for input.","5":"coach hands paperwork over","6":"fill out paperwork"},"context":"coach hands paperwork over","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":3.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Locate writing utensil.; step1: Begin writing the needed information using the writing utensil.; step2: Assess what information must go in each spot.; step3: Read information corresponding to each space.; step4: Locate empty spaces for input.; step5: coach hands paperwork over; step6: fill out paperwork","flatten_input_for_script_generation":"You want to fill out paperwork. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step3 -> step2; step2 -> step4; step0 -> step3; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: coach hands paperwork over; step1: Locate writing utensil.; step2: Locate empty spaces for input.; step3: Begin writing the needed information using the writing utensil.; step4: fill out paperwork; step5: Read information corresponding to each space.; step6: Assess what information must go in each spot.; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step2; step1 -> step5","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class FillOutPaperwork:\n\n    title = \"fill out paperwork\"\n    steps = 7\n\n    def step0(self):\n        return \"coach hands paperwork over\"\n\n    def step1(self):\n        return \"Locate writing utensil.\"\n\n    def step2(self):\n        return \"Locate empty spaces for input.\"\n\n    def step3(self):\n        return \"Begin writing the needed information using the writing utensil.\"\n\n    def step4(self):\n        return \"fill out paperwork\"\n\n    def step5(self):\n        return \"Read information corresponding to each space.\"\n\n    def step6(self):\n        return \"Assess what information must go in each spot.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n            \"step1 -> step5\",\n        ]\n","input_prompt_code":"class FillOutPaperwork:\n\n    title = \"fill out paperwork\"\n    steps = 7\n\n","reference_graph":{"title":"fill out paperwork","num_steps":7,"schema":["step0: coach hands paperwork over","step1: Locate writing utensil.","step2: Locate empty spaces for input.","step3: Begin writing the needed information using the writing utensil.","step4: fill out paperwork","step5: Read information corresponding to each space.","step6: Assess what information must go in each spot."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step2","step1 -> step5"]}}
{"scenario":"sort the clothes","events":{"0":"wait for clothes to wash","1":"wait for clothes to dry","2":"put clothes in dryer","3":"place clean clothes on table","4":"put clothes in washer","5":"grab the bag of dirty clothes","6":"sort the clothes"},"context":"grab the bag of dirty clothes","minutes":2.0,"events_minutes":{"0":35.0,"1":60.0,"2":1.0,"3":0.5,"4":1.0},"flatten_input_for_edge_prediction":"step0: wait for clothes to wash; step1: wait for clothes to dry; step2: put clothes in dryer; step3: place clean clothes on table; step4: put clothes in washer; step5: grab the bag of dirty clothes; step6: sort the clothes","flatten_input_for_script_generation":"You want to sort the clothes. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: grab the bag of dirty clothes; step1: put clothes in washer; step2: wait for clothes to wash; step3: put clothes in dryer; step4: wait for clothes to dry; step5: place clean clothes on table; step6: sort the clothes; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->3","2->1","3->6","4->0","5->4"],"reference_code":"class SortTheClothes:\n\n    title = \"sort the clothes\"\n    steps = 7\n\n    def step0(self):\n        return \"grab the bag of dirty clothes\"\n\n    def step1(self):\n        return \"put clothes in washer\"\n\n    def step2(self):\n        return \"wait for clothes to wash\"\n\n    def step3(self):\n        return \"put clothes in dryer\"\n\n    def step4(self):\n        return \"wait for clothes to dry\"\n\n    def step5(self):\n        return \"place clean clothes on table\"\n\n    def step6(self):\n        return \"sort the clothes\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SortTheClothes:\n\n    title = \"sort the clothes\"\n    steps = 7\n\n","reference_graph":{"title":"sort the clothes","num_steps":7,"schema":["step0: grab the bag of dirty clothes","step1: put clothes in washer","step2: wait for clothes to wash","step3: put clothes in dryer","step4: wait for clothes to dry","step5: place clean clothes on table","step6: sort the clothes"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"write down the list of snacks needed","events":{"0":"start to write","1":"put pen on paper","2":"walk towards table","3":"think about the snacks needed","4":"put paper on table","5":"get pen and paper","6":"write down the list of snacks needed"},"context":"get pen and paper","minutes":3.0,"events_minutes":{"0":0.0166666667,"1":0.05,"2":0.0833333333,"3":1.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: start to write; step1: put pen on paper; step2: walk towards table; step3: think about the snacks needed; step4: put paper on table; step5: get pen and paper; step6: write down the list of snacks needed","flatten_input_for_script_generation":"You want to write down the list of snacks needed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step3 -> step0; step1 -> step0; step0 -> step6; step5 -> step2; step5 -> step3","flatten_output_for_script_generation":"step0: get pen and paper; step1: think about the snacks needed; step2: walk towards table; step3: put paper on table; step4: put pen on paper; step5: start to write; step6: write down the list of snacks needed; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->0","4->1","5->2","5->3"],"reference_code":"class WriteDownTheListOfSnacksNeeded:\n\n    title = \"write down the list of snacks needed\"\n    steps = 7\n\n    def step0(self):\n        return \"get pen and paper\"\n\n    def step1(self):\n        return \"think about the snacks needed\"\n\n    def step2(self):\n        return \"walk towards table\"\n\n    def step3(self):\n        return \"put paper on table\"\n\n    def step4(self):\n        return \"put pen on paper\"\n\n    def step5(self):\n        return \"start to write\"\n\n    def step6(self):\n        return \"write down the list of snacks needed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WriteDownTheListOfSnacksNeeded:\n\n    title = \"write down the list of snacks needed\"\n    steps = 7\n\n","reference_graph":{"title":"write down the list of snacks needed","num_steps":7,"schema":["step0: get pen and paper","step1: think about the snacks needed","step2: walk towards table","step3: put paper on table","step4: put pen on paper","step5: start to write","step6: write down the list of snacks needed"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step5","step5 -> step6"]}}
{"scenario":"Propose the two ideas.","events":{"0":"think of the details of another idea","1":"think of how to phrase one idea","2":"think of the details of one idea","3":"think of how to phrase other idea","4":"present the choice","5":"Come up with ideas to go out.","6":"Propose the two ideas."},"context":"Come up with ideas to go out.","minutes":1.0,"events_minutes":{"0":3.0,"1":0.5,"2":3.0,"3":0.5,"4":1.0},"flatten_input_for_edge_prediction":"step0: think of the details of another idea; step1: think of how to phrase one idea; step2: think of the details of one idea; step3: think of how to phrase other idea; step4: present the choice; step5: Come up with ideas to go out.; step6: Propose the two ideas.","flatten_input_for_script_generation":"You want to Propose the two ideas.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step0 -> step3; step1 -> step4; step3 -> step4; step4 -> step6; step5 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: Come up with ideas to go out.; step1: think of the details of another idea; step2: think of the details of one idea; step3: think of how to phrase one idea; step4: present the choice; step5: think of how to phrase other idea; step6: Propose the two ideas.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step4; step4 -> step6","gold_edges_for_prediction":["0->3","1->4","2->1","3->4","4->6","5->2","5->0"],"reference_code":"class ProposeTheTwoIdeas:\n\n    title = \"Propose the two ideas.\"\n    steps = 7\n\n    def step0(self):\n        return \"Come up with ideas to go out.\"\n\n    def step1(self):\n        return \"think of the details of another idea\"\n\n    def step2(self):\n        return \"think of the details of one idea\"\n\n    def step3(self):\n        return \"think of how to phrase one idea\"\n\n    def step4(self):\n        return \"present the choice\"\n\n    def step5(self):\n        return \"think of how to phrase other idea\"\n\n    def step6(self):\n        return \"Propose the two ideas.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step4\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class ProposeTheTwoIdeas:\n\n    title = \"Propose the two ideas.\"\n    steps = 7\n\n","reference_graph":{"title":"Propose the two ideas.","num_steps":7,"schema":["step0: Come up with ideas to go out.","step1: think of the details of another idea","step2: think of the details of one idea","step3: think of how to phrase one idea","step4: present the choice","step5: think of how to phrase other idea","step6: Propose the two ideas."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step4","step4 -> step6"]}}
{"scenario":"walk back to bedroom","events":{"0":"dry hair using a blow dryer","1":"put on underwear","2":"open the bathroom door","3":"exit the bathroom","4":"place the towel back on the towel rack","5":"use a towel to dry off","6":"walk back to bedroom"},"context":"use a towel to dry off","minutes":1.0,"events_minutes":{"0":2.0,"1":0.1666666667,"2":0.0833333333,"3":0.1666666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: dry hair using a blow dryer; step1: put on underwear; step2: open the bathroom door; step3: exit the bathroom; step4: place the towel back on the towel rack; step5: use a towel to dry off; step6: walk back to bedroom","flatten_input_for_script_generation":"You want to walk back to bedroom. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step4 -> step0; step0 -> step2; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: use a towel to dry off; step1: place the towel back on the towel rack; step2: put on underwear; step3: dry hair using a blow dryer; step4: open the bathroom door; step5: exit the bathroom; step6: walk back to bedroom; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->3","3->6","4->1","4->0","5->4"],"reference_code":"class WalkBackToBedroom:\n\n    title = \"walk back to bedroom\"\n    steps = 7\n\n    def step0(self):\n        return \"use a towel to dry off\"\n\n    def step1(self):\n        return \"place the towel back on the towel rack\"\n\n    def step2(self):\n        return \"put on underwear\"\n\n    def step3(self):\n        return \"dry hair using a blow dryer\"\n\n    def step4(self):\n        return \"open the bathroom door\"\n\n    def step5(self):\n        return \"exit the bathroom\"\n\n    def step6(self):\n        return \"walk back to bedroom\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkBackToBedroom:\n\n    title = \"walk back to bedroom\"\n    steps = 7\n\n","reference_graph":{"title":"walk back to bedroom","num_steps":7,"schema":["step0: use a towel to dry off","step1: place the towel back on the towel rack","step2: put on underwear","step3: dry hair using a blow dryer","step4: open the bathroom door","step5: exit the bathroom","step6: walk back to bedroom"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk into the supermarket","events":{"0":"exit the car","1":"grab all belongings","2":"lock the car","3":"walk to supermarket door","4":"turn off car","5":"park the car","6":"walk into the supermarket"},"context":"park the car","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":1.0,"2":0.0833333333,"3":1.0,"4":0.05},"flatten_input_for_edge_prediction":"step0: exit the car; step1: grab all belongings; step2: lock the car; step3: walk to supermarket door; step4: turn off car; step5: park the car; step6: walk into the supermarket","flatten_input_for_script_generation":"You want to walk into the supermarket. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: park the car; step1: turn off car; step2: grab all belongings; step3: exit the car; step4: lock the car; step5: walk to supermarket door; step6: walk into the supermarket; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->1","5->4"],"reference_code":"class WalkIntoTheSupermarket:\n\n    title = \"walk into the supermarket\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"turn off car\"\n\n    def step2(self):\n        return \"grab all belongings\"\n\n    def step3(self):\n        return \"exit the car\"\n\n    def step4(self):\n        return \"lock the car\"\n\n    def step5(self):\n        return \"walk to supermarket door\"\n\n    def step6(self):\n        return \"walk into the supermarket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkIntoTheSupermarket:\n\n    title = \"walk into the supermarket\"\n    steps = 7\n\n","reference_graph":{"title":"walk into the supermarket","num_steps":7,"schema":["step0: park the car","step1: turn off car","step2: grab all belongings","step3: exit the car","step4: lock the car","step5: walk to supermarket door","step6: walk into the supermarket"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"create a resume and cover letter","events":{"0":"think of information","1":"open new document","2":"remember the information","3":"type information on document","4":"find new document","5":"decide where to apply","6":"create a resume and cover letter"},"context":"decide where to apply","minutes":1440.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: think of information; step1: open new document; step2: remember the information; step3: type information on document; step4: find new document; step5: decide where to apply; step6: create a resume and cover letter","flatten_input_for_script_generation":"You want to create a resume and cover letter. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step0; step5 -> step4","flatten_output_for_script_generation":"step0: decide where to apply; step1: find new document; step2: think of information; step3: remember the information; step4: type information on document; step5: create a resume and cover letter; step6: open new document; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4","gold_edges_for_prediction":["0->2","1->3","2->3","3->6","4->1","5->0","5->4"],"reference_code":"class CreateAResumeAndCoverLetter:\n\n    title = \"create a resume and cover letter\"\n    steps = 7\n\n    def step0(self):\n        return \"decide where to apply\"\n\n    def step1(self):\n        return \"find new document\"\n\n    def step2(self):\n        return \"think of information\"\n\n    def step3(self):\n        return \"remember the information\"\n\n    def step4(self):\n        return \"type information on document\"\n\n    def step5(self):\n        return \"create a resume and cover letter\"\n\n    def step6(self):\n        return \"open new document\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class CreateAResumeAndCoverLetter:\n\n    title = \"create a resume and cover letter\"\n    steps = 7\n\n","reference_graph":{"title":"create a resume and cover letter","num_steps":7,"schema":["step0: decide where to apply","step1: find new document","step2: think of information","step3: remember the information","step4: type information on document","step5: create a resume and cover letter","step6: open new document"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4"]}}
{"scenario":"get through high school","events":{"0":"Attend High School Graduation","1":"Pass Sophomore year","2":"Pass Freshmen year","3":"Pass Junior year","4":"Pass Senior year","5":"go to primary school","6":"get through high school"},"context":"go to primary school","minutes":1051200.0,"events_minutes":{"0":120.0,"1":525600.0,"2":525600.0,"3":525600.0,"4":525600.0},"flatten_input_for_edge_prediction":"step0: Attend High School Graduation; step1: Pass Sophomore year; step2: Pass Freshmen year; step3: Pass Junior year; step4: Pass Senior year; step5: go to primary school; step6: get through high school","flatten_input_for_script_generation":"You want to get through high school. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go to primary school; step1: Pass Freshmen year; step2: Pass Sophomore year; step3: Pass Junior year; step4: Pass Senior year; step5: Attend High School Graduation; step6: get through high school; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->4","4->0","5->2"],"reference_code":"class GetThroughHighSchool:\n\n    title = \"get through high school\"\n    steps = 7\n\n    def step0(self):\n        return \"go to primary school\"\n\n    def step1(self):\n        return \"Pass Freshmen year\"\n\n    def step2(self):\n        return \"Pass Sophomore year\"\n\n    def step3(self):\n        return \"Pass Junior year\"\n\n    def step4(self):\n        return \"Pass Senior year\"\n\n    def step5(self):\n        return \"Attend High School Graduation\"\n\n    def step6(self):\n        return \"get through high school\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetThroughHighSchool:\n\n    title = \"get through high school\"\n    steps = 7\n\n","reference_graph":{"title":"get through high school","num_steps":7,"schema":["step0: go to primary school","step1: Pass Freshmen year","step2: Pass Sophomore year","step3: Pass Junior year","step4: Pass Senior year","step5: Attend High School Graduation","step6: get through high school"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put away laptop","events":{"0":"Put laptop in storage location","1":"Go to laptop menu on screen","2":"Pick up laptop","3":"Close laptop screen","4":"Shut down laptop","5":"get tickets to the festival","6":"put away laptop"},"context":"get tickets to the festival","minutes":2.0,"events_minutes":{"0":0.5,"1":0.0833333333,"2":0.0833333333,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Put laptop in storage location; step1: Go to laptop menu on screen; step2: Pick up laptop; step3: Close laptop screen; step4: Shut down laptop; step5: get tickets to the festival; step6: put away laptop","flatten_input_for_script_generation":"You want to put away laptop. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step3; step3 -> step2; step2 -> step0; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get tickets to the festival; step1: Go to laptop menu on screen; step2: Shut down laptop; step3: Close laptop screen; step4: Pick up laptop; step5: Put laptop in storage location; step6: put away laptop; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->2","4->3","5->1"],"reference_code":"class PutAwayLaptop:\n\n    title = \"put away laptop\"\n    steps = 7\n\n    def step0(self):\n        return \"get tickets to the festival\"\n\n    def step1(self):\n        return \"Go to laptop menu on screen\"\n\n    def step2(self):\n        return \"Shut down laptop\"\n\n    def step3(self):\n        return \"Close laptop screen\"\n\n    def step4(self):\n        return \"Pick up laptop\"\n\n    def step5(self):\n        return \"Put laptop in storage location\"\n\n    def step6(self):\n        return \"put away laptop\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutAwayLaptop:\n\n    title = \"put away laptop\"\n    steps = 7\n\n","reference_graph":{"title":"put away laptop","num_steps":7,"schema":["step0: get tickets to the festival","step1: Go to laptop menu on screen","step2: Shut down laptop","step3: Close laptop screen","step4: Pick up laptop","step5: Put laptop in storage location","step6: put away laptop"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"pass the third grade","events":{"0":"Go to school in morning","1":"Listen to teacher's lessons","2":"Go home in afternoon","3":"Study what teacher taught","4":"Do well in class projects","5":"Repeat for one year","6":"pass the second grade","7":"pass the third grade"},"context":"pass the second grade","minutes":525600.0,"events_minutes":{"0":15.0,"1":240.0,"2":15.0,"3":60.0,"4":180.0,"5":525600.0},"flatten_input_for_edge_prediction":"step0: Go to school in morning; step1: Listen to teacher's lessons; step2: Go home in afternoon; step3: Study what teacher taught; step4: Do well in class projects; step5: Repeat for one year; step6: pass the second grade; step7: pass the third grade","flatten_input_for_script_generation":"You want to pass the third grade. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step0 -> step4; step1 -> step2; step3 -> step5; step4 -> step2; step2 -> step3; step5 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: pass the second grade; step1: Go to school in morning; step2: Listen to teacher's lessons; step3: Do well in class projects; step4: Go home in afternoon; step5: Study what teacher taught; step6: Repeat for one year; step7: pass the third grade; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","0->4","1->2","2->3","3->5","4->2","5->7","6->0"],"reference_code":"class PassTheThirdGrade:\n\n    title = \"pass the third grade\"\n    steps = 8\n\n    def step0(self):\n        return \"pass the second grade\"\n\n    def step1(self):\n        return \"Go to school in morning\"\n\n    def step2(self):\n        return \"Listen to teacher's lessons\"\n\n    def step3(self):\n        return \"Do well in class projects\"\n\n    def step4(self):\n        return \"Go home in afternoon\"\n\n    def step5(self):\n        return \"Study what teacher taught\"\n\n    def step6(self):\n        return \"Repeat for one year\"\n\n    def step7(self):\n        return \"pass the third grade\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class PassTheThirdGrade:\n\n    title = \"pass the third grade\"\n    steps = 8\n\n","reference_graph":{"title":"pass the third grade","num_steps":8,"schema":["step0: pass the second grade","step1: Go to school in morning","step2: Listen to teacher's lessons","step3: Do well in class projects","step4: Go home in afternoon","step5: Study what teacher taught","step6: Repeat for one year","step7: pass the third grade"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get dressed to leave","events":{"0":"put on shoes","1":"open clothing closet","2":"get out clothing","3":"put on pants","4":"put on shirt","5":"make the decision to get a new pet","6":"get dressed to leave"},"context":"make the decision to get a new pet","minutes":1.0,"events_minutes":{"0":2.0,"1":0.25,"2":3.0,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: put on shoes; step1: open clothing closet; step2: get out clothing; step3: put on pants; step4: put on shirt; step5: make the decision to get a new pet; step6: get dressed to leave","flatten_input_for_script_generation":"You want to get dressed to leave. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step0; step4 -> step6; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: make the decision to get a new pet; step1: open clothing closet; step2: get out clothing; step3: put on pants; step4: put on shirt; step5: put on shoes; step6: get dressed to leave; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","2->4","3->0","4->6","5->1"],"reference_code":"class GetDressedToLeave:\n\n    title = \"get dressed to leave\"\n    steps = 7\n\n    def step0(self):\n        return \"make the decision to get a new pet\"\n\n    def step1(self):\n        return \"open clothing closet\"\n\n    def step2(self):\n        return \"get out clothing\"\n\n    def step3(self):\n        return \"put on pants\"\n\n    def step4(self):\n        return \"put on shirt\"\n\n    def step5(self):\n        return \"put on shoes\"\n\n    def step6(self):\n        return \"get dressed to leave\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetDressedToLeave:\n\n    title = \"get dressed to leave\"\n    steps = 7\n\n","reference_graph":{"title":"get dressed to leave","num_steps":7,"schema":["step0: make the decision to get a new pet","step1: open clothing closet","step2: get out clothing","step3: put on pants","step4: put on shirt","step5: put on shoes","step6: get dressed to leave"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"Do not drop plant","events":{"0":"hold the container close to chest","1":"put both hands on the plant container","2":"use a firm grip on the container","3":"balance the container in hand","4":"keep the container upright","5":"buy the plant","6":"Do not drop plant"},"context":"buy the plant","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.05,"2":0.0333333333,"3":2.0,"4":2.0},"flatten_input_for_edge_prediction":"step0: hold the container close to chest; step1: put both hands on the plant container; step2: use a firm grip on the container; step3: balance the container in hand; step4: keep the container upright; step5: buy the plant; step6: Do not drop plant","flatten_input_for_script_generation":"You want to Do not drop plant. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: buy the plant; step1: put both hands on the plant container; step2: use a firm grip on the container; step3: hold the container close to chest; step4: keep the container upright; step5: balance the container in hand; step6: Do not drop plant; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class DoNotDropPlant:\n\n    title = \"Do not drop plant\"\n    steps = 7\n\n    def step0(self):\n        return \"buy the plant\"\n\n    def step1(self):\n        return \"put both hands on the plant container\"\n\n    def step2(self):\n        return \"use a firm grip on the container\"\n\n    def step3(self):\n        return \"hold the container close to chest\"\n\n    def step4(self):\n        return \"keep the container upright\"\n\n    def step5(self):\n        return \"balance the container in hand\"\n\n    def step6(self):\n        return \"Do not drop plant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DoNotDropPlant:\n\n    title = \"Do not drop plant\"\n    steps = 7\n\n","reference_graph":{"title":"Do not drop plant","num_steps":7,"schema":["step0: buy the plant","step1: put both hands on the plant container","step2: use a firm grip on the container","step3: hold the container close to chest","step4: keep the container upright","step5: balance the container in hand","step6: Do not drop plant"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"locate the ticket booth","events":{"0":"turn body towards nearest map","1":"look for map","2":"find the nearest map","3":"look for ticket booth on map","4":"walk to nearest map","5":"Lock the car doors.","6":"locate the ticket booth"},"context":"Lock the car doors.","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: turn body towards nearest map; step1: look for map; step2: find the nearest map; step3: look for ticket booth on map; step4: walk to nearest map; step5: Lock the car doors.; step6: locate the ticket booth","flatten_input_for_script_generation":"You want to locate the ticket booth. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step4 -> step3; step0 -> step4; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Lock the car doors.; step1: look for map; step2: find the nearest map; step3: turn body towards nearest map; step4: walk to nearest map; step5: look for ticket booth on map; step6: locate the ticket booth; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->6","4->3","5->1"],"reference_code":"class LocateTheTicketBooth:\n\n    title = \"locate the ticket booth\"\n    steps = 7\n\n    def step0(self):\n        return \"Lock the car doors.\"\n\n    def step1(self):\n        return \"look for map\"\n\n    def step2(self):\n        return \"find the nearest map\"\n\n    def step3(self):\n        return \"turn body towards nearest map\"\n\n    def step4(self):\n        return \"walk to nearest map\"\n\n    def step5(self):\n        return \"look for ticket booth on map\"\n\n    def step6(self):\n        return \"locate the ticket booth\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LocateTheTicketBooth:\n\n    title = \"locate the ticket booth\"\n    steps = 7\n\n","reference_graph":{"title":"locate the ticket booth","num_steps":7,"schema":["step0: Lock the car doors.","step1: look for map","step2: find the nearest map","step3: turn body towards nearest map","step4: walk to nearest map","step5: look for ticket booth on map","step6: locate the ticket booth"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Take xbox out of the car","events":{"0":"grab door handle","1":"take box out while exiting the car","2":"lean inside of car","3":"open car door","4":"pick up xbox box","5":"get to the garage.","6":"Take xbox out of the car"},"context":"get to the garage.","minutes":2.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab door handle; step1: take box out while exiting the car; step2: lean inside of car; step3: open car door; step4: pick up xbox box; step5: get to the garage.; step6: Take xbox out of the car","flatten_input_for_script_generation":"You want to Take xbox out of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get to the garage.; step1: grab door handle; step2: open car door; step3: lean inside of car; step4: pick up xbox box; step5: take box out while exiting the car; step6: Take xbox out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class TakeXboxOutOfTheCar:\n\n    title = \"Take xbox out of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"get to the garage.\"\n\n    def step1(self):\n        return \"grab door handle\"\n\n    def step2(self):\n        return \"open car door\"\n\n    def step3(self):\n        return \"lean inside of car\"\n\n    def step4(self):\n        return \"pick up xbox box\"\n\n    def step5(self):\n        return \"take box out while exiting the car\"\n\n    def step6(self):\n        return \"Take xbox out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeXboxOutOfTheCar:\n\n    title = \"Take xbox out of the car\"\n    steps = 7\n\n","reference_graph":{"title":"Take xbox out of the car","num_steps":7,"schema":["step0: get to the garage.","step1: grab door handle","step2: open car door","step3: lean inside of car","step4: pick up xbox box","step5: take box out while exiting the car","step6: Take xbox out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to the car.","events":{"0":"locate the car","1":"locate car keys","2":"grab car keys","3":"Grab shopping bags","4":"look around for the car","5":"leave the store with the equipment.","6":"walk to the car."},"context":"leave the store with the equipment.","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0333333333,"3":0.0833333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: locate the car; step1: locate car keys; step2: grab car keys; step3: Grab shopping bags; step4: look around for the car; step5: leave the store with the equipment.; step6: walk to the car.","flatten_input_for_script_generation":"You want to walk to the car.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step4 -> step0; step0 -> step6; step3 -> step6; step2 -> step6; step5 -> step1; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: leave the store with the equipment.; step1: Grab shopping bags; step2: locate car keys; step3: grab car keys; step4: walk to the car.; step5: look around for the car; step6: locate the car; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step4; step1 -> step4","gold_edges_for_prediction":["0->6","1->2","2->6","3->6","4->0","5->1","5->4","5->3"],"reference_code":"class WalkToTheCar:\n\n    title = \"walk to the car.\"\n    steps = 7\n\n    def step0(self):\n        return \"leave the store with the equipment.\"\n\n    def step1(self):\n        return \"Grab shopping bags\"\n\n    def step2(self):\n        return \"locate car keys\"\n\n    def step3(self):\n        return \"grab car keys\"\n\n    def step4(self):\n        return \"walk to the car.\"\n\n    def step5(self):\n        return \"look around for the car\"\n\n    def step6(self):\n        return \"locate the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n            \"step1 -> step4\",\n        ]\n","input_prompt_code":"class WalkToTheCar:\n\n    title = \"walk to the car.\"\n    steps = 7\n\n","reference_graph":{"title":"walk to the car.","num_steps":7,"schema":["step0: leave the store with the equipment.","step1: Grab shopping bags","step2: locate car keys","step3: grab car keys","step4: walk to the car.","step5: look around for the car","step6: locate the car"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step4","step1 -> step4"]}}
{"scenario":"submit application and payment","events":{"0":"put application and payment check in an envelope","1":"Put address and postage on envelope","2":"find out payment cost","3":"place envelope in outgoing mail","4":"Get completed application","5":"double check application form is filled out correctly","6":"write a check for payment","7":"find contact information","8":"submit application and payment"},"context":"find contact information","minutes":1.0,"events_minutes":{"0":0.5,"1":2.0,"2":3.0,"3":3.0,"4":0.5,"5":2.0,"6":3.0},"flatten_input_for_edge_prediction":"step0: put application and payment check in an envelope; step1: Put address and postage on envelope; step2: find out payment cost; step3: place envelope in outgoing mail; step4: Get completed application; step5: double check application form is filled out correctly; step6: write a check for payment; step7: find contact information; step8: submit application and payment","flatten_input_for_script_generation":"You want to submit application and payment. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step5 -> step0; step2 -> step6; step6 -> step0; step0 -> step1; step1 -> step3; step3 -> step8; step7 -> step4; step7 -> step2","flatten_output_for_script_generation":"step0: find contact information; step1: find out payment cost; step2: Get completed application; step3: double check application form is filled out correctly; step4: put application and payment check in an envelope; step5: Put address and postage on envelope; step6: write a check for payment; step7: place envelope in outgoing mail; step8: submit application and payment; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->3","2->6","3->8","4->5","5->0","6->0","7->4","7->2"],"reference_code":"class SubmitApplicationAndPayment:\n\n    title = \"submit application and payment\"\n    steps = 9\n\n    def step0(self):\n        return \"find contact information\"\n\n    def step1(self):\n        return \"find out payment cost\"\n\n    def step2(self):\n        return \"Get completed application\"\n\n    def step3(self):\n        return \"double check application form is filled out correctly\"\n\n    def step4(self):\n        return \"put application and payment check in an envelope\"\n\n    def step5(self):\n        return \"Put address and postage on envelope\"\n\n    def step6(self):\n        return \"write a check for payment\"\n\n    def step7(self):\n        return \"place envelope in outgoing mail\"\n\n    def step8(self):\n        return \"submit application and payment\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class SubmitApplicationAndPayment:\n\n    title = \"submit application and payment\"\n    steps = 9\n\n","reference_graph":{"title":"submit application and payment","num_steps":9,"schema":["step0: find contact information","step1: find out payment cost","step2: Get completed application","step3: double check application form is filled out correctly","step4: put application and payment check in an envelope","step5: Put address and postage on envelope","step6: write a check for payment","step7: place envelope in outgoing mail","step8: submit application and payment"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4","step5 -> step7","step7 -> step8"]}}
{"scenario":"take the elevator down","events":{"0":"Walk toward elevator.","1":"Locate elevator control panel.","2":"Locate the elevator.","3":"Step into elevator.","4":"Press the down button on the elevator control panel.","5":"grab personal belongings","6":"take the elevator down"},"context":"grab personal belongings","minutes":3.0,"events_minutes":{"0":1.0,"1":0.75,"2":1.0,"3":1.0,"4":0.25},"flatten_input_for_edge_prediction":"step0: Walk toward elevator.; step1: Locate elevator control panel.; step2: Locate the elevator.; step3: Step into elevator.; step4: Press the down button on the elevator control panel.; step5: grab personal belongings; step6: take the elevator down","flatten_input_for_script_generation":"You want to take the elevator down. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: grab personal belongings; step1: Locate the elevator.; step2: Walk toward elevator.; step3: Step into elevator.; step4: Locate elevator control panel.; step5: Press the down button on the elevator control panel.; step6: take the elevator down; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class TakeTheElevatorDown:\n\n    title = \"take the elevator down\"\n    steps = 7\n\n    def step0(self):\n        return \"grab personal belongings\"\n\n    def step1(self):\n        return \"Locate the elevator.\"\n\n    def step2(self):\n        return \"Walk toward elevator.\"\n\n    def step3(self):\n        return \"Step into elevator.\"\n\n    def step4(self):\n        return \"Locate elevator control panel.\"\n\n    def step5(self):\n        return \"Press the down button on the elevator control panel.\"\n\n    def step6(self):\n        return \"take the elevator down\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeTheElevatorDown:\n\n    title = \"take the elevator down\"\n    steps = 7\n\n","reference_graph":{"title":"take the elevator down","num_steps":7,"schema":["step0: grab personal belongings","step1: Locate the elevator.","step2: Walk toward elevator.","step3: Step into elevator.","step4: Locate elevator control panel.","step5: Press the down button on the elevator control panel.","step6: take the elevator down"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Sleep in bed.","events":{"0":"Get in comfortable position","1":"Fall asleep in bed","2":"Lay in bed asleep","3":"Close the eyelids","4":"Put covers over body","5":"Clear mind of thoughts","6":"Get in bed.","7":"Sleep in bed."},"context":"Get in bed.","minutes":480.0,"events_minutes":{"0":0.25,"1":5.0,"2":480.0,"3":0.0333333333,"4":0.0833333333,"5":0.5},"flatten_input_for_edge_prediction":"step0: Get in comfortable position; step1: Fall asleep in bed; step2: Lay in bed asleep; step3: Close the eyelids; step4: Put covers over body; step5: Clear mind of thoughts; step6: Get in bed.; step7: Sleep in bed.","flatten_input_for_script_generation":"You want to Sleep in bed.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step0 -> step5; step4 -> step0; step4 -> step3; step5 -> step1; step1 -> step2; step2 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: Get in bed.; step1: Put covers over body; step2: Close the eyelids; step3: Clear mind of thoughts; step4: Fall asleep in bed; step5: Get in comfortable position; step6: Lay in bed asleep; step7: Sleep in bed.; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step5; step1 -> step2; step4 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->2","2->7","3->5","4->0","4->3","5->1","6->4"],"reference_code":"class SleepInBed:\n\n    title = \"Sleep in bed.\"\n    steps = 8\n\n    def step0(self):\n        return \"Get in bed.\"\n\n    def step1(self):\n        return \"Put covers over body\"\n\n    def step2(self):\n        return \"Close the eyelids\"\n\n    def step3(self):\n        return \"Clear mind of thoughts\"\n\n    def step4(self):\n        return \"Fall asleep in bed\"\n\n    def step5(self):\n        return \"Get in comfortable position\"\n\n    def step6(self):\n        return \"Lay in bed asleep\"\n\n    def step7(self):\n        return \"Sleep in bed.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step5\",\n            \"step1 -> step2\",\n            \"step4 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class SleepInBed:\n\n    title = \"Sleep in bed.\"\n    steps = 8\n\n","reference_graph":{"title":"Sleep in bed.","num_steps":8,"schema":["step0: Get in bed.","step1: Put covers over body","step2: Close the eyelids","step3: Clear mind of thoughts","step4: Fall asleep in bed","step5: Get in comfortable position","step6: Lay in bed asleep","step7: Sleep in bed."],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step5","step1 -> step2","step4 -> step6","step6 -> step7"]}}
{"scenario":"organize the materials needed.","events":{"0":"make a formal plan for building the area","1":"consider the needs of the animal","2":"pick the most suitable area","3":"visualize how the area will look","4":"decide on habitat features","5":"search for a big area.","6":"organize the materials needed."},"context":"search for a big area.","minutes":5.0,"events_minutes":{"0":240.0,"1":60.0,"2":30.0,"3":60.0,"4":15.0},"flatten_input_for_edge_prediction":"step0: make a formal plan for building the area; step1: consider the needs of the animal; step2: pick the most suitable area; step3: visualize how the area will look; step4: decide on habitat features; step5: search for a big area.; step6: organize the materials needed.","flatten_input_for_script_generation":"You want to organize the materials needed.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step2 -> step1; step2 -> step4; step3 -> step0; step1 -> step0; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: search for a big area.; step1: pick the most suitable area; step2: visualize how the area will look; step3: consider the needs of the animal; step4: decide on habitat features; step5: make a formal plan for building the area; step6: organize the materials needed.; step0 -> step1; step1 -> step2; step1 -> step3; step1 -> step4; step2 -> step5; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","2->1","2->4","3->0","4->0","5->2"],"reference_code":"class OrganizeTheMaterialsNeeded:\n\n    title = \"organize the materials needed.\"\n    steps = 7\n\n    def step0(self):\n        return \"search for a big area.\"\n\n    def step1(self):\n        return \"pick the most suitable area\"\n\n    def step2(self):\n        return \"visualize how the area will look\"\n\n    def step3(self):\n        return \"consider the needs of the animal\"\n\n    def step4(self):\n        return \"decide on habitat features\"\n\n    def step5(self):\n        return \"make a formal plan for building the area\"\n\n    def step6(self):\n        return \"organize the materials needed.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step1 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OrganizeTheMaterialsNeeded:\n\n    title = \"organize the materials needed.\"\n    steps = 7\n\n","reference_graph":{"title":"organize the materials needed.","num_steps":7,"schema":["step0: search for a big area.","step1: pick the most suitable area","step2: visualize how the area will look","step3: consider the needs of the animal","step4: decide on habitat features","step5: make a formal plan for building the area","step6: organize the materials needed."],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step1 -> step4","step2 -> step5","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"go and get dressed","events":{"0":"pick out the clothes","1":"put the clothes on","2":"open the closet","3":"walk up to closet","4":"remove clothes from closet","5":"take a shower","6":"go and get dressed"},"context":"take a shower","minutes":5.0,"events_minutes":{"0":3.0,"1":2.0,"2":0.05,"3":0.05,"4":0.3666666667},"flatten_input_for_edge_prediction":"step0: pick out the clothes; step1: put the clothes on; step2: open the closet; step3: walk up to closet; step4: remove clothes from closet; step5: take a shower; step6: go and get dressed","flatten_input_for_script_generation":"You want to go and get dressed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: take a shower; step1: walk up to closet; step2: open the closet; step3: pick out the clothes; step4: remove clothes from closet; step5: put the clothes on; step6: go and get dressed; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class GoAndGetDressed:\n\n    title = \"go and get dressed\"\n    steps = 7\n\n    def step0(self):\n        return \"take a shower\"\n\n    def step1(self):\n        return \"walk up to closet\"\n\n    def step2(self):\n        return \"open the closet\"\n\n    def step3(self):\n        return \"pick out the clothes\"\n\n    def step4(self):\n        return \"remove clothes from closet\"\n\n    def step5(self):\n        return \"put the clothes on\"\n\n    def step6(self):\n        return \"go and get dressed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GoAndGetDressed:\n\n    title = \"go and get dressed\"\n    steps = 7\n\n","reference_graph":{"title":"go and get dressed","num_steps":7,"schema":["step0: take a shower","step1: walk up to closet","step2: open the closet","step3: pick out the clothes","step4: remove clothes from closet","step5: put the clothes on","step6: go and get dressed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"have bowl for stems and pits","events":{"0":"look for a bowl","1":"find the cabinet","2":"open the cabinet","3":"take bowl out of cabinet","4":"walk to cabinet","5":"get out ingredients","6":"have bowl for stems and pits"},"context":"get out ingredients","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for a bowl; step1: find the cabinet; step2: open the cabinet; step3: take bowl out of cabinet; step4: walk to cabinet; step5: get out ingredients; step6: have bowl for stems and pits","flatten_input_for_script_generation":"You want to have bowl for stems and pits. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get out ingredients; step1: find the cabinet; step2: walk to cabinet; step3: open the cabinet; step4: look for a bowl; step5: take bowl out of cabinet; step6: have bowl for stems and pits; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class HaveBowlForStemsAndPits:\n\n    title = \"have bowl for stems and pits\"\n    steps = 7\n\n    def step0(self):\n        return \"get out ingredients\"\n\n    def step1(self):\n        return \"find the cabinet\"\n\n    def step2(self):\n        return \"walk to cabinet\"\n\n    def step3(self):\n        return \"open the cabinet\"\n\n    def step4(self):\n        return \"look for a bowl\"\n\n    def step5(self):\n        return \"take bowl out of cabinet\"\n\n    def step6(self):\n        return \"have bowl for stems and pits\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class HaveBowlForStemsAndPits:\n\n    title = \"have bowl for stems and pits\"\n    steps = 7\n\n","reference_graph":{"title":"have bowl for stems and pits","num_steps":7,"schema":["step0: get out ingredients","step1: find the cabinet","step2: walk to cabinet","step3: open the cabinet","step4: look for a bowl","step5: take bowl out of cabinet","step6: have bowl for stems and pits"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get parking booth ticket","events":{"0":"print out the directions on paper","1":"get directions online to go there","2":"look around for parking booth upon arrival","3":"study the directions for the parking area","4":"drive to the said booth","5":"find parking garage","6":"get parking booth ticket"},"context":"find parking garage","minutes":1.0,"events_minutes":{"0":5.0,"1":25.0,"2":5.0,"3":5.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: print out the directions on paper; step1: get directions online to go there; step2: look around for parking booth upon arrival; step3: study the directions for the parking area; step4: drive to the said booth; step5: find parking garage; step6: get parking booth ticket","flatten_input_for_script_generation":"You want to get parking booth ticket. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: find parking garage; step1: get directions online to go there; step2: print out the directions on paper; step3: study the directions for the parking area; step4: look around for parking booth upon arrival; step5: drive to the said booth; step6: get parking booth ticket; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->2","4->6","5->1"],"reference_code":"class GetParkingBoothTicket:\n\n    title = \"get parking booth ticket\"\n    steps = 7\n\n    def step0(self):\n        return \"find parking garage\"\n\n    def step1(self):\n        return \"get directions online to go there\"\n\n    def step2(self):\n        return \"print out the directions on paper\"\n\n    def step3(self):\n        return \"study the directions for the parking area\"\n\n    def step4(self):\n        return \"look around for parking booth upon arrival\"\n\n    def step5(self):\n        return \"drive to the said booth\"\n\n    def step6(self):\n        return \"get parking booth ticket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetParkingBoothTicket:\n\n    title = \"get parking booth ticket\"\n    steps = 7\n\n","reference_graph":{"title":"get parking booth ticket","num_steps":7,"schema":["step0: find parking garage","step1: get directions online to go there","step2: print out the directions on paper","step3: study the directions for the parking area","step4: look around for parking booth upon arrival","step5: drive to the said booth","step6: get parking booth ticket"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of bed","events":{"0":"try to stay awake","1":"take blankets off","2":"grab the phone","3":"wake up to alarm","4":"stop the alarm","5":"NONE","6":"get out of bed"},"context":"NONE","minutes":5.0,"events_minutes":{"0":3.0,"1":0.3333333333,"2":0.05,"3":0.1666666667,"4":0.05},"flatten_input_for_edge_prediction":"step0: try to stay awake; step1: take blankets off; step2: grab the phone; step3: wake up to alarm; step4: stop the alarm; step5: decided to get out of bed; step6: get out of bed","flatten_input_for_script_generation":"You want to get out of bed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step0; step4 -> step1; step0 -> step6; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: decided to get out of bed; step1: wake up to alarm; step2: grab the phone; step3: stop the alarm; step4: try to stay awake; step5: take blankets off; step6: get out of bed; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->6","2->4","3->2","4->0","4->1","5->3"],"reference_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to get out of bed\"\n\n    def step1(self):\n        return \"wake up to alarm\"\n\n    def step2(self):\n        return \"grab the phone\"\n\n    def step3(self):\n        return \"stop the alarm\"\n\n    def step4(self):\n        return \"try to stay awake\"\n\n    def step5(self):\n        return \"take blankets off\"\n\n    def step6(self):\n        return \"get out of bed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n","reference_graph":{"title":"get out of bed","num_steps":7,"schema":["step0: decided to get out of bed","step1: wake up to alarm","step2: grab the phone","step3: stop the alarm","step4: try to stay awake","step5: take blankets off","step6: get out of bed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"buy the makeup.","events":{"0":"complete payment steps","1":"hand items to cashier","2":"wait for scanning","3":"swipe card in machine","4":"wait in line","5":"walk to cashier with makeup selections.","6":"buy the makeup."},"context":"walk to cashier with makeup selections.","minutes":2.0,"events_minutes":{"0":0.3333333333,"1":0.0833333333,"2":0.1666666667,"3":0.0333333333,"4":2.0},"flatten_input_for_edge_prediction":"step0: complete payment steps; step1: hand items to cashier; step2: wait for scanning; step3: swipe card in machine; step4: wait in line; step5: walk to cashier with makeup selections.; step6: buy the makeup.","flatten_input_for_script_generation":"You want to buy the makeup.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: walk to cashier with makeup selections.; step1: wait in line; step2: hand items to cashier; step3: wait for scanning; step4: swipe card in machine; step5: complete payment steps; step6: buy the makeup.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->3","3->0","4->1","5->4"],"reference_code":"class BuyTheMakeup:\n\n    title = \"buy the makeup.\"\n    steps = 7\n\n    def step0(self):\n        return \"walk to cashier with makeup selections.\"\n\n    def step1(self):\n        return \"wait in line\"\n\n    def step2(self):\n        return \"hand items to cashier\"\n\n    def step3(self):\n        return \"wait for scanning\"\n\n    def step4(self):\n        return \"swipe card in machine\"\n\n    def step5(self):\n        return \"complete payment steps\"\n\n    def step6(self):\n        return \"buy the makeup.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class BuyTheMakeup:\n\n    title = \"buy the makeup.\"\n    steps = 7\n\n","reference_graph":{"title":"buy the makeup.","num_steps":7,"schema":["step0: walk to cashier with makeup selections.","step1: wait in line","step2: hand items to cashier","step3: wait for scanning","step4: swipe card in machine","step5: complete payment steps","step6: buy the makeup."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"put in payment information","events":{"0":"look for place to enter info","1":"type in info","2":"find place to enter info","3":"click on place","4":"remember payment information","5":"click on link to buy tickets","6":"put in payment information"},"context":"click on link to buy tickets","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: look for place to enter info; step1: type in info; step2: find place to enter info; step3: click on place; step4: remember payment information; step5: click on link to buy tickets; step6: put in payment information","flatten_input_for_script_generation":"You want to put in payment information. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: click on link to buy tickets; step1: look for place to enter info; step2: remember payment information; step3: type in info; step4: put in payment information; step5: find place to enter info; step6: click on place; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->2","1->6","2->3","3->1","4->1","5->4","5->0"],"reference_code":"class PutInPaymentInformation:\n\n    title = \"put in payment information\"\n    steps = 7\n\n    def step0(self):\n        return \"click on link to buy tickets\"\n\n    def step1(self):\n        return \"look for place to enter info\"\n\n    def step2(self):\n        return \"remember payment information\"\n\n    def step3(self):\n        return \"type in info\"\n\n    def step4(self):\n        return \"put in payment information\"\n\n    def step5(self):\n        return \"find place to enter info\"\n\n    def step6(self):\n        return \"click on place\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class PutInPaymentInformation:\n\n    title = \"put in payment information\"\n    steps = 7\n\n","reference_graph":{"title":"put in payment information","num_steps":7,"schema":["step0: click on link to buy tickets","step1: look for place to enter info","step2: remember payment information","step3: type in info","step4: put in payment information","step5: find place to enter info","step6: click on place"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"sit in chair","events":{"0":"Lean into back of chair","1":"Bend the knees","2":"Place bottom on chair","3":"Stand in front of chair","4":"Lower bottom to chair height","5":"pull out chair","6":"sit in chair"},"context":"pull out chair","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.05,"2":0.0333333333,"3":0.0833333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: Lean into back of chair; step1: Bend the knees; step2: Place bottom on chair; step3: Stand in front of chair; step4: Lower bottom to chair height; step5: pull out chair; step6: sit in chair","flatten_input_for_script_generation":"You want to sit in chair. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: pull out chair; step1: Stand in front of chair; step2: Bend the knees; step3: Lower bottom to chair height; step4: Place bottom on chair; step5: Lean into back of chair; step6: sit in chair; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->0","3->1","4->2","5->3"],"reference_code":"class SitInChair:\n\n    title = \"sit in chair\"\n    steps = 7\n\n    def step0(self):\n        return \"pull out chair\"\n\n    def step1(self):\n        return \"Stand in front of chair\"\n\n    def step2(self):\n        return \"Bend the knees\"\n\n    def step3(self):\n        return \"Lower bottom to chair height\"\n\n    def step4(self):\n        return \"Place bottom on chair\"\n\n    def step5(self):\n        return \"Lean into back of chair\"\n\n    def step6(self):\n        return \"sit in chair\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SitInChair:\n\n    title = \"sit in chair\"\n    steps = 7\n\n","reference_graph":{"title":"sit in chair","num_steps":7,"schema":["step0: pull out chair","step1: Stand in front of chair","step2: Bend the knees","step3: Lower bottom to chair height","step4: Place bottom on chair","step5: Lean into back of chair","step6: sit in chair"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get off of the couch","events":{"0":"push body with arms","1":"take butt of couch","2":"stand up straight","3":"push body with legs","4":"grab the couch's arm rest","5":"put the legs on the floor","6":"get off of the couch"},"context":"put the legs on the floor","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.05,"2":0.0833333333,"3":0.0833333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: push body with arms; step1: take butt of couch; step2: stand up straight; step3: push body with legs; step4: grab the couch's arm rest; step5: put the legs on the floor; step6: get off of the couch","flatten_input_for_script_generation":"You want to get off of the couch. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step4 -> step0; step0 -> step1; step2 -> step6; step5 -> step4; step5 -> step3","flatten_output_for_script_generation":"step0: put the legs on the floor; step1: push body with legs; step2: take butt of couch; step3: stand up straight; step4: get off of the couch; step5: grab the couch's arm rest; step6: push body with arms; step0 -> step1; step0 -> step5; step1 -> step2; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->1","1->2","2->6","3->1","4->0","5->4","5->3"],"reference_code":"class GetOffOfTheCouch:\n\n    title = \"get off of the couch\"\n    steps = 7\n\n    def step0(self):\n        return \"put the legs on the floor\"\n\n    def step1(self):\n        return \"push body with legs\"\n\n    def step2(self):\n        return \"take butt of couch\"\n\n    def step3(self):\n        return \"stand up straight\"\n\n    def step4(self):\n        return \"get off of the couch\"\n\n    def step5(self):\n        return \"grab the couch's arm rest\"\n\n    def step6(self):\n        return \"push body with arms\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step5\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class GetOffOfTheCouch:\n\n    title = \"get off of the couch\"\n    steps = 7\n\n","reference_graph":{"title":"get off of the couch","num_steps":7,"schema":["step0: put the legs on the floor","step1: push body with legs","step2: take butt of couch","step3: stand up straight","step4: get off of the couch","step5: grab the couch's arm rest","step6: push body with arms"],"relations":["step0 -> step1","step0 -> step5","step1 -> step2","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step2"]}}
{"scenario":"review information received","events":{"0":"Prioritize which categories matter most","1":"Write down important information","2":"Separate information into categories","3":"Take out writing instrument","4":"Compare categories against each other","5":"call up several options to ask about pricing","6":"review information received"},"context":"call up several options to ask about pricing","minutes":15.0,"events_minutes":{"0":5.0,"1":5.0,"2":3.0,"3":0.0833333333,"4":5.0},"flatten_input_for_edge_prediction":"step0: Prioritize which categories matter most; step1: Write down important information; step2: Separate information into categories; step3: Take out writing instrument; step4: Compare categories against each other; step5: call up several options to ask about pricing; step6: review information received","flatten_input_for_script_generation":"You want to review information received. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step4; step4 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: call up several options to ask about pricing; step1: Take out writing instrument; step2: Write down important information; step3: Separate information into categories; step4: Compare categories against each other; step5: Prioritize which categories matter most; step6: review information received; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->4","3->1","4->0","5->3"],"reference_code":"class ReviewInformationReceived:\n\n    title = \"review information received\"\n    steps = 7\n\n    def step0(self):\n        return \"call up several options to ask about pricing\"\n\n    def step1(self):\n        return \"Take out writing instrument\"\n\n    def step2(self):\n        return \"Write down important information\"\n\n    def step3(self):\n        return \"Separate information into categories\"\n\n    def step4(self):\n        return \"Compare categories against each other\"\n\n    def step5(self):\n        return \"Prioritize which categories matter most\"\n\n    def step6(self):\n        return \"review information received\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ReviewInformationReceived:\n\n    title = \"review information received\"\n    steps = 7\n\n","reference_graph":{"title":"review information received","num_steps":7,"schema":["step0: call up several options to ask about pricing","step1: Take out writing instrument","step2: Write down important information","step3: Separate information into categories","step4: Compare categories against each other","step5: Prioritize which categories matter most","step6: review information received"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Fill out payment information on the form.","events":{"0":"Fill out form step by step","1":"Follow instructions for completion","2":"Submit the form","3":"Get out any needed payment cards","4":"Check for any mistakes made upon completion","5":"Proceed to check out on the website.","6":"Fill out payment information on the form."},"context":"Proceed to check out on the website.","minutes":0.4166666667,"events_minutes":{"0":2.0,"1":0.5,"2":0.5,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Fill out form step by step; step1: Follow instructions for completion; step2: Submit the form; step3: Get out any needed payment cards; step4: Check for any mistakes made upon completion; step5: Proceed to check out on the website.; step6: Fill out payment information on the form.","flatten_input_for_script_generation":"You want to Fill out payment information on the form.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Proceed to check out on the website.; step1: Get out any needed payment cards; step2: Follow instructions for completion; step3: Fill out form step by step; step4: Check for any mistakes made upon completion; step5: Submit the form; step6: Fill out payment information on the form.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->2","5->3"],"reference_code":"class FillOutPaymentInformationOnTheForm:\n\n    title = \"Fill out payment information on the form.\"\n    steps = 7\n\n    def step0(self):\n        return \"Proceed to check out on the website.\"\n\n    def step1(self):\n        return \"Get out any needed payment cards\"\n\n    def step2(self):\n        return \"Follow instructions for completion\"\n\n    def step3(self):\n        return \"Fill out form step by step\"\n\n    def step4(self):\n        return \"Check for any mistakes made upon completion\"\n\n    def step5(self):\n        return \"Submit the form\"\n\n    def step6(self):\n        return \"Fill out payment information on the form.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutPaymentInformationOnTheForm:\n\n    title = \"Fill out payment information on the form.\"\n    steps = 7\n\n","reference_graph":{"title":"Fill out payment information on the form.","num_steps":7,"schema":["step0: Proceed to check out on the website.","step1: Get out any needed payment cards","step2: Follow instructions for completion","step3: Fill out form step by step","step4: Check for any mistakes made upon completion","step5: Submit the form","step6: Fill out payment information on the form."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"add cruise to cart","events":{"0":"Verify price of cruise","1":"Review cruise itinerary","2":"Verify date of cruise","3":"Verify cabin selected","4":"Make any adjustments","5":"add any options","6":"add cruise to cart"},"context":"add any options","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":2.0,"2":0.0833333333,"3":0.0833333333,"4":2.0},"flatten_input_for_edge_prediction":"step0: Verify price of cruise; step1: Review cruise itinerary; step2: Verify date of cruise; step3: Verify cabin selected; step4: Make any adjustments; step5: add any options; step6: add cruise to cart","flatten_input_for_script_generation":"You want to add cruise to cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step3 -> step4; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2; step5 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: add any options; step1: Verify price of cruise; step2: Verify date of cruise; step3: Make any adjustments; step4: Review cruise itinerary; step5: Verify cabin selected; step6: add cruise to cart; step0 -> step1; step0 -> step2; step0 -> step5; step2 -> step3; step3 -> step4; step5 -> step3; step1 -> step3; step4 -> step6","gold_edges_for_prediction":["0->4","1->6","2->4","3->4","4->1","5->2","5->3","5->0"],"reference_code":"class AddCruiseToCart:\n\n    title = \"add cruise to cart\"\n    steps = 7\n\n    def step0(self):\n        return \"add any options\"\n\n    def step1(self):\n        return \"Verify price of cruise\"\n\n    def step2(self):\n        return \"Verify date of cruise\"\n\n    def step3(self):\n        return \"Make any adjustments\"\n\n    def step4(self):\n        return \"Review cruise itinerary\"\n\n    def step5(self):\n        return \"Verify cabin selected\"\n\n    def step6(self):\n        return \"add cruise to cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step1 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class AddCruiseToCart:\n\n    title = \"add cruise to cart\"\n    steps = 7\n\n","reference_graph":{"title":"add cruise to cart","num_steps":7,"schema":["step0: add any options","step1: Verify price of cruise","step2: Verify date of cruise","step3: Make any adjustments","step4: Review cruise itinerary","step5: Verify cabin selected","step6: add cruise to cart"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step2 -> step3","step3 -> step4","step5 -> step3","step1 -> step3","step4 -> step6"]}}
{"scenario":"park the car","events":{"0":"slowly drive forward into the parking spot","1":"turn on the turn signal","2":"straighten the wheels","3":"find a parking spot","4":"slowly turn and align the car to the parking spot","5":"Drive to the parking lot.","6":"park the car"},"context":"Drive to the parking lot.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.0833333333,"3":0.3333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: slowly drive forward into the parking spot; step1: turn on the turn signal; step2: straighten the wheels; step3: find a parking spot; step4: slowly turn and align the car to the parking spot; step5: Drive to the parking lot.; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step0; step4 -> step2; step0 -> step4; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Drive to the parking lot.; step1: find a parking spot; step2: turn on the turn signal; step3: slowly drive forward into the parking spot; step4: slowly turn and align the car to the parking spot; step5: straighten the wheels; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->6","3->1","4->2","5->3"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"Drive to the parking lot.\"\n\n    def step1(self):\n        return \"find a parking spot\"\n\n    def step2(self):\n        return \"turn on the turn signal\"\n\n    def step3(self):\n        return \"slowly drive forward into the parking spot\"\n\n    def step4(self):\n        return \"slowly turn and align the car to the parking spot\"\n\n    def step5(self):\n        return \"straighten the wheels\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: Drive to the parking lot.","step1: find a parking spot","step2: turn on the turn signal","step3: slowly drive forward into the parking spot","step4: slowly turn and align the car to the parking spot","step5: straighten the wheels","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get the syllabus and schedule","events":{"0":"get inside home","1":"head towards home","2":"leave the university","3":"find schedule and syllabus","4":"sign in to the university website","5":"look for the classes","6":"go to computer","7":"pay for the classes","8":"get the syllabus and schedule"},"context":"pay for the classes","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":30.0,"2":10.0,"3":2.0,"4":1.0,"5":5.0,"6":0.0833333333},"flatten_input_for_edge_prediction":"step0: get inside home; step1: head towards home; step2: leave the university; step3: find schedule and syllabus; step4: sign in to the university website; step5: look for the classes; step6: go to computer; step7: pay for the classes; step8: get the syllabus and schedule","flatten_input_for_script_generation":"You want to get the syllabus and schedule. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step6; step6 -> step4; step4 -> step5; step5 -> step3; step3 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: pay for the classes; step1: leave the university; step2: head towards home; step3: get inside home; step4: go to computer; step5: sign in to the university website; step6: look for the classes; step7: find schedule and syllabus; step8: get the syllabus and schedule; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->0","2->1","3->8","4->5","5->3","6->4","7->2"],"reference_code":"class GetTheSyllabusAndSchedule:\n\n    title = \"get the syllabus and schedule\"\n    steps = 9\n\n    def step0(self):\n        return \"pay for the classes\"\n\n    def step1(self):\n        return \"leave the university\"\n\n    def step2(self):\n        return \"head towards home\"\n\n    def step3(self):\n        return \"get inside home\"\n\n    def step4(self):\n        return \"go to computer\"\n\n    def step5(self):\n        return \"sign in to the university website\"\n\n    def step6(self):\n        return \"look for the classes\"\n\n    def step7(self):\n        return \"find schedule and syllabus\"\n\n    def step8(self):\n        return \"get the syllabus and schedule\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetTheSyllabusAndSchedule:\n\n    title = \"get the syllabus and schedule\"\n    steps = 9\n\n","reference_graph":{"title":"get the syllabus and schedule","num_steps":9,"schema":["step0: pay for the classes","step1: leave the university","step2: head towards home","step3: get inside home","step4: go to computer","step5: sign in to the university website","step6: look for the classes","step7: find schedule and syllabus","step8: get the syllabus and schedule"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Stick to the new running schedule.","events":{"0":"take out phone","1":"turn on notifications for running","2":"open the calendar app","3":"make entries for the running schedule","4":"switch on phone","5":"Set aside time to run for the week.","6":"Stick to the new running schedule."},"context":"Set aside time to run for the week.","minutes":10080.0,"events_minutes":{"0":0.0333333333,"1":3.0,"2":0.0333333333,"3":3.0,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: take out phone; step1: turn on notifications for running; step2: open the calendar app; step3: make entries for the running schedule; step4: switch on phone; step5: Set aside time to run for the week.; step6: Stick to the new running schedule.","flatten_input_for_script_generation":"You want to Stick to the new running schedule.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Set aside time to run for the week.; step1: take out phone; step2: switch on phone; step3: open the calendar app; step4: make entries for the running schedule; step5: turn on notifications for running; step6: Stick to the new running schedule.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class StickToTheNewRunningSchedule:\n\n    title = \"Stick to the new running schedule.\"\n    steps = 7\n\n    def step0(self):\n        return \"Set aside time to run for the week.\"\n\n    def step1(self):\n        return \"take out phone\"\n\n    def step2(self):\n        return \"switch on phone\"\n\n    def step3(self):\n        return \"open the calendar app\"\n\n    def step4(self):\n        return \"make entries for the running schedule\"\n\n    def step5(self):\n        return \"turn on notifications for running\"\n\n    def step6(self):\n        return \"Stick to the new running schedule.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StickToTheNewRunningSchedule:\n\n    title = \"Stick to the new running schedule.\"\n    steps = 7\n\n","reference_graph":{"title":"Stick to the new running schedule.","num_steps":7,"schema":["step0: Set aside time to run for the week.","step1: take out phone","step2: switch on phone","step3: open the calendar app","step4: make entries for the running schedule","step5: turn on notifications for running","step6: Stick to the new running schedule."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"open snack bags","events":{"0":"put hands on bags","1":"arrive at bags","2":"find snack bags","3":"walk towards bags","4":"look for snack bags","5":"walk to kitchen","6":"open snack bags"},"context":"walk to kitchen","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put hands on bags; step1: arrive at bags; step2: find snack bags; step3: walk towards bags; step4: look for snack bags; step5: walk to kitchen; step6: open snack bags","flatten_input_for_script_generation":"You want to open snack bags. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: walk to kitchen; step1: look for snack bags; step2: find snack bags; step3: walk towards bags; step4: arrive at bags; step5: put hands on bags; step6: open snack bags; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->2","5->4"],"reference_code":"class OpenSnackBags:\n\n    title = \"open snack bags\"\n    steps = 7\n\n    def step0(self):\n        return \"walk to kitchen\"\n\n    def step1(self):\n        return \"look for snack bags\"\n\n    def step2(self):\n        return \"find snack bags\"\n\n    def step3(self):\n        return \"walk towards bags\"\n\n    def step4(self):\n        return \"arrive at bags\"\n\n    def step5(self):\n        return \"put hands on bags\"\n\n    def step6(self):\n        return \"open snack bags\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenSnackBags:\n\n    title = \"open snack bags\"\n    steps = 7\n\n","reference_graph":{"title":"open snack bags","num_steps":7,"schema":["step0: walk to kitchen","step1: look for snack bags","step2: find snack bags","step3: walk towards bags","step4: arrive at bags","step5: put hands on bags","step6: open snack bags"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"tidy up workspace","events":{"0":"clear the desk area","1":"stand up from chair","2":"put papers away","3":"grab onto papers","4":"organize other miscellaneous items","5":"NONE","6":"tidy up workspace"},"context":"NONE","minutes":5.0,"events_minutes":{"0":1.0,"1":0.0666666667,"2":0.3666666667,"3":0.0833333333,"4":2.0},"flatten_input_for_edge_prediction":"step0: clear the desk area; step1: stand up from chair; step2: put papers away; step3: grab onto papers; step4: organize other miscellaneous items; step5: decided to tidy up workspace; step6: tidy up workspace","flatten_input_for_script_generation":"You want to tidy up workspace. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: decided to tidy up workspace; step1: stand up from chair; step2: grab onto papers; step3: put papers away; step4: clear the desk area; step5: organize other miscellaneous items; step6: tidy up workspace; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->6","5->1"],"reference_code":"class TidyUpWorkspace:\n\n    title = \"tidy up workspace\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to tidy up workspace\"\n\n    def step1(self):\n        return \"stand up from chair\"\n\n    def step2(self):\n        return \"grab onto papers\"\n\n    def step3(self):\n        return \"put papers away\"\n\n    def step4(self):\n        return \"clear the desk area\"\n\n    def step5(self):\n        return \"organize other miscellaneous items\"\n\n    def step6(self):\n        return \"tidy up workspace\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TidyUpWorkspace:\n\n    title = \"tidy up workspace\"\n    steps = 7\n\n","reference_graph":{"title":"tidy up workspace","num_steps":7,"schema":["step0: decided to tidy up workspace","step1: stand up from chair","step2: grab onto papers","step3: put papers away","step4: clear the desk area","step5: organize other miscellaneous items","step6: tidy up workspace"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"open the document in the respective program.","events":{"0":"double click the document","1":"put cursor on document","2":"look for document","3":"wait for document to load","4":"find the document","5":"put paper in the printer.","6":"open the document in the respective program."},"context":"put paper in the printer.","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":0.0166666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: double click the document; step1: put cursor on document; step2: look for document; step3: wait for document to load; step4: find the document; step5: put paper in the printer.; step6: open the document in the respective program.","flatten_input_for_script_generation":"You want to open the document in the respective program.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: put paper in the printer.; step1: look for document; step2: find the document; step3: put cursor on document; step4: double click the document; step5: wait for document to load; step6: open the document in the respective program.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->4","3->6","4->1","5->2"],"reference_code":"class OpenTheDocumentInTheRespectiveProgram:\n\n    title = \"open the document in the respective program.\"\n    steps = 7\n\n    def step0(self):\n        return \"put paper in the printer.\"\n\n    def step1(self):\n        return \"look for document\"\n\n    def step2(self):\n        return \"find the document\"\n\n    def step3(self):\n        return \"put cursor on document\"\n\n    def step4(self):\n        return \"double click the document\"\n\n    def step5(self):\n        return \"wait for document to load\"\n\n    def step6(self):\n        return \"open the document in the respective program.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheDocumentInTheRespectiveProgram:\n\n    title = \"open the document in the respective program.\"\n    steps = 7\n\n","reference_graph":{"title":"open the document in the respective program.","num_steps":7,"schema":["step0: put paper in the printer.","step1: look for document","step2: find the document","step3: put cursor on document","step4: double click the document","step5: wait for document to load","step6: open the document in the respective program."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Go in to the store","events":{"0":"Lift left foot","1":"Locate store entrance with sight","2":"Move right foot forward","3":"Pass through store entrance","4":"Lift right foot","5":"Face body towards store entrance","6":"Move left foot forward","7":"drive to the store","8":"Go in to the store"},"context":"drive to the store","minutes":3.0,"events_minutes":{"0":0.0166666667,"1":0.0833333333,"2":0.0166666667,"3":0.05,"4":0.0166666667,"5":0.0333333333,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Lift left foot; step1: Locate store entrance with sight; step2: Move right foot forward; step3: Pass through store entrance; step4: Lift right foot; step5: Face body towards store entrance; step6: Move left foot forward; step7: drive to the store; step8: Go in to the store","flatten_input_for_script_generation":"You want to Go in to the store. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step0; step5 -> step4; step0 -> step6; step6 -> step3; step4 -> step2; step2 -> step3; step3 -> step8; step7 -> step1","flatten_output_for_script_generation":"step0: drive to the store; step1: Locate store entrance with sight; step2: Face body towards store entrance; step3: Lift left foot; step4: Lift right foot; step5: Move left foot forward; step6: Move right foot forward; step7: Pass through store entrance; step8: Go in to the store; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step7 -> step8; step6 -> step7","gold_edges_for_prediction":["0->6","1->5","2->3","3->8","4->2","5->0","5->4","6->3","7->1"],"reference_code":"class GoInToTheStore:\n\n    title = \"Go in to the store\"\n    steps = 9\n\n    def step0(self):\n        return \"drive to the store\"\n\n    def step1(self):\n        return \"Locate store entrance with sight\"\n\n    def step2(self):\n        return \"Face body towards store entrance\"\n\n    def step3(self):\n        return \"Lift left foot\"\n\n    def step4(self):\n        return \"Lift right foot\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Pass through store entrance\"\n\n    def step8(self):\n        return \"Go in to the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GoInToTheStore:\n\n    title = \"Go in to the store\"\n    steps = 9\n\n","reference_graph":{"title":"Go in to the store","num_steps":9,"schema":["step0: drive to the store","step1: Locate store entrance with sight","step2: Face body towards store entrance","step3: Lift left foot","step4: Lift right foot","step5: Move left foot forward","step6: Move right foot forward","step7: Pass through store entrance","step8: Go in to the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step7 -> step8","step6 -> step7"]}}
{"scenario":"fill out the application","events":{"0":"open the application","1":"start typing information","2":"click on open space","3":"look for application","4":"find the application","5":"gather needed documents","6":"fill out the application"},"context":"gather needed documents","minutes":60.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: open the application; step1: start typing information; step2: click on open space; step3: look for application; step4: find the application; step5: gather needed documents; step6: fill out the application","flatten_input_for_script_generation":"You want to fill out the application. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step2; step2 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: gather needed documents; step1: look for application; step2: find the application; step3: open the application; step4: click on open space; step5: start typing information; step6: fill out the application; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->1","3->4","4->0","5->3"],"reference_code":"class FillOutTheApplication:\n\n    title = \"fill out the application\"\n    steps = 7\n\n    def step0(self):\n        return \"gather needed documents\"\n\n    def step1(self):\n        return \"look for application\"\n\n    def step2(self):\n        return \"find the application\"\n\n    def step3(self):\n        return \"open the application\"\n\n    def step4(self):\n        return \"click on open space\"\n\n    def step5(self):\n        return \"start typing information\"\n\n    def step6(self):\n        return \"fill out the application\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FillOutTheApplication:\n\n    title = \"fill out the application\"\n    steps = 7\n\n","reference_graph":{"title":"fill out the application","num_steps":7,"schema":["step0: gather needed documents","step1: look for application","step2: find the application","step3: open the application","step4: click on open space","step5: start typing information","step6: fill out the application"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get bleach to use","events":{"0":"browse to find the bleach","1":"open the cabinet door","2":"put hand on cabinet door","3":"take bleach and pick up","4":"take bleach out of cabinet","5":"bring soap to use","6":"get bleach to use"},"context":"bring soap to use","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.0333333333,"3":0.0833333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: browse to find the bleach; step1: open the cabinet door; step2: put hand on cabinet door; step3: take bleach and pick up; step4: take bleach out of cabinet; step5: bring soap to use; step6: get bleach to use","flatten_input_for_script_generation":"You want to get bleach to use. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step0 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: bring soap to use; step1: put hand on cabinet door; step2: open the cabinet door; step3: browse to find the bleach; step4: take bleach and pick up; step5: take bleach out of cabinet; step6: get bleach to use; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->1","3->4","4->6","5->2"],"reference_code":"class GetBleachToUse:\n\n    title = \"get bleach to use\"\n    steps = 7\n\n    def step0(self):\n        return \"bring soap to use\"\n\n    def step1(self):\n        return \"put hand on cabinet door\"\n\n    def step2(self):\n        return \"open the cabinet door\"\n\n    def step3(self):\n        return \"browse to find the bleach\"\n\n    def step4(self):\n        return \"take bleach and pick up\"\n\n    def step5(self):\n        return \"take bleach out of cabinet\"\n\n    def step6(self):\n        return \"get bleach to use\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetBleachToUse:\n\n    title = \"get bleach to use\"\n    steps = 7\n\n","reference_graph":{"title":"get bleach to use","num_steps":7,"schema":["step0: bring soap to use","step1: put hand on cabinet door","step2: open the cabinet door","step3: browse to find the bleach","step4: take bleach and pick up","step5: take bleach out of cabinet","step6: get bleach to use"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"start packing up baked goods","events":{"0":"place the tray on kitchen counter","1":"open the oven","2":"pull out the tray with the sweets","3":"put on oven mitts","4":"wait for the sweets to finish baking","5":"continue baking more","6":"start packing up baked goods"},"context":"continue baking more","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":0.0833333333,"2":0.1666666667,"3":0.3333333333,"4":15.0},"flatten_input_for_edge_prediction":"step0: place the tray on kitchen counter; step1: open the oven; step2: pull out the tray with the sweets; step3: put on oven mitts; step4: wait for the sweets to finish baking; step5: continue baking more; step6: start packing up baked goods","flatten_input_for_script_generation":"You want to start packing up baked goods. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step4 -> step1; step3 -> step2; step1 -> step2; step2 -> step0; step0 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: continue baking more; step1: wait for the sweets to finish baking; step2: put on oven mitts; step3: open the oven; step4: pull out the tray with the sweets; step5: place the tray on kitchen counter; step6: start packing up baked goods; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->2","2->0","3->2","4->3","4->1","5->4"],"reference_code":"class StartPackingUpBakedGoods:\n\n    title = \"start packing up baked goods\"\n    steps = 7\n\n    def step0(self):\n        return \"continue baking more\"\n\n    def step1(self):\n        return \"wait for the sweets to finish baking\"\n\n    def step2(self):\n        return \"put on oven mitts\"\n\n    def step3(self):\n        return \"open the oven\"\n\n    def step4(self):\n        return \"pull out the tray with the sweets\"\n\n    def step5(self):\n        return \"place the tray on kitchen counter\"\n\n    def step6(self):\n        return \"start packing up baked goods\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartPackingUpBakedGoods:\n\n    title = \"start packing up baked goods\"\n    steps = 7\n\n","reference_graph":{"title":"start packing up baked goods","num_steps":7,"schema":["step0: continue baking more","step1: wait for the sweets to finish baking","step2: put on oven mitts","step3: open the oven","step4: pull out the tray with the sweets","step5: place the tray on kitchen counter","step6: start packing up baked goods"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"sign into the netflix","events":{"0":"click the button that says 'sign in.'","1":"verify that the information entered was correct.","2":"enter the password associated with the account.","3":"find the button to sign in.","4":"enter the email address associated with the account.","5":"load the page open","6":"sign into the netflix"},"context":"load the page open","minutes":1.0,"events_minutes":{"0":0.25,"1":0.5,"2":1.0,"3":0.25,"4":1.0},"flatten_input_for_edge_prediction":"step0: click the button that says 'sign in.'; step1: verify that the information entered was correct.; step2: enter the password associated with the account.; step3: find the button to sign in.; step4: enter the email address associated with the account.; step5: load the page open; step6: sign into the netflix","flatten_input_for_script_generation":"You want to sign into the netflix. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step2 -> step1; step1 -> step0; step3 -> step2; step3 -> step4; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: load the page open; step1: find the button to sign in.; step2: enter the email address associated with the account.; step3: verify that the information entered was correct.; step4: click the button that says 'sign in.'; step5: enter the password associated with the account.; step6: sign into the netflix; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step4 -> step6; step1 -> step5; step1 -> step2","gold_edges_for_prediction":["0->6","1->0","2->1","3->2","3->4","4->1","5->3"],"reference_code":"class SignIntoTheNetflix:\n\n    title = \"sign into the netflix\"\n    steps = 7\n\n    def step0(self):\n        return \"load the page open\"\n\n    def step1(self):\n        return \"find the button to sign in.\"\n\n    def step2(self):\n        return \"enter the email address associated with the account.\"\n\n    def step3(self):\n        return \"verify that the information entered was correct.\"\n\n    def step4(self):\n        return \"click the button that says 'sign in.'\"\n\n    def step5(self):\n        return \"enter the password associated with the account.\"\n\n    def step6(self):\n        return \"sign into the netflix\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n            \"step1 -> step5\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class SignIntoTheNetflix:\n\n    title = \"sign into the netflix\"\n    steps = 7\n\n","reference_graph":{"title":"sign into the netflix","num_steps":7,"schema":["step0: load the page open","step1: find the button to sign in.","step2: enter the email address associated with the account.","step3: verify that the information entered was correct.","step4: click the button that says 'sign in.'","step5: enter the password associated with the account.","step6: sign into the netflix"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step4 -> step6","step1 -> step5","step1 -> step2"]}}
{"scenario":"discuss who to invite","events":{"0":"ask partner who'd be good to invite","1":"introduce the topic of invitations","2":"talk about different people","3":"discuss the event","4":"talk about the event activities","5":"have discussion with partner","6":"discuss who to invite"},"context":"have discussion with partner","minutes":5.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":10.0,"3":10.0,"4":10.0},"flatten_input_for_edge_prediction":"step0: ask partner who'd be good to invite; step1: introduce the topic of invitations; step2: talk about different people; step3: discuss the event; step4: talk about the event activities; step5: have discussion with partner; step6: discuss who to invite","flatten_input_for_script_generation":"You want to discuss who to invite. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step2 -> step6; step0 -> step2; step3 -> step4; step4 -> step0; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: have discussion with partner; step1: introduce the topic of invitations; step2: ask partner who'd be good to invite; step3: talk about different people; step4: discuss who to invite; step5: discuss the event; step6: talk about the event activities; step0 -> step1; step0 -> step5; step1 -> step2; step2 -> step3; step3 -> step4; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","4->0","5->3","5->1"],"reference_code":"class DiscussWhoToInvite:\n\n    title = \"discuss who to invite\"\n    steps = 7\n\n    def step0(self):\n        return \"have discussion with partner\"\n\n    def step1(self):\n        return \"introduce the topic of invitations\"\n\n    def step2(self):\n        return \"ask partner who'd be good to invite\"\n\n    def step3(self):\n        return \"talk about different people\"\n\n    def step4(self):\n        return \"discuss who to invite\"\n\n    def step5(self):\n        return \"discuss the event\"\n\n    def step6(self):\n        return \"talk about the event activities\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step5\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class DiscussWhoToInvite:\n\n    title = \"discuss who to invite\"\n    steps = 7\n\n","reference_graph":{"title":"discuss who to invite","num_steps":7,"schema":["step0: have discussion with partner","step1: introduce the topic of invitations","step2: ask partner who'd be good to invite","step3: talk about different people","step4: discuss who to invite","step5: discuss the event","step6: talk about the event activities"],"relations":["step0 -> step1","step0 -> step5","step1 -> step2","step2 -> step3","step3 -> step4","step5 -> step6","step6 -> step2"]}}
{"scenario":"add any options","events":{"0":"decide which options to add","1":"decide which options are attractive","2":"check the price of the options","3":"search for available options","4":"decide which options are affordable","5":"pick a room","6":"add any options"},"context":"pick a room","minutes":5.0,"events_minutes":{"0":2.0,"1":3.0,"2":1.0,"3":1.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: decide which options to add; step1: decide which options are attractive; step2: check the price of the options; step3: search for available options; step4: decide which options are affordable; step5: pick a room; step6: add any options","flatten_input_for_script_generation":"You want to add any options. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step2 -> step4; step0 -> step6; step1 -> step0; step4 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: pick a room; step1: search for available options; step2: check the price of the options; step3: decide which options are attractive; step4: decide which options are affordable; step5: decide which options to add; step6: add any options; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->1","2->4","3->2","4->0","5->3"],"reference_code":"class AddAnyOptions:\n\n    title = \"add any options\"\n    steps = 7\n\n    def step0(self):\n        return \"pick a room\"\n\n    def step1(self):\n        return \"search for available options\"\n\n    def step2(self):\n        return \"check the price of the options\"\n\n    def step3(self):\n        return \"decide which options are attractive\"\n\n    def step4(self):\n        return \"decide which options are affordable\"\n\n    def step5(self):\n        return \"decide which options to add\"\n\n    def step6(self):\n        return \"add any options\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class AddAnyOptions:\n\n    title = \"add any options\"\n    steps = 7\n\n","reference_graph":{"title":"add any options","num_steps":7,"schema":["step0: pick a room","step1: search for available options","step2: check the price of the options","step3: decide which options are attractive","step4: decide which options are affordable","step5: decide which options to add","step6: add any options"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"get through university","events":{"0":"get accepted to university","1":"receive degree for completion","2":"apply to university","3":"attend first year of university","4":"attend following 3 years of university","5":"pass first year","6":"pass all three years of university","7":"get through high school","8":"get through university"},"context":"get through high school","minutes":2102400.0,"events_minutes":{"0":43200.0,"1":20160.0,"2":20160.0,"3":525600.0,"4":1576800.0,"5":525600.0,"6":1576800.0},"flatten_input_for_edge_prediction":"step0: get accepted to university; step1: receive degree for completion; step2: apply to university; step3: attend first year of university; step4: attend following 3 years of university; step5: pass first year; step6: pass all three years of university; step7: get through high school; step8: get through university","flatten_input_for_script_generation":"You want to get through university. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step0 -> step5; step3 -> step4; step5 -> step4; step4 -> step6; step6 -> step1; step1 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: get through high school; step1: apply to university; step2: get accepted to university; step3: attend first year of university; step4: pass first year; step5: attend following 3 years of university; step6: pass all three years of university; step7: receive degree for completion; step8: get through university; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->3","0->5","1->8","2->0","3->4","4->6","5->4","6->1","7->2"],"reference_code":"class GetThroughUniversity:\n\n    title = \"get through university\"\n    steps = 9\n\n    def step0(self):\n        return \"get through high school\"\n\n    def step1(self):\n        return \"apply to university\"\n\n    def step2(self):\n        return \"get accepted to university\"\n\n    def step3(self):\n        return \"attend first year of university\"\n\n    def step4(self):\n        return \"pass first year\"\n\n    def step5(self):\n        return \"attend following 3 years of university\"\n\n    def step6(self):\n        return \"pass all three years of university\"\n\n    def step7(self):\n        return \"receive degree for completion\"\n\n    def step8(self):\n        return \"get through university\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetThroughUniversity:\n\n    title = \"get through university\"\n    steps = 9\n\n","reference_graph":{"title":"get through university","num_steps":9,"schema":["step0: get through high school","step1: apply to university","step2: get accepted to university","step3: attend first year of university","step4: pass first year","step5: attend following 3 years of university","step6: pass all three years of university","step7: receive degree for completion","step8: get through university"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"Put on uniform.","events":{"0":"Take off shirt that is being worn.","1":"Put on new pants part of uniform","2":"Button up any buttons","3":"Remove jeans being worn","4":"Put on new shirt part of uniform","5":"Purchase new uniform.","6":"Put on uniform."},"context":"Purchase new uniform.","minutes":2.0,"events_minutes":{"0":0.5,"1":0.75,"2":0.5,"3":0.5,"4":0.75},"flatten_input_for_edge_prediction":"step0: Take off shirt that is being worn.; step1: Put on new pants part of uniform; step2: Button up any buttons; step3: Remove jeans being worn; step4: Put on new shirt part of uniform; step5: Purchase new uniform.; step6: Put on uniform.","flatten_input_for_script_generation":"You want to Put on uniform.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Purchase new uniform.; step1: Take off shirt that is being worn.; step2: Remove jeans being worn; step3: Put on new shirt part of uniform; step4: Put on new pants part of uniform; step5: Button up any buttons; step6: Put on uniform.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->6","3->4","4->1","5->0"],"reference_code":"class PutOnUniform:\n\n    title = \"Put on uniform.\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase new uniform.\"\n\n    def step1(self):\n        return \"Take off shirt that is being worn.\"\n\n    def step2(self):\n        return \"Remove jeans being worn\"\n\n    def step3(self):\n        return \"Put on new shirt part of uniform\"\n\n    def step4(self):\n        return \"Put on new pants part of uniform\"\n\n    def step5(self):\n        return \"Button up any buttons\"\n\n    def step6(self):\n        return \"Put on uniform.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PutOnUniform:\n\n    title = \"Put on uniform.\"\n    steps = 7\n\n","reference_graph":{"title":"Put on uniform.","num_steps":7,"schema":["step0: Purchase new uniform.","step1: Take off shirt that is being worn.","step2: Remove jeans being worn","step3: Put on new shirt part of uniform","step4: Put on new pants part of uniform","step5: Button up any buttons","step6: Put on uniform."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"mix the ingredients in the bowl","events":{"0":"start stirring the ingredients","1":"get out measuring cups","2":"repeat with each ingredient","3":"measure out an ingredient","4":"pour the measured ingredient into the bowl","5":"get a spoon","6":"Follow the recipe to add ingredients together.","7":"mix the ingredients in the bowl"},"context":"Follow the recipe to add ingredients together.","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":4.0,"3":0.25,"4":0.05,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: start stirring the ingredients; step1: get out measuring cups; step2: repeat with each ingredient; step3: measure out an ingredient; step4: pour the measured ingredient into the bowl; step5: get a spoon; step6: Follow the recipe to add ingredients together.; step7: mix the ingredients in the bowl","flatten_input_for_script_generation":"You want to mix the ingredients in the bowl. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step4; step4 -> step2; step2 -> step5; step5 -> step0; step0 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: Follow the recipe to add ingredients together.; step1: get out measuring cups; step2: measure out an ingredient; step3: pour the measured ingredient into the bowl; step4: repeat with each ingredient; step5: get a spoon; step6: start stirring the ingredients; step7: mix the ingredients in the bowl; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->3","2->5","3->4","4->2","5->0","6->1"],"reference_code":"class MixTheIngredientsInTheBowl:\n\n    title = \"mix the ingredients in the bowl\"\n    steps = 8\n\n    def step0(self):\n        return \"Follow the recipe to add ingredients together.\"\n\n    def step1(self):\n        return \"get out measuring cups\"\n\n    def step2(self):\n        return \"measure out an ingredient\"\n\n    def step3(self):\n        return \"pour the measured ingredient into the bowl\"\n\n    def step4(self):\n        return \"repeat with each ingredient\"\n\n    def step5(self):\n        return \"get a spoon\"\n\n    def step6(self):\n        return \"start stirring the ingredients\"\n\n    def step7(self):\n        return \"mix the ingredients in the bowl\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class MixTheIngredientsInTheBowl:\n\n    title = \"mix the ingredients in the bowl\"\n    steps = 8\n\n","reference_graph":{"title":"mix the ingredients in the bowl","num_steps":8,"schema":["step0: Follow the recipe to add ingredients together.","step1: get out measuring cups","step2: measure out an ingredient","step3: pour the measured ingredient into the bowl","step4: repeat with each ingredient","step5: get a spoon","step6: start stirring the ingredients","step7: mix the ingredients in the bowl"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"get out of bed","events":{"0":"stand up slowly","1":"put left foot on ground","2":"lift up blankets","3":"move body upwards","4":"put right foot on ground","5":"turn off alarm","6":"get out of bed"},"context":"turn off alarm","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: stand up slowly; step1: put left foot on ground; step2: lift up blankets; step3: move body upwards; step4: put right foot on ground; step5: turn off alarm; step6: get out of bed","flatten_input_for_script_generation":"You want to get out of bed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step1 -> step0; step4 -> step0; step3 -> step1; step3 -> step4; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: turn off alarm; step1: lift up blankets; step2: move body upwards; step3: put left foot on ground; step4: put right foot on ground; step5: stand up slowly; step6: get out of bed; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step5 -> step6; step4 -> step5","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","3->4","4->0","5->2"],"reference_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n    def step0(self):\n        return \"turn off alarm\"\n\n    def step1(self):\n        return \"lift up blankets\"\n\n    def step2(self):\n        return \"move body upwards\"\n\n    def step3(self):\n        return \"put left foot on ground\"\n\n    def step4(self):\n        return \"put right foot on ground\"\n\n    def step5(self):\n        return \"stand up slowly\"\n\n    def step6(self):\n        return \"get out of bed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n            \"step4 -> step5\",\n        ]\n","input_prompt_code":"class GetOutOfBed:\n\n    title = \"get out of bed\"\n    steps = 7\n\n","reference_graph":{"title":"get out of bed","num_steps":7,"schema":["step0: turn off alarm","step1: lift up blankets","step2: move body upwards","step3: put left foot on ground","step4: put right foot on ground","step5: stand up slowly","step6: get out of bed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step5 -> step6","step4 -> step5"]}}
{"scenario":"walk to the park entrance","events":{"0":"put keys in pocket","1":"turn towards the water park","2":"Lock the car door","3":"grab the car handle","4":"lift handle to confirm door is locked","5":"step away from the car","6":"close the car door","7":"walk to the park entrance"},"context":"close the car door","minutes":2.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.1166666667,"3":0.05,"4":0.05,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: put keys in pocket; step1: turn towards the water park; step2: Lock the car door; step3: grab the car handle; step4: lift handle to confirm door is locked; step5: step away from the car; step6: close the car door; step7: walk to the park entrance","flatten_input_for_script_generation":"You want to walk to the park entrance. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step4; step4 -> step0; step0 -> step5; step5 -> step1; step1 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: close the car door; step1: Lock the car door; step2: grab the car handle; step3: lift handle to confirm door is locked; step4: put keys in pocket; step5: step away from the car; step6: turn towards the water park; step7: walk to the park entrance; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->5","1->7","2->3","3->4","4->0","5->1","6->2"],"reference_code":"class WalkToTheParkEntrance:\n\n    title = \"walk to the park entrance\"\n    steps = 8\n\n    def step0(self):\n        return \"close the car door\"\n\n    def step1(self):\n        return \"Lock the car door\"\n\n    def step2(self):\n        return \"grab the car handle\"\n\n    def step3(self):\n        return \"lift handle to confirm door is locked\"\n\n    def step4(self):\n        return \"put keys in pocket\"\n\n    def step5(self):\n        return \"step away from the car\"\n\n    def step6(self):\n        return \"turn towards the water park\"\n\n    def step7(self):\n        return \"walk to the park entrance\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkToTheParkEntrance:\n\n    title = \"walk to the park entrance\"\n    steps = 8\n\n","reference_graph":{"title":"walk to the park entrance","num_steps":8,"schema":["step0: close the car door","step1: Lock the car door","step2: grab the car handle","step3: lift handle to confirm door is locked","step4: put keys in pocket","step5: step away from the car","step6: turn towards the water park","step7: walk to the park entrance"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"notice kitchen doesn't have  required ingredients","events":{"0":"look for butter","1":"look for sugar","2":"look for milk","3":"look for flour","4":"look for cookie tray","5":"open the refrigerator","6":"check kitchen for needed ingredients","7":"notice kitchen doesn't have  required ingredients"},"context":"check kitchen for needed ingredients","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":0.1666666667,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: look for butter; step1: look for sugar; step2: look for milk; step3: look for flour; step4: look for cookie tray; step5: open the refrigerator; step6: check kitchen for needed ingredients; step7: notice kitchen doesn't have  required ingredients","flatten_input_for_script_generation":"You want to notice kitchen doesn't have  required ingredients. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step5 -> step0; step2 -> step7; step3 -> step5; step1 -> step5; step4 -> step5; step0 -> step7; step6 -> step4; step6 -> step3; step6 -> step1","flatten_output_for_script_generation":"step0: check kitchen for needed ingredients; step1: look for sugar; step2: open the refrigerator; step3: look for milk; step4: look for butter; step5: notice kitchen doesn't have  required ingredients; step6: look for flour; step7: look for cookie tray; step0 -> step1; step0 -> step7; step0 -> step6; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step6 -> step2; step1 -> step2; step7 -> step2","gold_edges_for_prediction":["0->7","1->5","2->7","3->5","4->5","5->2","5->0","6->4","6->3","6->1"],"reference_code":"class NoticeKitchenDoesntHaveRequiredIngredients:\n\n    title = \"notice kitchen doesn't have  required ingredients\"\n    steps = 8\n\n    def step0(self):\n        return \"check kitchen for needed ingredients\"\n\n    def step1(self):\n        return \"look for sugar\"\n\n    def step2(self):\n        return \"open the refrigerator\"\n\n    def step3(self):\n        return \"look for milk\"\n\n    def step4(self):\n        return \"look for butter\"\n\n    def step5(self):\n        return \"notice kitchen doesn't have  required ingredients\"\n\n    def step6(self):\n        return \"look for flour\"\n\n    def step7(self):\n        return \"look for cookie tray\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step7\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step6 -> step2\",\n            \"step1 -> step2\",\n            \"step7 -> step2\",\n        ]\n","input_prompt_code":"class NoticeKitchenDoesntHaveRequiredIngredients:\n\n    title = \"notice kitchen doesn't have  required ingredients\"\n    steps = 8\n\n","reference_graph":{"title":"notice kitchen doesn't have  required ingredients","num_steps":8,"schema":["step0: check kitchen for needed ingredients","step1: look for sugar","step2: open the refrigerator","step3: look for milk","step4: look for butter","step5: notice kitchen doesn't have  required ingredients","step6: look for flour","step7: look for cookie tray"],"relations":["step0 -> step1","step0 -> step7","step0 -> step6","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step6 -> step2","step1 -> step2","step7 -> step2"]}}
{"scenario":"grab purse and jacket","events":{"0":"walk to the door","1":"move left foot towards door","2":"open closet door","3":"move right foot towards door","4":"move into closet","5":"apply makeup and style hair","6":"grab purse and jacket"},"context":"apply makeup and style hair","minutes":5.0,"events_minutes":{"0":0.25,"1":0.0166666667,"2":0.0833333333,"3":0.0166666667,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk to the door; step1: move left foot towards door; step2: open closet door; step3: move right foot towards door; step4: move into closet; step5: apply makeup and style hair; step6: grab purse and jacket","flatten_input_for_script_generation":"You want to grab purse and jacket. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step6; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: apply makeup and style hair; step1: move left foot towards door; step2: move right foot towards door; step3: walk to the door; step4: open closet door; step5: move into closet; step6: grab purse and jacket; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->0","4->6","5->3","5->1"],"reference_code":"class GrabPurseAndJacket:\n\n    title = \"grab purse and jacket\"\n    steps = 7\n\n    def step0(self):\n        return \"apply makeup and style hair\"\n\n    def step1(self):\n        return \"move left foot towards door\"\n\n    def step2(self):\n        return \"move right foot towards door\"\n\n    def step3(self):\n        return \"walk to the door\"\n\n    def step4(self):\n        return \"open closet door\"\n\n    def step5(self):\n        return \"move into closet\"\n\n    def step6(self):\n        return \"grab purse and jacket\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabPurseAndJacket:\n\n    title = \"grab purse and jacket\"\n    steps = 7\n\n","reference_graph":{"title":"grab purse and jacket","num_steps":7,"schema":["step0: apply makeup and style hair","step1: move left foot towards door","step2: move right foot towards door","step3: walk to the door","step4: open closet door","step5: move into closet","step6: grab purse and jacket"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Increase the training time gradually next time","events":{"0":"acknowledge what changes can be made.","1":"check with the trainer about the time that was taken.","2":"exit the locker room.","3":"get dressed after freshening up.","4":"locate the trainer who assisted.","5":"Freshen up after the practice run","6":"Increase the training time gradually next time"},"context":"Freshen up after the practice run","minutes":30.0,"events_minutes":{"0":5.0,"1":5.0,"2":2.0,"3":3.0,"4":3.0},"flatten_input_for_edge_prediction":"step0: acknowledge what changes can be made.; step1: check with the trainer about the time that was taken.; step2: exit the locker room.; step3: get dressed after freshening up.; step4: locate the trainer who assisted.; step5: Freshen up after the practice run; step6: Increase the training time gradually next time","flatten_input_for_script_generation":"You want to Increase the training time gradually next time. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Freshen up after the practice run; step1: get dressed after freshening up.; step2: exit the locker room.; step3: locate the trainer who assisted.; step4: check with the trainer about the time that was taken.; step5: acknowledge what changes can be made.; step6: Increase the training time gradually next time; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->0","2->4","3->2","4->1","5->3"],"reference_code":"class IncreaseTheTrainingTimeGraduallyNextTime:\n\n    title = \"Increase the training time gradually next time\"\n    steps = 7\n\n    def step0(self):\n        return \"Freshen up after the practice run\"\n\n    def step1(self):\n        return \"get dressed after freshening up.\"\n\n    def step2(self):\n        return \"exit the locker room.\"\n\n    def step3(self):\n        return \"locate the trainer who assisted.\"\n\n    def step4(self):\n        return \"check with the trainer about the time that was taken.\"\n\n    def step5(self):\n        return \"acknowledge what changes can be made.\"\n\n    def step6(self):\n        return \"Increase the training time gradually next time\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class IncreaseTheTrainingTimeGraduallyNextTime:\n\n    title = \"Increase the training time gradually next time\"\n    steps = 7\n\n","reference_graph":{"title":"Increase the training time gradually next time","num_steps":7,"schema":["step0: Freshen up after the practice run","step1: get dressed after freshening up.","step2: exit the locker room.","step3: locate the trainer who assisted.","step4: check with the trainer about the time that was taken.","step5: acknowledge what changes can be made.","step6: Increase the training time gradually next time"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"practice running techniques","events":{"0":"watch the tutorials","1":"begin running routine","2":"take proper notes","3":"decide on a practice routine","4":"experiment with different techniques","5":"lookup running tutorials","6":"practice running techniques"},"context":"lookup running tutorials","minutes":259200.0,"events_minutes":{"0":45.0,"1":1.0,"2":5.0,"3":2.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: watch the tutorials; step1: begin running routine; step2: take proper notes; step3: decide on a practice routine; step4: experiment with different techniques; step5: lookup running tutorials; step6: practice running techniques","flatten_input_for_script_generation":"You want to practice running techniques. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: lookup running tutorials; step1: watch the tutorials; step2: take proper notes; step3: decide on a practice routine; step4: begin running routine; step5: experiment with different techniques; step6: practice running techniques; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->3","3->1","4->6","5->2","5->0"],"reference_code":"class PracticeRunningTechniques:\n\n    title = \"practice running techniques\"\n    steps = 7\n\n    def step0(self):\n        return \"lookup running tutorials\"\n\n    def step1(self):\n        return \"watch the tutorials\"\n\n    def step2(self):\n        return \"take proper notes\"\n\n    def step3(self):\n        return \"decide on a practice routine\"\n\n    def step4(self):\n        return \"begin running routine\"\n\n    def step5(self):\n        return \"experiment with different techniques\"\n\n    def step6(self):\n        return \"practice running techniques\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PracticeRunningTechniques:\n\n    title = \"practice running techniques\"\n    steps = 7\n\n","reference_graph":{"title":"practice running techniques","num_steps":7,"schema":["step0: lookup running tutorials","step1: watch the tutorials","step2: take proper notes","step3: decide on a practice routine","step4: begin running routine","step5: experiment with different techniques","step6: practice running techniques"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"Get the ticket, drop off bags Go through security","events":{"0":"Pass through security screening","1":"Get on Security Line","2":"Give bags to check in assistant","3":"Walk to check in area","4":"Locate Security line","5":"Give details to check in assistant","6":"Get tickets from check in assistant","7":"Drive to the airport","8":"Get the ticket, drop off bags Go through security"},"context":"Drive to the airport","minutes":60.0,"events_minutes":{"0":20.0,"1":1.0,"2":1.0,"3":0.5,"4":0.0833333333,"5":5.0,"6":10.0},"flatten_input_for_edge_prediction":"step0: Pass through security screening; step1: Get on Security Line; step2: Give bags to check in assistant; step3: Walk to check in area; step4: Locate Security line; step5: Give details to check in assistant; step6: Get tickets from check in assistant; step7: Drive to the airport; step8: Get the ticket, drop off bags Go through security","flatten_input_for_script_generation":"You want to Get the ticket, drop off bags Go through security. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step5; step5 -> step2; step2 -> step6; step6 -> step4; step4 -> step1; step1 -> step0; step0 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: Drive to the airport; step1: Walk to check in area; step2: Give details to check in assistant; step3: Give bags to check in assistant; step4: Get tickets from check in assistant; step5: Locate Security line; step6: Get on Security Line; step7: Pass through security screening; step8: Get the ticket, drop off bags Go through security; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->8","1->0","2->6","3->5","4->1","5->2","6->4","7->3"],"reference_code":"class GetTheTicketDropOffBagsGoThroughSecurity:\n\n    title = \"Get the ticket, drop off bags Go through security\"\n    steps = 9\n\n    def step0(self):\n        return \"Drive to the airport\"\n\n    def step1(self):\n        return \"Walk to check in area\"\n\n    def step2(self):\n        return \"Give details to check in assistant\"\n\n    def step3(self):\n        return \"Give bags to check in assistant\"\n\n    def step4(self):\n        return \"Get tickets from check in assistant\"\n\n    def step5(self):\n        return \"Locate Security line\"\n\n    def step6(self):\n        return \"Get on Security Line\"\n\n    def step7(self):\n        return \"Pass through security screening\"\n\n    def step8(self):\n        return \"Get the ticket, drop off bags Go through security\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GetTheTicketDropOffBagsGoThroughSecurity:\n\n    title = \"Get the ticket, drop off bags Go through security\"\n    steps = 9\n\n","reference_graph":{"title":"Get the ticket, drop off bags Go through security","num_steps":9,"schema":["step0: Drive to the airport","step1: Walk to check in area","step2: Give details to check in assistant","step3: Give bags to check in assistant","step4: Get tickets from check in assistant","step5: Locate Security line","step6: Get on Security Line","step7: Pass through security screening","step8: Get the ticket, drop off bags Go through security"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]}}
{"scenario":"walk out of house","events":{"0":"put hand on handle","1":"look for front door","2":"walk to front door","3":"find front door","4":"open front door","5":"jot down directions to donation center","6":"walk out of house"},"context":"jot down directions to donation center","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put hand on handle; step1: look for front door; step2: walk to front door; step3: find front door; step4: open front door; step5: jot down directions to donation center; step6: walk out of house","flatten_input_for_script_generation":"You want to walk out of house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: jot down directions to donation center; step1: look for front door; step2: find front door; step3: walk to front door; step4: put hand on handle; step5: open front door; step6: walk out of house; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->2","4->6","5->1"],"reference_code":"class WalkOutOfHouse:\n\n    title = \"walk out of house\"\n    steps = 7\n\n    def step0(self):\n        return \"jot down directions to donation center\"\n\n    def step1(self):\n        return \"look for front door\"\n\n    def step2(self):\n        return \"find front door\"\n\n    def step3(self):\n        return \"walk to front door\"\n\n    def step4(self):\n        return \"put hand on handle\"\n\n    def step5(self):\n        return \"open front door\"\n\n    def step6(self):\n        return \"walk out of house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkOutOfHouse:\n\n    title = \"walk out of house\"\n    steps = 7\n\n","reference_graph":{"title":"walk out of house","num_steps":7,"schema":["step0: jot down directions to donation center","step1: look for front door","step2: find front door","step3: walk to front door","step4: put hand on handle","step5: open front door","step6: walk out of house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"switch off the engine.","events":{"0":"align car properly","1":"put into park","2":"apply parking brake","3":"pull car into space","4":"turn ignition keys","5":"Get a parking lot.","6":"switch off the engine."},"context":"Get a parking lot.","minutes":1.0,"events_minutes":{"0":0.1666666667,"1":0.05,"2":0.0833333333,"3":0.0833333333,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: align car properly; step1: put into park; step2: apply parking brake; step3: pull car into space; step4: turn ignition keys; step5: Get a parking lot.; step6: switch off the engine.","flatten_input_for_script_generation":"You want to switch off the engine.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step0; step5 -> step3","flatten_output_for_script_generation":"step0: Get a parking lot.; step1: pull car into space; step2: put into park; step3: apply parking brake; step4: align car properly; step5: turn ignition keys; step6: switch off the engine.; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step2; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->1","4->6","5->0","5->3"],"reference_code":"class SwitchOffTheEngine:\n\n    title = \"switch off the engine.\"\n    steps = 7\n\n    def step0(self):\n        return \"Get a parking lot.\"\n\n    def step1(self):\n        return \"pull car into space\"\n\n    def step2(self):\n        return \"put into park\"\n\n    def step3(self):\n        return \"apply parking brake\"\n\n    def step4(self):\n        return \"align car properly\"\n\n    def step5(self):\n        return \"turn ignition keys\"\n\n    def step6(self):\n        return \"switch off the engine.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step2\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SwitchOffTheEngine:\n\n    title = \"switch off the engine.\"\n    steps = 7\n\n","reference_graph":{"title":"switch off the engine.","num_steps":7,"schema":["step0: Get a parking lot.","step1: pull car into space","step2: put into park","step3: apply parking brake","step4: align car properly","step5: turn ignition keys","step6: switch off the engine."],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step2","step3 -> step5","step5 -> step6"]}}
{"scenario":"get out of the house","events":{"0":"put on shirt","1":"put on pants","2":"walk towards the front door","3":"look for clothes to wear","4":"hang up the phone","5":"put on shoes","6":"schedule lessons with teacher","7":"get out of the house"},"context":"schedule lessons with teacher","minutes":2.0,"events_minutes":{"0":0.5,"1":0.6666666667,"2":0.5,"3":1.0,"4":0.05,"5":0.6666666667},"flatten_input_for_edge_prediction":"step0: put on shirt; step1: put on pants; step2: walk towards the front door; step3: look for clothes to wear; step4: hang up the phone; step5: put on shoes; step6: schedule lessons with teacher; step7: get out of the house","flatten_input_for_script_generation":"You want to get out of the house. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step3 -> step1; step3 -> step5; step0 -> step2; step1 -> step2; step5 -> step2; step2 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: schedule lessons with teacher; step1: hang up the phone; step2: look for clothes to wear; step3: put on shirt; step4: put on pants; step5: put on shoes; step6: walk towards the front door; step7: get out of the house; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step2 -> step5; step3 -> step6; step4 -> step6; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->2","2->7","3->0","3->1","3->5","4->3","5->2","6->4"],"reference_code":"class GetOutOfTheHouse:\n\n    title = \"get out of the house\"\n    steps = 8\n\n    def step0(self):\n        return \"schedule lessons with teacher\"\n\n    def step1(self):\n        return \"hang up the phone\"\n\n    def step2(self):\n        return \"look for clothes to wear\"\n\n    def step3(self):\n        return \"put on shirt\"\n\n    def step4(self):\n        return \"put on pants\"\n\n    def step5(self):\n        return \"put on shoes\"\n\n    def step6(self):\n        return \"walk towards the front door\"\n\n    def step7(self):\n        return \"get out of the house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step2 -> step5\",\n            \"step3 -> step6\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetOutOfTheHouse:\n\n    title = \"get out of the house\"\n    steps = 8\n\n","reference_graph":{"title":"get out of the house","num_steps":8,"schema":["step0: schedule lessons with teacher","step1: hang up the phone","step2: look for clothes to wear","step3: put on shirt","step4: put on pants","step5: put on shoes","step6: walk towards the front door","step7: get out of the house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step2 -> step5","step3 -> step6","step4 -> step6","step5 -> step6","step6 -> step7"]}}
{"scenario":"Start to shop.","events":{"0":"roll the cart towards the front door of the store","1":"push the cart into the grocery store","2":"look at shopping list","3":"pull the one shopping cart from the stack of carts","4":"place personal items into cart","5":"Grab a cart.","6":"Start to shop."},"context":"Grab a cart.","minutes":25.0,"events_minutes":{"0":2.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: roll the cart towards the front door of the store; step1: push the cart into the grocery store; step2: look at shopping list; step3: pull the one shopping cart from the stack of carts; step4: place personal items into cart; step5: Grab a cart.; step6: Start to shop.","flatten_input_for_script_generation":"You want to Start to shop.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Grab a cart.; step1: pull the one shopping cart from the stack of carts; step2: place personal items into cart; step3: roll the cart towards the front door of the store; step4: push the cart into the grocery store; step5: look at shopping list; step6: Start to shop.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->4","4->0","5->3"],"reference_code":"class StartToShop:\n\n    title = \"Start to shop.\"\n    steps = 7\n\n    def step0(self):\n        return \"Grab a cart.\"\n\n    def step1(self):\n        return \"pull the one shopping cart from the stack of carts\"\n\n    def step2(self):\n        return \"place personal items into cart\"\n\n    def step3(self):\n        return \"roll the cart towards the front door of the store\"\n\n    def step4(self):\n        return \"push the cart into the grocery store\"\n\n    def step5(self):\n        return \"look at shopping list\"\n\n    def step6(self):\n        return \"Start to shop.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StartToShop:\n\n    title = \"Start to shop.\"\n    steps = 7\n\n","reference_graph":{"title":"Start to shop.","num_steps":7,"schema":["step0: Grab a cart.","step1: pull the one shopping cart from the stack of carts","step2: place personal items into cart","step3: roll the cart towards the front door of the store","step4: push the cart into the grocery store","step5: look at shopping list","step6: Start to shop."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take off side panel","events":{"0":"carry the computer to a large table","1":"take off the side panel screws","2":"pick up the computer","3":"unplug all of the cables from the computer","4":"set the computer on the table","5":"turn off computer","6":"take off side panel"},"context":"turn off computer","minutes":1.0,"events_minutes":{"0":0.25,"1":1.0,"2":0.1666666667,"3":1.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: carry the computer to a large table; step1: take off the side panel screws; step2: pick up the computer; step3: unplug all of the cables from the computer; step4: set the computer on the table; step5: turn off computer; step6: take off side panel","flatten_input_for_script_generation":"You want to take off side panel. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: turn off computer; step1: unplug all of the cables from the computer; step2: pick up the computer; step3: carry the computer to a large table; step4: set the computer on the table; step5: take off the side panel screws; step6: take off side panel; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->0","3->2","4->1","5->3"],"reference_code":"class TakeOffSidePanel:\n\n    title = \"take off side panel\"\n    steps = 7\n\n    def step0(self):\n        return \"turn off computer\"\n\n    def step1(self):\n        return \"unplug all of the cables from the computer\"\n\n    def step2(self):\n        return \"pick up the computer\"\n\n    def step3(self):\n        return \"carry the computer to a large table\"\n\n    def step4(self):\n        return \"set the computer on the table\"\n\n    def step5(self):\n        return \"take off the side panel screws\"\n\n    def step6(self):\n        return \"take off side panel\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeOffSidePanel:\n\n    title = \"take off side panel\"\n    steps = 7\n\n","reference_graph":{"title":"take off side panel","num_steps":7,"schema":["step0: turn off computer","step1: unplug all of the cables from the computer","step2: pick up the computer","step3: carry the computer to a large table","step4: set the computer on the table","step5: take off the side panel screws","step6: take off side panel"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"place foot on brake.","events":{"0":"measure distance to move foot","1":"find the brake","2":"look for brake","3":"move foot towards brake","4":"put foot into position","5":"drive to parking spot and stop car.","6":"place foot on brake."},"context":"drive to parking spot and stop car.","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: measure distance to move foot; step1: find the brake; step2: look for brake; step3: move foot towards brake; step4: put foot into position; step5: drive to parking spot and stop car.; step6: place foot on brake.","flatten_input_for_script_generation":"You want to place foot on brake.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step0; step1 -> step4; step3 -> step6; step0 -> step3; step4 -> step3; step5 -> step2","flatten_output_for_script_generation":"step0: drive to parking spot and stop car.; step1: look for brake; step2: find the brake; step3: measure distance to move foot; step4: put foot into position; step5: move foot towards brake; step6: place foot on brake.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","1->4","2->1","3->6","4->3","5->2"],"reference_code":"class PlaceFootOnBrake:\n\n    title = \"place foot on brake.\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to parking spot and stop car.\"\n\n    def step1(self):\n        return \"look for brake\"\n\n    def step2(self):\n        return \"find the brake\"\n\n    def step3(self):\n        return \"measure distance to move foot\"\n\n    def step4(self):\n        return \"put foot into position\"\n\n    def step5(self):\n        return \"move foot towards brake\"\n\n    def step6(self):\n        return \"place foot on brake.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PlaceFootOnBrake:\n\n    title = \"place foot on brake.\"\n    steps = 7\n\n","reference_graph":{"title":"place foot on brake.","num_steps":7,"schema":["step0: drive to parking spot and stop car.","step1: look for brake","step2: find the brake","step3: measure distance to move foot","step4: put foot into position","step5: move foot towards brake","step6: place foot on brake."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"get paid from job","events":{"0":"wait for pay day","1":"have lots of patience","2":"pay day arrives","3":"check is delivered","4":"request a paycheck","5":"work at job","6":"get paid from job"},"context":"work at job","minutes":10080.0,"events_minutes":{"0":43200.0,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: wait for pay day; step1: have lots of patience; step2: pay day arrives; step3: check is delivered; step4: request a paycheck; step5: work at job; step6: get paid from job","flatten_input_for_script_generation":"You want to get paid from job. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: work at job; step1: request a paycheck; step2: wait for pay day; step3: have lots of patience; step4: pay day arrives; step5: check is delivered; step6: get paid from job; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->3","3->6","4->0","5->4"],"reference_code":"class GetPaidFromJob:\n\n    title = \"get paid from job\"\n    steps = 7\n\n    def step0(self):\n        return \"work at job\"\n\n    def step1(self):\n        return \"request a paycheck\"\n\n    def step2(self):\n        return \"wait for pay day\"\n\n    def step3(self):\n        return \"have lots of patience\"\n\n    def step4(self):\n        return \"pay day arrives\"\n\n    def step5(self):\n        return \"check is delivered\"\n\n    def step6(self):\n        return \"get paid from job\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetPaidFromJob:\n\n    title = \"get paid from job\"\n    steps = 7\n\n","reference_graph":{"title":"get paid from job","num_steps":7,"schema":["step0: work at job","step1: request a paycheck","step2: wait for pay day","step3: have lots of patience","step4: pay day arrives","step5: check is delivered","step6: get paid from job"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter parking garage","events":{"0":"face forward towards windshield","1":"close car window","2":"slowly press gas pedal to move car towards garage","3":"move foot from brake to gas pedal","4":"pull hand with ticket back into car","5":"get parking booth ticket","6":"enter parking garage"},"context":"get parking booth ticket","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.0833333333,"2":0.0833333333,"3":0.0333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: face forward towards windshield; step1: close car window; step2: slowly press gas pedal to move car towards garage; step3: move foot from brake to gas pedal; step4: pull hand with ticket back into car; step5: get parking booth ticket; step6: enter parking garage","flatten_input_for_script_generation":"You want to enter parking garage. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step0; step0 -> step3; step3 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: get parking booth ticket; step1: pull hand with ticket back into car; step2: close car window; step3: face forward towards windshield; step4: move foot from brake to gas pedal; step5: slowly press gas pedal to move car towards garage; step6: enter parking garage; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->0","2->6","3->2","4->1","5->4"],"reference_code":"class EnterParkingGarage:\n\n    title = \"enter parking garage\"\n    steps = 7\n\n    def step0(self):\n        return \"get parking booth ticket\"\n\n    def step1(self):\n        return \"pull hand with ticket back into car\"\n\n    def step2(self):\n        return \"close car window\"\n\n    def step3(self):\n        return \"face forward towards windshield\"\n\n    def step4(self):\n        return \"move foot from brake to gas pedal\"\n\n    def step5(self):\n        return \"slowly press gas pedal to move car towards garage\"\n\n    def step6(self):\n        return \"enter parking garage\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterParkingGarage:\n\n    title = \"enter parking garage\"\n    steps = 7\n\n","reference_graph":{"title":"enter parking garage","num_steps":7,"schema":["step0: get parking booth ticket","step1: pull hand with ticket back into car","step2: close car window","step3: face forward towards windshield","step4: move foot from brake to gas pedal","step5: slowly press gas pedal to move car towards garage","step6: enter parking garage"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"turn off vehicle","events":{"0":"extend a hand","1":"turn the key","2":"put the car on park","3":"grab the key","4":"take out the key","5":"park the car","6":"turn off vehicle"},"context":"park the car","minutes":2.0,"events_minutes":{"0":0.05,"1":0.0833333333,"2":0.0333333333,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: extend a hand; step1: turn the key; step2: put the car on park; step3: grab the key; step4: take out the key; step5: park the car; step6: turn off vehicle","flatten_input_for_script_generation":"You want to turn off vehicle. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step1; step1 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: park the car; step1: put the car on park; step2: extend a hand; step3: grab the key; step4: turn the key; step5: take out the key; step6: turn off vehicle; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->1","4->6","5->2"],"reference_code":"class TurnOffVehicle:\n\n    title = \"turn off vehicle\"\n    steps = 7\n\n    def step0(self):\n        return \"park the car\"\n\n    def step1(self):\n        return \"put the car on park\"\n\n    def step2(self):\n        return \"extend a hand\"\n\n    def step3(self):\n        return \"grab the key\"\n\n    def step4(self):\n        return \"turn the key\"\n\n    def step5(self):\n        return \"take out the key\"\n\n    def step6(self):\n        return \"turn off vehicle\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TurnOffVehicle:\n\n    title = \"turn off vehicle\"\n    steps = 7\n\n","reference_graph":{"title":"turn off vehicle","num_steps":7,"schema":["step0: park the car","step1: put the car on park","step2: extend a hand","step3: grab the key","step4: turn the key","step5: take out the key","step6: turn off vehicle"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk up to store entrance.","events":{"0":"Turn towards entrance","1":"Continue until entrance is reached","2":"Identify store entrance","3":"Move right foot forward","4":"Lift left foot","5":"Move left foot forward","6":"Lift right foot","7":"get out of car.","8":"walk up to store entrance."},"context":"get out of car.","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.3333333333,"2":0.0666666667,"3":0.0166666667,"4":0.0166666667,"5":0.0166666667,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Turn towards entrance; step1: Continue until entrance is reached; step2: Identify store entrance; step3: Move right foot forward; step4: Lift left foot; step5: Move left foot forward; step6: Lift right foot; step7: get out of car.; step8: walk up to store entrance.","flatten_input_for_script_generation":"You want to walk up to store entrance.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step0 -> step6; step4 -> step5; step6 -> step3; step5 -> step1; step3 -> step1; step1 -> step8; step7 -> step2","flatten_output_for_script_generation":"step0: get out of car.; step1: Identify store entrance; step2: Turn towards entrance; step3: Lift left foot; step4: Lift right foot; step5: Move left foot forward; step6: Move right foot forward; step7: Continue until entrance is reached; step8: walk up to store entrance.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->4","0->6","1->8","2->0","3->1","4->5","5->1","6->3","7->2"],"reference_code":"class WalkUpToStoreEntrance:\n\n    title = \"walk up to store entrance.\"\n    steps = 9\n\n    def step0(self):\n        return \"get out of car.\"\n\n    def step1(self):\n        return \"Identify store entrance\"\n\n    def step2(self):\n        return \"Turn towards entrance\"\n\n    def step3(self):\n        return \"Lift left foot\"\n\n    def step4(self):\n        return \"Lift right foot\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Continue until entrance is reached\"\n\n    def step8(self):\n        return \"walk up to store entrance.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WalkUpToStoreEntrance:\n\n    title = \"walk up to store entrance.\"\n    steps = 9\n\n","reference_graph":{"title":"walk up to store entrance.","num_steps":9,"schema":["step0: get out of car.","step1: Identify store entrance","step2: Turn towards entrance","step3: Lift left foot","step4: Lift right foot","step5: Move left foot forward","step6: Move right foot forward","step7: Continue until entrance is reached","step8: walk up to store entrance."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"grab gear from the car","events":{"0":"Go to the car","1":"Pull the gear out of the car","2":"Take the gear to desired area","3":"Grasp the gear","4":"Open the door of the car","5":"build up courage","6":"grab gear from the car"},"context":"build up courage","minutes":2.0,"events_minutes":{"0":0.5,"1":0.6666666667,"2":1.1666666667,"3":0.5,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Go to the car; step1: Pull the gear out of the car; step2: Take the gear to desired area; step3: Grasp the gear; step4: Open the door of the car; step5: build up courage; step6: grab gear from the car","flatten_input_for_script_generation":"You want to grab gear from the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step1; step1 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: build up courage; step1: Go to the car; step2: Open the door of the car; step3: Grasp the gear; step4: Pull the gear out of the car; step5: Take the gear to desired area; step6: grab gear from the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->6","3->1","4->3","5->0"],"reference_code":"class GrabGearFromTheCar:\n\n    title = \"grab gear from the car\"\n    steps = 7\n\n    def step0(self):\n        return \"build up courage\"\n\n    def step1(self):\n        return \"Go to the car\"\n\n    def step2(self):\n        return \"Open the door of the car\"\n\n    def step3(self):\n        return \"Grasp the gear\"\n\n    def step4(self):\n        return \"Pull the gear out of the car\"\n\n    def step5(self):\n        return \"Take the gear to desired area\"\n\n    def step6(self):\n        return \"grab gear from the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabGearFromTheCar:\n\n    title = \"grab gear from the car\"\n    steps = 7\n\n","reference_graph":{"title":"grab gear from the car","num_steps":7,"schema":["step0: build up courage","step1: Go to the car","step2: Open the door of the car","step3: Grasp the gear","step4: Pull the gear out of the car","step5: Take the gear to desired area","step6: grab gear from the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Receive an income from work.","events":{"0":"Go to the job interview","1":"Start going to work everyday","2":"Keep working for 14 days","3":"Apply for a job","4":"Get hired for the job","5":"Get a paycheck from work","6":"NONE","7":"Receive an income from work."},"context":"NONE","minutes":30240.0,"events_minutes":{"0":1440.0,"1":1440.0,"2":20160.0,"3":1440.0,"4":10080.0,"5":1440.0},"flatten_input_for_edge_prediction":"step0: Go to the job interview; step1: Start going to work everyday; step2: Keep working for 14 days; step3: Apply for a job; step4: Get hired for the job; step5: Get a paycheck from work; step6: decided to Receive an income from work.; step7: Receive an income from work.","flatten_input_for_script_generation":"You want to Receive an income from work.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step4 -> step1; step1 -> step2; step2 -> step5; step5 -> step7; step0 -> step4; step6 -> step3","flatten_output_for_script_generation":"step0: decided to Receive an income from work.; step1: Apply for a job; step2: Go to the job interview; step3: Get hired for the job; step4: Start going to work everyday; step5: Keep working for 14 days; step6: Get a paycheck from work; step7: Receive an income from work.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->2","2->5","3->0","4->1","5->7","6->3"],"reference_code":"class ReceiveAnIncomeFromWork:\n\n    title = \"Receive an income from work.\"\n    steps = 8\n\n    def step0(self):\n        return \"decided to Receive an income from work.\"\n\n    def step1(self):\n        return \"Apply for a job\"\n\n    def step2(self):\n        return \"Go to the job interview\"\n\n    def step3(self):\n        return \"Get hired for the job\"\n\n    def step4(self):\n        return \"Start going to work everyday\"\n\n    def step5(self):\n        return \"Keep working for 14 days\"\n\n    def step6(self):\n        return \"Get a paycheck from work\"\n\n    def step7(self):\n        return \"Receive an income from work.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ReceiveAnIncomeFromWork:\n\n    title = \"Receive an income from work.\"\n    steps = 8\n\n","reference_graph":{"title":"Receive an income from work.","num_steps":8,"schema":["step0: decided to Receive an income from work.","step1: Apply for a job","step2: Go to the job interview","step3: Get hired for the job","step4: Start going to work everyday","step5: Keep working for 14 days","step6: Get a paycheck from work","step7: Receive an income from work."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"make the decision to get a new pet","events":{"0":"think about different kinds of pets","1":"think about the time needed for pet care","2":"think about how much space a pet needs","3":"think about the expenses needed for a pet","4":"decide on the most suitable kind of pet","5":"NONE","6":"make the decision to get a new pet"},"context":"NONE","minutes":0.5,"events_minutes":{"0":60.0,"1":60.0,"2":60.0,"3":60.0,"4":60.0},"flatten_input_for_edge_prediction":"step0: think about different kinds of pets; step1: think about the time needed for pet care; step2: think about how much space a pet needs; step3: think about the expenses needed for a pet; step4: decide on the most suitable kind of pet; step5: decided to make the decision to get a new pet; step6: make the decision to get a new pet","flatten_input_for_script_generation":"You want to make the decision to get a new pet. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step3 -> step4; step0 -> step4; step1 -> step4; step4 -> step6; step5 -> step2; step5 -> step3; step5 -> step0; step5 -> step1","flatten_output_for_script_generation":"step0: decided to make the decision to get a new pet; step1: think about the time needed for pet care; step2: think about how much space a pet needs; step3: decide on the most suitable kind of pet; step4: make the decision to get a new pet; step5: think about the expenses needed for a pet; step6: think about different kinds of pets; step0 -> step1; step0 -> step2; step0 -> step5; step0 -> step6; step2 -> step3; step3 -> step4; step5 -> step3; step6 -> step3; step1 -> step3","gold_edges_for_prediction":["0->4","1->4","2->4","3->4","4->6","5->2","5->3","5->0","5->1"],"reference_code":"class MakeTheDecisionToGetANewPet:\n\n    title = \"make the decision to get a new pet\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to make the decision to get a new pet\"\n\n    def step1(self):\n        return \"think about the time needed for pet care\"\n\n    def step2(self):\n        return \"think about how much space a pet needs\"\n\n    def step3(self):\n        return \"decide on the most suitable kind of pet\"\n\n    def step4(self):\n        return \"make the decision to get a new pet\"\n\n    def step5(self):\n        return \"think about the expenses needed for a pet\"\n\n    def step6(self):\n        return \"think about different kinds of pets\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step0 -> step5\",\n            \"step0 -> step6\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step6 -> step3\",\n            \"step1 -> step3\",\n        ]\n","input_prompt_code":"class MakeTheDecisionToGetANewPet:\n\n    title = \"make the decision to get a new pet\"\n    steps = 7\n\n","reference_graph":{"title":"make the decision to get a new pet","num_steps":7,"schema":["step0: decided to make the decision to get a new pet","step1: think about the time needed for pet care","step2: think about how much space a pet needs","step3: decide on the most suitable kind of pet","step4: make the decision to get a new pet","step5: think about the expenses needed for a pet","step6: think about different kinds of pets"],"relations":["step0 -> step1","step0 -> step2","step0 -> step5","step0 -> step6","step2 -> step3","step3 -> step4","step5 -> step3","step6 -> step3","step1 -> step3"]}}
{"scenario":"show up on wedding date","events":{"0":"await wedding date","1":"dress up for wedding","2":"get ride to wedding","3":"note date on calendar","4":"arrange transportation to wedding","5":"get a wedding venue","6":"show up on wedding date"},"context":"get a wedding venue","minutes":60.0,"events_minutes":{"0":41760.0,"1":60.0,"2":20.0,"3":0.5,"4":10.0},"flatten_input_for_edge_prediction":"step0: await wedding date; step1: dress up for wedding; step2: get ride to wedding; step3: note date on calendar; step4: arrange transportation to wedding; step5: get a wedding venue; step6: show up on wedding date","flatten_input_for_script_generation":"You want to show up on wedding date. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step3 -> step4; step0 -> step1; step1 -> step2; step4 -> step1; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: get a wedding venue; step1: note date on calendar; step2: await wedding date; step3: arrange transportation to wedding; step4: dress up for wedding; step5: get ride to wedding; step6: show up on wedding date; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->6","3->0","3->4","4->1","5->3"],"reference_code":"class ShowUpOnWeddingDate:\n\n    title = \"show up on wedding date\"\n    steps = 7\n\n    def step0(self):\n        return \"get a wedding venue\"\n\n    def step1(self):\n        return \"note date on calendar\"\n\n    def step2(self):\n        return \"await wedding date\"\n\n    def step3(self):\n        return \"arrange transportation to wedding\"\n\n    def step4(self):\n        return \"dress up for wedding\"\n\n    def step5(self):\n        return \"get ride to wedding\"\n\n    def step6(self):\n        return \"show up on wedding date\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ShowUpOnWeddingDate:\n\n    title = \"show up on wedding date\"\n    steps = 7\n\n","reference_graph":{"title":"show up on wedding date","num_steps":7,"schema":["step0: get a wedding venue","step1: note date on calendar","step2: await wedding date","step3: arrange transportation to wedding","step4: dress up for wedding","step5: get ride to wedding","step6: show up on wedding date"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"fix grammatical errors","events":{"0":"read through draft","1":"scroll to top","2":"turn on grammar checker","3":"correct errors individually","4":"pay attention for detected errors","5":"write a first draft","6":"fix grammatical errors"},"context":"write a first draft","minutes":15.0,"events_minutes":{"0":7.0,"1":0.0333333333,"2":0.1666666667,"3":5.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: read through draft; step1: scroll to top; step2: turn on grammar checker; step3: correct errors individually; step4: pay attention for detected errors; step5: write a first draft; step6: fix grammatical errors","flatten_input_for_script_generation":"You want to fix grammatical errors. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step2; step2 -> step0; step0 -> step4; step0 -> step3; step4 -> step6; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: write a first draft; step1: scroll to top; step2: turn on grammar checker; step3: read through draft; step4: pay attention for detected errors; step5: correct errors individually; step6: fix grammatical errors; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->4","0->3","1->2","2->0","3->6","4->6","5->1"],"reference_code":"class FixGrammaticalErrors:\n\n    title = \"fix grammatical errors\"\n    steps = 7\n\n    def step0(self):\n        return \"write a first draft\"\n\n    def step1(self):\n        return \"scroll to top\"\n\n    def step2(self):\n        return \"turn on grammar checker\"\n\n    def step3(self):\n        return \"read through draft\"\n\n    def step4(self):\n        return \"pay attention for detected errors\"\n\n    def step5(self):\n        return \"correct errors individually\"\n\n    def step6(self):\n        return \"fix grammatical errors\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class FixGrammaticalErrors:\n\n    title = \"fix grammatical errors\"\n    steps = 7\n\n","reference_graph":{"title":"fix grammatical errors","num_steps":7,"schema":["step0: write a first draft","step1: scroll to top","step2: turn on grammar checker","step3: read through draft","step4: pay attention for detected errors","step5: correct errors individually","step6: fix grammatical errors"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"get out of the car","events":{"0":"step out of car","1":"turn off car","2":"open car door","3":"pull keys out of ignition","4":"apply parking brake","5":"pull up the windows","6":"get out of the car"},"context":"pull up the windows","minutes":0.5,"events_minutes":{"0":0.0833333333,"1":0.05,"2":0.0333333333,"3":0.0333333333,"4":0.05},"flatten_input_for_edge_prediction":"step0: step out of car; step1: turn off car; step2: open car door; step3: pull keys out of ignition; step4: apply parking brake; step5: pull up the windows; step6: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step2; step4 -> step3; step2 -> step0; step0 -> step6; step5 -> step1; step5 -> step4","flatten_output_for_script_generation":"step0: pull up the windows; step1: apply parking brake; step2: turn off car; step3: pull keys out of ignition; step4: open car door; step5: step out of car; step6: get out of the car; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step3; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->0","3->2","4->3","5->1","5->4"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"pull up the windows\"\n\n    def step1(self):\n        return \"apply parking brake\"\n\n    def step2(self):\n        return \"turn off car\"\n\n    def step3(self):\n        return \"pull keys out of ignition\"\n\n    def step4(self):\n        return \"open car door\"\n\n    def step5(self):\n        return \"step out of car\"\n\n    def step6(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step3\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n","reference_graph":{"title":"get out of the car","num_steps":7,"schema":["step0: pull up the windows","step1: apply parking brake","step2: turn off car","step3: pull keys out of ignition","step4: open car door","step5: step out of car","step6: get out of the car"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step3","step5 -> step6"]}}
{"scenario":"apply lipstick in mirror","events":{"0":"reach towards lipstick","1":"find the lipstick","2":"grab the lipstick","3":"look at mirror","4":"look for lipstick","5":"walk over to mirror","6":"apply lipstick in mirror"},"context":"walk over to mirror","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: reach towards lipstick; step1: find the lipstick; step2: grab the lipstick; step3: look at mirror; step4: look for lipstick; step5: walk over to mirror; step6: apply lipstick in mirror","flatten_input_for_script_generation":"You want to apply lipstick in mirror. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step6; step4 -> step1; step1 -> step0; step0 -> step2; step2 -> step3; step5 -> step4","flatten_output_for_script_generation":"step0: walk over to mirror; step1: look for lipstick; step2: look at mirror; step3: apply lipstick in mirror; step4: find the lipstick; step5: reach towards lipstick; step6: grab the lipstick; step0 -> step1; step2 -> step3; step1 -> step4; step4 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->2","1->0","2->3","3->6","4->1","5->4"],"reference_code":"class ApplyLipstickInMirror:\n\n    title = \"apply lipstick in mirror\"\n    steps = 7\n\n    def step0(self):\n        return \"walk over to mirror\"\n\n    def step1(self):\n        return \"look for lipstick\"\n\n    def step2(self):\n        return \"look at mirror\"\n\n    def step3(self):\n        return \"apply lipstick in mirror\"\n\n    def step4(self):\n        return \"find the lipstick\"\n\n    def step5(self):\n        return \"reach towards lipstick\"\n\n    def step6(self):\n        return \"grab the lipstick\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ApplyLipstickInMirror:\n\n    title = \"apply lipstick in mirror\"\n    steps = 7\n\n","reference_graph":{"title":"apply lipstick in mirror","num_steps":7,"schema":["step0: walk over to mirror","step1: look for lipstick","step2: look at mirror","step3: apply lipstick in mirror","step4: find the lipstick","step5: reach towards lipstick","step6: grab the lipstick"],"relations":["step0 -> step1","step2 -> step3","step1 -> step4","step4 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"grab a shopping cart.","events":{"0":"move right foot forward","1":"move left foot forward","2":"find shopping carts","3":"look for shopping carts","4":"turn body towards carts","5":"walk up to store entrance.","6":"grab a shopping cart."},"context":"walk up to store entrance.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move right foot forward; step1: move left foot forward; step2: find shopping carts; step3: look for shopping carts; step4: turn body towards carts; step5: walk up to store entrance.; step6: grab a shopping cart.","flatten_input_for_script_generation":"You want to grab a shopping cart.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step1; step4 -> step0; step1 -> step6; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: walk up to store entrance.; step1: look for shopping carts; step2: find shopping carts; step3: turn body towards carts; step4: move left foot forward; step5: move right foot forward; step6: grab a shopping cart.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->6","2->4","3->2","4->1","4->0","5->3"],"reference_code":"class GrabAShoppingCart:\n\n    title = \"grab a shopping cart.\"\n    steps = 7\n\n    def step0(self):\n        return \"walk up to store entrance.\"\n\n    def step1(self):\n        return \"look for shopping carts\"\n\n    def step2(self):\n        return \"find shopping carts\"\n\n    def step3(self):\n        return \"turn body towards carts\"\n\n    def step4(self):\n        return \"move left foot forward\"\n\n    def step5(self):\n        return \"move right foot forward\"\n\n    def step6(self):\n        return \"grab a shopping cart.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabAShoppingCart:\n\n    title = \"grab a shopping cart.\"\n    steps = 7\n\n","reference_graph":{"title":"grab a shopping cart.","num_steps":7,"schema":["step0: walk up to store entrance.","step1: look for shopping carts","step2: find shopping carts","step3: turn body towards carts","step4: move left foot forward","step5: move right foot forward","step6: grab a shopping cart."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"slowly walk in direction of the cart station.","events":{"0":"turn body towards cart station","1":"find the cart station","2":"put left foot forward","3":"put right foot forward","4":"remember cart station location","5":"search for the cart station.","6":"slowly walk in direction of the cart station."},"context":"search for the cart station.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn body towards cart station; step1: find the cart station; step2: put left foot forward; step3: put right foot forward; step4: remember cart station location; step5: search for the cart station.; step6: slowly walk in direction of the cart station.","flatten_input_for_script_generation":"You want to slowly walk in direction of the cart station.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step0; step0 -> step2; step0 -> step3; step2 -> step6; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: search for the cart station.; step1: find the cart station; step2: remember cart station location; step3: turn body towards cart station; step4: put left foot forward; step5: put right foot forward; step6: slowly walk in direction of the cart station.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","0->3","1->4","2->6","3->6","4->0","5->1"],"reference_code":"class SlowlyWalkInDirectionOfTheCartStation:\n\n    title = \"slowly walk in direction of the cart station.\"\n    steps = 7\n\n    def step0(self):\n        return \"search for the cart station.\"\n\n    def step1(self):\n        return \"find the cart station\"\n\n    def step2(self):\n        return \"remember cart station location\"\n\n    def step3(self):\n        return \"turn body towards cart station\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"slowly walk in direction of the cart station.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class SlowlyWalkInDirectionOfTheCartStation:\n\n    title = \"slowly walk in direction of the cart station.\"\n    steps = 7\n\n","reference_graph":{"title":"slowly walk in direction of the cart station.","num_steps":7,"schema":["step0: search for the cart station.","step1: find the cart station","step2: remember cart station location","step3: turn body towards cart station","step4: put left foot forward","step5: put right foot forward","step6: slowly walk in direction of the cart station."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"take a nap on the bed","events":{"0":"pull back the sheet","1":"lay down on the bed","2":"pull back the blanket","3":"fall asleep on the bed","4":"fluff up the pillow","5":"sit on the bed for a little","6":"take a nap on the bed"},"context":"sit on the bed for a little","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0333333333,"3":5.0,"4":0.25},"flatten_input_for_edge_prediction":"step0: pull back the sheet; step1: lay down on the bed; step2: pull back the blanket; step3: fall asleep on the bed; step4: fluff up the pillow; step5: sit on the bed for a little; step6: take a nap on the bed","flatten_input_for_script_generation":"You want to take a nap on the bed. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: sit on the bed for a little; step1: pull back the blanket; step2: pull back the sheet; step3: fluff up the pillow; step4: lay down on the bed; step5: fall asleep on the bed; step6: take a nap on the bed; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->3","2->0","3->6","4->1","5->2"],"reference_code":"class TakeANapOnTheBed:\n\n    title = \"take a nap on the bed\"\n    steps = 7\n\n    def step0(self):\n        return \"sit on the bed for a little\"\n\n    def step1(self):\n        return \"pull back the blanket\"\n\n    def step2(self):\n        return \"pull back the sheet\"\n\n    def step3(self):\n        return \"fluff up the pillow\"\n\n    def step4(self):\n        return \"lay down on the bed\"\n\n    def step5(self):\n        return \"fall asleep on the bed\"\n\n    def step6(self):\n        return \"take a nap on the bed\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TakeANapOnTheBed:\n\n    title = \"take a nap on the bed\"\n    steps = 7\n\n","reference_graph":{"title":"take a nap on the bed","num_steps":7,"schema":["step0: sit on the bed for a little","step1: pull back the blanket","step2: pull back the sheet","step3: fluff up the pillow","step4: lay down on the bed","step5: fall asleep on the bed","step6: take a nap on the bed"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"remove plant from temporary planter","events":{"0":"Loosen sides of temporary planter","1":"Put down planting tool","2":"Pull up stem of plant","3":"Pull down temporary planter","4":"Grasp stem of plant","5":"Pick up planting tool","6":"hold on to temporary planter","7":"remove plant from temporary planter"},"context":"hold on to temporary planter","minutes":0.5833333333,"events_minutes":{"0":0.25,"1":0.0833333333,"2":0.1666666667,"3":0.1666666667,"4":0.0833333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: Loosen sides of temporary planter; step1: Put down planting tool; step2: Pull up stem of plant; step3: Pull down temporary planter; step4: Grasp stem of plant; step5: Pick up planting tool; step6: hold on to temporary planter; step7: remove plant from temporary planter","flatten_input_for_script_generation":"You want to remove plant from temporary planter. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step0; step0 -> step1; step1 -> step4; step4 -> step3; step4 -> step2; step3 -> step7; step2 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: hold on to temporary planter; step1: Pick up planting tool; step2: Loosen sides of temporary planter; step3: Put down planting tool; step4: Grasp stem of plant; step5: Pull down temporary planter; step6: Pull up stem of plant; step7: remove plant from temporary planter; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step4 -> step6; step5 -> step7; step6 -> step7","gold_edges_for_prediction":["0->1","1->4","2->7","3->7","4->3","4->2","5->0","6->5"],"reference_code":"class RemovePlantFromTemporaryPlanter:\n\n    title = \"remove plant from temporary planter\"\n    steps = 8\n\n    def step0(self):\n        return \"hold on to temporary planter\"\n\n    def step1(self):\n        return \"Pick up planting tool\"\n\n    def step2(self):\n        return \"Loosen sides of temporary planter\"\n\n    def step3(self):\n        return \"Put down planting tool\"\n\n    def step4(self):\n        return \"Grasp stem of plant\"\n\n    def step5(self):\n        return \"Pull down temporary planter\"\n\n    def step6(self):\n        return \"Pull up stem of plant\"\n\n    def step7(self):\n        return \"remove plant from temporary planter\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class RemovePlantFromTemporaryPlanter:\n\n    title = \"remove plant from temporary planter\"\n    steps = 8\n\n","reference_graph":{"title":"remove plant from temporary planter","num_steps":8,"schema":["step0: hold on to temporary planter","step1: Pick up planting tool","step2: Loosen sides of temporary planter","step3: Put down planting tool","step4: Grasp stem of plant","step5: Pull down temporary planter","step6: Pull up stem of plant","step7: remove plant from temporary planter"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step4 -> step6","step5 -> step7","step6 -> step7"]}}
{"scenario":"Print the report","events":{"0":"open the file menu in the word processor","1":"save the edited draft","2":"select print from the file menu","3":"send document to the printer","4":"select printer settings","5":"type the edited draft","6":"Print the report"},"context":"type the edited draft","minutes":2.0,"events_minutes":{"0":0.0833333333,"1":0.0333333333,"2":0.0833333333,"3":0.0333333333,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: open the file menu in the word processor; step1: save the edited draft; step2: select print from the file menu; step3: send document to the printer; step4: select printer settings; step5: type the edited draft; step6: Print the report","flatten_input_for_script_generation":"You want to Print the report. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step0; step0 -> step2; step2 -> step4; step4 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: type the edited draft; step1: save the edited draft; step2: open the file menu in the word processor; step3: select print from the file menu; step4: select printer settings; step5: send document to the printer; step6: Print the report; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->4","3->6","4->3","5->1"],"reference_code":"class PrintTheReport:\n\n    title = \"Print the report\"\n    steps = 7\n\n    def step0(self):\n        return \"type the edited draft\"\n\n    def step1(self):\n        return \"save the edited draft\"\n\n    def step2(self):\n        return \"open the file menu in the word processor\"\n\n    def step3(self):\n        return \"select print from the file menu\"\n\n    def step4(self):\n        return \"select printer settings\"\n\n    def step5(self):\n        return \"send document to the printer\"\n\n    def step6(self):\n        return \"Print the report\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PrintTheReport:\n\n    title = \"Print the report\"\n    steps = 7\n\n","reference_graph":{"title":"Print the report","num_steps":7,"schema":["step0: type the edited draft","step1: save the edited draft","step2: open the file menu in the word processor","step3: select print from the file menu","step4: select printer settings","step5: send document to the printer","step6: Print the report"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"exit the bus.","events":{"0":"get up from the seat","1":"take a seat inside the bus","2":"walk to the bus door","3":"wait for the bus to stop completely","4":"get off the bus","5":"wait for the bus to get to the destination","6":"Take bus to roller skating rink","7":"exit the bus."},"context":"Take bus to roller skating rink","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.3333333333,"2":0.0833333333,"3":0.3333333333,"4":0.1666666667,"5":15.0},"flatten_input_for_edge_prediction":"step0: get up from the seat; step1: take a seat inside the bus; step2: walk to the bus door; step3: wait for the bus to stop completely; step4: get off the bus; step5: wait for the bus to get to the destination; step6: Take bus to roller skating rink; step7: exit the bus.","flatten_input_for_script_generation":"You want to exit the bus.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step1 -> step5; step5 -> step3; step0 -> step2; step2 -> step4; step3 -> step0; step4 -> step7; step6 -> step1","flatten_output_for_script_generation":"step0: Take bus to roller skating rink; step1: take a seat inside the bus; step2: wait for the bus to get to the destination; step3: wait for the bus to stop completely; step4: get up from the seat; step5: walk to the bus door; step6: get off the bus; step7: exit the bus.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->2","1->5","2->4","3->0","4->7","5->3","6->1"],"reference_code":"class ExitTheBus:\n\n    title = \"exit the bus.\"\n    steps = 8\n\n    def step0(self):\n        return \"Take bus to roller skating rink\"\n\n    def step1(self):\n        return \"take a seat inside the bus\"\n\n    def step2(self):\n        return \"wait for the bus to get to the destination\"\n\n    def step3(self):\n        return \"wait for the bus to stop completely\"\n\n    def step4(self):\n        return \"get up from the seat\"\n\n    def step5(self):\n        return \"walk to the bus door\"\n\n    def step6(self):\n        return \"get off the bus\"\n\n    def step7(self):\n        return \"exit the bus.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class ExitTheBus:\n\n    title = \"exit the bus.\"\n    steps = 8\n\n","reference_graph":{"title":"exit the bus.","num_steps":8,"schema":["step0: Take bus to roller skating rink","step1: take a seat inside the bus","step2: wait for the bus to get to the destination","step3: wait for the bus to stop completely","step4: get up from the seat","step5: walk to the bus door","step6: get off the bus","step7: exit the bus."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"work on project","events":{"0":"Determine the best way to complete the project","1":"Check for any mistakes in completed task","2":"Change the way the work is being done as needed","3":"Begin work on the projecr","4":"Decide what is needed to complete the project","5":"decide on what to make","6":"work on project"},"context":"decide on what to make","minutes":60.0,"events_minutes":{"0":5.0,"1":10.0,"2":20.0,"3":20.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: Determine the best way to complete the project; step1: Check for any mistakes in completed task; step2: Change the way the work is being done as needed; step3: Begin work on the projecr; step4: Decide what is needed to complete the project; step5: decide on what to make; step6: work on project","flatten_input_for_script_generation":"You want to work on project. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decide on what to make; step1: Decide what is needed to complete the project; step2: Determine the best way to complete the project; step3: Begin work on the projecr; step4: Change the way the work is being done as needed; step5: Check for any mistakes in completed task; step6: work on project; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class WorkOnProject:\n\n    title = \"work on project\"\n    steps = 7\n\n    def step0(self):\n        return \"decide on what to make\"\n\n    def step1(self):\n        return \"Decide what is needed to complete the project\"\n\n    def step2(self):\n        return \"Determine the best way to complete the project\"\n\n    def step3(self):\n        return \"Begin work on the projecr\"\n\n    def step4(self):\n        return \"Change the way the work is being done as needed\"\n\n    def step5(self):\n        return \"Check for any mistakes in completed task\"\n\n    def step6(self):\n        return \"work on project\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WorkOnProject:\n\n    title = \"work on project\"\n    steps = 7\n\n","reference_graph":{"title":"work on project","num_steps":7,"schema":["step0: decide on what to make","step1: Decide what is needed to complete the project","step2: Determine the best way to complete the project","step3: Begin work on the projecr","step4: Change the way the work is being done as needed","step5: Check for any mistakes in completed task","step6: work on project"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get drug tested","events":{"0":"get in car and drive home","1":"relax for the day","2":"go to sleep","3":"walk out to car","4":"end the interview","5":"get call to take drug test","6":"ask questions about the job","7":"get drug tested"},"context":"ask questions about the job","minutes":1.0,"events_minutes":{"0":35.0,"1":360.0,"2":480.0,"3":5.0,"4":5.0,"5":5.0},"flatten_input_for_edge_prediction":"step0: get in car and drive home; step1: relax for the day; step2: go to sleep; step3: walk out to car; step4: end the interview; step5: get call to take drug test; step6: ask questions about the job; step7: get drug tested","flatten_input_for_script_generation":"You want to get drug tested. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step2; step2 -> step5; step5 -> step7; step6 -> step4","flatten_output_for_script_generation":"step0: ask questions about the job; step1: end the interview; step2: walk out to car; step3: get in car and drive home; step4: relax for the day; step5: go to sleep; step6: get call to take drug test; step7: get drug tested; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->2","2->5","3->0","4->3","5->7","6->4"],"reference_code":"class GetDrugTested:\n\n    title = \"get drug tested\"\n    steps = 8\n\n    def step0(self):\n        return \"ask questions about the job\"\n\n    def step1(self):\n        return \"end the interview\"\n\n    def step2(self):\n        return \"walk out to car\"\n\n    def step3(self):\n        return \"get in car and drive home\"\n\n    def step4(self):\n        return \"relax for the day\"\n\n    def step5(self):\n        return \"go to sleep\"\n\n    def step6(self):\n        return \"get call to take drug test\"\n\n    def step7(self):\n        return \"get drug tested\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GetDrugTested:\n\n    title = \"get drug tested\"\n    steps = 8\n\n","reference_graph":{"title":"get drug tested","num_steps":8,"schema":["step0: ask questions about the job","step1: end the interview","step2: walk out to car","step3: get in car and drive home","step4: relax for the day","step5: go to sleep","step6: get call to take drug test","step7: get drug tested"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"grill the bun","events":{"0":"wait for desired toastiness of bun","1":"find open spot on grill","2":"spread the bun apart","3":"flip bun over","4":"place bun on grill","5":"grab a bun","6":"grill the bun"},"context":"grab a bun","minutes":1.0,"events_minutes":{"0":1.0,"1":0.0833333333,"2":0.05,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: wait for desired toastiness of bun; step1: find open spot on grill; step2: spread the bun apart; step3: flip bun over; step4: place bun on grill; step5: grab a bun; step6: grill the bun","flatten_input_for_script_generation":"You want to grill the bun. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step1 -> step4; step4 -> step0; step0 -> step3; step3 -> step6; step5 -> step1; step5 -> step2","flatten_output_for_script_generation":"step0: grab a bun; step1: spread the bun apart; step2: place bun on grill; step3: wait for desired toastiness of bun; step4: find open spot on grill; step5: flip bun over; step6: grill the bun; step0 -> step1; step0 -> step4; step1 -> step2; step2 -> step3; step4 -> step2; step3 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->4","3->6","4->0","5->1","5->2"],"reference_code":"class GrillTheBun:\n\n    title = \"grill the bun\"\n    steps = 7\n\n    def step0(self):\n        return \"grab a bun\"\n\n    def step1(self):\n        return \"spread the bun apart\"\n\n    def step2(self):\n        return \"place bun on grill\"\n\n    def step3(self):\n        return \"wait for desired toastiness of bun\"\n\n    def step4(self):\n        return \"find open spot on grill\"\n\n    def step5(self):\n        return \"flip bun over\"\n\n    def step6(self):\n        return \"grill the bun\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step4 -> step2\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrillTheBun:\n\n    title = \"grill the bun\"\n    steps = 7\n\n","reference_graph":{"title":"grill the bun","num_steps":7,"schema":["step0: grab a bun","step1: spread the bun apart","step2: place bun on grill","step3: wait for desired toastiness of bun","step4: find open spot on grill","step5: flip bun over","step6: grill the bun"],"relations":["step0 -> step1","step0 -> step4","step1 -> step2","step2 -> step3","step4 -> step2","step3 -> step5","step5 -> step6"]}}
{"scenario":"click the print button in the program.","events":{"0":"Decide how many pages to print","1":"Double check the settings before printing.","2":"Adjust the document print size as needed","3":"Check any other settings","4":"Look over document","5":"open the document in the respective program.","6":"click the print button in the program."},"context":"open the document in the respective program.","minutes":1.0,"events_minutes":{"0":0.3333333333,"1":0.5,"2":0.3333333333,"3":0.5,"4":0.3333333333},"flatten_input_for_edge_prediction":"step0: Decide how many pages to print; step1: Double check the settings before printing.; step2: Adjust the document print size as needed; step3: Check any other settings; step4: Look over document; step5: open the document in the respective program.; step6: click the print button in the program.","flatten_input_for_script_generation":"You want to click the print button in the program.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step0; step0 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: open the document in the respective program.; step1: Look over document; step2: Decide how many pages to print; step3: Adjust the document print size as needed; step4: Check any other settings; step5: Double check the settings before printing.; step6: click the print button in the program.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->1","4->0","5->4"],"reference_code":"class ClickThePrintButtonInTheProgram:\n\n    title = \"click the print button in the program.\"\n    steps = 7\n\n    def step0(self):\n        return \"open the document in the respective program.\"\n\n    def step1(self):\n        return \"Look over document\"\n\n    def step2(self):\n        return \"Decide how many pages to print\"\n\n    def step3(self):\n        return \"Adjust the document print size as needed\"\n\n    def step4(self):\n        return \"Check any other settings\"\n\n    def step5(self):\n        return \"Double check the settings before printing.\"\n\n    def step6(self):\n        return \"click the print button in the program.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ClickThePrintButtonInTheProgram:\n\n    title = \"click the print button in the program.\"\n    steps = 7\n\n","reference_graph":{"title":"click the print button in the program.","num_steps":7,"schema":["step0: open the document in the respective program.","step1: Look over document","step2: Decide how many pages to print","step3: Adjust the document print size as needed","step4: Check any other settings","step5: Double check the settings before printing.","step6: click the print button in the program."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"enter the bar","events":{"0":"look for bar","1":"put left foot forward","2":"put right foot forward","3":"find the bar","4":"turn towards bar","5":"get out of the car","6":"enter the bar"},"context":"get out of the car","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for bar; step1: put left foot forward; step2: put right foot forward; step3: find the bar; step4: turn towards bar; step5: get out of the car; step6: enter the bar","flatten_input_for_script_generation":"You want to enter the bar. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step4; step4 -> step1; step4 -> step2; step1 -> step6; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get out of the car; step1: look for bar; step2: find the bar; step3: turn towards bar; step4: put left foot forward; step5: put right foot forward; step6: enter the bar; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->6","3->4","4->1","4->2","5->0"],"reference_code":"class EnterTheBar:\n\n    title = \"enter the bar\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the car\"\n\n    def step1(self):\n        return \"look for bar\"\n\n    def step2(self):\n        return \"find the bar\"\n\n    def step3(self):\n        return \"turn towards bar\"\n\n    def step4(self):\n        return \"put left foot forward\"\n\n    def step5(self):\n        return \"put right foot forward\"\n\n    def step6(self):\n        return \"enter the bar\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EnterTheBar:\n\n    title = \"enter the bar\"\n    steps = 7\n\n","reference_graph":{"title":"enter the bar","num_steps":7,"schema":["step0: get out of the car","step1: look for bar","step2: find the bar","step3: turn towards bar","step4: put left foot forward","step5: put right foot forward","step6: enter the bar"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"Store the surplus in the bank account.","events":{"0":"open front door","1":"take surplus of income","2":"go to bank","3":"talk to teller","4":"get inside car","5":"Earn a surplus of income after expenditures.","6":"Store the surplus in the bank account."},"context":"Earn a surplus of income after expenditures.","minutes":15.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: open front door; step1: take surplus of income; step2: go to bank; step3: talk to teller; step4: get inside car; step5: Earn a surplus of income after expenditures.; step6: Store the surplus in the bank account.","flatten_input_for_script_generation":"You want to Store the surplus in the bank account.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: Earn a surplus of income after expenditures.; step1: take surplus of income; step2: get inside car; step3: go to bank; step4: open front door; step5: talk to teller; step6: Store the surplus in the bank account.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->4","2->0","3->6","4->2","5->1"],"reference_code":"class StoreTheSurplusInTheBankAccount:\n\n    title = \"Store the surplus in the bank account.\"\n    steps = 7\n\n    def step0(self):\n        return \"Earn a surplus of income after expenditures.\"\n\n    def step1(self):\n        return \"take surplus of income\"\n\n    def step2(self):\n        return \"get inside car\"\n\n    def step3(self):\n        return \"go to bank\"\n\n    def step4(self):\n        return \"open front door\"\n\n    def step5(self):\n        return \"talk to teller\"\n\n    def step6(self):\n        return \"Store the surplus in the bank account.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StoreTheSurplusInTheBankAccount:\n\n    title = \"Store the surplus in the bank account.\"\n    steps = 7\n\n","reference_graph":{"title":"Store the surplus in the bank account.","num_steps":7,"schema":["step0: Earn a surplus of income after expenditures.","step1: take surplus of income","step2: get inside car","step3: go to bank","step4: open front door","step5: talk to teller","step6: Store the surplus in the bank account."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"leave the store","events":{"0":"face the exit door","1":"walk towards the door","2":"put coffee in bag","3":"turn body around","4":"grab the bag","5":"Purchase the most likable ground roast coffee","6":"leave the store"},"context":"Purchase the most likable ground roast coffee","minutes":1.0,"events_minutes":{"0":0.0333333333,"1":0.1666666667,"2":10.0,"3":0.05,"4":0.05},"flatten_input_for_edge_prediction":"step0: face the exit door; step1: walk towards the door; step2: put coffee in bag; step3: turn body around; step4: grab the bag; step5: Purchase the most likable ground roast coffee; step6: leave the store","flatten_input_for_script_generation":"You want to leave the store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step3; step3 -> step0; step0 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: Purchase the most likable ground roast coffee; step1: put coffee in bag; step2: grab the bag; step3: turn body around; step4: face the exit door; step5: walk towards the door; step6: leave the store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->0","4->3","5->2"],"reference_code":"class LeaveTheStore:\n\n    title = \"leave the store\"\n    steps = 7\n\n    def step0(self):\n        return \"Purchase the most likable ground roast coffee\"\n\n    def step1(self):\n        return \"put coffee in bag\"\n\n    def step2(self):\n        return \"grab the bag\"\n\n    def step3(self):\n        return \"turn body around\"\n\n    def step4(self):\n        return \"face the exit door\"\n\n    def step5(self):\n        return \"walk towards the door\"\n\n    def step6(self):\n        return \"leave the store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class LeaveTheStore:\n\n    title = \"leave the store\"\n    steps = 7\n\n","reference_graph":{"title":"leave the store","num_steps":7,"schema":["step0: Purchase the most likable ground roast coffee","step1: put coffee in bag","step2: grab the bag","step3: turn body around","step4: face the exit door","step5: walk towards the door","step6: leave the store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"park the car","events":{"0":"move car between the lines","1":"turn off car","2":"look for parking spot","3":"find parking spot","4":"make sure car is between lines","5":"drive to where the boating trip is","6":"park the car"},"context":"drive to where the boating trip is","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: move car between the lines; step1: turn off car; step2: look for parking spot; step3: find parking spot; step4: make sure car is between lines; step5: drive to where the boating trip is; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step0; step0 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to where the boating trip is; step1: look for parking spot; step2: find parking spot; step3: move car between the lines; step4: make sure car is between lines; step5: turn off car; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->0","4->1","5->2"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to where the boating trip is\"\n\n    def step1(self):\n        return \"look for parking spot\"\n\n    def step2(self):\n        return \"find parking spot\"\n\n    def step3(self):\n        return \"move car between the lines\"\n\n    def step4(self):\n        return \"make sure car is between lines\"\n\n    def step5(self):\n        return \"turn off car\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to where the boating trip is","step1: look for parking spot","step2: find parking spot","step3: move car between the lines","step4: make sure car is between lines","step5: turn off car","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Give status report to boss.","events":{"0":"read the task list","1":"decide which task to do first","2":"do the remaining tasks","3":"go to the boss","4":"describe task progress to the boss","5":"do that task","6":"Work on list.","7":"Give status report to boss."},"context":"Work on list.","minutes":60.0,"events_minutes":{"0":1.0,"1":0.5,"2":420.0,"3":2.0,"4":2.0,"5":60.0},"flatten_input_for_edge_prediction":"step0: read the task list; step1: decide which task to do first; step2: do the remaining tasks; step3: go to the boss; step4: describe task progress to the boss; step5: do that task; step6: Work on list.; step7: Give status report to boss.","flatten_input_for_script_generation":"You want to Give status report to boss.. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step5; step5 -> step2; step2 -> step3; step3 -> step4; step4 -> step7; step6 -> step0","flatten_output_for_script_generation":"step0: Work on list.; step1: read the task list; step2: decide which task to do first; step3: do that task; step4: do the remaining tasks; step5: go to the boss; step6: describe task progress to the boss; step7: Give status report to boss.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->1","1->5","2->3","3->4","4->7","5->2","6->0"],"reference_code":"class GiveStatusReportToBoss:\n\n    title = \"Give status report to boss.\"\n    steps = 8\n\n    def step0(self):\n        return \"Work on list.\"\n\n    def step1(self):\n        return \"read the task list\"\n\n    def step2(self):\n        return \"decide which task to do first\"\n\n    def step3(self):\n        return \"do that task\"\n\n    def step4(self):\n        return \"do the remaining tasks\"\n\n    def step5(self):\n        return \"go to the boss\"\n\n    def step6(self):\n        return \"describe task progress to the boss\"\n\n    def step7(self):\n        return \"Give status report to boss.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class GiveStatusReportToBoss:\n\n    title = \"Give status report to boss.\"\n    steps = 8\n\n","reference_graph":{"title":"Give status report to boss.","num_steps":8,"schema":["step0: Work on list.","step1: read the task list","step2: decide which task to do first","step3: do that task","step4: do the remaining tasks","step5: go to the boss","step6: describe task progress to the boss","step7: Give status report to boss."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"Give the draft to the editor","events":{"0":"attach the draft","1":"call the editor","2":"fix any typos","3":"open an email program","4":"run a spell checker","5":"tell the editor to expect the draft","6":"hit the send button","7":"Read through the draft","8":"Give the draft to the editor"},"context":"Read through the draft","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":1.0,"2":10.0,"3":0.1666666667,"4":0.25,"5":2.0,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: attach the draft; step1: call the editor; step2: fix any typos; step3: open an email program; step4: run a spell checker; step5: tell the editor to expect the draft; step6: hit the send button; step7: Read through the draft; step8: Give the draft to the editor","flatten_input_for_script_generation":"You want to Give the draft to the editor. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step2; step2 -> step3; step1 -> step5; step5 -> step3; step3 -> step0; step0 -> step6; step6 -> step8; step7 -> step4; step7 -> step1","flatten_output_for_script_generation":"step0: Read through the draft; step1: call the editor; step2: run a spell checker; step3: fix any typos; step4: open an email program; step5: attach the draft; step6: tell the editor to expect the draft; step7: hit the send button; step8: Give the draft to the editor; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step1 -> step6; step6 -> step4; step5 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->5","2->3","3->0","4->2","5->3","6->8","7->4","7->1"],"reference_code":"class GiveTheDraftToTheEditor:\n\n    title = \"Give the draft to the editor\"\n    steps = 9\n\n    def step0(self):\n        return \"Read through the draft\"\n\n    def step1(self):\n        return \"call the editor\"\n\n    def step2(self):\n        return \"run a spell checker\"\n\n    def step3(self):\n        return \"fix any typos\"\n\n    def step4(self):\n        return \"open an email program\"\n\n    def step5(self):\n        return \"attach the draft\"\n\n    def step6(self):\n        return \"tell the editor to expect the draft\"\n\n    def step7(self):\n        return \"hit the send button\"\n\n    def step8(self):\n        return \"Give the draft to the editor\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step1 -> step6\",\n            \"step6 -> step4\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class GiveTheDraftToTheEditor:\n\n    title = \"Give the draft to the editor\"\n    steps = 9\n\n","reference_graph":{"title":"Give the draft to the editor","num_steps":9,"schema":["step0: Read through the draft","step1: call the editor","step2: run a spell checker","step3: fix any typos","step4: open an email program","step5: attach the draft","step6: tell the editor to expect the draft","step7: hit the send button","step8: Give the draft to the editor"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step1 -> step6","step6 -> step4","step5 -> step7","step7 -> step8"]}}
{"scenario":"talk to receptionist","events":{"0":"Make sure receptionist isn't too busy","1":"Wait for receptionist to respond","2":"Walk toward where receptionist is located","3":"Look receptionist in the eye","4":"Speak to the receptionist","5":"go inside the shop","6":"talk to receptionist"},"context":"go inside the shop","minutes":2.0,"events_minutes":{"0":0.25,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":0.25},"flatten_input_for_edge_prediction":"step0: Make sure receptionist isn't too busy; step1: Wait for receptionist to respond; step2: Walk toward where receptionist is located; step3: Look receptionist in the eye; step4: Speak to the receptionist; step5: go inside the shop; step6: talk to receptionist","flatten_input_for_script_generation":"You want to talk to receptionist. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: go inside the shop; step1: Walk toward where receptionist is located; step2: Make sure receptionist isn't too busy; step3: Look receptionist in the eye; step4: Speak to the receptionist; step5: Wait for receptionist to respond; step6: talk to receptionist; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->0","3->4","4->1","5->2"],"reference_code":"class TalkToReceptionist:\n\n    title = \"talk to receptionist\"\n    steps = 7\n\n    def step0(self):\n        return \"go inside the shop\"\n\n    def step1(self):\n        return \"Walk toward where receptionist is located\"\n\n    def step2(self):\n        return \"Make sure receptionist isn't too busy\"\n\n    def step3(self):\n        return \"Look receptionist in the eye\"\n\n    def step4(self):\n        return \"Speak to the receptionist\"\n\n    def step5(self):\n        return \"Wait for receptionist to respond\"\n\n    def step6(self):\n        return \"talk to receptionist\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class TalkToReceptionist:\n\n    title = \"talk to receptionist\"\n    steps = 7\n\n","reference_graph":{"title":"talk to receptionist","num_steps":7,"schema":["step0: go inside the shop","step1: Walk toward where receptionist is located","step2: Make sure receptionist isn't too busy","step3: Look receptionist in the eye","step4: Speak to the receptionist","step5: Wait for receptionist to respond","step6: talk to receptionist"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab keys and lock the door to the house","events":{"0":"find the keys","1":"walk outside the door","2":"walk to front door","3":"open the door","4":"take the keys","5":"double check hair and makeup in mirror","6":"grab keys and lock the door to the house"},"context":"double check hair and makeup in mirror","minutes":1.0,"events_minutes":{"0":1.0,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: find the keys; step1: walk outside the door; step2: walk to front door; step3: open the door; step4: take the keys; step5: double check hair and makeup in mirror; step6: grab keys and lock the door to the house","flatten_input_for_script_generation":"You want to grab keys and lock the door to the house. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step2; step2 -> step3; step3 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: double check hair and makeup in mirror; step1: find the keys; step2: take the keys; step3: walk to front door; step4: open the door; step5: walk outside the door; step6: grab keys and lock the door to the house; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->3","3->1","4->2","5->0"],"reference_code":"class GrabKeysAndLockTheDoorToTheHouse:\n\n    title = \"grab keys and lock the door to the house\"\n    steps = 7\n\n    def step0(self):\n        return \"double check hair and makeup in mirror\"\n\n    def step1(self):\n        return \"find the keys\"\n\n    def step2(self):\n        return \"take the keys\"\n\n    def step3(self):\n        return \"walk to front door\"\n\n    def step4(self):\n        return \"open the door\"\n\n    def step5(self):\n        return \"walk outside the door\"\n\n    def step6(self):\n        return \"grab keys and lock the door to the house\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabKeysAndLockTheDoorToTheHouse:\n\n    title = \"grab keys and lock the door to the house\"\n    steps = 7\n\n","reference_graph":{"title":"grab keys and lock the door to the house","num_steps":7,"schema":["step0: double check hair and makeup in mirror","step1: find the keys","step2: take the keys","step3: walk to front door","step4: open the door","step5: walk outside the door","step6: grab keys and lock the door to the house"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get friends encouragement","events":{"0":"feel proud of encouragement","1":"thank friend for encouragement","2":"listen to what friend has to say","3":"turn head toward friend","4":"smile at friend","5":"ask friends if skills are improving","6":"get friends encouragement"},"context":"ask friends if skills are improving","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: feel proud of encouragement; step1: thank friend for encouragement; step2: listen to what friend has to say; step3: turn head toward friend; step4: smile at friend; step5: ask friends if skills are improving; step6: get friends encouragement","flatten_input_for_script_generation":"You want to get friends encouragement. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step4; step3 -> step2; step2 -> step1; step4 -> step6; step1 -> step0; step0 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: ask friends if skills are improving; step1: turn head toward friend; step2: smile at friend; step3: listen to what friend has to say; step4: get friends encouragement; step5: thank friend for encouragement; step6: feel proud of encouragement; step0 -> step1; step1 -> step2; step1 -> step3; step2 -> step4; step3 -> step5; step5 -> step6; step6 -> step4","gold_edges_for_prediction":["0->6","1->0","2->1","3->4","3->2","4->6","5->3"],"reference_code":"class GetFriendsEncouragement:\n\n    title = \"get friends encouragement\"\n    steps = 7\n\n    def step0(self):\n        return \"ask friends if skills are improving\"\n\n    def step1(self):\n        return \"turn head toward friend\"\n\n    def step2(self):\n        return \"smile at friend\"\n\n    def step3(self):\n        return \"listen to what friend has to say\"\n\n    def step4(self):\n        return \"get friends encouragement\"\n\n    def step5(self):\n        return \"thank friend for encouragement\"\n\n    def step6(self):\n        return \"feel proud of encouragement\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step1 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step4\",\n        ]\n","input_prompt_code":"class GetFriendsEncouragement:\n\n    title = \"get friends encouragement\"\n    steps = 7\n\n","reference_graph":{"title":"get friends encouragement","num_steps":7,"schema":["step0: ask friends if skills are improving","step1: turn head toward friend","step2: smile at friend","step3: listen to what friend has to say","step4: get friends encouragement","step5: thank friend for encouragement","step6: feel proud of encouragement"],"relations":["step0 -> step1","step1 -> step2","step1 -> step3","step2 -> step4","step3 -> step5","step5 -> step6","step6 -> step4"]}}
{"scenario":"get up and in position.","events":{"0":"stabilize feet once upright","1":"align body while being pulled","2":"ensure proper position before pulling","3":"pull up with opposing force","4":"wait for counter grip","5":"grip the hand tightly.","6":"get up and in position."},"context":"grip the hand tightly.","minutes":0.6666666667,"events_minutes":{"0":0.0333333333,"1":0.0333333333,"2":0.0333333333,"3":0.0333333333,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: stabilize feet once upright; step1: align body while being pulled; step2: ensure proper position before pulling; step3: pull up with opposing force; step4: wait for counter grip; step5: grip the hand tightly.; step6: get up and in position.","flatten_input_for_script_generation":"You want to get up and in position.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step1 -> step0; step0 -> step6; step3 -> step1; step2 -> step3; step5 -> step4; step5 -> step2","flatten_output_for_script_generation":"step0: grip the hand tightly.; step1: ensure proper position before pulling; step2: wait for counter grip; step3: pull up with opposing force; step4: align body while being pulled; step5: stabilize feet once upright; step6: get up and in position.; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step3","gold_edges_for_prediction":["0->6","1->0","2->3","3->1","4->3","5->4","5->2"],"reference_code":"class GetUpAndInPosition:\n\n    title = \"get up and in position.\"\n    steps = 7\n\n    def step0(self):\n        return \"grip the hand tightly.\"\n\n    def step1(self):\n        return \"ensure proper position before pulling\"\n\n    def step2(self):\n        return \"wait for counter grip\"\n\n    def step3(self):\n        return \"pull up with opposing force\"\n\n    def step4(self):\n        return \"align body while being pulled\"\n\n    def step5(self):\n        return \"stabilize feet once upright\"\n\n    def step6(self):\n        return \"get up and in position.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step3\",\n        ]\n","input_prompt_code":"class GetUpAndInPosition:\n\n    title = \"get up and in position.\"\n    steps = 7\n\n","reference_graph":{"title":"get up and in position.","num_steps":7,"schema":["step0: grip the hand tightly.","step1: ensure proper position before pulling","step2: wait for counter grip","step3: pull up with opposing force","step4: align body while being pulled","step5: stabilize feet once upright","step6: get up and in position."],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step3"]}}
{"scenario":"call the second person on the list","events":{"0":"bring phone up to face.","1":"select second person in contacts.","2":"look at phone screen.","3":"navigate to contacts on phone.","4":"pres call button to call.","5":"look up second person in contacts.","6":"receive yes, hang up","7":"call the second person on the list"},"context":"receive yes, hang up","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0333333333,"2":0.0333333333,"3":0.05,"4":0.0333333333,"5":0.0833333333},"flatten_input_for_edge_prediction":"step0: bring phone up to face.; step1: select second person in contacts.; step2: look at phone screen.; step3: navigate to contacts on phone.; step4: pres call button to call.; step5: look up second person in contacts.; step6: receive yes, hang up; step7: call the second person on the list","flatten_input_for_script_generation":"You want to call the second person on the list. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step5; step5 -> step1; step1 -> step4; step4 -> step0; step0 -> step7; step6 -> step2","flatten_output_for_script_generation":"step0: receive yes, hang up; step1: look at phone screen.; step2: navigate to contacts on phone.; step3: look up second person in contacts.; step4: select second person in contacts.; step5: pres call button to call.; step6: bring phone up to face.; step7: call the second person on the list; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->7","1->4","2->3","3->5","4->0","5->1","6->2"],"reference_code":"class CallTheSecondPersonOnTheList:\n\n    title = \"call the second person on the list\"\n    steps = 8\n\n    def step0(self):\n        return \"receive yes, hang up\"\n\n    def step1(self):\n        return \"look at phone screen.\"\n\n    def step2(self):\n        return \"navigate to contacts on phone.\"\n\n    def step3(self):\n        return \"look up second person in contacts.\"\n\n    def step4(self):\n        return \"select second person in contacts.\"\n\n    def step5(self):\n        return \"pres call button to call.\"\n\n    def step6(self):\n        return \"bring phone up to face.\"\n\n    def step7(self):\n        return \"call the second person on the list\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class CallTheSecondPersonOnTheList:\n\n    title = \"call the second person on the list\"\n    steps = 8\n\n","reference_graph":{"title":"call the second person on the list","num_steps":8,"schema":["step0: receive yes, hang up","step1: look at phone screen.","step2: navigate to contacts on phone.","step3: look up second person in contacts.","step4: select second person in contacts.","step5: pres call button to call.","step6: bring phone up to face.","step7: call the second person on the list"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"walk into grocery store","events":{"0":"turn towards store","1":"look for grocery store","2":"lift left foot","3":"find grocery store","4":"lift right foot","5":"get out of the car","6":"walk into grocery store"},"context":"get out of the car","minutes":2.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: turn towards store; step1: look for grocery store; step2: lift left foot; step3: find grocery store; step4: lift right foot; step5: get out of the car; step6: walk into grocery store","flatten_input_for_script_generation":"You want to walk into grocery store. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step3; step3 -> step0; step0 -> step2; step0 -> step4; step2 -> step6; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: get out of the car; step1: look for grocery store; step2: find grocery store; step3: turn towards store; step4: lift left foot; step5: lift right foot; step6: walk into grocery store; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->2","0->4","1->3","2->6","3->0","4->6","5->1"],"reference_code":"class WalkIntoGroceryStore:\n\n    title = \"walk into grocery store\"\n    steps = 7\n\n    def step0(self):\n        return \"get out of the car\"\n\n    def step1(self):\n        return \"look for grocery store\"\n\n    def step2(self):\n        return \"find grocery store\"\n\n    def step3(self):\n        return \"turn towards store\"\n\n    def step4(self):\n        return \"lift left foot\"\n\n    def step5(self):\n        return \"lift right foot\"\n\n    def step6(self):\n        return \"walk into grocery store\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkIntoGroceryStore:\n\n    title = \"walk into grocery store\"\n    steps = 7\n\n","reference_graph":{"title":"walk into grocery store","num_steps":7,"schema":["step0: get out of the car","step1: look for grocery store","step2: find grocery store","step3: turn towards store","step4: lift left foot","step5: lift right foot","step6: walk into grocery store"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"make shopping list for needed items","events":{"0":"grab a pen","1":"use the pen to write on the paper","2":"think of the items needed","3":"double check the list","4":"grab a piece of paper","5":"cross off items already in possession","6":"make shopping list for needed items"},"context":"cross off items already in possession","minutes":5.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":2.0,"3":0.3333333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grab a pen; step1: use the pen to write on the paper; step2: think of the items needed; step3: double check the list; step4: grab a piece of paper; step5: cross off items already in possession; step6: make shopping list for needed items","flatten_input_for_script_generation":"You want to make shopping list for needed items. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step0 -> step4; step4 -> step2; step1 -> step3; step3 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: cross off items already in possession; step1: grab a pen; step2: think of the items needed; step3: use the pen to write on the paper; step4: double check the list; step5: grab a piece of paper; step6: make shopping list for needed items; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step2; step4 -> step6","gold_edges_for_prediction":["0->4","1->3","2->1","3->6","4->2","5->0"],"reference_code":"class MakeShoppingListForNeededItems:\n\n    title = \"make shopping list for needed items\"\n    steps = 7\n\n    def step0(self):\n        return \"cross off items already in possession\"\n\n    def step1(self):\n        return \"grab a pen\"\n\n    def step2(self):\n        return \"think of the items needed\"\n\n    def step3(self):\n        return \"use the pen to write on the paper\"\n\n    def step4(self):\n        return \"double check the list\"\n\n    def step5(self):\n        return \"grab a piece of paper\"\n\n    def step6(self):\n        return \"make shopping list for needed items\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step2\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class MakeShoppingListForNeededItems:\n\n    title = \"make shopping list for needed items\"\n    steps = 7\n\n","reference_graph":{"title":"make shopping list for needed items","num_steps":7,"schema":["step0: cross off items already in possession","step1: grab a pen","step2: think of the items needed","step3: use the pen to write on the paper","step4: double check the list","step5: grab a piece of paper","step6: make shopping list for needed items"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step2","step4 -> step6"]}}
{"scenario":"Open the hatch of car","events":{"0":"Unlock the hatch","1":"Grab the hatch handle","2":"Lift up the hatch","3":"Reach towards the hatch","4":"Open the hatch with the handle","5":"Walk to car with plant","6":"Open the hatch of car"},"context":"Walk to car with plant","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0333333333,"2":0.0333333333,"3":0.0166666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: Unlock the hatch; step1: Grab the hatch handle; step2: Lift up the hatch; step3: Reach towards the hatch; step4: Open the hatch with the handle; step5: Walk to car with plant; step6: Open the hatch of car","flatten_input_for_script_generation":"You want to Open the hatch of car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step1; step1 -> step4; step4 -> step2; step2 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: Walk to car with plant; step1: Reach towards the hatch; step2: Unlock the hatch; step3: Grab the hatch handle; step4: Open the hatch with the handle; step5: Lift up the hatch; step6: Open the hatch of car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->6","3->0","4->2","5->3"],"reference_code":"class OpenTheHatchOfCar:\n\n    title = \"Open the hatch of car\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk to car with plant\"\n\n    def step1(self):\n        return \"Reach towards the hatch\"\n\n    def step2(self):\n        return \"Unlock the hatch\"\n\n    def step3(self):\n        return \"Grab the hatch handle\"\n\n    def step4(self):\n        return \"Open the hatch with the handle\"\n\n    def step5(self):\n        return \"Lift up the hatch\"\n\n    def step6(self):\n        return \"Open the hatch of car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheHatchOfCar:\n\n    title = \"Open the hatch of car\"\n    steps = 7\n\n","reference_graph":{"title":"Open the hatch of car","num_steps":7,"schema":["step0: Walk to car with plant","step1: Reach towards the hatch","step2: Unlock the hatch","step3: Grab the hatch handle","step4: Open the hatch with the handle","step5: Lift up the hatch","step6: Open the hatch of car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"move left foot forward","events":{"0":"Push toe up","1":"Lift knee up","2":"Lift heel up","3":"Move lower leg forward","4":"Place foot on ground","5":"begin to walk down the aisle","6":"move left foot forward"},"context":"begin to walk down the aisle","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: Push toe up; step1: Lift knee up; step2: Lift heel up; step3: Move lower leg forward; step4: Place foot on ground; step5: begin to walk down the aisle; step6: move left foot forward","flatten_input_for_script_generation":"You want to move left foot forward. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step0 -> step1; step1 -> step3; step3 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: begin to walk down the aisle; step1: Lift heel up; step2: Push toe up; step3: Lift knee up; step4: Move lower leg forward; step5: Place foot on ground; step6: move left foot forward; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->3","2->0","3->4","4->6","5->2"],"reference_code":"class MoveLeftFootForward:\n\n    title = \"move left foot forward\"\n    steps = 7\n\n    def step0(self):\n        return \"begin to walk down the aisle\"\n\n    def step1(self):\n        return \"Lift heel up\"\n\n    def step2(self):\n        return \"Push toe up\"\n\n    def step3(self):\n        return \"Lift knee up\"\n\n    def step4(self):\n        return \"Move lower leg forward\"\n\n    def step5(self):\n        return \"Place foot on ground\"\n\n    def step6(self):\n        return \"move left foot forward\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class MoveLeftFootForward:\n\n    title = \"move left foot forward\"\n    steps = 7\n\n","reference_graph":{"title":"move left foot forward","num_steps":7,"schema":["step0: begin to walk down the aisle","step1: Lift heel up","step2: Push toe up","step3: Lift knee up","step4: Move lower leg forward","step5: Place foot on ground","step6: move left foot forward"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"get out of the car","events":{"0":"put right foot out of car","1":"take key out of ignition","2":"open the door","3":"put left foot out of car","4":"unlock the door","5":"find a parking space","6":"get out of the car"},"context":"find a parking space","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put right foot out of car; step1: take key out of ignition; step2: open the door; step3: put left foot out of car; step4: unlock the door; step5: find a parking space; step6: get out of the car","flatten_input_for_script_generation":"You want to get out of the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step1 -> step4; step4 -> step2; step2 -> step3; step2 -> step0; step3 -> step6; step0 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: find a parking space; step1: take key out of ignition; step2: unlock the door; step3: open the door; step4: put left foot out of car; step5: put right foot out of car; step6: get out of the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step3 -> step5; step4 -> step6; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","2->0","3->6","4->2","5->1"],"reference_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n    def step0(self):\n        return \"find a parking space\"\n\n    def step1(self):\n        return \"take key out of ignition\"\n\n    def step2(self):\n        return \"unlock the door\"\n\n    def step3(self):\n        return \"open the door\"\n\n    def step4(self):\n        return \"put left foot out of car\"\n\n    def step5(self):\n        return \"put right foot out of car\"\n\n    def step6(self):\n        return \"get out of the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GetOutOfTheCar:\n\n    title = \"get out of the car\"\n    steps = 7\n\n","reference_graph":{"title":"get out of the car","num_steps":7,"schema":["step0: find a parking space","step1: take key out of ignition","step2: unlock the door","step3: open the door","step4: put left foot out of car","step5: put right foot out of car","step6: get out of the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step3 -> step5","step4 -> step6","step5 -> step6"]}}
{"scenario":"open the uber door","events":{"0":"grasp the door handle","1":"listen for latch to open","2":"pull up on the door handle","3":"reach hand towards door handle","4":"pull handle to open door","5":"greet the driver","6":"open the uber door"},"context":"greet the driver","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0166666667,"2":0.0833333333,"3":0.0833333333,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: grasp the door handle; step1: listen for latch to open; step2: pull up on the door handle; step3: reach hand towards door handle; step4: pull handle to open door; step5: greet the driver; step6: open the uber door","flatten_input_for_script_generation":"You want to open the uber door. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step0; step0 -> step2; step2 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: greet the driver; step1: reach hand towards door handle; step2: grasp the door handle; step3: pull up on the door handle; step4: listen for latch to open; step5: pull handle to open door; step6: open the uber door; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->4","2->1","3->0","4->6","5->3"],"reference_code":"class OpenTheUberDoor:\n\n    title = \"open the uber door\"\n    steps = 7\n\n    def step0(self):\n        return \"greet the driver\"\n\n    def step1(self):\n        return \"reach hand towards door handle\"\n\n    def step2(self):\n        return \"grasp the door handle\"\n\n    def step3(self):\n        return \"pull up on the door handle\"\n\n    def step4(self):\n        return \"listen for latch to open\"\n\n    def step5(self):\n        return \"pull handle to open door\"\n\n    def step6(self):\n        return \"open the uber door\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheUberDoor:\n\n    title = \"open the uber door\"\n    steps = 7\n\n","reference_graph":{"title":"open the uber door","num_steps":7,"schema":["step0: greet the driver","step1: reach hand towards door handle","step2: grasp the door handle","step3: pull up on the door handle","step4: listen for latch to open","step5: pull handle to open door","step6: open the uber door"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"continue baking more","events":{"0":"open the oven when ready","1":"preheat the oven","2":"gather the ingredients","3":"prepare the ingredients","4":"put ingredients in oven","5":"decide to bake double the amount","6":"continue baking more"},"context":"decide to bake double the amount","minutes":60.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":1.0,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: open the oven when ready; step1: preheat the oven; step2: gather the ingredients; step3: prepare the ingredients; step4: put ingredients in oven; step5: decide to bake double the amount; step6: continue baking more","flatten_input_for_script_generation":"You want to continue baking more. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step1 -> step0; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step2; step5 -> step1","flatten_output_for_script_generation":"step0: decide to bake double the amount; step1: preheat the oven; step2: gather the ingredients; step3: prepare the ingredients; step4: open the oven when ready; step5: put ingredients in oven; step6: continue baking more; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->0","4->6","5->2","5->1"],"reference_code":"class ContinueBakingMore:\n\n    title = \"continue baking more\"\n    steps = 7\n\n    def step0(self):\n        return \"decide to bake double the amount\"\n\n    def step1(self):\n        return \"preheat the oven\"\n\n    def step2(self):\n        return \"gather the ingredients\"\n\n    def step3(self):\n        return \"prepare the ingredients\"\n\n    def step4(self):\n        return \"open the oven when ready\"\n\n    def step5(self):\n        return \"put ingredients in oven\"\n\n    def step6(self):\n        return \"continue baking more\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ContinueBakingMore:\n\n    title = \"continue baking more\"\n    steps = 7\n\n","reference_graph":{"title":"continue baking more","num_steps":7,"schema":["step0: decide to bake double the amount","step1: preheat the oven","step2: gather the ingredients","step3: prepare the ingredients","step4: open the oven when ready","step5: put ingredients in oven","step6: continue baking more"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Describe what the gun will be used for","events":{"0":"open mouth to speak","1":"think of the words to describe the purpose","2":"use mouth to form the words.","3":"walk to the salesperson","4":"face the salesperson","5":"Find a salesperson","6":"Describe what the gun will be used for"},"context":"Find a salesperson","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0833333333,"2":0.0333333333,"3":0.1666666667,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: open mouth to speak; step1: think of the words to describe the purpose; step2: use mouth to form the words.; step3: walk to the salesperson; step4: face the salesperson; step5: Find a salesperson; step6: Describe what the gun will be used for","flatten_input_for_script_generation":"You want to Describe what the gun will be used for. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step4 -> step3; step1 -> step0; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Find a salesperson; step1: face the salesperson; step2: walk to the salesperson; step3: think of the words to describe the purpose; step4: open mouth to speak; step5: use mouth to form the words.; step6: Describe what the gun will be used for; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->0","2->6","3->1","4->3","5->4"],"reference_code":"class DescribeWhatTheGunWillBeUsedFor:\n\n    title = \"Describe what the gun will be used for\"\n    steps = 7\n\n    def step0(self):\n        return \"Find a salesperson\"\n\n    def step1(self):\n        return \"face the salesperson\"\n\n    def step2(self):\n        return \"walk to the salesperson\"\n\n    def step3(self):\n        return \"think of the words to describe the purpose\"\n\n    def step4(self):\n        return \"open mouth to speak\"\n\n    def step5(self):\n        return \"use mouth to form the words.\"\n\n    def step6(self):\n        return \"Describe what the gun will be used for\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class DescribeWhatTheGunWillBeUsedFor:\n\n    title = \"Describe what the gun will be used for\"\n    steps = 7\n\n","reference_graph":{"title":"Describe what the gun will be used for","num_steps":7,"schema":["step0: Find a salesperson","step1: face the salesperson","step2: walk to the salesperson","step3: think of the words to describe the purpose","step4: open mouth to speak","step5: use mouth to form the words.","step6: Describe what the gun will be used for"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step4 -> step5","step5 -> step6"]}}
{"scenario":"Grab a shopping cart","events":{"0":"put right foot forward","1":"put left foot forward","2":"walk towards shopping carts","3":"find shopping carts","4":"look for shopping carts","5":"Walk up to the store entrance.","6":"Grab a shopping cart"},"context":"Walk up to the store entrance.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: put right foot forward; step1: put left foot forward; step2: walk towards shopping carts; step3: find shopping carts; step4: look for shopping carts; step5: Walk up to the store entrance.; step6: Grab a shopping cart","flatten_input_for_script_generation":"You want to Grab a shopping cart. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step1; step3 -> step0; step1 -> step2; step0 -> step2; step2 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: Walk up to the store entrance.; step1: look for shopping carts; step2: find shopping carts; step3: put left foot forward; step4: put right foot forward; step5: walk towards shopping carts; step6: Grab a shopping cart; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->2","2->6","3->1","3->0","4->3","5->4"],"reference_code":"class GrabAShoppingCart:\n\n    title = \"Grab a shopping cart\"\n    steps = 7\n\n    def step0(self):\n        return \"Walk up to the store entrance.\"\n\n    def step1(self):\n        return \"look for shopping carts\"\n\n    def step2(self):\n        return \"find shopping carts\"\n\n    def step3(self):\n        return \"put left foot forward\"\n\n    def step4(self):\n        return \"put right foot forward\"\n\n    def step5(self):\n        return \"walk towards shopping carts\"\n\n    def step6(self):\n        return \"Grab a shopping cart\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabAShoppingCart:\n\n    title = \"Grab a shopping cart\"\n    steps = 7\n\n","reference_graph":{"title":"Grab a shopping cart","num_steps":7,"schema":["step0: Walk up to the store entrance.","step1: look for shopping carts","step2: find shopping carts","step3: put left foot forward","step4: put right foot forward","step5: walk towards shopping carts","step6: Grab a shopping cart"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"pull over protective vest and secure","events":{"0":"figure out how vest works","1":"put head through hole","2":"pull down vest","3":"locate the vest","4":"secure the vest","5":"put on protective undergarments","6":"pull over protective vest and secure"},"context":"put on protective undergarments","minutes":1.0,"events_minutes":{"0":1.0,"1":0.1666666667,"2":0.1666666667,"3":0.1666666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: figure out how vest works; step1: put head through hole; step2: pull down vest; step3: locate the vest; step4: secure the vest; step5: put on protective undergarments; step6: pull over protective vest and secure","flatten_input_for_script_generation":"You want to pull over protective vest and secure. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step0 -> step1; step1 -> step2; step2 -> step4; step4 -> step6; step5 -> step3; step5 -> step0","flatten_output_for_script_generation":"step0: put on protective undergarments; step1: figure out how vest works; step2: locate the vest; step3: put head through hole; step4: pull down vest; step5: secure the vest; step6: pull over protective vest and secure; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step3; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->2","2->4","3->1","4->6","5->3","5->0"],"reference_code":"class PullOverProtectiveVestAndSecure:\n\n    title = \"pull over protective vest and secure\"\n    steps = 7\n\n    def step0(self):\n        return \"put on protective undergarments\"\n\n    def step1(self):\n        return \"figure out how vest works\"\n\n    def step2(self):\n        return \"locate the vest\"\n\n    def step3(self):\n        return \"put head through hole\"\n\n    def step4(self):\n        return \"pull down vest\"\n\n    def step5(self):\n        return \"secure the vest\"\n\n    def step6(self):\n        return \"pull over protective vest and secure\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PullOverProtectiveVestAndSecure:\n\n    title = \"pull over protective vest and secure\"\n    steps = 7\n\n","reference_graph":{"title":"pull over protective vest and secure","num_steps":7,"schema":["step0: put on protective undergarments","step1: figure out how vest works","step2: locate the vest","step3: put head through hole","step4: pull down vest","step5: secure the vest","step6: pull over protective vest and secure"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step3","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to main gym","events":{"0":"Lift left foot","1":"Lift right foot","2":"Move left foot forward","3":"Stop when destination is reached","4":"Locate main gym with sight","5":"Position body towards main gym","6":"Move right foot forward","7":"Walk through entrance of gym.","8":"walk to main gym"},"context":"Walk through entrance of gym.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.1666666667,"4":0.0833333333,"5":0.0333333333,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Lift left foot; step1: Lift right foot; step2: Move left foot forward; step3: Stop when destination is reached; step4: Locate main gym with sight; step5: Position body towards main gym; step6: Move right foot forward; step7: Walk through entrance of gym.; step8: walk to main gym","flatten_input_for_script_generation":"You want to walk to main gym. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step5; step5 -> step0; step5 -> step1; step0 -> step2; step2 -> step3; step1 -> step6; step6 -> step3; step3 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: Walk through entrance of gym.; step1: Locate main gym with sight; step2: Position body towards main gym; step3: Lift left foot; step4: Lift right foot; step5: Move left foot forward; step6: Move right foot forward; step7: Stop when destination is reached; step8: walk to main gym; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step7 -> step8; step6 -> step7","gold_edges_for_prediction":["0->2","1->6","2->3","3->8","4->5","5->0","5->1","6->3","7->4"],"reference_code":"class WalkToMainGym:\n\n    title = \"walk to main gym\"\n    steps = 9\n\n    def step0(self):\n        return \"Walk through entrance of gym.\"\n\n    def step1(self):\n        return \"Locate main gym with sight\"\n\n    def step2(self):\n        return \"Position body towards main gym\"\n\n    def step3(self):\n        return \"Lift left foot\"\n\n    def step4(self):\n        return \"Lift right foot\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Stop when destination is reached\"\n\n    def step8(self):\n        return \"walk to main gym\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step7 -> step8\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkToMainGym:\n\n    title = \"walk to main gym\"\n    steps = 9\n\n","reference_graph":{"title":"walk to main gym","num_steps":9,"schema":["step0: Walk through entrance of gym.","step1: Locate main gym with sight","step2: Position body towards main gym","step3: Lift left foot","step4: Lift right foot","step5: Move left foot forward","step6: Move right foot forward","step7: Stop when destination is reached","step8: walk to main gym"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step7 -> step8","step6 -> step7"]}}
{"scenario":"climb the steps.","events":{"0":"look for the steps","1":"find the steps","2":"lift body up","3":"put right foot on step","4":"put left foot on step","5":"Enter bus through steps.","6":"climb the steps."},"context":"Enter bus through steps.","minutes":0.5,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for the steps; step1: find the steps; step2: lift body up; step3: put right foot on step; step4: put left foot on step; step5: Enter bus through steps.; step6: climb the steps.","flatten_input_for_script_generation":"You want to climb the steps.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step1 -> step3; step4 -> step2; step3 -> step2; step2 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: Enter bus through steps.; step1: look for the steps; step2: find the steps; step3: put left foot on step; step4: put right foot on step; step5: lift body up; step6: climb the steps.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","1->3","2->6","3->2","4->2","5->0"],"reference_code":"class ClimbTheSteps:\n\n    title = \"climb the steps.\"\n    steps = 7\n\n    def step0(self):\n        return \"Enter bus through steps.\"\n\n    def step1(self):\n        return \"look for the steps\"\n\n    def step2(self):\n        return \"find the steps\"\n\n    def step3(self):\n        return \"put left foot on step\"\n\n    def step4(self):\n        return \"put right foot on step\"\n\n    def step5(self):\n        return \"lift body up\"\n\n    def step6(self):\n        return \"climb the steps.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ClimbTheSteps:\n\n    title = \"climb the steps.\"\n    steps = 7\n\n","reference_graph":{"title":"climb the steps.","num_steps":7,"schema":["step0: Enter bus through steps.","step1: look for the steps","step2: find the steps","step3: put left foot on step","step4: put right foot on step","step5: lift body up","step6: climb the steps."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6"]}}
{"scenario":"open storage drawer","events":{"0":"Look around kitchen for drawer","1":"Pull on storage drawer handle","2":"Locate storage drawer","3":"Walk over to storage drawer","4":"Reach out for handle of storage drawer","5":"get cookies to correct consistency","6":"open storage drawer"},"context":"get cookies to correct consistency","minutes":1.0,"events_minutes":{"0":0.5,"1":0.3333333333,"2":0.1666666667,"3":1.0,"4":0.1666666667},"flatten_input_for_edge_prediction":"step0: Look around kitchen for drawer; step1: Pull on storage drawer handle; step2: Locate storage drawer; step3: Walk over to storage drawer; step4: Reach out for handle of storage drawer; step5: get cookies to correct consistency; step6: open storage drawer","flatten_input_for_script_generation":"You want to open storage drawer. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step2; step2 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: get cookies to correct consistency; step1: Look around kitchen for drawer; step2: Locate storage drawer; step3: Walk over to storage drawer; step4: Reach out for handle of storage drawer; step5: Pull on storage drawer handle; step6: open storage drawer; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->2","1->6","2->3","3->4","4->1","5->0"],"reference_code":"class OpenStorageDrawer:\n\n    title = \"open storage drawer\"\n    steps = 7\n\n    def step0(self):\n        return \"get cookies to correct consistency\"\n\n    def step1(self):\n        return \"Look around kitchen for drawer\"\n\n    def step2(self):\n        return \"Locate storage drawer\"\n\n    def step3(self):\n        return \"Walk over to storage drawer\"\n\n    def step4(self):\n        return \"Reach out for handle of storage drawer\"\n\n    def step5(self):\n        return \"Pull on storage drawer handle\"\n\n    def step6(self):\n        return \"open storage drawer\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenStorageDrawer:\n\n    title = \"open storage drawer\"\n    steps = 7\n\n","reference_graph":{"title":"open storage drawer","num_steps":7,"schema":["step0: get cookies to correct consistency","step1: Look around kitchen for drawer","step2: Locate storage drawer","step3: Walk over to storage drawer","step4: Reach out for handle of storage drawer","step5: Pull on storage drawer handle","step6: open storage drawer"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk to the car.","events":{"0":"Locate where car is","1":"Turn body towards car","2":"Move left foot forward","3":"Repeat until car is reached","4":"Lift left foot up","5":"Lift right foot up","6":"Move right foot forward","7":"exit the makeup shop.","8":"walk to the car."},"context":"exit the makeup shop.","minutes":2.0,"events_minutes":{"0":0.1666666667,"1":0.0333333333,"2":0.0166666667,"3":0.25,"4":0.0166666667,"5":0.0166666667,"6":0.0166666667},"flatten_input_for_edge_prediction":"step0: Locate where car is; step1: Turn body towards car; step2: Move left foot forward; step3: Repeat until car is reached; step4: Lift left foot up; step5: Lift right foot up; step6: Move right foot forward; step7: exit the makeup shop.; step8: walk to the car.","flatten_input_for_script_generation":"You want to walk to the car.. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step0 -> step1; step1 -> step4; step1 -> step5; step4 -> step2; step5 -> step6; step2 -> step3; step6 -> step3; step3 -> step8; step7 -> step0","flatten_output_for_script_generation":"step0: exit the makeup shop.; step1: Locate where car is; step2: Turn body towards car; step3: Lift left foot up; step4: Lift right foot up; step5: Move left foot forward; step6: Move right foot forward; step7: Repeat until car is reached; step8: walk to the car.; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step6; step5 -> step7; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->4","1->5","2->3","3->8","4->2","5->6","6->3","7->0"],"reference_code":"class WalkToTheCar:\n\n    title = \"walk to the car.\"\n    steps = 9\n\n    def step0(self):\n        return \"exit the makeup shop.\"\n\n    def step1(self):\n        return \"Locate where car is\"\n\n    def step2(self):\n        return \"Turn body towards car\"\n\n    def step3(self):\n        return \"Lift left foot up\"\n\n    def step4(self):\n        return \"Lift right foot up\"\n\n    def step5(self):\n        return \"Move left foot forward\"\n\n    def step6(self):\n        return \"Move right foot forward\"\n\n    def step7(self):\n        return \"Repeat until car is reached\"\n\n    def step8(self):\n        return \"walk to the car.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step6\",\n            \"step5 -> step7\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class WalkToTheCar:\n\n    title = \"walk to the car.\"\n    steps = 9\n\n","reference_graph":{"title":"walk to the car.","num_steps":9,"schema":["step0: exit the makeup shop.","step1: Locate where car is","step2: Turn body towards car","step3: Lift left foot up","step4: Lift right foot up","step5: Move left foot forward","step6: Move right foot forward","step7: Repeat until car is reached","step8: walk to the car."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step6","step5 -> step7","step6 -> step7","step7 -> step8"]}}
{"scenario":"park the car","events":{"0":"take the keys out","1":"hit the brakes","2":"steer the car into the parking spot","3":"grab the shift knob","4":"shift into park position","5":"drive to the park","6":"park the car"},"context":"drive to the park","minutes":1.0,"events_minutes":{"0":0.05,"1":0.0166666667,"2":0.1666666667,"3":0.0333333333,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: take the keys out; step1: hit the brakes; step2: steer the car into the parking spot; step3: grab the shift knob; step4: shift into park position; step5: drive to the park; step6: park the car","flatten_input_for_script_generation":"You want to park the car. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step1 -> step3; step3 -> step4; step4 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: drive to the park; step1: steer the car into the parking spot; step2: hit the brakes; step3: grab the shift knob; step4: shift into park position; step5: take the keys out; step6: park the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->1","3->4","4->0","5->2"],"reference_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the park\"\n\n    def step1(self):\n        return \"steer the car into the parking spot\"\n\n    def step2(self):\n        return \"hit the brakes\"\n\n    def step3(self):\n        return \"grab the shift knob\"\n\n    def step4(self):\n        return \"shift into park position\"\n\n    def step5(self):\n        return \"take the keys out\"\n\n    def step6(self):\n        return \"park the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class ParkTheCar:\n\n    title = \"park the car\"\n    steps = 7\n\n","reference_graph":{"title":"park the car","num_steps":7,"schema":["step0: drive to the park","step1: steer the car into the parking spot","step2: hit the brakes","step3: grab the shift knob","step4: shift into park position","step5: take the keys out","step6: park the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"list any updated information","events":{"0":"look for empty space","1":"type updated information","2":"remember updated information","3":"find empty space","4":"click on empty space","5":"open saved resume","6":"list any updated information"},"context":"open saved resume","minutes":10.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":1.0,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for empty space; step1: type updated information; step2: remember updated information; step3: find empty space; step4: click on empty space; step5: open saved resume; step6: list any updated information","flatten_input_for_script_generation":"You want to list any updated information. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step0 -> step3; step3 -> step4; step4 -> step1; step1 -> step6; step5 -> step2; step5 -> step0","flatten_output_for_script_generation":"step0: open saved resume; step1: look for empty space; step2: remember updated information; step3: type updated information; step4: list any updated information; step5: find empty space; step6: click on empty space; step0 -> step1; step0 -> step2; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step3","gold_edges_for_prediction":["0->3","1->6","2->1","3->4","4->1","5->2","5->0"],"reference_code":"class ListAnyUpdatedInformation:\n\n    title = \"list any updated information\"\n    steps = 7\n\n    def step0(self):\n        return \"open saved resume\"\n\n    def step1(self):\n        return \"look for empty space\"\n\n    def step2(self):\n        return \"remember updated information\"\n\n    def step3(self):\n        return \"type updated information\"\n\n    def step4(self):\n        return \"list any updated information\"\n\n    def step5(self):\n        return \"find empty space\"\n\n    def step6(self):\n        return \"click on empty space\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step3\",\n        ]\n","input_prompt_code":"class ListAnyUpdatedInformation:\n\n    title = \"list any updated information\"\n    steps = 7\n\n","reference_graph":{"title":"list any updated information","num_steps":7,"schema":["step0: open saved resume","step1: look for empty space","step2: remember updated information","step3: type updated information","step4: list any updated information","step5: find empty space","step6: click on empty space"],"relations":["step0 -> step1","step0 -> step2","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step3"]}}
{"scenario":"open the garage up","events":{"0":"walk towards opener","1":"put hand on opener","2":"find garage door opener","3":"look for garage door opener","4":"click open button","5":"walk outside of the door","6":"open the garage up"},"context":"walk outside of the door","minutes":5.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: walk towards opener; step1: put hand on opener; step2: find garage door opener; step3: look for garage door opener; step4: click open button; step5: walk outside of the door; step6: open the garage up","flatten_input_for_script_generation":"You want to open the garage up. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step0; step0 -> step1; step1 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: walk outside of the door; step1: look for garage door opener; step2: find garage door opener; step3: walk towards opener; step4: put hand on opener; step5: click open button; step6: open the garage up; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->4","2->0","3->2","4->6","5->3"],"reference_code":"class OpenTheGarageUp:\n\n    title = \"open the garage up\"\n    steps = 7\n\n    def step0(self):\n        return \"walk outside of the door\"\n\n    def step1(self):\n        return \"look for garage door opener\"\n\n    def step2(self):\n        return \"find garage door opener\"\n\n    def step3(self):\n        return \"walk towards opener\"\n\n    def step4(self):\n        return \"put hand on opener\"\n\n    def step5(self):\n        return \"click open button\"\n\n    def step6(self):\n        return \"open the garage up\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class OpenTheGarageUp:\n\n    title = \"open the garage up\"\n    steps = 7\n\n","reference_graph":{"title":"open the garage up","num_steps":7,"schema":["step0: walk outside of the door","step1: look for garage door opener","step2: find garage door opener","step3: walk towards opener","step4: put hand on opener","step5: click open button","step6: open the garage up"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"grab keysfrom table","events":{"0":"look for keys on table","1":"put hand on keys","2":"move towards keys","3":"find the keys","4":"reach hand towards keys","5":"check hair and makeup","6":"grab keysfrom table"},"context":"check hair and makeup","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: look for keys on table; step1: put hand on keys; step2: move towards keys; step3: find the keys; step4: reach hand towards keys; step5: check hair and makeup; step6: grab keysfrom table","flatten_input_for_script_generation":"You want to grab keysfrom table. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step3; step3 -> step2; step2 -> step4; step4 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: check hair and makeup; step1: look for keys on table; step2: find the keys; step3: move towards keys; step4: reach hand towards keys; step5: put hand on keys; step6: grab keysfrom table; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->6","2->4","3->2","4->1","5->0"],"reference_code":"class GrabKeysfromTable:\n\n    title = \"grab keysfrom table\"\n    steps = 7\n\n    def step0(self):\n        return \"check hair and makeup\"\n\n    def step1(self):\n        return \"look for keys on table\"\n\n    def step2(self):\n        return \"find the keys\"\n\n    def step3(self):\n        return \"move towards keys\"\n\n    def step4(self):\n        return \"reach hand towards keys\"\n\n    def step5(self):\n        return \"put hand on keys\"\n\n    def step6(self):\n        return \"grab keysfrom table\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class GrabKeysfromTable:\n\n    title = \"grab keysfrom table\"\n    steps = 7\n\n","reference_graph":{"title":"grab keysfrom table","num_steps":7,"schema":["step0: check hair and makeup","step1: look for keys on table","step2: find the keys","step3: move towards keys","step4: reach hand towards keys","step5: put hand on keys","step6: grab keysfrom table"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"stop at the park ranger office","events":{"0":"walk out of parking lot","1":"walk towards park ranger office","2":"turn off the car","3":"park the car","4":"get out of car","5":"drive to the correct parking lot","6":"stop at the park ranger office"},"context":"drive to the correct parking lot","minutes":5.0,"events_minutes":{"0":0.5,"1":1.0,"2":0.0833333333,"3":1.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: walk out of parking lot; step1: walk towards park ranger office; step2: turn off the car; step3: park the car; step4: get out of car; step5: drive to the correct parking lot; step6: stop at the park ranger office","flatten_input_for_script_generation":"You want to stop at the park ranger office. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step4; step4 -> step0; step0 -> step1; step1 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: drive to the correct parking lot; step1: park the car; step2: turn off the car; step3: get out of car; step4: walk out of parking lot; step5: walk towards park ranger office; step6: stop at the park ranger office; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->1","1->6","2->4","3->2","4->0","5->3"],"reference_code":"class StopAtTheParkRangerOffice:\n\n    title = \"stop at the park ranger office\"\n    steps = 7\n\n    def step0(self):\n        return \"drive to the correct parking lot\"\n\n    def step1(self):\n        return \"park the car\"\n\n    def step2(self):\n        return \"turn off the car\"\n\n    def step3(self):\n        return \"get out of car\"\n\n    def step4(self):\n        return \"walk out of parking lot\"\n\n    def step5(self):\n        return \"walk towards park ranger office\"\n\n    def step6(self):\n        return \"stop at the park ranger office\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StopAtTheParkRangerOffice:\n\n    title = \"stop at the park ranger office\"\n    steps = 7\n\n","reference_graph":{"title":"stop at the park ranger office","num_steps":7,"schema":["step0: drive to the correct parking lot","step1: park the car","step2: turn off the car","step3: get out of car","step4: walk out of parking lot","step5: walk towards park ranger office","step6: stop at the park ranger office"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"Pick the best two restaurant","events":{"0":"narrow down list","1":"match restaurants by criteria","2":"decide on criteria","3":"remember the criteria","4":"pick restaurants that fit best","5":"Compare the available restaurants.","6":"Pick the best two restaurant"},"context":"Compare the available restaurants.","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":1.0},"flatten_input_for_edge_prediction":"step0: narrow down list; step1: match restaurants by criteria; step2: decide on criteria; step3: remember the criteria; step4: pick restaurants that fit best; step5: Compare the available restaurants.; step6: Pick the best two restaurant","flatten_input_for_script_generation":"You want to Pick the best two restaurant. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step4; step0 -> step6; step4 -> step0; step5 -> step2","flatten_output_for_script_generation":"step0: Compare the available restaurants.; step1: decide on criteria; step2: remember the criteria; step3: match restaurants by criteria; step4: pick restaurants that fit best; step5: narrow down list; step6: Pick the best two restaurant; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->4","2->3","3->1","4->0","5->2"],"reference_code":"class PickTheBestTwoRestaurant:\n\n    title = \"Pick the best two restaurant\"\n    steps = 7\n\n    def step0(self):\n        return \"Compare the available restaurants.\"\n\n    def step1(self):\n        return \"decide on criteria\"\n\n    def step2(self):\n        return \"remember the criteria\"\n\n    def step3(self):\n        return \"match restaurants by criteria\"\n\n    def step4(self):\n        return \"pick restaurants that fit best\"\n\n    def step5(self):\n        return \"narrow down list\"\n\n    def step6(self):\n        return \"Pick the best two restaurant\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class PickTheBestTwoRestaurant:\n\n    title = \"Pick the best two restaurant\"\n    steps = 7\n\n","reference_graph":{"title":"Pick the best two restaurant","num_steps":7,"schema":["step0: Compare the available restaurants.","step1: decide on criteria","step2: remember the criteria","step3: match restaurants by criteria","step4: pick restaurants that fit best","step5: narrow down list","step6: Pick the best two restaurant"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"make final decision","events":{"0":"consider the cons of each choice","1":"consider the pros of each choice","2":"determine the best choice","3":"review each choice","4":"compare the choices against each other","5":"narrow down choices","6":"make final decision"},"context":"narrow down choices","minutes":1.0,"events_minutes":{"0":1.0,"1":1.0,"2":2.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: consider the cons of each choice; step1: consider the pros of each choice; step2: determine the best choice; step3: review each choice; step4: compare the choices against each other; step5: narrow down choices; step6: make final decision","flatten_input_for_script_generation":"You want to make final decision. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step1 -> step4; step4 -> step2; step2 -> step6; step3 -> step0; step3 -> step1; step5 -> step3","flatten_output_for_script_generation":"step0: narrow down choices; step1: review each choice; step2: consider the cons of each choice; step3: compare the choices against each other; step4: determine the best choice; step5: consider the pros of each choice; step6: make final decision; step0 -> step1; step2 -> step3; step3 -> step4; step5 -> step3; step4 -> step6; step1 -> step2; step1 -> step5","gold_edges_for_prediction":["0->4","1->4","2->6","3->0","3->1","4->2","5->3"],"reference_code":"class MakeFinalDecision:\n\n    title = \"make final decision\"\n    steps = 7\n\n    def step0(self):\n        return \"narrow down choices\"\n\n    def step1(self):\n        return \"review each choice\"\n\n    def step2(self):\n        return \"consider the cons of each choice\"\n\n    def step3(self):\n        return \"compare the choices against each other\"\n\n    def step4(self):\n        return \"determine the best choice\"\n\n    def step5(self):\n        return \"consider the pros of each choice\"\n\n    def step6(self):\n        return \"make final decision\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n        ]\n","input_prompt_code":"class MakeFinalDecision:\n\n    title = \"make final decision\"\n    steps = 7\n\n","reference_graph":{"title":"make final decision","num_steps":7,"schema":["step0: narrow down choices","step1: review each choice","step2: consider the cons of each choice","step3: compare the choices against each other","step4: determine the best choice","step5: consider the pros of each choice","step6: make final decision"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step5 -> step3","step4 -> step6","step1 -> step2","step1 -> step5"]}}
{"scenario":"Choose a class that fits both criteria.","events":{"0":"Jot down any identical dates","1":"Be aware of what class dates are needed","2":"Look over the list","3":"Be conscience of what class times are needed","4":"Write down matching times","5":"Identify classes that match schedule availability.","6":"Choose a class that fits both criteria."},"context":"Identify classes that match schedule availability.","minutes":3.0,"events_minutes":{"0":0.0166666667,"1":1.0,"2":1.0,"3":1.0,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: Jot down any identical dates; step1: Be aware of what class dates are needed; step2: Look over the list; step3: Be conscience of what class times are needed; step4: Write down matching times; step5: Identify classes that match schedule availability.; step6: Choose a class that fits both criteria.","flatten_input_for_script_generation":"You want to Choose a class that fits both criteria.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step6; step3 -> step4; step1 -> step0; step4 -> step2; step0 -> step2; step5 -> step3; step5 -> step1","flatten_output_for_script_generation":"step0: Identify classes that match schedule availability.; step1: Be aware of what class dates are needed; step2: Look over the list; step3: Choose a class that fits both criteria.; step4: Be conscience of what class times are needed; step5: Write down matching times; step6: Jot down any identical dates; step0 -> step1; step0 -> step4; step2 -> step3; step4 -> step5; step5 -> step2; step1 -> step6; step6 -> step2","gold_edges_for_prediction":["0->2","1->0","2->6","3->4","4->2","5->3","5->1"],"reference_code":"class ChooseAClassThatFitsBothCriteria:\n\n    title = \"Choose a class that fits both criteria.\"\n    steps = 7\n\n    def step0(self):\n        return \"Identify classes that match schedule availability.\"\n\n    def step1(self):\n        return \"Be aware of what class dates are needed\"\n\n    def step2(self):\n        return \"Look over the list\"\n\n    def step3(self):\n        return \"Choose a class that fits both criteria.\"\n\n    def step4(self):\n        return \"Be conscience of what class times are needed\"\n\n    def step5(self):\n        return \"Write down matching times\"\n\n    def step6(self):\n        return \"Jot down any identical dates\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step4\",\n            \"step2 -> step3\",\n            \"step4 -> step5\",\n            \"step5 -> step2\",\n            \"step1 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class ChooseAClassThatFitsBothCriteria:\n\n    title = \"Choose a class that fits both criteria.\"\n    steps = 7\n\n","reference_graph":{"title":"Choose a class that fits both criteria.","num_steps":7,"schema":["step0: Identify classes that match schedule availability.","step1: Be aware of what class dates are needed","step2: Look over the list","step3: Choose a class that fits both criteria.","step4: Be conscience of what class times are needed","step5: Write down matching times","step6: Jot down any identical dates"],"relations":["step0 -> step1","step0 -> step4","step2 -> step3","step4 -> step5","step5 -> step2","step1 -> step6","step6 -> step2"]}}
{"scenario":"enter credit card info into form","events":{"0":"take credit card out of wallet","1":"begin typing info into space","2":"look for space on form","3":"find credit card info","4":"take wallet out of pocket","5":"enter address into form","6":"enter credit card info into form"},"context":"enter address into form","minutes":1.0,"events_minutes":{"0":0.0166666667,"1":0.0166666667,"2":0.0166666667,"3":0.0166666667,"4":0.0166666667},"flatten_input_for_edge_prediction":"step0: take credit card out of wallet; step1: begin typing info into space; step2: look for space on form; step3: find credit card info; step4: take wallet out of pocket; step5: enter address into form; step6: enter credit card info into form","flatten_input_for_script_generation":"You want to enter credit card info into form. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step1; step4 -> step0; step0 -> step3; step3 -> step2; step1 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: enter address into form; step1: take wallet out of pocket; step2: look for space on form; step3: begin typing info into space; step4: enter credit card info into form; step5: take credit card out of wallet; step6: find credit card info; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step5; step5 -> step6; step6 -> step2","gold_edges_for_prediction":["0->3","1->6","2->1","3->2","4->0","5->4"],"reference_code":"class EnterCreditCardInfoIntoForm:\n\n    title = \"enter credit card info into form\"\n    steps = 7\n\n    def step0(self):\n        return \"enter address into form\"\n\n    def step1(self):\n        return \"take wallet out of pocket\"\n\n    def step2(self):\n        return \"look for space on form\"\n\n    def step3(self):\n        return \"begin typing info into space\"\n\n    def step4(self):\n        return \"enter credit card info into form\"\n\n    def step5(self):\n        return \"take credit card out of wallet\"\n\n    def step6(self):\n        return \"find credit card info\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step2\",\n        ]\n","input_prompt_code":"class EnterCreditCardInfoIntoForm:\n\n    title = \"enter credit card info into form\"\n    steps = 7\n\n","reference_graph":{"title":"enter credit card info into form","num_steps":7,"schema":["step0: enter address into form","step1: take wallet out of pocket","step2: look for space on form","step3: begin typing info into space","step4: enter credit card info into form","step5: take credit card out of wallet","step6: find credit card info"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step5","step5 -> step6","step6 -> step2"]}}
{"scenario":"stop and use the restroom before the show","events":{"0":"use the facilities","1":"walk into the bathroom","2":"go into the stall","3":"locate the bathroom","4":"wash hands at the sink","5":"walk in and leave coat at coat check","6":"stop and use the restroom before the show"},"context":"walk in and leave coat at coat check","minutes":5.0,"events_minutes":{"0":0.75,"1":0.0833333333,"2":0.0833333333,"3":2.0,"4":0.9166666667},"flatten_input_for_edge_prediction":"step0: use the facilities; step1: walk into the bathroom; step2: go into the stall; step3: locate the bathroom; step4: wash hands at the sink; step5: walk in and leave coat at coat check; step6: stop and use the restroom before the show","flatten_input_for_script_generation":"You want to stop and use the restroom before the show. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step3 -> step1; step1 -> step2; step2 -> step0; step0 -> step4; step4 -> step6; step5 -> step3","flatten_output_for_script_generation":"step0: walk in and leave coat at coat check; step1: locate the bathroom; step2: walk into the bathroom; step3: go into the stall; step4: use the facilities; step5: wash hands at the sink; step6: stop and use the restroom before the show; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->2","2->0","3->1","4->6","5->3"],"reference_code":"class StopAndUseTheRestroomBeforeTheShow:\n\n    title = \"stop and use the restroom before the show\"\n    steps = 7\n\n    def step0(self):\n        return \"walk in and leave coat at coat check\"\n\n    def step1(self):\n        return \"locate the bathroom\"\n\n    def step2(self):\n        return \"walk into the bathroom\"\n\n    def step3(self):\n        return \"go into the stall\"\n\n    def step4(self):\n        return \"use the facilities\"\n\n    def step5(self):\n        return \"wash hands at the sink\"\n\n    def step6(self):\n        return \"stop and use the restroom before the show\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class StopAndUseTheRestroomBeforeTheShow:\n\n    title = \"stop and use the restroom before the show\"\n    steps = 7\n\n","reference_graph":{"title":"stop and use the restroom before the show","num_steps":7,"schema":["step0: walk in and leave coat at coat check","step1: locate the bathroom","step2: walk into the bathroom","step3: go into the stall","step4: use the facilities","step5: wash hands at the sink","step6: stop and use the restroom before the show"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"take notes about the subject","events":{"0":"write with the pen on paper","1":"open the bag","2":"get out a piece of paper","3":"grab a pen","4":"put the pen down","5":"do research on the topic","6":"take notes about the subject"},"context":"do research on the topic","minutes":30.0,"events_minutes":{"0":5.0,"1":0.0666666667,"2":0.05,"3":0.05,"4":0.0333333333},"flatten_input_for_edge_prediction":"step0: write with the pen on paper; step1: open the bag; step2: get out a piece of paper; step3: grab a pen; step4: put the pen down; step5: do research on the topic; step6: take notes about the subject","flatten_input_for_script_generation":"You want to take notes about the subject. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step0; step1 -> step2; step1 -> step3; step3 -> step0; step0 -> step4; step4 -> step6; step5 -> step1","flatten_output_for_script_generation":"step0: do research on the topic; step1: open the bag; step2: get out a piece of paper; step3: write with the pen on paper; step4: put the pen down; step5: grab a pen; step6: take notes about the subject; step0 -> step1; step2 -> step3; step3 -> step4; step1 -> step2; step1 -> step5; step5 -> step3; step4 -> step6","gold_edges_for_prediction":["0->4","1->2","1->3","2->0","3->0","4->6","5->1"],"reference_code":"class TakeNotesAboutTheSubject:\n\n    title = \"take notes about the subject\"\n    steps = 7\n\n    def step0(self):\n        return \"do research on the topic\"\n\n    def step1(self):\n        return \"open the bag\"\n\n    def step2(self):\n        return \"get out a piece of paper\"\n\n    def step3(self):\n        return \"write with the pen on paper\"\n\n    def step4(self):\n        return \"put the pen down\"\n\n    def step5(self):\n        return \"grab a pen\"\n\n    def step6(self):\n        return \"take notes about the subject\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step1 -> step2\",\n            \"step1 -> step5\",\n            \"step5 -> step3\",\n            \"step4 -> step6\",\n        ]\n","input_prompt_code":"class TakeNotesAboutTheSubject:\n\n    title = \"take notes about the subject\"\n    steps = 7\n\n","reference_graph":{"title":"take notes about the subject","num_steps":7,"schema":["step0: do research on the topic","step1: open the bag","step2: get out a piece of paper","step3: write with the pen on paper","step4: put the pen down","step5: grab a pen","step6: take notes about the subject"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step1 -> step2","step1 -> step5","step5 -> step3","step4 -> step6"]}}
{"scenario":"walk to cashier with makeup selections.","events":{"0":"look through make up","1":"locate checkout area","2":"walk out of makeup aisle","3":"put makeup on basket","4":"grab some makeup","5":"shop for makeup","6":"walk to cashier with makeup selections."},"context":"shop for makeup","minutes":2.0,"events_minutes":{"0":10.0,"1":0.05,"2":0.1666666667,"3":0.0833333333,"4":1.0},"flatten_input_for_edge_prediction":"step0: look through make up; step1: locate checkout area; step2: walk out of makeup aisle; step3: put makeup on basket; step4: grab some makeup; step5: shop for makeup; step6: walk to cashier with makeup selections.","flatten_input_for_script_generation":"You want to walk to cashier with makeup selections.. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step0 -> step4; step4 -> step3; step3 -> step2; step2 -> step1; step1 -> step6; step5 -> step0","flatten_output_for_script_generation":"step0: shop for makeup; step1: look through make up; step2: grab some makeup; step3: put makeup on basket; step4: walk out of makeup aisle; step5: locate checkout area; step6: walk to cashier with makeup selections.; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->6","2->1","3->2","4->3","5->0"],"reference_code":"class WalkToCashierWithMakeupSelections:\n\n    title = \"walk to cashier with makeup selections.\"\n    steps = 7\n\n    def step0(self):\n        return \"shop for makeup\"\n\n    def step1(self):\n        return \"look through make up\"\n\n    def step2(self):\n        return \"grab some makeup\"\n\n    def step3(self):\n        return \"put makeup on basket\"\n\n    def step4(self):\n        return \"walk out of makeup aisle\"\n\n    def step5(self):\n        return \"locate checkout area\"\n\n    def step6(self):\n        return \"walk to cashier with makeup selections.\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WalkToCashierWithMakeupSelections:\n\n    title = \"walk to cashier with makeup selections.\"\n    steps = 7\n\n","reference_graph":{"title":"walk to cashier with makeup selections.","num_steps":7,"schema":["step0: shop for makeup","step1: look through make up","step2: grab some makeup","step3: put makeup on basket","step4: walk out of makeup aisle","step5: locate checkout area","step6: walk to cashier with makeup selections."],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]}}
{"scenario":"walk towards the car","events":{"0":"wiggle doorknob to confirm door is locked","1":"point key fob at the car","2":"Grab the doorknob","3":"unlock car by clicking key fob.","4":"turn towards the car","5":"Remove keys from front door lock","6":"lock the front door","7":"walk towards the car"},"context":"lock the front door","minutes":1.0,"events_minutes":{"0":0.0833333333,"1":0.0833333333,"2":0.0833333333,"3":0.0333333333,"4":0.0166666667,"5":0.1666666667},"flatten_input_for_edge_prediction":"step0: wiggle doorknob to confirm door is locked; step1: point key fob at the car; step2: Grab the doorknob; step3: unlock car by clicking key fob.; step4: turn towards the car; step5: Remove keys from front door lock; step6: lock the front door; step7: walk towards the car","flatten_input_for_script_generation":"You want to walk towards the car. How can you do this in 8 steps?","flatten_output_for_edge_prediction":"step5 -> step2; step2 -> step0; step0 -> step4; step4 -> step1; step1 -> step3; step3 -> step7; step6 -> step5","flatten_output_for_script_generation":"step0: lock the front door; step1: Remove keys from front door lock; step2: Grab the doorknob; step3: wiggle doorknob to confirm door is locked; step4: turn towards the car; step5: point key fob at the car; step6: unlock car by clicking key fob.; step7: walk towards the car; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step6 -> step7","gold_edges_for_prediction":["0->4","1->3","2->0","3->7","4->1","5->2","6->5"],"reference_code":"class WalkTowardsTheCar:\n\n    title = \"walk towards the car\"\n    steps = 8\n\n    def step0(self):\n        return \"lock the front door\"\n\n    def step1(self):\n        return \"Remove keys from front door lock\"\n\n    def step2(self):\n        return \"Grab the doorknob\"\n\n    def step3(self):\n        return \"wiggle doorknob to confirm door is locked\"\n\n    def step4(self):\n        return \"turn towards the car\"\n\n    def step5(self):\n        return \"point key fob at the car\"\n\n    def step6(self):\n        return \"unlock car by clicking key fob.\"\n\n    def step7(self):\n        return \"walk towards the car\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n        ]\n","input_prompt_code":"class WalkTowardsTheCar:\n\n    title = \"walk towards the car\"\n    steps = 8\n\n","reference_graph":{"title":"walk towards the car","num_steps":8,"schema":["step0: lock the front door","step1: Remove keys from front door lock","step2: Grab the doorknob","step3: wiggle doorknob to confirm door is locked","step4: turn towards the car","step5: point key fob at the car","step6: unlock car by clicking key fob.","step7: walk towards the car"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7"]}}
{"scenario":"compare lipstick choices","events":{"0":"Skim over to a beauty blog","1":"go to the second highest rated lipsticks website","2":"See which one is more appealing","3":"Decide on one","4":"go to the highest rated lipsticks website","5":"read through reviews","6":"compare lipstick choices"},"context":"read through reviews","minutes":2.0,"events_minutes":{"0":1.0,"1":1.0,"2":1.0,"3":1.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: Skim over to a beauty blog; step1: go to the second highest rated lipsticks website; step2: See which one is more appealing; step3: Decide on one; step4: go to the highest rated lipsticks website; step5: read through reviews; step6: compare lipstick choices","flatten_input_for_script_generation":"You want to compare lipstick choices. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step3; step3 -> step6; step0 -> step4; step5 -> step0","flatten_output_for_script_generation":"step0: read through reviews; step1: Skim over to a beauty blog; step2: go to the highest rated lipsticks website; step3: go to the second highest rated lipsticks website; step4: See which one is more appealing; step5: Decide on one; step6: compare lipstick choices; step0 -> step1; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6; step1 -> step2","gold_edges_for_prediction":["0->4","1->2","2->3","3->6","4->1","5->0"],"reference_code":"class CompareLipstickChoices:\n\n    title = \"compare lipstick choices\"\n    steps = 7\n\n    def step0(self):\n        return \"read through reviews\"\n\n    def step1(self):\n        return \"Skim over to a beauty blog\"\n\n    def step2(self):\n        return \"go to the highest rated lipsticks website\"\n\n    def step3(self):\n        return \"go to the second highest rated lipsticks website\"\n\n    def step4(self):\n        return \"See which one is more appealing\"\n\n    def step5(self):\n        return \"Decide on one\"\n\n    def step6(self):\n        return \"compare lipstick choices\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step1 -> step2\",\n        ]\n","input_prompt_code":"class CompareLipstickChoices:\n\n    title = \"compare lipstick choices\"\n    steps = 7\n\n","reference_graph":{"title":"compare lipstick choices","num_steps":7,"schema":["step0: read through reviews","step1: Skim over to a beauty blog","step2: go to the highest rated lipsticks website","step3: go to the second highest rated lipsticks website","step4: See which one is more appealing","step5: Decide on one","step6: compare lipstick choices"],"relations":["step0 -> step1","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step1 -> step2"]}}
