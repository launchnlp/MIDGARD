{"scenario":"ride a train","events":{"0":"walk to train to ride","1":"ask to buy ticket","2":"walk to ticket booth","3":"pay for ticket","4":"walk up to booth","5":"NONE","6":"ride a train"},"context":"NONE","minutes":13.0,"events_minutes":{"0":5.0,"1":1.0,"2":3.0,"3":2.0,"4":1.0},"flatten_input_for_edge_prediction":"step0: walk to train to ride; step1: ask to buy ticket; step2: walk to ticket booth; step3: pay for ticket; step4: walk up to booth; step5: decided to ride a train; step6: ride a train","flatten_input_for_script_generation":"You want to ride a train. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step4; step4 -> step1; step1 -> step3; step3 -> step0; step0 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to ride a train; step1: walk to ticket booth; step2: walk up to booth; step3: ask to buy ticket; step4: pay for ticket; step5: walk to train to ride; step6: ride a train; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->6","1->3","2->4","3->0","4->1","5->2"],"reference_code":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a train\"\n\n    def step1(self):\n        return \"walk to ticket booth\"\n\n    def step2(self):\n        return \"walk up to booth\"\n\n    def step3(self):\n        return \"ask to buy ticket\"\n\n    def step4(self):\n        return \"pay for ticket\"\n\n    def step5(self):\n        return \"walk to train to ride\"\n\n    def step6(self):\n        return \"ride a train\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n","reference_graph":{"title":"ride a train","num_steps":7,"schema":["step0: decided to ride a train","step1: walk to ticket booth","step2: walk up to booth","step3: ask to buy ticket","step4: pay for ticket","step5: walk to train to ride","step6: ride a train"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"codex_response":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a train\"\n\n    def step1(self):\n        return \"check train schedules\"\n\n    def step2(self):\n        return \"purchase a train ticket\"\n\n    def step3(self):\n        return \"arrive at the train station\"\n\n    def step4(self):\n        return \"board the train\"\n\n    def step5(self):\n        return \"find a seat on the train\"\n\n    def step6(self):\n        return \"ride a train\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_code":"class RideATrain:\n\n    title = \"ride a train\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to ride a train\"\n\n    def step1(self):\n        return \"check train schedules\"\n\n    def step2(self):\n        return \"purchase a train ticket\"\n\n    def step3(self):\n        return \"arrive at the train station\"\n\n    def step4(self):\n        return \"board the train\"\n\n    def step5(self):\n        return \"find a seat on the train\"\n\n    def step6(self):\n        return \"ride a train\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_graph":{"title":"ride a train","num_steps":7,"schema":["step0: decided to ride a train","step1: check train schedules","step2: purchase a train ticket","step3: arrive at the train station","step4: board the train","step5: find a seat on the train","step6: ride a train"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"elapsed_time":4.1431071758}
{"scenario":"win the minor league baseball","events":{"0":"go to the locker room","1":"drive to the baseball game","2":"park the car","3":"hype up teammates","4":"get in the car","5":"NONE","6":"win the minor league baseball"},"context":"NONE","minutes":45.0,"events_minutes":{"0":5.0,"1":30.0,"2":5.0,"3":10.0,"4":5.0},"flatten_input_for_edge_prediction":"step0: go to the locker room; step1: drive to the baseball game; step2: park the car; step3: hype up teammates; step4: get in the car; step5: decided to win the minor league baseball; step6: win the minor league baseball","flatten_input_for_script_generation":"You want to win the minor league baseball. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step4 -> step1; step1 -> step2; step2 -> step0; step0 -> step3; step3 -> step6; step5 -> step4","flatten_output_for_script_generation":"step0: decided to win the minor league baseball; step1: get in the car; step2: drive to the baseball game; step3: park the car; step4: go to the locker room; step5: hype up teammates; step6: win the minor league baseball; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->3","1->2","2->0","3->6","4->1","5->4"],"reference_code":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to win the minor league baseball\"\n\n    def step1(self):\n        return \"get in the car\"\n\n    def step2(self):\n        return \"drive to the baseball game\"\n\n    def step3(self):\n        return \"park the car\"\n\n    def step4(self):\n        return \"go to the locker room\"\n\n    def step5(self):\n        return \"hype up teammates\"\n\n    def step6(self):\n        return \"win the minor league baseball\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n","reference_graph":{"title":"win the minor league baseball","num_steps":7,"schema":["step0: decided to win the minor league baseball","step1: get in the car","step2: drive to the baseball game","step3: park the car","step4: go to the locker room","step5: hype up teammates","step6: win the minor league baseball"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"codex_response":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to win the minor league baseball\"\n\n    def step1(self):\n        return \"join a minor league baseball team\"\n\n    def step2(self):\n        return \"attend team practices and training sessions\"\n\n    def step3(self):\n        return \"improve skills and performance\"\n\n    def step4(self):\n        return \"participate in minor league baseball games\"\n\n    def step5(self):\n        return \"work together with teammates to win games\"\n\n    def step6(self):\n        return \"win the minor league baseball\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_code":"class WinTheMinorLeagueBaseball:\n\n    title = \"win the minor league baseball\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to win the minor league baseball\"\n\n    def step1(self):\n        return \"join a minor league baseball team\"\n\n    def step2(self):\n        return \"attend team practices and training sessions\"\n\n    def step3(self):\n        return \"improve skills and performance\"\n\n    def step4(self):\n        return \"participate in minor league baseball games\"\n\n    def step5(self):\n        return \"work together with teammates to win games\"\n\n    def step6(self):\n        return \"win the minor league baseball\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_graph":{"title":"win the minor league baseball","num_steps":7,"schema":["step0: decided to win the minor league baseball","step1: join a minor league baseball team","step2: attend team practices and training sessions","step3: improve skills and performance","step4: participate in minor league baseball games","step5: work together with teammates to win games","step6: win the minor league baseball"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"elapsed_time":2.9739146233}
{"scenario":"catch a big marlin","events":{"0":"gather fishing tools","1":"drive to the fishing spot","2":"reel a big marlin in","3":"choose a fishing spot","4":"look up local fishing spots","5":"set up at the fishing spot","6":"gather fishing supplies","7":"NONE","8":"catch a big marlin"},"context":"NONE","minutes":120.0,"events_minutes":{"0":15.0,"1":45.0,"2":5.0,"3":5.0,"4":15.0,"5":15.0,"6":15.0},"flatten_input_for_edge_prediction":"step0: gather fishing tools; step1: drive to the fishing spot; step2: reel a big marlin in; step3: choose a fishing spot; step4: look up local fishing spots; step5: set up at the fishing spot; step6: gather fishing supplies; step7: decided to catch a big marlin; step8: catch a big marlin","flatten_input_for_script_generation":"You want to catch a big marlin. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step4 -> step3; step3 -> step0; step3 -> step6; step0 -> step1; step6 -> step1; step1 -> step5; step5 -> step2; step2 -> step8; step7 -> step4","flatten_output_for_script_generation":"step0: decided to catch a big marlin; step1: look up local fishing spots; step2: choose a fishing spot; step3: gather fishing tools; step4: gather fishing supplies; step5: drive to the fishing spot; step6: set up at the fishing spot; step7: reel a big marlin in; step8: catch a big marlin; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->1","1->5","2->8","3->0","3->6","4->3","5->2","6->1","7->4"],"reference_code":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a big marlin\"\n\n    def step1(self):\n        return \"look up local fishing spots\"\n\n    def step2(self):\n        return \"choose a fishing spot\"\n\n    def step3(self):\n        return \"gather fishing tools\"\n\n    def step4(self):\n        return \"gather fishing supplies\"\n\n    def step5(self):\n        return \"drive to the fishing spot\"\n\n    def step6(self):\n        return \"set up at the fishing spot\"\n\n    def step7(self):\n        return \"reel a big marlin in\"\n\n    def step8(self):\n        return \"catch a big marlin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n","reference_graph":{"title":"catch a big marlin","num_steps":9,"schema":["step0: decided to catch a big marlin","step1: look up local fishing spots","step2: choose a fishing spot","step3: gather fishing tools","step4: gather fishing supplies","step5: drive to the fishing spot","step6: set up at the fishing spot","step7: reel a big marlin in","step8: catch a big marlin"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]},"codex_response":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a big marlin\"\n\n    def step1(self):\n        return \"prepare fishing gear\"\n\n    def step2(self):\n        return \"find a suitable fishing spot\"\n\n    def step3(self):\n        return \"cast the fishing line into the water\"\n\n    def step4(self):\n        return \"wait patiently for a bite\"\n\n    def step5(self):\n        return \"feel a strong tug on the line\"\n\n    def step6(self):\n        return \"reel in the marlin\"\n\n    def step7(self):\n        return \"land the marlin onto the boat\"\n\n    def step8(self):\n        return \"catch a big marlin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]","generated_code":"class CatchABigMarlin:\n\n    title = \"catch a big marlin\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to catch a big marlin\"\n\n    def step1(self):\n        return \"prepare fishing gear\"\n\n    def step2(self):\n        return \"find a suitable fishing spot\"\n\n    def step3(self):\n        return \"cast the fishing line into the water\"\n\n    def step4(self):\n        return \"wait patiently for a bite\"\n\n    def step5(self):\n        return \"feel a strong tug on the line\"\n\n    def step6(self):\n        return \"reel in the marlin\"\n\n    def step7(self):\n        return \"land the marlin onto the boat\"\n\n    def step8(self):\n        return \"catch a big marlin\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]","generated_graph":{"title":"catch a big marlin","num_steps":9,"schema":["step0: decided to catch a big marlin","step1: prepare fishing gear","step2: find a suitable fishing spot","step3: cast the fishing line into the water","step4: wait patiently for a bite","step5: feel a strong tug on the line","step6: reel in the marlin","step7: land the marlin onto the boat","step8: catch a big marlin"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]},"elapsed_time":3.6909797192}
{"scenario":"make banana muffins","events":{"0":"preheat the oven","1":"mix the dry ingredients","2":"measure out the ingredients.","3":"Gather all of the ingredients.","4":"combine the wet and dry ingredients.","5":"mix the wet ingredients","6":"place the mix in the oven","7":"NONE","8":"make banana muffins"},"context":"NONE","minutes":60.0,"events_minutes":{"0":0.5,"1":5.0,"2":5.0,"3":10.0,"4":5.0,"5":5.0,"6":0.5},"flatten_input_for_edge_prediction":"step0: preheat the oven; step1: mix the dry ingredients; step2: measure out the ingredients.; step3: Gather all of the ingredients.; step4: combine the wet and dry ingredients.; step5: mix the wet ingredients; step6: place the mix in the oven; step7: decided to make banana muffins; step8: make banana muffins","flatten_input_for_script_generation":"You want to make banana muffins. How can you do this in 9 steps?","flatten_output_for_edge_prediction":"step3 -> step2; step2 -> step1; step2 -> step5; step1 -> step4; step5 -> step4; step4 -> step0; step0 -> step6; step6 -> step8; step7 -> step3","flatten_output_for_script_generation":"step0: decided to make banana muffins; step1: Gather all of the ingredients.; step2: measure out the ingredients.; step3: mix the dry ingredients; step4: mix the wet ingredients; step5: combine the wet and dry ingredients.; step6: preheat the oven; step7: place the mix in the oven; step8: make banana muffins; step0 -> step1; step1 -> step2; step2 -> step3; step2 -> step4; step3 -> step5; step4 -> step5; step5 -> step6; step6 -> step7; step7 -> step8","gold_edges_for_prediction":["0->6","1->4","2->1","2->5","3->2","4->0","5->4","6->8","7->3"],"reference_code":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n    def step0(self):\n        return \"decided to make banana muffins\"\n\n    def step1(self):\n        return \"Gather all of the ingredients.\"\n\n    def step2(self):\n        return \"measure out the ingredients.\"\n\n    def step3(self):\n        return \"mix the dry ingredients\"\n\n    def step4(self):\n        return \"mix the wet ingredients\"\n\n    def step5(self):\n        return \"combine the wet and dry ingredients.\"\n\n    def step6(self):\n        return \"preheat the oven\"\n\n    def step7(self):\n        return \"place the mix in the oven\"\n\n    def step8(self):\n        return \"make banana muffins\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step2 -> step4\",\n            \"step3 -> step5\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]\n","input_prompt_code":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n","reference_graph":{"title":"make banana muffins","num_steps":9,"schema":["step0: decided to make banana muffins","step1: Gather all of the ingredients.","step2: measure out the ingredients.","step3: mix the dry ingredients","step4: mix the wet ingredients","step5: combine the wet and dry ingredients.","step6: preheat the oven","step7: place the mix in the oven","step8: make banana muffins"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step2 -> step4","step3 -> step5","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]},"codex_response":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n    def step0(self):\n        return \"gather ingredients\"\n\n    def step1(self):\n        return \"preheat the oven\"\n\n    def step2(self):\n        return \"mash the bananas\"\n\n    def step3(self):\n        return \"cream the butter and sugar\"\n\n    def step4(self):\n        return \"add eggs and vanilla extract\"\n\n    def step5(self):\n        return \"combine dry ingredients\"\n\n    def step6(self):\n        return \"mix wet and dry ingredients together\"\n\n    def step7(self):\n        return \"pour batter into muffin cups\"\n\n    def step8(self):\n        return \"bake the muffins\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]","generated_code":"class MakeBananaMuffins:\n\n    title = \"make banana muffins\"\n    steps = 9\n\n    def step0(self):\n        return \"gather ingredients\"\n\n    def step1(self):\n        return \"preheat the oven\"\n\n    def step2(self):\n        return \"mash the bananas\"\n\n    def step3(self):\n        return \"cream the butter and sugar\"\n\n    def step4(self):\n        return \"add eggs and vanilla extract\"\n\n    def step5(self):\n        return \"combine dry ingredients\"\n\n    def step6(self):\n        return \"mix wet and dry ingredients together\"\n\n    def step7(self):\n        return \"pour batter into muffin cups\"\n\n    def step8(self):\n        return \"bake the muffins\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step0 -> step2\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n            \"step6 -> step7\",\n            \"step7 -> step8\",\n        ]","generated_graph":{"title":"make banana muffins","num_steps":9,"schema":["step0: gather ingredients","step1: preheat the oven","step2: mash the bananas","step3: cream the butter and sugar","step4: add eggs and vanilla extract","step5: combine dry ingredients","step6: mix wet and dry ingredients together","step7: pour batter into muffin cups","step8: bake the muffins"],"relations":["step0 -> step1","step0 -> step2","step3 -> step4","step4 -> step5","step5 -> step6","step6 -> step7","step7 -> step8"]},"elapsed_time":3.9217705727}
{"scenario":"eat some food","events":{"0":"Open the pizza packaging","1":"Drive back home","2":"Drive to pizza place","3":"Purchase a pizza","4":"Put pizza on the table","5":"NONE","6":"eat some food"},"context":"NONE","minutes":15.0,"events_minutes":{"0":0.1666666667,"1":4.0,"2":4.0,"3":2.0,"4":0.0833333333},"flatten_input_for_edge_prediction":"step0: Open the pizza packaging; step1: Drive back home; step2: Drive to pizza place; step3: Purchase a pizza; step4: Put pizza on the table; step5: decided to eat some food; step6: eat some food","flatten_input_for_script_generation":"You want to eat some food. How can you do this in 7 steps?","flatten_output_for_edge_prediction":"step2 -> step3; step3 -> step1; step1 -> step0; step0 -> step4; step4 -> step6; step5 -> step2","flatten_output_for_script_generation":"step0: decided to eat some food; step1: Drive to pizza place; step2: Purchase a pizza; step3: Drive back home; step4: Open the pizza packaging; step5: Put pizza on the table; step6: eat some food; step0 -> step1; step1 -> step2; step2 -> step3; step3 -> step4; step4 -> step5; step5 -> step6","gold_edges_for_prediction":["0->4","1->0","2->3","3->1","4->6","5->2"],"reference_code":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat some food\"\n\n    def step1(self):\n        return \"Drive to pizza place\"\n\n    def step2(self):\n        return \"Purchase a pizza\"\n\n    def step3(self):\n        return \"Drive back home\"\n\n    def step4(self):\n        return \"Open the pizza packaging\"\n\n    def step5(self):\n        return \"Put pizza on the table\"\n\n    def step6(self):\n        return \"eat some food\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]\n","input_prompt_code":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n","reference_graph":{"title":"eat some food","num_steps":7,"schema":["step0: decided to eat some food","step1: Drive to pizza place","step2: Purchase a pizza","step3: Drive back home","step4: Open the pizza packaging","step5: Put pizza on the table","step6: eat some food"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"codex_response":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat some food\"\n\n    def step1(self):\n        return \"choose a type of cuisine\"\n\n    def step2(self):\n        return \"look for nearby restaurants\"\n\n    def step3(self):\n        return \"select a restaurant\"\n\n    def step4(self):\n        return \"check the menu\"\n\n    def step5(self):\n        return \"place an order\"\n\n    def step6(self):\n        return \"enjoy the food\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_code":"class EatSomeFood:\n\n    title = \"eat some food\"\n    steps = 7\n\n    def step0(self):\n        return \"decided to eat some food\"\n\n    def step1(self):\n        return \"choose a type of cuisine\"\n\n    def step2(self):\n        return \"look for nearby restaurants\"\n\n    def step3(self):\n        return \"select a restaurant\"\n\n    def step4(self):\n        return \"check the menu\"\n\n    def step5(self):\n        return \"place an order\"\n\n    def step6(self):\n        return \"enjoy the food\"\n\n    def get_relations(self):\n        return [\n            \"step0 -> step1\",\n            \"step1 -> step2\",\n            \"step2 -> step3\",\n            \"step3 -> step4\",\n            \"step4 -> step5\",\n            \"step5 -> step6\",\n        ]","generated_graph":{"title":"eat some food","num_steps":7,"schema":["step0: decided to eat some food","step1: choose a type of cuisine","step2: look for nearby restaurants","step3: select a restaurant","step4: check the menu","step5: place an order","step6: enjoy the food"],"relations":["step0 -> step1","step1 -> step2","step2 -> step3","step3 -> step4","step4 -> step5","step5 -> step6"]},"elapsed_time":2.2384774685}
